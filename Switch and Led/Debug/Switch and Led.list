
Switch and Led.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000436c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       000000e0  08004430  08004430  00014430  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08004510  08004510  00020070  2**0
                  CONTENTS
  4 .ARM          00000000  08004510  08004510  00020070  2**0
                  CONTENTS
  5 .preinit_array 00000000  08004510  08004510  00020070  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08004510  08004510  00014510  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08004514  08004514  00014514  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000070  20000000  08004518  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000070  08004588  00020070  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000090  08004588  00020090  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  00020070  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000437b  00000000  00000000  00020098  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00000f8a  00000000  00000000  00024413  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 000003c8  00000000  00000000  000253a0  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000340  00000000  00000000  00025768  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00014a69  00000000  00000000  00025aa8  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   00004307  00000000  00000000  0003a511  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0007811e  00000000  00000000  0003e818  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000b6936  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00000fd8  00000000  00000000  000b69b4  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	20000070 	.word	0x20000070
 80000e0:	00000000 	.word	0x00000000
 80000e4:	08004414 	.word	0x08004414

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	20000074 	.word	0x20000074
 8000104:	08004414 	.word	0x08004414

08000108 <__udivsi3>:
 8000108:	2200      	movs	r2, #0
 800010a:	0843      	lsrs	r3, r0, #1
 800010c:	428b      	cmp	r3, r1
 800010e:	d374      	bcc.n	80001fa <__udivsi3+0xf2>
 8000110:	0903      	lsrs	r3, r0, #4
 8000112:	428b      	cmp	r3, r1
 8000114:	d35f      	bcc.n	80001d6 <__udivsi3+0xce>
 8000116:	0a03      	lsrs	r3, r0, #8
 8000118:	428b      	cmp	r3, r1
 800011a:	d344      	bcc.n	80001a6 <__udivsi3+0x9e>
 800011c:	0b03      	lsrs	r3, r0, #12
 800011e:	428b      	cmp	r3, r1
 8000120:	d328      	bcc.n	8000174 <__udivsi3+0x6c>
 8000122:	0c03      	lsrs	r3, r0, #16
 8000124:	428b      	cmp	r3, r1
 8000126:	d30d      	bcc.n	8000144 <__udivsi3+0x3c>
 8000128:	22ff      	movs	r2, #255	; 0xff
 800012a:	0209      	lsls	r1, r1, #8
 800012c:	ba12      	rev	r2, r2
 800012e:	0c03      	lsrs	r3, r0, #16
 8000130:	428b      	cmp	r3, r1
 8000132:	d302      	bcc.n	800013a <__udivsi3+0x32>
 8000134:	1212      	asrs	r2, r2, #8
 8000136:	0209      	lsls	r1, r1, #8
 8000138:	d065      	beq.n	8000206 <__udivsi3+0xfe>
 800013a:	0b03      	lsrs	r3, r0, #12
 800013c:	428b      	cmp	r3, r1
 800013e:	d319      	bcc.n	8000174 <__udivsi3+0x6c>
 8000140:	e000      	b.n	8000144 <__udivsi3+0x3c>
 8000142:	0a09      	lsrs	r1, r1, #8
 8000144:	0bc3      	lsrs	r3, r0, #15
 8000146:	428b      	cmp	r3, r1
 8000148:	d301      	bcc.n	800014e <__udivsi3+0x46>
 800014a:	03cb      	lsls	r3, r1, #15
 800014c:	1ac0      	subs	r0, r0, r3
 800014e:	4152      	adcs	r2, r2
 8000150:	0b83      	lsrs	r3, r0, #14
 8000152:	428b      	cmp	r3, r1
 8000154:	d301      	bcc.n	800015a <__udivsi3+0x52>
 8000156:	038b      	lsls	r3, r1, #14
 8000158:	1ac0      	subs	r0, r0, r3
 800015a:	4152      	adcs	r2, r2
 800015c:	0b43      	lsrs	r3, r0, #13
 800015e:	428b      	cmp	r3, r1
 8000160:	d301      	bcc.n	8000166 <__udivsi3+0x5e>
 8000162:	034b      	lsls	r3, r1, #13
 8000164:	1ac0      	subs	r0, r0, r3
 8000166:	4152      	adcs	r2, r2
 8000168:	0b03      	lsrs	r3, r0, #12
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x6a>
 800016e:	030b      	lsls	r3, r1, #12
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0ac3      	lsrs	r3, r0, #11
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x76>
 800017a:	02cb      	lsls	r3, r1, #11
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0a83      	lsrs	r3, r0, #10
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x82>
 8000186:	028b      	lsls	r3, r1, #10
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0a43      	lsrs	r3, r0, #9
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x8e>
 8000192:	024b      	lsls	r3, r1, #9
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0a03      	lsrs	r3, r0, #8
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x9a>
 800019e:	020b      	lsls	r3, r1, #8
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	d2cd      	bcs.n	8000142 <__udivsi3+0x3a>
 80001a6:	09c3      	lsrs	r3, r0, #7
 80001a8:	428b      	cmp	r3, r1
 80001aa:	d301      	bcc.n	80001b0 <__udivsi3+0xa8>
 80001ac:	01cb      	lsls	r3, r1, #7
 80001ae:	1ac0      	subs	r0, r0, r3
 80001b0:	4152      	adcs	r2, r2
 80001b2:	0983      	lsrs	r3, r0, #6
 80001b4:	428b      	cmp	r3, r1
 80001b6:	d301      	bcc.n	80001bc <__udivsi3+0xb4>
 80001b8:	018b      	lsls	r3, r1, #6
 80001ba:	1ac0      	subs	r0, r0, r3
 80001bc:	4152      	adcs	r2, r2
 80001be:	0943      	lsrs	r3, r0, #5
 80001c0:	428b      	cmp	r3, r1
 80001c2:	d301      	bcc.n	80001c8 <__udivsi3+0xc0>
 80001c4:	014b      	lsls	r3, r1, #5
 80001c6:	1ac0      	subs	r0, r0, r3
 80001c8:	4152      	adcs	r2, r2
 80001ca:	0903      	lsrs	r3, r0, #4
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xcc>
 80001d0:	010b      	lsls	r3, r1, #4
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	08c3      	lsrs	r3, r0, #3
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xd8>
 80001dc:	00cb      	lsls	r3, r1, #3
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0883      	lsrs	r3, r0, #2
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xe4>
 80001e8:	008b      	lsls	r3, r1, #2
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0843      	lsrs	r3, r0, #1
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xf0>
 80001f4:	004b      	lsls	r3, r1, #1
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	1a41      	subs	r1, r0, r1
 80001fc:	d200      	bcs.n	8000200 <__udivsi3+0xf8>
 80001fe:	4601      	mov	r1, r0
 8000200:	4152      	adcs	r2, r2
 8000202:	4610      	mov	r0, r2
 8000204:	4770      	bx	lr
 8000206:	e7ff      	b.n	8000208 <__udivsi3+0x100>
 8000208:	b501      	push	{r0, lr}
 800020a:	2000      	movs	r0, #0
 800020c:	f000 f806 	bl	800021c <__aeabi_idiv0>
 8000210:	bd02      	pop	{r1, pc}
 8000212:	46c0      	nop			; (mov r8, r8)

08000214 <__aeabi_uidivmod>:
 8000214:	2900      	cmp	r1, #0
 8000216:	d0f7      	beq.n	8000208 <__udivsi3+0x100>
 8000218:	e776      	b.n	8000108 <__udivsi3>
 800021a:	4770      	bx	lr

0800021c <__aeabi_idiv0>:
 800021c:	4770      	bx	lr
 800021e:	46c0      	nop			; (mov r8, r8)

08000220 <__aeabi_cdrcmple>:
 8000220:	4684      	mov	ip, r0
 8000222:	1c10      	adds	r0, r2, #0
 8000224:	4662      	mov	r2, ip
 8000226:	468c      	mov	ip, r1
 8000228:	1c19      	adds	r1, r3, #0
 800022a:	4663      	mov	r3, ip
 800022c:	e000      	b.n	8000230 <__aeabi_cdcmpeq>
 800022e:	46c0      	nop			; (mov r8, r8)

08000230 <__aeabi_cdcmpeq>:
 8000230:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8000232:	f000 ff0f 	bl	8001054 <__ledf2>
 8000236:	2800      	cmp	r0, #0
 8000238:	d401      	bmi.n	800023e <__aeabi_cdcmpeq+0xe>
 800023a:	2100      	movs	r1, #0
 800023c:	42c8      	cmn	r0, r1
 800023e:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000240 <__aeabi_dcmpeq>:
 8000240:	b510      	push	{r4, lr}
 8000242:	f000 fe67 	bl	8000f14 <__eqdf2>
 8000246:	4240      	negs	r0, r0
 8000248:	3001      	adds	r0, #1
 800024a:	bd10      	pop	{r4, pc}

0800024c <__aeabi_dcmplt>:
 800024c:	b510      	push	{r4, lr}
 800024e:	f000 ff01 	bl	8001054 <__ledf2>
 8000252:	2800      	cmp	r0, #0
 8000254:	db01      	blt.n	800025a <__aeabi_dcmplt+0xe>
 8000256:	2000      	movs	r0, #0
 8000258:	bd10      	pop	{r4, pc}
 800025a:	2001      	movs	r0, #1
 800025c:	bd10      	pop	{r4, pc}
 800025e:	46c0      	nop			; (mov r8, r8)

08000260 <__aeabi_dcmple>:
 8000260:	b510      	push	{r4, lr}
 8000262:	f000 fef7 	bl	8001054 <__ledf2>
 8000266:	2800      	cmp	r0, #0
 8000268:	dd01      	ble.n	800026e <__aeabi_dcmple+0xe>
 800026a:	2000      	movs	r0, #0
 800026c:	bd10      	pop	{r4, pc}
 800026e:	2001      	movs	r0, #1
 8000270:	bd10      	pop	{r4, pc}
 8000272:	46c0      	nop			; (mov r8, r8)

08000274 <__aeabi_dcmpgt>:
 8000274:	b510      	push	{r4, lr}
 8000276:	f000 fe89 	bl	8000f8c <__gedf2>
 800027a:	2800      	cmp	r0, #0
 800027c:	dc01      	bgt.n	8000282 <__aeabi_dcmpgt+0xe>
 800027e:	2000      	movs	r0, #0
 8000280:	bd10      	pop	{r4, pc}
 8000282:	2001      	movs	r0, #1
 8000284:	bd10      	pop	{r4, pc}
 8000286:	46c0      	nop			; (mov r8, r8)

08000288 <__aeabi_dcmpge>:
 8000288:	b510      	push	{r4, lr}
 800028a:	f000 fe7f 	bl	8000f8c <__gedf2>
 800028e:	2800      	cmp	r0, #0
 8000290:	da01      	bge.n	8000296 <__aeabi_dcmpge+0xe>
 8000292:	2000      	movs	r0, #0
 8000294:	bd10      	pop	{r4, pc}
 8000296:	2001      	movs	r0, #1
 8000298:	bd10      	pop	{r4, pc}
 800029a:	46c0      	nop			; (mov r8, r8)

0800029c <__aeabi_d2uiz>:
 800029c:	b570      	push	{r4, r5, r6, lr}
 800029e:	2200      	movs	r2, #0
 80002a0:	4b0c      	ldr	r3, [pc, #48]	; (80002d4 <__aeabi_d2uiz+0x38>)
 80002a2:	0004      	movs	r4, r0
 80002a4:	000d      	movs	r5, r1
 80002a6:	f7ff ffef 	bl	8000288 <__aeabi_dcmpge>
 80002aa:	2800      	cmp	r0, #0
 80002ac:	d104      	bne.n	80002b8 <__aeabi_d2uiz+0x1c>
 80002ae:	0020      	movs	r0, r4
 80002b0:	0029      	movs	r1, r5
 80002b2:	f001 fd0d 	bl	8001cd0 <__aeabi_d2iz>
 80002b6:	bd70      	pop	{r4, r5, r6, pc}
 80002b8:	4b06      	ldr	r3, [pc, #24]	; (80002d4 <__aeabi_d2uiz+0x38>)
 80002ba:	2200      	movs	r2, #0
 80002bc:	0020      	movs	r0, r4
 80002be:	0029      	movs	r1, r5
 80002c0:	f001 f9a2 	bl	8001608 <__aeabi_dsub>
 80002c4:	f001 fd04 	bl	8001cd0 <__aeabi_d2iz>
 80002c8:	2380      	movs	r3, #128	; 0x80
 80002ca:	061b      	lsls	r3, r3, #24
 80002cc:	469c      	mov	ip, r3
 80002ce:	4460      	add	r0, ip
 80002d0:	e7f1      	b.n	80002b6 <__aeabi_d2uiz+0x1a>
 80002d2:	46c0      	nop			; (mov r8, r8)
 80002d4:	41e00000 	.word	0x41e00000

080002d8 <__aeabi_dadd>:
 80002d8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80002da:	464f      	mov	r7, r9
 80002dc:	4646      	mov	r6, r8
 80002de:	46d6      	mov	lr, sl
 80002e0:	000c      	movs	r4, r1
 80002e2:	0309      	lsls	r1, r1, #12
 80002e4:	b5c0      	push	{r6, r7, lr}
 80002e6:	0a49      	lsrs	r1, r1, #9
 80002e8:	0f47      	lsrs	r7, r0, #29
 80002ea:	005e      	lsls	r6, r3, #1
 80002ec:	4339      	orrs	r1, r7
 80002ee:	031f      	lsls	r7, r3, #12
 80002f0:	0fdb      	lsrs	r3, r3, #31
 80002f2:	469c      	mov	ip, r3
 80002f4:	0065      	lsls	r5, r4, #1
 80002f6:	0a7b      	lsrs	r3, r7, #9
 80002f8:	0f57      	lsrs	r7, r2, #29
 80002fa:	431f      	orrs	r7, r3
 80002fc:	0d6d      	lsrs	r5, r5, #21
 80002fe:	0fe4      	lsrs	r4, r4, #31
 8000300:	0d76      	lsrs	r6, r6, #21
 8000302:	46a1      	mov	r9, r4
 8000304:	00c0      	lsls	r0, r0, #3
 8000306:	46b8      	mov	r8, r7
 8000308:	00d2      	lsls	r2, r2, #3
 800030a:	1bab      	subs	r3, r5, r6
 800030c:	4564      	cmp	r4, ip
 800030e:	d07b      	beq.n	8000408 <__aeabi_dadd+0x130>
 8000310:	2b00      	cmp	r3, #0
 8000312:	dd5f      	ble.n	80003d4 <__aeabi_dadd+0xfc>
 8000314:	2e00      	cmp	r6, #0
 8000316:	d000      	beq.n	800031a <__aeabi_dadd+0x42>
 8000318:	e0a4      	b.n	8000464 <__aeabi_dadd+0x18c>
 800031a:	003e      	movs	r6, r7
 800031c:	4316      	orrs	r6, r2
 800031e:	d100      	bne.n	8000322 <__aeabi_dadd+0x4a>
 8000320:	e112      	b.n	8000548 <__aeabi_dadd+0x270>
 8000322:	1e5e      	subs	r6, r3, #1
 8000324:	2e00      	cmp	r6, #0
 8000326:	d000      	beq.n	800032a <__aeabi_dadd+0x52>
 8000328:	e19e      	b.n	8000668 <__aeabi_dadd+0x390>
 800032a:	1a87      	subs	r7, r0, r2
 800032c:	4643      	mov	r3, r8
 800032e:	42b8      	cmp	r0, r7
 8000330:	4180      	sbcs	r0, r0
 8000332:	2501      	movs	r5, #1
 8000334:	1ac9      	subs	r1, r1, r3
 8000336:	4240      	negs	r0, r0
 8000338:	1a09      	subs	r1, r1, r0
 800033a:	020b      	lsls	r3, r1, #8
 800033c:	d400      	bmi.n	8000340 <__aeabi_dadd+0x68>
 800033e:	e131      	b.n	80005a4 <__aeabi_dadd+0x2cc>
 8000340:	0249      	lsls	r1, r1, #9
 8000342:	0a4e      	lsrs	r6, r1, #9
 8000344:	2e00      	cmp	r6, #0
 8000346:	d100      	bne.n	800034a <__aeabi_dadd+0x72>
 8000348:	e16e      	b.n	8000628 <__aeabi_dadd+0x350>
 800034a:	0030      	movs	r0, r6
 800034c:	f001 fd30 	bl	8001db0 <__clzsi2>
 8000350:	0003      	movs	r3, r0
 8000352:	3b08      	subs	r3, #8
 8000354:	2b1f      	cmp	r3, #31
 8000356:	dd00      	ble.n	800035a <__aeabi_dadd+0x82>
 8000358:	e161      	b.n	800061e <__aeabi_dadd+0x346>
 800035a:	2220      	movs	r2, #32
 800035c:	0039      	movs	r1, r7
 800035e:	1ad2      	subs	r2, r2, r3
 8000360:	409e      	lsls	r6, r3
 8000362:	40d1      	lsrs	r1, r2
 8000364:	409f      	lsls	r7, r3
 8000366:	430e      	orrs	r6, r1
 8000368:	429d      	cmp	r5, r3
 800036a:	dd00      	ble.n	800036e <__aeabi_dadd+0x96>
 800036c:	e151      	b.n	8000612 <__aeabi_dadd+0x33a>
 800036e:	1b5d      	subs	r5, r3, r5
 8000370:	1c6b      	adds	r3, r5, #1
 8000372:	2b1f      	cmp	r3, #31
 8000374:	dd00      	ble.n	8000378 <__aeabi_dadd+0xa0>
 8000376:	e17c      	b.n	8000672 <__aeabi_dadd+0x39a>
 8000378:	2120      	movs	r1, #32
 800037a:	1ac9      	subs	r1, r1, r3
 800037c:	003d      	movs	r5, r7
 800037e:	0030      	movs	r0, r6
 8000380:	408f      	lsls	r7, r1
 8000382:	4088      	lsls	r0, r1
 8000384:	40dd      	lsrs	r5, r3
 8000386:	1e79      	subs	r1, r7, #1
 8000388:	418f      	sbcs	r7, r1
 800038a:	0031      	movs	r1, r6
 800038c:	2207      	movs	r2, #7
 800038e:	4328      	orrs	r0, r5
 8000390:	40d9      	lsrs	r1, r3
 8000392:	2500      	movs	r5, #0
 8000394:	4307      	orrs	r7, r0
 8000396:	403a      	ands	r2, r7
 8000398:	2a00      	cmp	r2, #0
 800039a:	d009      	beq.n	80003b0 <__aeabi_dadd+0xd8>
 800039c:	230f      	movs	r3, #15
 800039e:	403b      	ands	r3, r7
 80003a0:	2b04      	cmp	r3, #4
 80003a2:	d005      	beq.n	80003b0 <__aeabi_dadd+0xd8>
 80003a4:	1d3b      	adds	r3, r7, #4
 80003a6:	42bb      	cmp	r3, r7
 80003a8:	41bf      	sbcs	r7, r7
 80003aa:	427f      	negs	r7, r7
 80003ac:	19c9      	adds	r1, r1, r7
 80003ae:	001f      	movs	r7, r3
 80003b0:	020b      	lsls	r3, r1, #8
 80003b2:	d400      	bmi.n	80003b6 <__aeabi_dadd+0xde>
 80003b4:	e226      	b.n	8000804 <__aeabi_dadd+0x52c>
 80003b6:	1c6a      	adds	r2, r5, #1
 80003b8:	4bc6      	ldr	r3, [pc, #792]	; (80006d4 <__aeabi_dadd+0x3fc>)
 80003ba:	0555      	lsls	r5, r2, #21
 80003bc:	0d6d      	lsrs	r5, r5, #21
 80003be:	429a      	cmp	r2, r3
 80003c0:	d100      	bne.n	80003c4 <__aeabi_dadd+0xec>
 80003c2:	e106      	b.n	80005d2 <__aeabi_dadd+0x2fa>
 80003c4:	4ac4      	ldr	r2, [pc, #784]	; (80006d8 <__aeabi_dadd+0x400>)
 80003c6:	08ff      	lsrs	r7, r7, #3
 80003c8:	400a      	ands	r2, r1
 80003ca:	0753      	lsls	r3, r2, #29
 80003cc:	0252      	lsls	r2, r2, #9
 80003ce:	433b      	orrs	r3, r7
 80003d0:	0b12      	lsrs	r2, r2, #12
 80003d2:	e08e      	b.n	80004f2 <__aeabi_dadd+0x21a>
 80003d4:	2b00      	cmp	r3, #0
 80003d6:	d000      	beq.n	80003da <__aeabi_dadd+0x102>
 80003d8:	e0b8      	b.n	800054c <__aeabi_dadd+0x274>
 80003da:	1c6b      	adds	r3, r5, #1
 80003dc:	055b      	lsls	r3, r3, #21
 80003de:	0d5b      	lsrs	r3, r3, #21
 80003e0:	2b01      	cmp	r3, #1
 80003e2:	dc00      	bgt.n	80003e6 <__aeabi_dadd+0x10e>
 80003e4:	e130      	b.n	8000648 <__aeabi_dadd+0x370>
 80003e6:	1a87      	subs	r7, r0, r2
 80003e8:	4643      	mov	r3, r8
 80003ea:	42b8      	cmp	r0, r7
 80003ec:	41b6      	sbcs	r6, r6
 80003ee:	1acb      	subs	r3, r1, r3
 80003f0:	4276      	negs	r6, r6
 80003f2:	1b9e      	subs	r6, r3, r6
 80003f4:	0233      	lsls	r3, r6, #8
 80003f6:	d500      	bpl.n	80003fa <__aeabi_dadd+0x122>
 80003f8:	e14c      	b.n	8000694 <__aeabi_dadd+0x3bc>
 80003fa:	003b      	movs	r3, r7
 80003fc:	4333      	orrs	r3, r6
 80003fe:	d1a1      	bne.n	8000344 <__aeabi_dadd+0x6c>
 8000400:	2200      	movs	r2, #0
 8000402:	2400      	movs	r4, #0
 8000404:	2500      	movs	r5, #0
 8000406:	e070      	b.n	80004ea <__aeabi_dadd+0x212>
 8000408:	2b00      	cmp	r3, #0
 800040a:	dc00      	bgt.n	800040e <__aeabi_dadd+0x136>
 800040c:	e0e5      	b.n	80005da <__aeabi_dadd+0x302>
 800040e:	2e00      	cmp	r6, #0
 8000410:	d100      	bne.n	8000414 <__aeabi_dadd+0x13c>
 8000412:	e083      	b.n	800051c <__aeabi_dadd+0x244>
 8000414:	4eaf      	ldr	r6, [pc, #700]	; (80006d4 <__aeabi_dadd+0x3fc>)
 8000416:	42b5      	cmp	r5, r6
 8000418:	d060      	beq.n	80004dc <__aeabi_dadd+0x204>
 800041a:	2680      	movs	r6, #128	; 0x80
 800041c:	0436      	lsls	r6, r6, #16
 800041e:	4337      	orrs	r7, r6
 8000420:	46b8      	mov	r8, r7
 8000422:	2b38      	cmp	r3, #56	; 0x38
 8000424:	dc00      	bgt.n	8000428 <__aeabi_dadd+0x150>
 8000426:	e13e      	b.n	80006a6 <__aeabi_dadd+0x3ce>
 8000428:	4643      	mov	r3, r8
 800042a:	4313      	orrs	r3, r2
 800042c:	001f      	movs	r7, r3
 800042e:	1e7a      	subs	r2, r7, #1
 8000430:	4197      	sbcs	r7, r2
 8000432:	183f      	adds	r7, r7, r0
 8000434:	4287      	cmp	r7, r0
 8000436:	4180      	sbcs	r0, r0
 8000438:	4240      	negs	r0, r0
 800043a:	1809      	adds	r1, r1, r0
 800043c:	020b      	lsls	r3, r1, #8
 800043e:	d400      	bmi.n	8000442 <__aeabi_dadd+0x16a>
 8000440:	e0b0      	b.n	80005a4 <__aeabi_dadd+0x2cc>
 8000442:	4ba4      	ldr	r3, [pc, #656]	; (80006d4 <__aeabi_dadd+0x3fc>)
 8000444:	3501      	adds	r5, #1
 8000446:	429d      	cmp	r5, r3
 8000448:	d100      	bne.n	800044c <__aeabi_dadd+0x174>
 800044a:	e0c3      	b.n	80005d4 <__aeabi_dadd+0x2fc>
 800044c:	4aa2      	ldr	r2, [pc, #648]	; (80006d8 <__aeabi_dadd+0x400>)
 800044e:	087b      	lsrs	r3, r7, #1
 8000450:	400a      	ands	r2, r1
 8000452:	2101      	movs	r1, #1
 8000454:	400f      	ands	r7, r1
 8000456:	431f      	orrs	r7, r3
 8000458:	0851      	lsrs	r1, r2, #1
 800045a:	07d3      	lsls	r3, r2, #31
 800045c:	2207      	movs	r2, #7
 800045e:	431f      	orrs	r7, r3
 8000460:	403a      	ands	r2, r7
 8000462:	e799      	b.n	8000398 <__aeabi_dadd+0xc0>
 8000464:	4e9b      	ldr	r6, [pc, #620]	; (80006d4 <__aeabi_dadd+0x3fc>)
 8000466:	42b5      	cmp	r5, r6
 8000468:	d038      	beq.n	80004dc <__aeabi_dadd+0x204>
 800046a:	2680      	movs	r6, #128	; 0x80
 800046c:	0436      	lsls	r6, r6, #16
 800046e:	4337      	orrs	r7, r6
 8000470:	46b8      	mov	r8, r7
 8000472:	2b38      	cmp	r3, #56	; 0x38
 8000474:	dd00      	ble.n	8000478 <__aeabi_dadd+0x1a0>
 8000476:	e0dc      	b.n	8000632 <__aeabi_dadd+0x35a>
 8000478:	2b1f      	cmp	r3, #31
 800047a:	dc00      	bgt.n	800047e <__aeabi_dadd+0x1a6>
 800047c:	e130      	b.n	80006e0 <__aeabi_dadd+0x408>
 800047e:	001e      	movs	r6, r3
 8000480:	4647      	mov	r7, r8
 8000482:	3e20      	subs	r6, #32
 8000484:	40f7      	lsrs	r7, r6
 8000486:	46bc      	mov	ip, r7
 8000488:	2b20      	cmp	r3, #32
 800048a:	d004      	beq.n	8000496 <__aeabi_dadd+0x1be>
 800048c:	2640      	movs	r6, #64	; 0x40
 800048e:	1af3      	subs	r3, r6, r3
 8000490:	4646      	mov	r6, r8
 8000492:	409e      	lsls	r6, r3
 8000494:	4332      	orrs	r2, r6
 8000496:	0017      	movs	r7, r2
 8000498:	4663      	mov	r3, ip
 800049a:	1e7a      	subs	r2, r7, #1
 800049c:	4197      	sbcs	r7, r2
 800049e:	431f      	orrs	r7, r3
 80004a0:	e0cc      	b.n	800063c <__aeabi_dadd+0x364>
 80004a2:	2b00      	cmp	r3, #0
 80004a4:	d100      	bne.n	80004a8 <__aeabi_dadd+0x1d0>
 80004a6:	e204      	b.n	80008b2 <__aeabi_dadd+0x5da>
 80004a8:	4643      	mov	r3, r8
 80004aa:	4313      	orrs	r3, r2
 80004ac:	d100      	bne.n	80004b0 <__aeabi_dadd+0x1d8>
 80004ae:	e159      	b.n	8000764 <__aeabi_dadd+0x48c>
 80004b0:	074b      	lsls	r3, r1, #29
 80004b2:	08c0      	lsrs	r0, r0, #3
 80004b4:	4318      	orrs	r0, r3
 80004b6:	2380      	movs	r3, #128	; 0x80
 80004b8:	08c9      	lsrs	r1, r1, #3
 80004ba:	031b      	lsls	r3, r3, #12
 80004bc:	4219      	tst	r1, r3
 80004be:	d008      	beq.n	80004d2 <__aeabi_dadd+0x1fa>
 80004c0:	4645      	mov	r5, r8
 80004c2:	08ed      	lsrs	r5, r5, #3
 80004c4:	421d      	tst	r5, r3
 80004c6:	d104      	bne.n	80004d2 <__aeabi_dadd+0x1fa>
 80004c8:	4643      	mov	r3, r8
 80004ca:	08d0      	lsrs	r0, r2, #3
 80004cc:	0759      	lsls	r1, r3, #29
 80004ce:	4308      	orrs	r0, r1
 80004d0:	0029      	movs	r1, r5
 80004d2:	0f42      	lsrs	r2, r0, #29
 80004d4:	00c9      	lsls	r1, r1, #3
 80004d6:	4d7f      	ldr	r5, [pc, #508]	; (80006d4 <__aeabi_dadd+0x3fc>)
 80004d8:	4311      	orrs	r1, r2
 80004da:	00c0      	lsls	r0, r0, #3
 80004dc:	074b      	lsls	r3, r1, #29
 80004de:	08ca      	lsrs	r2, r1, #3
 80004e0:	497c      	ldr	r1, [pc, #496]	; (80006d4 <__aeabi_dadd+0x3fc>)
 80004e2:	08c0      	lsrs	r0, r0, #3
 80004e4:	4303      	orrs	r3, r0
 80004e6:	428d      	cmp	r5, r1
 80004e8:	d068      	beq.n	80005bc <__aeabi_dadd+0x2e4>
 80004ea:	0312      	lsls	r2, r2, #12
 80004ec:	056d      	lsls	r5, r5, #21
 80004ee:	0b12      	lsrs	r2, r2, #12
 80004f0:	0d6d      	lsrs	r5, r5, #21
 80004f2:	2100      	movs	r1, #0
 80004f4:	0312      	lsls	r2, r2, #12
 80004f6:	0018      	movs	r0, r3
 80004f8:	0b13      	lsrs	r3, r2, #12
 80004fa:	0d0a      	lsrs	r2, r1, #20
 80004fc:	0512      	lsls	r2, r2, #20
 80004fe:	431a      	orrs	r2, r3
 8000500:	4b76      	ldr	r3, [pc, #472]	; (80006dc <__aeabi_dadd+0x404>)
 8000502:	052d      	lsls	r5, r5, #20
 8000504:	4013      	ands	r3, r2
 8000506:	432b      	orrs	r3, r5
 8000508:	005b      	lsls	r3, r3, #1
 800050a:	07e4      	lsls	r4, r4, #31
 800050c:	085b      	lsrs	r3, r3, #1
 800050e:	4323      	orrs	r3, r4
 8000510:	0019      	movs	r1, r3
 8000512:	bc1c      	pop	{r2, r3, r4}
 8000514:	4690      	mov	r8, r2
 8000516:	4699      	mov	r9, r3
 8000518:	46a2      	mov	sl, r4
 800051a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800051c:	003e      	movs	r6, r7
 800051e:	4316      	orrs	r6, r2
 8000520:	d012      	beq.n	8000548 <__aeabi_dadd+0x270>
 8000522:	1e5e      	subs	r6, r3, #1
 8000524:	2e00      	cmp	r6, #0
 8000526:	d000      	beq.n	800052a <__aeabi_dadd+0x252>
 8000528:	e100      	b.n	800072c <__aeabi_dadd+0x454>
 800052a:	1887      	adds	r7, r0, r2
 800052c:	4287      	cmp	r7, r0
 800052e:	4180      	sbcs	r0, r0
 8000530:	4441      	add	r1, r8
 8000532:	4240      	negs	r0, r0
 8000534:	1809      	adds	r1, r1, r0
 8000536:	2501      	movs	r5, #1
 8000538:	020b      	lsls	r3, r1, #8
 800053a:	d533      	bpl.n	80005a4 <__aeabi_dadd+0x2cc>
 800053c:	2502      	movs	r5, #2
 800053e:	e785      	b.n	800044c <__aeabi_dadd+0x174>
 8000540:	4664      	mov	r4, ip
 8000542:	0033      	movs	r3, r6
 8000544:	4641      	mov	r1, r8
 8000546:	0010      	movs	r0, r2
 8000548:	001d      	movs	r5, r3
 800054a:	e7c7      	b.n	80004dc <__aeabi_dadd+0x204>
 800054c:	2d00      	cmp	r5, #0
 800054e:	d000      	beq.n	8000552 <__aeabi_dadd+0x27a>
 8000550:	e0da      	b.n	8000708 <__aeabi_dadd+0x430>
 8000552:	000c      	movs	r4, r1
 8000554:	4304      	orrs	r4, r0
 8000556:	d0f3      	beq.n	8000540 <__aeabi_dadd+0x268>
 8000558:	1c5c      	adds	r4, r3, #1
 800055a:	d100      	bne.n	800055e <__aeabi_dadd+0x286>
 800055c:	e19f      	b.n	800089e <__aeabi_dadd+0x5c6>
 800055e:	4c5d      	ldr	r4, [pc, #372]	; (80006d4 <__aeabi_dadd+0x3fc>)
 8000560:	42a6      	cmp	r6, r4
 8000562:	d100      	bne.n	8000566 <__aeabi_dadd+0x28e>
 8000564:	e12f      	b.n	80007c6 <__aeabi_dadd+0x4ee>
 8000566:	43db      	mvns	r3, r3
 8000568:	2b38      	cmp	r3, #56	; 0x38
 800056a:	dd00      	ble.n	800056e <__aeabi_dadd+0x296>
 800056c:	e166      	b.n	800083c <__aeabi_dadd+0x564>
 800056e:	2b1f      	cmp	r3, #31
 8000570:	dd00      	ble.n	8000574 <__aeabi_dadd+0x29c>
 8000572:	e183      	b.n	800087c <__aeabi_dadd+0x5a4>
 8000574:	2420      	movs	r4, #32
 8000576:	0005      	movs	r5, r0
 8000578:	1ae4      	subs	r4, r4, r3
 800057a:	000f      	movs	r7, r1
 800057c:	40dd      	lsrs	r5, r3
 800057e:	40d9      	lsrs	r1, r3
 8000580:	40a0      	lsls	r0, r4
 8000582:	4643      	mov	r3, r8
 8000584:	40a7      	lsls	r7, r4
 8000586:	1a5b      	subs	r3, r3, r1
 8000588:	1e44      	subs	r4, r0, #1
 800058a:	41a0      	sbcs	r0, r4
 800058c:	4698      	mov	r8, r3
 800058e:	432f      	orrs	r7, r5
 8000590:	4338      	orrs	r0, r7
 8000592:	1a17      	subs	r7, r2, r0
 8000594:	42ba      	cmp	r2, r7
 8000596:	4192      	sbcs	r2, r2
 8000598:	4643      	mov	r3, r8
 800059a:	4252      	negs	r2, r2
 800059c:	1a99      	subs	r1, r3, r2
 800059e:	4664      	mov	r4, ip
 80005a0:	0035      	movs	r5, r6
 80005a2:	e6ca      	b.n	800033a <__aeabi_dadd+0x62>
 80005a4:	2207      	movs	r2, #7
 80005a6:	403a      	ands	r2, r7
 80005a8:	2a00      	cmp	r2, #0
 80005aa:	d000      	beq.n	80005ae <__aeabi_dadd+0x2d6>
 80005ac:	e6f6      	b.n	800039c <__aeabi_dadd+0xc4>
 80005ae:	074b      	lsls	r3, r1, #29
 80005b0:	08ca      	lsrs	r2, r1, #3
 80005b2:	4948      	ldr	r1, [pc, #288]	; (80006d4 <__aeabi_dadd+0x3fc>)
 80005b4:	08ff      	lsrs	r7, r7, #3
 80005b6:	433b      	orrs	r3, r7
 80005b8:	428d      	cmp	r5, r1
 80005ba:	d196      	bne.n	80004ea <__aeabi_dadd+0x212>
 80005bc:	0019      	movs	r1, r3
 80005be:	4311      	orrs	r1, r2
 80005c0:	d100      	bne.n	80005c4 <__aeabi_dadd+0x2ec>
 80005c2:	e19e      	b.n	8000902 <__aeabi_dadd+0x62a>
 80005c4:	2180      	movs	r1, #128	; 0x80
 80005c6:	0309      	lsls	r1, r1, #12
 80005c8:	430a      	orrs	r2, r1
 80005ca:	0312      	lsls	r2, r2, #12
 80005cc:	0b12      	lsrs	r2, r2, #12
 80005ce:	4d41      	ldr	r5, [pc, #260]	; (80006d4 <__aeabi_dadd+0x3fc>)
 80005d0:	e78f      	b.n	80004f2 <__aeabi_dadd+0x21a>
 80005d2:	0015      	movs	r5, r2
 80005d4:	2200      	movs	r2, #0
 80005d6:	2300      	movs	r3, #0
 80005d8:	e78b      	b.n	80004f2 <__aeabi_dadd+0x21a>
 80005da:	2b00      	cmp	r3, #0
 80005dc:	d000      	beq.n	80005e0 <__aeabi_dadd+0x308>
 80005de:	e0c7      	b.n	8000770 <__aeabi_dadd+0x498>
 80005e0:	1c6b      	adds	r3, r5, #1
 80005e2:	055f      	lsls	r7, r3, #21
 80005e4:	0d7f      	lsrs	r7, r7, #21
 80005e6:	2f01      	cmp	r7, #1
 80005e8:	dc00      	bgt.n	80005ec <__aeabi_dadd+0x314>
 80005ea:	e0f1      	b.n	80007d0 <__aeabi_dadd+0x4f8>
 80005ec:	4d39      	ldr	r5, [pc, #228]	; (80006d4 <__aeabi_dadd+0x3fc>)
 80005ee:	42ab      	cmp	r3, r5
 80005f0:	d100      	bne.n	80005f4 <__aeabi_dadd+0x31c>
 80005f2:	e0b9      	b.n	8000768 <__aeabi_dadd+0x490>
 80005f4:	1885      	adds	r5, r0, r2
 80005f6:	000a      	movs	r2, r1
 80005f8:	4285      	cmp	r5, r0
 80005fa:	4189      	sbcs	r1, r1
 80005fc:	4442      	add	r2, r8
 80005fe:	4249      	negs	r1, r1
 8000600:	1851      	adds	r1, r2, r1
 8000602:	2207      	movs	r2, #7
 8000604:	07cf      	lsls	r7, r1, #31
 8000606:	086d      	lsrs	r5, r5, #1
 8000608:	432f      	orrs	r7, r5
 800060a:	0849      	lsrs	r1, r1, #1
 800060c:	403a      	ands	r2, r7
 800060e:	001d      	movs	r5, r3
 8000610:	e6c2      	b.n	8000398 <__aeabi_dadd+0xc0>
 8000612:	2207      	movs	r2, #7
 8000614:	4930      	ldr	r1, [pc, #192]	; (80006d8 <__aeabi_dadd+0x400>)
 8000616:	1aed      	subs	r5, r5, r3
 8000618:	4031      	ands	r1, r6
 800061a:	403a      	ands	r2, r7
 800061c:	e6bc      	b.n	8000398 <__aeabi_dadd+0xc0>
 800061e:	003e      	movs	r6, r7
 8000620:	3828      	subs	r0, #40	; 0x28
 8000622:	4086      	lsls	r6, r0
 8000624:	2700      	movs	r7, #0
 8000626:	e69f      	b.n	8000368 <__aeabi_dadd+0x90>
 8000628:	0038      	movs	r0, r7
 800062a:	f001 fbc1 	bl	8001db0 <__clzsi2>
 800062e:	3020      	adds	r0, #32
 8000630:	e68e      	b.n	8000350 <__aeabi_dadd+0x78>
 8000632:	4643      	mov	r3, r8
 8000634:	4313      	orrs	r3, r2
 8000636:	001f      	movs	r7, r3
 8000638:	1e7a      	subs	r2, r7, #1
 800063a:	4197      	sbcs	r7, r2
 800063c:	1bc7      	subs	r7, r0, r7
 800063e:	42b8      	cmp	r0, r7
 8000640:	4180      	sbcs	r0, r0
 8000642:	4240      	negs	r0, r0
 8000644:	1a09      	subs	r1, r1, r0
 8000646:	e678      	b.n	800033a <__aeabi_dadd+0x62>
 8000648:	000e      	movs	r6, r1
 800064a:	003b      	movs	r3, r7
 800064c:	4306      	orrs	r6, r0
 800064e:	4313      	orrs	r3, r2
 8000650:	2d00      	cmp	r5, #0
 8000652:	d161      	bne.n	8000718 <__aeabi_dadd+0x440>
 8000654:	2e00      	cmp	r6, #0
 8000656:	d000      	beq.n	800065a <__aeabi_dadd+0x382>
 8000658:	e0f4      	b.n	8000844 <__aeabi_dadd+0x56c>
 800065a:	2b00      	cmp	r3, #0
 800065c:	d100      	bne.n	8000660 <__aeabi_dadd+0x388>
 800065e:	e11b      	b.n	8000898 <__aeabi_dadd+0x5c0>
 8000660:	4664      	mov	r4, ip
 8000662:	0039      	movs	r1, r7
 8000664:	0010      	movs	r0, r2
 8000666:	e739      	b.n	80004dc <__aeabi_dadd+0x204>
 8000668:	4f1a      	ldr	r7, [pc, #104]	; (80006d4 <__aeabi_dadd+0x3fc>)
 800066a:	42bb      	cmp	r3, r7
 800066c:	d07a      	beq.n	8000764 <__aeabi_dadd+0x48c>
 800066e:	0033      	movs	r3, r6
 8000670:	e6ff      	b.n	8000472 <__aeabi_dadd+0x19a>
 8000672:	0030      	movs	r0, r6
 8000674:	3d1f      	subs	r5, #31
 8000676:	40e8      	lsrs	r0, r5
 8000678:	2b20      	cmp	r3, #32
 800067a:	d003      	beq.n	8000684 <__aeabi_dadd+0x3ac>
 800067c:	2140      	movs	r1, #64	; 0x40
 800067e:	1acb      	subs	r3, r1, r3
 8000680:	409e      	lsls	r6, r3
 8000682:	4337      	orrs	r7, r6
 8000684:	1e7b      	subs	r3, r7, #1
 8000686:	419f      	sbcs	r7, r3
 8000688:	2207      	movs	r2, #7
 800068a:	4307      	orrs	r7, r0
 800068c:	403a      	ands	r2, r7
 800068e:	2100      	movs	r1, #0
 8000690:	2500      	movs	r5, #0
 8000692:	e789      	b.n	80005a8 <__aeabi_dadd+0x2d0>
 8000694:	1a17      	subs	r7, r2, r0
 8000696:	4643      	mov	r3, r8
 8000698:	42ba      	cmp	r2, r7
 800069a:	41b6      	sbcs	r6, r6
 800069c:	1a59      	subs	r1, r3, r1
 800069e:	4276      	negs	r6, r6
 80006a0:	1b8e      	subs	r6, r1, r6
 80006a2:	4664      	mov	r4, ip
 80006a4:	e64e      	b.n	8000344 <__aeabi_dadd+0x6c>
 80006a6:	2b1f      	cmp	r3, #31
 80006a8:	dd00      	ble.n	80006ac <__aeabi_dadd+0x3d4>
 80006aa:	e0ad      	b.n	8000808 <__aeabi_dadd+0x530>
 80006ac:	2620      	movs	r6, #32
 80006ae:	4647      	mov	r7, r8
 80006b0:	1af6      	subs	r6, r6, r3
 80006b2:	40b7      	lsls	r7, r6
 80006b4:	46b9      	mov	r9, r7
 80006b6:	0017      	movs	r7, r2
 80006b8:	46b2      	mov	sl, r6
 80006ba:	40df      	lsrs	r7, r3
 80006bc:	464e      	mov	r6, r9
 80006be:	433e      	orrs	r6, r7
 80006c0:	0037      	movs	r7, r6
 80006c2:	4656      	mov	r6, sl
 80006c4:	40b2      	lsls	r2, r6
 80006c6:	1e56      	subs	r6, r2, #1
 80006c8:	41b2      	sbcs	r2, r6
 80006ca:	4317      	orrs	r7, r2
 80006cc:	4642      	mov	r2, r8
 80006ce:	40da      	lsrs	r2, r3
 80006d0:	1889      	adds	r1, r1, r2
 80006d2:	e6ae      	b.n	8000432 <__aeabi_dadd+0x15a>
 80006d4:	000007ff 	.word	0x000007ff
 80006d8:	ff7fffff 	.word	0xff7fffff
 80006dc:	800fffff 	.word	0x800fffff
 80006e0:	2620      	movs	r6, #32
 80006e2:	4647      	mov	r7, r8
 80006e4:	1af6      	subs	r6, r6, r3
 80006e6:	40b7      	lsls	r7, r6
 80006e8:	46b9      	mov	r9, r7
 80006ea:	0017      	movs	r7, r2
 80006ec:	46b2      	mov	sl, r6
 80006ee:	40df      	lsrs	r7, r3
 80006f0:	464e      	mov	r6, r9
 80006f2:	433e      	orrs	r6, r7
 80006f4:	0037      	movs	r7, r6
 80006f6:	4656      	mov	r6, sl
 80006f8:	40b2      	lsls	r2, r6
 80006fa:	1e56      	subs	r6, r2, #1
 80006fc:	41b2      	sbcs	r2, r6
 80006fe:	4317      	orrs	r7, r2
 8000700:	4642      	mov	r2, r8
 8000702:	40da      	lsrs	r2, r3
 8000704:	1a89      	subs	r1, r1, r2
 8000706:	e799      	b.n	800063c <__aeabi_dadd+0x364>
 8000708:	4c7f      	ldr	r4, [pc, #508]	; (8000908 <__aeabi_dadd+0x630>)
 800070a:	42a6      	cmp	r6, r4
 800070c:	d05b      	beq.n	80007c6 <__aeabi_dadd+0x4ee>
 800070e:	2480      	movs	r4, #128	; 0x80
 8000710:	0424      	lsls	r4, r4, #16
 8000712:	425b      	negs	r3, r3
 8000714:	4321      	orrs	r1, r4
 8000716:	e727      	b.n	8000568 <__aeabi_dadd+0x290>
 8000718:	2e00      	cmp	r6, #0
 800071a:	d10c      	bne.n	8000736 <__aeabi_dadd+0x45e>
 800071c:	2b00      	cmp	r3, #0
 800071e:	d100      	bne.n	8000722 <__aeabi_dadd+0x44a>
 8000720:	e0cb      	b.n	80008ba <__aeabi_dadd+0x5e2>
 8000722:	4664      	mov	r4, ip
 8000724:	0039      	movs	r1, r7
 8000726:	0010      	movs	r0, r2
 8000728:	4d77      	ldr	r5, [pc, #476]	; (8000908 <__aeabi_dadd+0x630>)
 800072a:	e6d7      	b.n	80004dc <__aeabi_dadd+0x204>
 800072c:	4f76      	ldr	r7, [pc, #472]	; (8000908 <__aeabi_dadd+0x630>)
 800072e:	42bb      	cmp	r3, r7
 8000730:	d018      	beq.n	8000764 <__aeabi_dadd+0x48c>
 8000732:	0033      	movs	r3, r6
 8000734:	e675      	b.n	8000422 <__aeabi_dadd+0x14a>
 8000736:	2b00      	cmp	r3, #0
 8000738:	d014      	beq.n	8000764 <__aeabi_dadd+0x48c>
 800073a:	074b      	lsls	r3, r1, #29
 800073c:	08c0      	lsrs	r0, r0, #3
 800073e:	4318      	orrs	r0, r3
 8000740:	2380      	movs	r3, #128	; 0x80
 8000742:	08c9      	lsrs	r1, r1, #3
 8000744:	031b      	lsls	r3, r3, #12
 8000746:	4219      	tst	r1, r3
 8000748:	d007      	beq.n	800075a <__aeabi_dadd+0x482>
 800074a:	08fc      	lsrs	r4, r7, #3
 800074c:	421c      	tst	r4, r3
 800074e:	d104      	bne.n	800075a <__aeabi_dadd+0x482>
 8000750:	0779      	lsls	r1, r7, #29
 8000752:	08d0      	lsrs	r0, r2, #3
 8000754:	4308      	orrs	r0, r1
 8000756:	46e1      	mov	r9, ip
 8000758:	0021      	movs	r1, r4
 800075a:	464c      	mov	r4, r9
 800075c:	0f42      	lsrs	r2, r0, #29
 800075e:	00c9      	lsls	r1, r1, #3
 8000760:	4311      	orrs	r1, r2
 8000762:	00c0      	lsls	r0, r0, #3
 8000764:	4d68      	ldr	r5, [pc, #416]	; (8000908 <__aeabi_dadd+0x630>)
 8000766:	e6b9      	b.n	80004dc <__aeabi_dadd+0x204>
 8000768:	001d      	movs	r5, r3
 800076a:	2200      	movs	r2, #0
 800076c:	2300      	movs	r3, #0
 800076e:	e6c0      	b.n	80004f2 <__aeabi_dadd+0x21a>
 8000770:	2d00      	cmp	r5, #0
 8000772:	d15b      	bne.n	800082c <__aeabi_dadd+0x554>
 8000774:	000d      	movs	r5, r1
 8000776:	4305      	orrs	r5, r0
 8000778:	d100      	bne.n	800077c <__aeabi_dadd+0x4a4>
 800077a:	e6e2      	b.n	8000542 <__aeabi_dadd+0x26a>
 800077c:	1c5d      	adds	r5, r3, #1
 800077e:	d100      	bne.n	8000782 <__aeabi_dadd+0x4aa>
 8000780:	e0b0      	b.n	80008e4 <__aeabi_dadd+0x60c>
 8000782:	4d61      	ldr	r5, [pc, #388]	; (8000908 <__aeabi_dadd+0x630>)
 8000784:	42ae      	cmp	r6, r5
 8000786:	d01f      	beq.n	80007c8 <__aeabi_dadd+0x4f0>
 8000788:	43db      	mvns	r3, r3
 800078a:	2b38      	cmp	r3, #56	; 0x38
 800078c:	dc71      	bgt.n	8000872 <__aeabi_dadd+0x59a>
 800078e:	2b1f      	cmp	r3, #31
 8000790:	dd00      	ble.n	8000794 <__aeabi_dadd+0x4bc>
 8000792:	e096      	b.n	80008c2 <__aeabi_dadd+0x5ea>
 8000794:	2520      	movs	r5, #32
 8000796:	000f      	movs	r7, r1
 8000798:	1aed      	subs	r5, r5, r3
 800079a:	40af      	lsls	r7, r5
 800079c:	46b9      	mov	r9, r7
 800079e:	0007      	movs	r7, r0
 80007a0:	46aa      	mov	sl, r5
 80007a2:	40df      	lsrs	r7, r3
 80007a4:	464d      	mov	r5, r9
 80007a6:	433d      	orrs	r5, r7
 80007a8:	002f      	movs	r7, r5
 80007aa:	4655      	mov	r5, sl
 80007ac:	40a8      	lsls	r0, r5
 80007ae:	40d9      	lsrs	r1, r3
 80007b0:	1e45      	subs	r5, r0, #1
 80007b2:	41a8      	sbcs	r0, r5
 80007b4:	4488      	add	r8, r1
 80007b6:	4307      	orrs	r7, r0
 80007b8:	18bf      	adds	r7, r7, r2
 80007ba:	4297      	cmp	r7, r2
 80007bc:	4192      	sbcs	r2, r2
 80007be:	4251      	negs	r1, r2
 80007c0:	4441      	add	r1, r8
 80007c2:	0035      	movs	r5, r6
 80007c4:	e63a      	b.n	800043c <__aeabi_dadd+0x164>
 80007c6:	4664      	mov	r4, ip
 80007c8:	0035      	movs	r5, r6
 80007ca:	4641      	mov	r1, r8
 80007cc:	0010      	movs	r0, r2
 80007ce:	e685      	b.n	80004dc <__aeabi_dadd+0x204>
 80007d0:	000b      	movs	r3, r1
 80007d2:	4303      	orrs	r3, r0
 80007d4:	2d00      	cmp	r5, #0
 80007d6:	d000      	beq.n	80007da <__aeabi_dadd+0x502>
 80007d8:	e663      	b.n	80004a2 <__aeabi_dadd+0x1ca>
 80007da:	2b00      	cmp	r3, #0
 80007dc:	d0f5      	beq.n	80007ca <__aeabi_dadd+0x4f2>
 80007de:	4643      	mov	r3, r8
 80007e0:	4313      	orrs	r3, r2
 80007e2:	d100      	bne.n	80007e6 <__aeabi_dadd+0x50e>
 80007e4:	e67a      	b.n	80004dc <__aeabi_dadd+0x204>
 80007e6:	1887      	adds	r7, r0, r2
 80007e8:	4287      	cmp	r7, r0
 80007ea:	4180      	sbcs	r0, r0
 80007ec:	2207      	movs	r2, #7
 80007ee:	4441      	add	r1, r8
 80007f0:	4240      	negs	r0, r0
 80007f2:	1809      	adds	r1, r1, r0
 80007f4:	403a      	ands	r2, r7
 80007f6:	020b      	lsls	r3, r1, #8
 80007f8:	d400      	bmi.n	80007fc <__aeabi_dadd+0x524>
 80007fa:	e6d5      	b.n	80005a8 <__aeabi_dadd+0x2d0>
 80007fc:	4b43      	ldr	r3, [pc, #268]	; (800090c <__aeabi_dadd+0x634>)
 80007fe:	3501      	adds	r5, #1
 8000800:	4019      	ands	r1, r3
 8000802:	e5c9      	b.n	8000398 <__aeabi_dadd+0xc0>
 8000804:	0038      	movs	r0, r7
 8000806:	e669      	b.n	80004dc <__aeabi_dadd+0x204>
 8000808:	001e      	movs	r6, r3
 800080a:	4647      	mov	r7, r8
 800080c:	3e20      	subs	r6, #32
 800080e:	40f7      	lsrs	r7, r6
 8000810:	46bc      	mov	ip, r7
 8000812:	2b20      	cmp	r3, #32
 8000814:	d004      	beq.n	8000820 <__aeabi_dadd+0x548>
 8000816:	2640      	movs	r6, #64	; 0x40
 8000818:	1af3      	subs	r3, r6, r3
 800081a:	4646      	mov	r6, r8
 800081c:	409e      	lsls	r6, r3
 800081e:	4332      	orrs	r2, r6
 8000820:	0017      	movs	r7, r2
 8000822:	4663      	mov	r3, ip
 8000824:	1e7a      	subs	r2, r7, #1
 8000826:	4197      	sbcs	r7, r2
 8000828:	431f      	orrs	r7, r3
 800082a:	e602      	b.n	8000432 <__aeabi_dadd+0x15a>
 800082c:	4d36      	ldr	r5, [pc, #216]	; (8000908 <__aeabi_dadd+0x630>)
 800082e:	42ae      	cmp	r6, r5
 8000830:	d0ca      	beq.n	80007c8 <__aeabi_dadd+0x4f0>
 8000832:	2580      	movs	r5, #128	; 0x80
 8000834:	042d      	lsls	r5, r5, #16
 8000836:	425b      	negs	r3, r3
 8000838:	4329      	orrs	r1, r5
 800083a:	e7a6      	b.n	800078a <__aeabi_dadd+0x4b2>
 800083c:	4308      	orrs	r0, r1
 800083e:	1e41      	subs	r1, r0, #1
 8000840:	4188      	sbcs	r0, r1
 8000842:	e6a6      	b.n	8000592 <__aeabi_dadd+0x2ba>
 8000844:	2b00      	cmp	r3, #0
 8000846:	d100      	bne.n	800084a <__aeabi_dadd+0x572>
 8000848:	e648      	b.n	80004dc <__aeabi_dadd+0x204>
 800084a:	1a87      	subs	r7, r0, r2
 800084c:	4643      	mov	r3, r8
 800084e:	42b8      	cmp	r0, r7
 8000850:	41b6      	sbcs	r6, r6
 8000852:	1acb      	subs	r3, r1, r3
 8000854:	4276      	negs	r6, r6
 8000856:	1b9e      	subs	r6, r3, r6
 8000858:	0233      	lsls	r3, r6, #8
 800085a:	d54b      	bpl.n	80008f4 <__aeabi_dadd+0x61c>
 800085c:	1a17      	subs	r7, r2, r0
 800085e:	4643      	mov	r3, r8
 8000860:	42ba      	cmp	r2, r7
 8000862:	4192      	sbcs	r2, r2
 8000864:	1a59      	subs	r1, r3, r1
 8000866:	4252      	negs	r2, r2
 8000868:	1a89      	subs	r1, r1, r2
 800086a:	2207      	movs	r2, #7
 800086c:	4664      	mov	r4, ip
 800086e:	403a      	ands	r2, r7
 8000870:	e592      	b.n	8000398 <__aeabi_dadd+0xc0>
 8000872:	4301      	orrs	r1, r0
 8000874:	000f      	movs	r7, r1
 8000876:	1e79      	subs	r1, r7, #1
 8000878:	418f      	sbcs	r7, r1
 800087a:	e79d      	b.n	80007b8 <__aeabi_dadd+0x4e0>
 800087c:	001c      	movs	r4, r3
 800087e:	000f      	movs	r7, r1
 8000880:	3c20      	subs	r4, #32
 8000882:	40e7      	lsrs	r7, r4
 8000884:	2b20      	cmp	r3, #32
 8000886:	d003      	beq.n	8000890 <__aeabi_dadd+0x5b8>
 8000888:	2440      	movs	r4, #64	; 0x40
 800088a:	1ae3      	subs	r3, r4, r3
 800088c:	4099      	lsls	r1, r3
 800088e:	4308      	orrs	r0, r1
 8000890:	1e41      	subs	r1, r0, #1
 8000892:	4188      	sbcs	r0, r1
 8000894:	4338      	orrs	r0, r7
 8000896:	e67c      	b.n	8000592 <__aeabi_dadd+0x2ba>
 8000898:	2200      	movs	r2, #0
 800089a:	2400      	movs	r4, #0
 800089c:	e625      	b.n	80004ea <__aeabi_dadd+0x212>
 800089e:	1a17      	subs	r7, r2, r0
 80008a0:	4643      	mov	r3, r8
 80008a2:	42ba      	cmp	r2, r7
 80008a4:	4192      	sbcs	r2, r2
 80008a6:	1a59      	subs	r1, r3, r1
 80008a8:	4252      	negs	r2, r2
 80008aa:	1a89      	subs	r1, r1, r2
 80008ac:	4664      	mov	r4, ip
 80008ae:	0035      	movs	r5, r6
 80008b0:	e543      	b.n	800033a <__aeabi_dadd+0x62>
 80008b2:	4641      	mov	r1, r8
 80008b4:	0010      	movs	r0, r2
 80008b6:	4d14      	ldr	r5, [pc, #80]	; (8000908 <__aeabi_dadd+0x630>)
 80008b8:	e610      	b.n	80004dc <__aeabi_dadd+0x204>
 80008ba:	2280      	movs	r2, #128	; 0x80
 80008bc:	2400      	movs	r4, #0
 80008be:	0312      	lsls	r2, r2, #12
 80008c0:	e680      	b.n	80005c4 <__aeabi_dadd+0x2ec>
 80008c2:	001d      	movs	r5, r3
 80008c4:	000f      	movs	r7, r1
 80008c6:	3d20      	subs	r5, #32
 80008c8:	40ef      	lsrs	r7, r5
 80008ca:	46bc      	mov	ip, r7
 80008cc:	2b20      	cmp	r3, #32
 80008ce:	d003      	beq.n	80008d8 <__aeabi_dadd+0x600>
 80008d0:	2540      	movs	r5, #64	; 0x40
 80008d2:	1aeb      	subs	r3, r5, r3
 80008d4:	4099      	lsls	r1, r3
 80008d6:	4308      	orrs	r0, r1
 80008d8:	0007      	movs	r7, r0
 80008da:	4663      	mov	r3, ip
 80008dc:	1e78      	subs	r0, r7, #1
 80008de:	4187      	sbcs	r7, r0
 80008e0:	431f      	orrs	r7, r3
 80008e2:	e769      	b.n	80007b8 <__aeabi_dadd+0x4e0>
 80008e4:	1887      	adds	r7, r0, r2
 80008e6:	4297      	cmp	r7, r2
 80008e8:	419b      	sbcs	r3, r3
 80008ea:	4441      	add	r1, r8
 80008ec:	425b      	negs	r3, r3
 80008ee:	18c9      	adds	r1, r1, r3
 80008f0:	0035      	movs	r5, r6
 80008f2:	e5a3      	b.n	800043c <__aeabi_dadd+0x164>
 80008f4:	003b      	movs	r3, r7
 80008f6:	4333      	orrs	r3, r6
 80008f8:	d0ce      	beq.n	8000898 <__aeabi_dadd+0x5c0>
 80008fa:	2207      	movs	r2, #7
 80008fc:	0031      	movs	r1, r6
 80008fe:	403a      	ands	r2, r7
 8000900:	e652      	b.n	80005a8 <__aeabi_dadd+0x2d0>
 8000902:	2300      	movs	r3, #0
 8000904:	001a      	movs	r2, r3
 8000906:	e5f4      	b.n	80004f2 <__aeabi_dadd+0x21a>
 8000908:	000007ff 	.word	0x000007ff
 800090c:	ff7fffff 	.word	0xff7fffff

08000910 <__aeabi_ddiv>:
 8000910:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000912:	4657      	mov	r7, sl
 8000914:	46de      	mov	lr, fp
 8000916:	464e      	mov	r6, r9
 8000918:	4645      	mov	r5, r8
 800091a:	b5e0      	push	{r5, r6, r7, lr}
 800091c:	4683      	mov	fp, r0
 800091e:	0007      	movs	r7, r0
 8000920:	030e      	lsls	r6, r1, #12
 8000922:	0048      	lsls	r0, r1, #1
 8000924:	b085      	sub	sp, #20
 8000926:	4692      	mov	sl, r2
 8000928:	001c      	movs	r4, r3
 800092a:	0b36      	lsrs	r6, r6, #12
 800092c:	0d40      	lsrs	r0, r0, #21
 800092e:	0fcd      	lsrs	r5, r1, #31
 8000930:	2800      	cmp	r0, #0
 8000932:	d100      	bne.n	8000936 <__aeabi_ddiv+0x26>
 8000934:	e09d      	b.n	8000a72 <__aeabi_ddiv+0x162>
 8000936:	4b95      	ldr	r3, [pc, #596]	; (8000b8c <__aeabi_ddiv+0x27c>)
 8000938:	4298      	cmp	r0, r3
 800093a:	d039      	beq.n	80009b0 <__aeabi_ddiv+0xa0>
 800093c:	2380      	movs	r3, #128	; 0x80
 800093e:	00f6      	lsls	r6, r6, #3
 8000940:	041b      	lsls	r3, r3, #16
 8000942:	431e      	orrs	r6, r3
 8000944:	4a92      	ldr	r2, [pc, #584]	; (8000b90 <__aeabi_ddiv+0x280>)
 8000946:	0f7b      	lsrs	r3, r7, #29
 8000948:	4333      	orrs	r3, r6
 800094a:	4699      	mov	r9, r3
 800094c:	4694      	mov	ip, r2
 800094e:	0003      	movs	r3, r0
 8000950:	4463      	add	r3, ip
 8000952:	9300      	str	r3, [sp, #0]
 8000954:	2300      	movs	r3, #0
 8000956:	2600      	movs	r6, #0
 8000958:	00ff      	lsls	r7, r7, #3
 800095a:	9302      	str	r3, [sp, #8]
 800095c:	0323      	lsls	r3, r4, #12
 800095e:	0b1b      	lsrs	r3, r3, #12
 8000960:	4698      	mov	r8, r3
 8000962:	0063      	lsls	r3, r4, #1
 8000964:	0fe4      	lsrs	r4, r4, #31
 8000966:	4652      	mov	r2, sl
 8000968:	0d5b      	lsrs	r3, r3, #21
 800096a:	9401      	str	r4, [sp, #4]
 800096c:	d100      	bne.n	8000970 <__aeabi_ddiv+0x60>
 800096e:	e0b3      	b.n	8000ad8 <__aeabi_ddiv+0x1c8>
 8000970:	4986      	ldr	r1, [pc, #536]	; (8000b8c <__aeabi_ddiv+0x27c>)
 8000972:	428b      	cmp	r3, r1
 8000974:	d100      	bne.n	8000978 <__aeabi_ddiv+0x68>
 8000976:	e09e      	b.n	8000ab6 <__aeabi_ddiv+0x1a6>
 8000978:	4642      	mov	r2, r8
 800097a:	00d1      	lsls	r1, r2, #3
 800097c:	2280      	movs	r2, #128	; 0x80
 800097e:	0412      	lsls	r2, r2, #16
 8000980:	430a      	orrs	r2, r1
 8000982:	4651      	mov	r1, sl
 8000984:	0f49      	lsrs	r1, r1, #29
 8000986:	4311      	orrs	r1, r2
 8000988:	468b      	mov	fp, r1
 800098a:	4981      	ldr	r1, [pc, #516]	; (8000b90 <__aeabi_ddiv+0x280>)
 800098c:	4652      	mov	r2, sl
 800098e:	468c      	mov	ip, r1
 8000990:	9900      	ldr	r1, [sp, #0]
 8000992:	4463      	add	r3, ip
 8000994:	1acb      	subs	r3, r1, r3
 8000996:	2100      	movs	r1, #0
 8000998:	00d2      	lsls	r2, r2, #3
 800099a:	9300      	str	r3, [sp, #0]
 800099c:	002b      	movs	r3, r5
 800099e:	4063      	eors	r3, r4
 80009a0:	469a      	mov	sl, r3
 80009a2:	2e0f      	cmp	r6, #15
 80009a4:	d900      	bls.n	80009a8 <__aeabi_ddiv+0x98>
 80009a6:	e105      	b.n	8000bb4 <__aeabi_ddiv+0x2a4>
 80009a8:	4b7a      	ldr	r3, [pc, #488]	; (8000b94 <__aeabi_ddiv+0x284>)
 80009aa:	00b6      	lsls	r6, r6, #2
 80009ac:	599b      	ldr	r3, [r3, r6]
 80009ae:	469f      	mov	pc, r3
 80009b0:	465b      	mov	r3, fp
 80009b2:	4333      	orrs	r3, r6
 80009b4:	4699      	mov	r9, r3
 80009b6:	d000      	beq.n	80009ba <__aeabi_ddiv+0xaa>
 80009b8:	e0b8      	b.n	8000b2c <__aeabi_ddiv+0x21c>
 80009ba:	2302      	movs	r3, #2
 80009bc:	2608      	movs	r6, #8
 80009be:	2700      	movs	r7, #0
 80009c0:	9000      	str	r0, [sp, #0]
 80009c2:	9302      	str	r3, [sp, #8]
 80009c4:	e7ca      	b.n	800095c <__aeabi_ddiv+0x4c>
 80009c6:	46cb      	mov	fp, r9
 80009c8:	003a      	movs	r2, r7
 80009ca:	9902      	ldr	r1, [sp, #8]
 80009cc:	9501      	str	r5, [sp, #4]
 80009ce:	9b01      	ldr	r3, [sp, #4]
 80009d0:	469a      	mov	sl, r3
 80009d2:	2902      	cmp	r1, #2
 80009d4:	d027      	beq.n	8000a26 <__aeabi_ddiv+0x116>
 80009d6:	2903      	cmp	r1, #3
 80009d8:	d100      	bne.n	80009dc <__aeabi_ddiv+0xcc>
 80009da:	e280      	b.n	8000ede <__aeabi_ddiv+0x5ce>
 80009dc:	2901      	cmp	r1, #1
 80009de:	d044      	beq.n	8000a6a <__aeabi_ddiv+0x15a>
 80009e0:	496d      	ldr	r1, [pc, #436]	; (8000b98 <__aeabi_ddiv+0x288>)
 80009e2:	9b00      	ldr	r3, [sp, #0]
 80009e4:	468c      	mov	ip, r1
 80009e6:	4463      	add	r3, ip
 80009e8:	001c      	movs	r4, r3
 80009ea:	2c00      	cmp	r4, #0
 80009ec:	dd38      	ble.n	8000a60 <__aeabi_ddiv+0x150>
 80009ee:	0753      	lsls	r3, r2, #29
 80009f0:	d000      	beq.n	80009f4 <__aeabi_ddiv+0xe4>
 80009f2:	e213      	b.n	8000e1c <__aeabi_ddiv+0x50c>
 80009f4:	08d2      	lsrs	r2, r2, #3
 80009f6:	465b      	mov	r3, fp
 80009f8:	01db      	lsls	r3, r3, #7
 80009fa:	d509      	bpl.n	8000a10 <__aeabi_ddiv+0x100>
 80009fc:	4659      	mov	r1, fp
 80009fe:	4b67      	ldr	r3, [pc, #412]	; (8000b9c <__aeabi_ddiv+0x28c>)
 8000a00:	4019      	ands	r1, r3
 8000a02:	468b      	mov	fp, r1
 8000a04:	2180      	movs	r1, #128	; 0x80
 8000a06:	00c9      	lsls	r1, r1, #3
 8000a08:	468c      	mov	ip, r1
 8000a0a:	9b00      	ldr	r3, [sp, #0]
 8000a0c:	4463      	add	r3, ip
 8000a0e:	001c      	movs	r4, r3
 8000a10:	4b63      	ldr	r3, [pc, #396]	; (8000ba0 <__aeabi_ddiv+0x290>)
 8000a12:	429c      	cmp	r4, r3
 8000a14:	dc07      	bgt.n	8000a26 <__aeabi_ddiv+0x116>
 8000a16:	465b      	mov	r3, fp
 8000a18:	0564      	lsls	r4, r4, #21
 8000a1a:	075f      	lsls	r7, r3, #29
 8000a1c:	025b      	lsls	r3, r3, #9
 8000a1e:	4317      	orrs	r7, r2
 8000a20:	0b1b      	lsrs	r3, r3, #12
 8000a22:	0d62      	lsrs	r2, r4, #21
 8000a24:	e002      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000a26:	2300      	movs	r3, #0
 8000a28:	2700      	movs	r7, #0
 8000a2a:	4a58      	ldr	r2, [pc, #352]	; (8000b8c <__aeabi_ddiv+0x27c>)
 8000a2c:	2100      	movs	r1, #0
 8000a2e:	031b      	lsls	r3, r3, #12
 8000a30:	0b1c      	lsrs	r4, r3, #12
 8000a32:	0d0b      	lsrs	r3, r1, #20
 8000a34:	051b      	lsls	r3, r3, #20
 8000a36:	4323      	orrs	r3, r4
 8000a38:	0514      	lsls	r4, r2, #20
 8000a3a:	4a5a      	ldr	r2, [pc, #360]	; (8000ba4 <__aeabi_ddiv+0x294>)
 8000a3c:	0038      	movs	r0, r7
 8000a3e:	4013      	ands	r3, r2
 8000a40:	431c      	orrs	r4, r3
 8000a42:	4653      	mov	r3, sl
 8000a44:	0064      	lsls	r4, r4, #1
 8000a46:	07db      	lsls	r3, r3, #31
 8000a48:	0864      	lsrs	r4, r4, #1
 8000a4a:	431c      	orrs	r4, r3
 8000a4c:	0021      	movs	r1, r4
 8000a4e:	b005      	add	sp, #20
 8000a50:	bc3c      	pop	{r2, r3, r4, r5}
 8000a52:	4690      	mov	r8, r2
 8000a54:	4699      	mov	r9, r3
 8000a56:	46a2      	mov	sl, r4
 8000a58:	46ab      	mov	fp, r5
 8000a5a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000a5c:	2201      	movs	r2, #1
 8000a5e:	4252      	negs	r2, r2
 8000a60:	2301      	movs	r3, #1
 8000a62:	1b1b      	subs	r3, r3, r4
 8000a64:	2b38      	cmp	r3, #56	; 0x38
 8000a66:	dc00      	bgt.n	8000a6a <__aeabi_ddiv+0x15a>
 8000a68:	e1ad      	b.n	8000dc6 <__aeabi_ddiv+0x4b6>
 8000a6a:	2200      	movs	r2, #0
 8000a6c:	2300      	movs	r3, #0
 8000a6e:	2700      	movs	r7, #0
 8000a70:	e7dc      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000a72:	465b      	mov	r3, fp
 8000a74:	4333      	orrs	r3, r6
 8000a76:	4699      	mov	r9, r3
 8000a78:	d05e      	beq.n	8000b38 <__aeabi_ddiv+0x228>
 8000a7a:	2e00      	cmp	r6, #0
 8000a7c:	d100      	bne.n	8000a80 <__aeabi_ddiv+0x170>
 8000a7e:	e18a      	b.n	8000d96 <__aeabi_ddiv+0x486>
 8000a80:	0030      	movs	r0, r6
 8000a82:	f001 f995 	bl	8001db0 <__clzsi2>
 8000a86:	0003      	movs	r3, r0
 8000a88:	3b0b      	subs	r3, #11
 8000a8a:	2b1c      	cmp	r3, #28
 8000a8c:	dd00      	ble.n	8000a90 <__aeabi_ddiv+0x180>
 8000a8e:	e17b      	b.n	8000d88 <__aeabi_ddiv+0x478>
 8000a90:	221d      	movs	r2, #29
 8000a92:	1ad3      	subs	r3, r2, r3
 8000a94:	465a      	mov	r2, fp
 8000a96:	0001      	movs	r1, r0
 8000a98:	40da      	lsrs	r2, r3
 8000a9a:	3908      	subs	r1, #8
 8000a9c:	408e      	lsls	r6, r1
 8000a9e:	0013      	movs	r3, r2
 8000aa0:	465f      	mov	r7, fp
 8000aa2:	4333      	orrs	r3, r6
 8000aa4:	4699      	mov	r9, r3
 8000aa6:	408f      	lsls	r7, r1
 8000aa8:	4b3f      	ldr	r3, [pc, #252]	; (8000ba8 <__aeabi_ddiv+0x298>)
 8000aaa:	2600      	movs	r6, #0
 8000aac:	1a1b      	subs	r3, r3, r0
 8000aae:	9300      	str	r3, [sp, #0]
 8000ab0:	2300      	movs	r3, #0
 8000ab2:	9302      	str	r3, [sp, #8]
 8000ab4:	e752      	b.n	800095c <__aeabi_ddiv+0x4c>
 8000ab6:	4641      	mov	r1, r8
 8000ab8:	4653      	mov	r3, sl
 8000aba:	430b      	orrs	r3, r1
 8000abc:	493b      	ldr	r1, [pc, #236]	; (8000bac <__aeabi_ddiv+0x29c>)
 8000abe:	469b      	mov	fp, r3
 8000ac0:	468c      	mov	ip, r1
 8000ac2:	9b00      	ldr	r3, [sp, #0]
 8000ac4:	4463      	add	r3, ip
 8000ac6:	9300      	str	r3, [sp, #0]
 8000ac8:	465b      	mov	r3, fp
 8000aca:	2b00      	cmp	r3, #0
 8000acc:	d13b      	bne.n	8000b46 <__aeabi_ddiv+0x236>
 8000ace:	2302      	movs	r3, #2
 8000ad0:	2200      	movs	r2, #0
 8000ad2:	431e      	orrs	r6, r3
 8000ad4:	2102      	movs	r1, #2
 8000ad6:	e761      	b.n	800099c <__aeabi_ddiv+0x8c>
 8000ad8:	4643      	mov	r3, r8
 8000ada:	4313      	orrs	r3, r2
 8000adc:	469b      	mov	fp, r3
 8000ade:	d037      	beq.n	8000b50 <__aeabi_ddiv+0x240>
 8000ae0:	4643      	mov	r3, r8
 8000ae2:	2b00      	cmp	r3, #0
 8000ae4:	d100      	bne.n	8000ae8 <__aeabi_ddiv+0x1d8>
 8000ae6:	e162      	b.n	8000dae <__aeabi_ddiv+0x49e>
 8000ae8:	4640      	mov	r0, r8
 8000aea:	f001 f961 	bl	8001db0 <__clzsi2>
 8000aee:	0003      	movs	r3, r0
 8000af0:	3b0b      	subs	r3, #11
 8000af2:	2b1c      	cmp	r3, #28
 8000af4:	dd00      	ble.n	8000af8 <__aeabi_ddiv+0x1e8>
 8000af6:	e153      	b.n	8000da0 <__aeabi_ddiv+0x490>
 8000af8:	0002      	movs	r2, r0
 8000afa:	4641      	mov	r1, r8
 8000afc:	3a08      	subs	r2, #8
 8000afe:	4091      	lsls	r1, r2
 8000b00:	4688      	mov	r8, r1
 8000b02:	211d      	movs	r1, #29
 8000b04:	1acb      	subs	r3, r1, r3
 8000b06:	4651      	mov	r1, sl
 8000b08:	40d9      	lsrs	r1, r3
 8000b0a:	000b      	movs	r3, r1
 8000b0c:	4641      	mov	r1, r8
 8000b0e:	430b      	orrs	r3, r1
 8000b10:	469b      	mov	fp, r3
 8000b12:	4653      	mov	r3, sl
 8000b14:	4093      	lsls	r3, r2
 8000b16:	001a      	movs	r2, r3
 8000b18:	9b00      	ldr	r3, [sp, #0]
 8000b1a:	4925      	ldr	r1, [pc, #148]	; (8000bb0 <__aeabi_ddiv+0x2a0>)
 8000b1c:	469c      	mov	ip, r3
 8000b1e:	4460      	add	r0, ip
 8000b20:	0003      	movs	r3, r0
 8000b22:	468c      	mov	ip, r1
 8000b24:	4463      	add	r3, ip
 8000b26:	9300      	str	r3, [sp, #0]
 8000b28:	2100      	movs	r1, #0
 8000b2a:	e737      	b.n	800099c <__aeabi_ddiv+0x8c>
 8000b2c:	2303      	movs	r3, #3
 8000b2e:	46b1      	mov	r9, r6
 8000b30:	9000      	str	r0, [sp, #0]
 8000b32:	260c      	movs	r6, #12
 8000b34:	9302      	str	r3, [sp, #8]
 8000b36:	e711      	b.n	800095c <__aeabi_ddiv+0x4c>
 8000b38:	2300      	movs	r3, #0
 8000b3a:	9300      	str	r3, [sp, #0]
 8000b3c:	3301      	adds	r3, #1
 8000b3e:	2604      	movs	r6, #4
 8000b40:	2700      	movs	r7, #0
 8000b42:	9302      	str	r3, [sp, #8]
 8000b44:	e70a      	b.n	800095c <__aeabi_ddiv+0x4c>
 8000b46:	2303      	movs	r3, #3
 8000b48:	46c3      	mov	fp, r8
 8000b4a:	431e      	orrs	r6, r3
 8000b4c:	2103      	movs	r1, #3
 8000b4e:	e725      	b.n	800099c <__aeabi_ddiv+0x8c>
 8000b50:	3301      	adds	r3, #1
 8000b52:	431e      	orrs	r6, r3
 8000b54:	2200      	movs	r2, #0
 8000b56:	2101      	movs	r1, #1
 8000b58:	e720      	b.n	800099c <__aeabi_ddiv+0x8c>
 8000b5a:	2300      	movs	r3, #0
 8000b5c:	469a      	mov	sl, r3
 8000b5e:	2380      	movs	r3, #128	; 0x80
 8000b60:	2700      	movs	r7, #0
 8000b62:	031b      	lsls	r3, r3, #12
 8000b64:	4a09      	ldr	r2, [pc, #36]	; (8000b8c <__aeabi_ddiv+0x27c>)
 8000b66:	e761      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000b68:	2380      	movs	r3, #128	; 0x80
 8000b6a:	4649      	mov	r1, r9
 8000b6c:	031b      	lsls	r3, r3, #12
 8000b6e:	4219      	tst	r1, r3
 8000b70:	d100      	bne.n	8000b74 <__aeabi_ddiv+0x264>
 8000b72:	e0e2      	b.n	8000d3a <__aeabi_ddiv+0x42a>
 8000b74:	4659      	mov	r1, fp
 8000b76:	4219      	tst	r1, r3
 8000b78:	d000      	beq.n	8000b7c <__aeabi_ddiv+0x26c>
 8000b7a:	e0de      	b.n	8000d3a <__aeabi_ddiv+0x42a>
 8000b7c:	430b      	orrs	r3, r1
 8000b7e:	031b      	lsls	r3, r3, #12
 8000b80:	0017      	movs	r7, r2
 8000b82:	0b1b      	lsrs	r3, r3, #12
 8000b84:	46a2      	mov	sl, r4
 8000b86:	4a01      	ldr	r2, [pc, #4]	; (8000b8c <__aeabi_ddiv+0x27c>)
 8000b88:	e750      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000b8a:	46c0      	nop			; (mov r8, r8)
 8000b8c:	000007ff 	.word	0x000007ff
 8000b90:	fffffc01 	.word	0xfffffc01
 8000b94:	08004430 	.word	0x08004430
 8000b98:	000003ff 	.word	0x000003ff
 8000b9c:	feffffff 	.word	0xfeffffff
 8000ba0:	000007fe 	.word	0x000007fe
 8000ba4:	800fffff 	.word	0x800fffff
 8000ba8:	fffffc0d 	.word	0xfffffc0d
 8000bac:	fffff801 	.word	0xfffff801
 8000bb0:	000003f3 	.word	0x000003f3
 8000bb4:	45d9      	cmp	r9, fp
 8000bb6:	d900      	bls.n	8000bba <__aeabi_ddiv+0x2aa>
 8000bb8:	e0cb      	b.n	8000d52 <__aeabi_ddiv+0x442>
 8000bba:	d100      	bne.n	8000bbe <__aeabi_ddiv+0x2ae>
 8000bbc:	e0c6      	b.n	8000d4c <__aeabi_ddiv+0x43c>
 8000bbe:	003c      	movs	r4, r7
 8000bc0:	4648      	mov	r0, r9
 8000bc2:	2700      	movs	r7, #0
 8000bc4:	9b00      	ldr	r3, [sp, #0]
 8000bc6:	3b01      	subs	r3, #1
 8000bc8:	9300      	str	r3, [sp, #0]
 8000bca:	465b      	mov	r3, fp
 8000bcc:	0e16      	lsrs	r6, r2, #24
 8000bce:	021b      	lsls	r3, r3, #8
 8000bd0:	431e      	orrs	r6, r3
 8000bd2:	0213      	lsls	r3, r2, #8
 8000bd4:	4698      	mov	r8, r3
 8000bd6:	0433      	lsls	r3, r6, #16
 8000bd8:	0c1b      	lsrs	r3, r3, #16
 8000bda:	4699      	mov	r9, r3
 8000bdc:	0c31      	lsrs	r1, r6, #16
 8000bde:	9101      	str	r1, [sp, #4]
 8000be0:	f7ff fb18 	bl	8000214 <__aeabi_uidivmod>
 8000be4:	464a      	mov	r2, r9
 8000be6:	4342      	muls	r2, r0
 8000be8:	040b      	lsls	r3, r1, #16
 8000bea:	0c21      	lsrs	r1, r4, #16
 8000bec:	0005      	movs	r5, r0
 8000bee:	4319      	orrs	r1, r3
 8000bf0:	428a      	cmp	r2, r1
 8000bf2:	d907      	bls.n	8000c04 <__aeabi_ddiv+0x2f4>
 8000bf4:	1989      	adds	r1, r1, r6
 8000bf6:	3d01      	subs	r5, #1
 8000bf8:	428e      	cmp	r6, r1
 8000bfa:	d803      	bhi.n	8000c04 <__aeabi_ddiv+0x2f4>
 8000bfc:	428a      	cmp	r2, r1
 8000bfe:	d901      	bls.n	8000c04 <__aeabi_ddiv+0x2f4>
 8000c00:	1e85      	subs	r5, r0, #2
 8000c02:	1989      	adds	r1, r1, r6
 8000c04:	1a88      	subs	r0, r1, r2
 8000c06:	9901      	ldr	r1, [sp, #4]
 8000c08:	f7ff fb04 	bl	8000214 <__aeabi_uidivmod>
 8000c0c:	0409      	lsls	r1, r1, #16
 8000c0e:	468c      	mov	ip, r1
 8000c10:	464a      	mov	r2, r9
 8000c12:	0421      	lsls	r1, r4, #16
 8000c14:	4664      	mov	r4, ip
 8000c16:	4342      	muls	r2, r0
 8000c18:	0c09      	lsrs	r1, r1, #16
 8000c1a:	0003      	movs	r3, r0
 8000c1c:	4321      	orrs	r1, r4
 8000c1e:	428a      	cmp	r2, r1
 8000c20:	d904      	bls.n	8000c2c <__aeabi_ddiv+0x31c>
 8000c22:	1989      	adds	r1, r1, r6
 8000c24:	3b01      	subs	r3, #1
 8000c26:	428e      	cmp	r6, r1
 8000c28:	d800      	bhi.n	8000c2c <__aeabi_ddiv+0x31c>
 8000c2a:	e0f1      	b.n	8000e10 <__aeabi_ddiv+0x500>
 8000c2c:	042d      	lsls	r5, r5, #16
 8000c2e:	431d      	orrs	r5, r3
 8000c30:	46ab      	mov	fp, r5
 8000c32:	4643      	mov	r3, r8
 8000c34:	1a89      	subs	r1, r1, r2
 8000c36:	4642      	mov	r2, r8
 8000c38:	0c28      	lsrs	r0, r5, #16
 8000c3a:	0412      	lsls	r2, r2, #16
 8000c3c:	0c1d      	lsrs	r5, r3, #16
 8000c3e:	465b      	mov	r3, fp
 8000c40:	0c14      	lsrs	r4, r2, #16
 8000c42:	0022      	movs	r2, r4
 8000c44:	041b      	lsls	r3, r3, #16
 8000c46:	0c1b      	lsrs	r3, r3, #16
 8000c48:	435a      	muls	r2, r3
 8000c4a:	9403      	str	r4, [sp, #12]
 8000c4c:	436b      	muls	r3, r5
 8000c4e:	4344      	muls	r4, r0
 8000c50:	9502      	str	r5, [sp, #8]
 8000c52:	4368      	muls	r0, r5
 8000c54:	191b      	adds	r3, r3, r4
 8000c56:	0c15      	lsrs	r5, r2, #16
 8000c58:	18eb      	adds	r3, r5, r3
 8000c5a:	429c      	cmp	r4, r3
 8000c5c:	d903      	bls.n	8000c66 <__aeabi_ddiv+0x356>
 8000c5e:	2480      	movs	r4, #128	; 0x80
 8000c60:	0264      	lsls	r4, r4, #9
 8000c62:	46a4      	mov	ip, r4
 8000c64:	4460      	add	r0, ip
 8000c66:	0c1c      	lsrs	r4, r3, #16
 8000c68:	0415      	lsls	r5, r2, #16
 8000c6a:	041b      	lsls	r3, r3, #16
 8000c6c:	0c2d      	lsrs	r5, r5, #16
 8000c6e:	1820      	adds	r0, r4, r0
 8000c70:	195d      	adds	r5, r3, r5
 8000c72:	4281      	cmp	r1, r0
 8000c74:	d377      	bcc.n	8000d66 <__aeabi_ddiv+0x456>
 8000c76:	d073      	beq.n	8000d60 <__aeabi_ddiv+0x450>
 8000c78:	1a0c      	subs	r4, r1, r0
 8000c7a:	4aa2      	ldr	r2, [pc, #648]	; (8000f04 <__aeabi_ddiv+0x5f4>)
 8000c7c:	1b7d      	subs	r5, r7, r5
 8000c7e:	42af      	cmp	r7, r5
 8000c80:	41bf      	sbcs	r7, r7
 8000c82:	4694      	mov	ip, r2
 8000c84:	9b00      	ldr	r3, [sp, #0]
 8000c86:	427f      	negs	r7, r7
 8000c88:	4463      	add	r3, ip
 8000c8a:	1be0      	subs	r0, r4, r7
 8000c8c:	001c      	movs	r4, r3
 8000c8e:	4286      	cmp	r6, r0
 8000c90:	d100      	bne.n	8000c94 <__aeabi_ddiv+0x384>
 8000c92:	e0db      	b.n	8000e4c <__aeabi_ddiv+0x53c>
 8000c94:	9901      	ldr	r1, [sp, #4]
 8000c96:	f7ff fabd 	bl	8000214 <__aeabi_uidivmod>
 8000c9a:	464a      	mov	r2, r9
 8000c9c:	4342      	muls	r2, r0
 8000c9e:	040b      	lsls	r3, r1, #16
 8000ca0:	0c29      	lsrs	r1, r5, #16
 8000ca2:	0007      	movs	r7, r0
 8000ca4:	4319      	orrs	r1, r3
 8000ca6:	428a      	cmp	r2, r1
 8000ca8:	d907      	bls.n	8000cba <__aeabi_ddiv+0x3aa>
 8000caa:	1989      	adds	r1, r1, r6
 8000cac:	3f01      	subs	r7, #1
 8000cae:	428e      	cmp	r6, r1
 8000cb0:	d803      	bhi.n	8000cba <__aeabi_ddiv+0x3aa>
 8000cb2:	428a      	cmp	r2, r1
 8000cb4:	d901      	bls.n	8000cba <__aeabi_ddiv+0x3aa>
 8000cb6:	1e87      	subs	r7, r0, #2
 8000cb8:	1989      	adds	r1, r1, r6
 8000cba:	1a88      	subs	r0, r1, r2
 8000cbc:	9901      	ldr	r1, [sp, #4]
 8000cbe:	f7ff faa9 	bl	8000214 <__aeabi_uidivmod>
 8000cc2:	0409      	lsls	r1, r1, #16
 8000cc4:	464a      	mov	r2, r9
 8000cc6:	4689      	mov	r9, r1
 8000cc8:	0429      	lsls	r1, r5, #16
 8000cca:	464d      	mov	r5, r9
 8000ccc:	4342      	muls	r2, r0
 8000cce:	0c09      	lsrs	r1, r1, #16
 8000cd0:	0003      	movs	r3, r0
 8000cd2:	4329      	orrs	r1, r5
 8000cd4:	428a      	cmp	r2, r1
 8000cd6:	d907      	bls.n	8000ce8 <__aeabi_ddiv+0x3d8>
 8000cd8:	1989      	adds	r1, r1, r6
 8000cda:	3b01      	subs	r3, #1
 8000cdc:	428e      	cmp	r6, r1
 8000cde:	d803      	bhi.n	8000ce8 <__aeabi_ddiv+0x3d8>
 8000ce0:	428a      	cmp	r2, r1
 8000ce2:	d901      	bls.n	8000ce8 <__aeabi_ddiv+0x3d8>
 8000ce4:	1e83      	subs	r3, r0, #2
 8000ce6:	1989      	adds	r1, r1, r6
 8000ce8:	043f      	lsls	r7, r7, #16
 8000cea:	1a89      	subs	r1, r1, r2
 8000cec:	003a      	movs	r2, r7
 8000cee:	9f03      	ldr	r7, [sp, #12]
 8000cf0:	431a      	orrs	r2, r3
 8000cf2:	0038      	movs	r0, r7
 8000cf4:	0413      	lsls	r3, r2, #16
 8000cf6:	0c1b      	lsrs	r3, r3, #16
 8000cf8:	4358      	muls	r0, r3
 8000cfa:	4681      	mov	r9, r0
 8000cfc:	9802      	ldr	r0, [sp, #8]
 8000cfe:	0c15      	lsrs	r5, r2, #16
 8000d00:	436f      	muls	r7, r5
 8000d02:	4343      	muls	r3, r0
 8000d04:	4345      	muls	r5, r0
 8000d06:	4648      	mov	r0, r9
 8000d08:	0c00      	lsrs	r0, r0, #16
 8000d0a:	4684      	mov	ip, r0
 8000d0c:	19db      	adds	r3, r3, r7
 8000d0e:	4463      	add	r3, ip
 8000d10:	429f      	cmp	r7, r3
 8000d12:	d903      	bls.n	8000d1c <__aeabi_ddiv+0x40c>
 8000d14:	2080      	movs	r0, #128	; 0x80
 8000d16:	0240      	lsls	r0, r0, #9
 8000d18:	4684      	mov	ip, r0
 8000d1a:	4465      	add	r5, ip
 8000d1c:	4648      	mov	r0, r9
 8000d1e:	0c1f      	lsrs	r7, r3, #16
 8000d20:	0400      	lsls	r0, r0, #16
 8000d22:	041b      	lsls	r3, r3, #16
 8000d24:	0c00      	lsrs	r0, r0, #16
 8000d26:	197d      	adds	r5, r7, r5
 8000d28:	1818      	adds	r0, r3, r0
 8000d2a:	42a9      	cmp	r1, r5
 8000d2c:	d200      	bcs.n	8000d30 <__aeabi_ddiv+0x420>
 8000d2e:	e084      	b.n	8000e3a <__aeabi_ddiv+0x52a>
 8000d30:	d100      	bne.n	8000d34 <__aeabi_ddiv+0x424>
 8000d32:	e07f      	b.n	8000e34 <__aeabi_ddiv+0x524>
 8000d34:	2301      	movs	r3, #1
 8000d36:	431a      	orrs	r2, r3
 8000d38:	e657      	b.n	80009ea <__aeabi_ddiv+0xda>
 8000d3a:	2380      	movs	r3, #128	; 0x80
 8000d3c:	464a      	mov	r2, r9
 8000d3e:	031b      	lsls	r3, r3, #12
 8000d40:	4313      	orrs	r3, r2
 8000d42:	031b      	lsls	r3, r3, #12
 8000d44:	0b1b      	lsrs	r3, r3, #12
 8000d46:	46aa      	mov	sl, r5
 8000d48:	4a6f      	ldr	r2, [pc, #444]	; (8000f08 <__aeabi_ddiv+0x5f8>)
 8000d4a:	e66f      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000d4c:	42ba      	cmp	r2, r7
 8000d4e:	d900      	bls.n	8000d52 <__aeabi_ddiv+0x442>
 8000d50:	e735      	b.n	8000bbe <__aeabi_ddiv+0x2ae>
 8000d52:	464b      	mov	r3, r9
 8000d54:	07dc      	lsls	r4, r3, #31
 8000d56:	0858      	lsrs	r0, r3, #1
 8000d58:	087b      	lsrs	r3, r7, #1
 8000d5a:	431c      	orrs	r4, r3
 8000d5c:	07ff      	lsls	r7, r7, #31
 8000d5e:	e734      	b.n	8000bca <__aeabi_ddiv+0x2ba>
 8000d60:	2400      	movs	r4, #0
 8000d62:	42af      	cmp	r7, r5
 8000d64:	d289      	bcs.n	8000c7a <__aeabi_ddiv+0x36a>
 8000d66:	4447      	add	r7, r8
 8000d68:	4547      	cmp	r7, r8
 8000d6a:	41a4      	sbcs	r4, r4
 8000d6c:	465b      	mov	r3, fp
 8000d6e:	4264      	negs	r4, r4
 8000d70:	19a4      	adds	r4, r4, r6
 8000d72:	1864      	adds	r4, r4, r1
 8000d74:	3b01      	subs	r3, #1
 8000d76:	42a6      	cmp	r6, r4
 8000d78:	d21e      	bcs.n	8000db8 <__aeabi_ddiv+0x4a8>
 8000d7a:	42a0      	cmp	r0, r4
 8000d7c:	d86d      	bhi.n	8000e5a <__aeabi_ddiv+0x54a>
 8000d7e:	d100      	bne.n	8000d82 <__aeabi_ddiv+0x472>
 8000d80:	e0b6      	b.n	8000ef0 <__aeabi_ddiv+0x5e0>
 8000d82:	1a24      	subs	r4, r4, r0
 8000d84:	469b      	mov	fp, r3
 8000d86:	e778      	b.n	8000c7a <__aeabi_ddiv+0x36a>
 8000d88:	0003      	movs	r3, r0
 8000d8a:	465a      	mov	r2, fp
 8000d8c:	3b28      	subs	r3, #40	; 0x28
 8000d8e:	409a      	lsls	r2, r3
 8000d90:	2700      	movs	r7, #0
 8000d92:	4691      	mov	r9, r2
 8000d94:	e688      	b.n	8000aa8 <__aeabi_ddiv+0x198>
 8000d96:	4658      	mov	r0, fp
 8000d98:	f001 f80a 	bl	8001db0 <__clzsi2>
 8000d9c:	3020      	adds	r0, #32
 8000d9e:	e672      	b.n	8000a86 <__aeabi_ddiv+0x176>
 8000da0:	0003      	movs	r3, r0
 8000da2:	4652      	mov	r2, sl
 8000da4:	3b28      	subs	r3, #40	; 0x28
 8000da6:	409a      	lsls	r2, r3
 8000da8:	4693      	mov	fp, r2
 8000daa:	2200      	movs	r2, #0
 8000dac:	e6b4      	b.n	8000b18 <__aeabi_ddiv+0x208>
 8000dae:	4650      	mov	r0, sl
 8000db0:	f000 fffe 	bl	8001db0 <__clzsi2>
 8000db4:	3020      	adds	r0, #32
 8000db6:	e69a      	b.n	8000aee <__aeabi_ddiv+0x1de>
 8000db8:	42a6      	cmp	r6, r4
 8000dba:	d1e2      	bne.n	8000d82 <__aeabi_ddiv+0x472>
 8000dbc:	45b8      	cmp	r8, r7
 8000dbe:	d9dc      	bls.n	8000d7a <__aeabi_ddiv+0x46a>
 8000dc0:	1a34      	subs	r4, r6, r0
 8000dc2:	469b      	mov	fp, r3
 8000dc4:	e759      	b.n	8000c7a <__aeabi_ddiv+0x36a>
 8000dc6:	2b1f      	cmp	r3, #31
 8000dc8:	dc65      	bgt.n	8000e96 <__aeabi_ddiv+0x586>
 8000dca:	4c50      	ldr	r4, [pc, #320]	; (8000f0c <__aeabi_ddiv+0x5fc>)
 8000dcc:	9900      	ldr	r1, [sp, #0]
 8000dce:	46a4      	mov	ip, r4
 8000dd0:	465c      	mov	r4, fp
 8000dd2:	4461      	add	r1, ip
 8000dd4:	0008      	movs	r0, r1
 8000dd6:	408c      	lsls	r4, r1
 8000dd8:	0011      	movs	r1, r2
 8000dda:	4082      	lsls	r2, r0
 8000ddc:	40d9      	lsrs	r1, r3
 8000dde:	1e50      	subs	r0, r2, #1
 8000de0:	4182      	sbcs	r2, r0
 8000de2:	430c      	orrs	r4, r1
 8000de4:	4314      	orrs	r4, r2
 8000de6:	465a      	mov	r2, fp
 8000de8:	40da      	lsrs	r2, r3
 8000dea:	0013      	movs	r3, r2
 8000dec:	0762      	lsls	r2, r4, #29
 8000dee:	d009      	beq.n	8000e04 <__aeabi_ddiv+0x4f4>
 8000df0:	220f      	movs	r2, #15
 8000df2:	4022      	ands	r2, r4
 8000df4:	2a04      	cmp	r2, #4
 8000df6:	d005      	beq.n	8000e04 <__aeabi_ddiv+0x4f4>
 8000df8:	0022      	movs	r2, r4
 8000dfa:	1d14      	adds	r4, r2, #4
 8000dfc:	4294      	cmp	r4, r2
 8000dfe:	4189      	sbcs	r1, r1
 8000e00:	4249      	negs	r1, r1
 8000e02:	185b      	adds	r3, r3, r1
 8000e04:	021a      	lsls	r2, r3, #8
 8000e06:	d562      	bpl.n	8000ece <__aeabi_ddiv+0x5be>
 8000e08:	2201      	movs	r2, #1
 8000e0a:	2300      	movs	r3, #0
 8000e0c:	2700      	movs	r7, #0
 8000e0e:	e60d      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000e10:	428a      	cmp	r2, r1
 8000e12:	d800      	bhi.n	8000e16 <__aeabi_ddiv+0x506>
 8000e14:	e70a      	b.n	8000c2c <__aeabi_ddiv+0x31c>
 8000e16:	1e83      	subs	r3, r0, #2
 8000e18:	1989      	adds	r1, r1, r6
 8000e1a:	e707      	b.n	8000c2c <__aeabi_ddiv+0x31c>
 8000e1c:	230f      	movs	r3, #15
 8000e1e:	4013      	ands	r3, r2
 8000e20:	2b04      	cmp	r3, #4
 8000e22:	d100      	bne.n	8000e26 <__aeabi_ddiv+0x516>
 8000e24:	e5e6      	b.n	80009f4 <__aeabi_ddiv+0xe4>
 8000e26:	1d17      	adds	r7, r2, #4
 8000e28:	4297      	cmp	r7, r2
 8000e2a:	4192      	sbcs	r2, r2
 8000e2c:	4253      	negs	r3, r2
 8000e2e:	449b      	add	fp, r3
 8000e30:	08fa      	lsrs	r2, r7, #3
 8000e32:	e5e0      	b.n	80009f6 <__aeabi_ddiv+0xe6>
 8000e34:	2800      	cmp	r0, #0
 8000e36:	d100      	bne.n	8000e3a <__aeabi_ddiv+0x52a>
 8000e38:	e5d7      	b.n	80009ea <__aeabi_ddiv+0xda>
 8000e3a:	1871      	adds	r1, r6, r1
 8000e3c:	1e53      	subs	r3, r2, #1
 8000e3e:	42b1      	cmp	r1, r6
 8000e40:	d327      	bcc.n	8000e92 <__aeabi_ddiv+0x582>
 8000e42:	42a9      	cmp	r1, r5
 8000e44:	d315      	bcc.n	8000e72 <__aeabi_ddiv+0x562>
 8000e46:	d058      	beq.n	8000efa <__aeabi_ddiv+0x5ea>
 8000e48:	001a      	movs	r2, r3
 8000e4a:	e773      	b.n	8000d34 <__aeabi_ddiv+0x424>
 8000e4c:	2b00      	cmp	r3, #0
 8000e4e:	dc00      	bgt.n	8000e52 <__aeabi_ddiv+0x542>
 8000e50:	e604      	b.n	8000a5c <__aeabi_ddiv+0x14c>
 8000e52:	2301      	movs	r3, #1
 8000e54:	2200      	movs	r2, #0
 8000e56:	449b      	add	fp, r3
 8000e58:	e5cd      	b.n	80009f6 <__aeabi_ddiv+0xe6>
 8000e5a:	2302      	movs	r3, #2
 8000e5c:	4447      	add	r7, r8
 8000e5e:	4547      	cmp	r7, r8
 8000e60:	4189      	sbcs	r1, r1
 8000e62:	425b      	negs	r3, r3
 8000e64:	469c      	mov	ip, r3
 8000e66:	4249      	negs	r1, r1
 8000e68:	1989      	adds	r1, r1, r6
 8000e6a:	190c      	adds	r4, r1, r4
 8000e6c:	44e3      	add	fp, ip
 8000e6e:	1a24      	subs	r4, r4, r0
 8000e70:	e703      	b.n	8000c7a <__aeabi_ddiv+0x36a>
 8000e72:	4643      	mov	r3, r8
 8000e74:	005f      	lsls	r7, r3, #1
 8000e76:	4547      	cmp	r7, r8
 8000e78:	419b      	sbcs	r3, r3
 8000e7a:	46b8      	mov	r8, r7
 8000e7c:	425b      	negs	r3, r3
 8000e7e:	199e      	adds	r6, r3, r6
 8000e80:	3a02      	subs	r2, #2
 8000e82:	1989      	adds	r1, r1, r6
 8000e84:	42a9      	cmp	r1, r5
 8000e86:	d000      	beq.n	8000e8a <__aeabi_ddiv+0x57a>
 8000e88:	e754      	b.n	8000d34 <__aeabi_ddiv+0x424>
 8000e8a:	4540      	cmp	r0, r8
 8000e8c:	d000      	beq.n	8000e90 <__aeabi_ddiv+0x580>
 8000e8e:	e751      	b.n	8000d34 <__aeabi_ddiv+0x424>
 8000e90:	e5ab      	b.n	80009ea <__aeabi_ddiv+0xda>
 8000e92:	001a      	movs	r2, r3
 8000e94:	e7f6      	b.n	8000e84 <__aeabi_ddiv+0x574>
 8000e96:	211f      	movs	r1, #31
 8000e98:	465f      	mov	r7, fp
 8000e9a:	4249      	negs	r1, r1
 8000e9c:	1b0c      	subs	r4, r1, r4
 8000e9e:	40e7      	lsrs	r7, r4
 8000ea0:	2b20      	cmp	r3, #32
 8000ea2:	d007      	beq.n	8000eb4 <__aeabi_ddiv+0x5a4>
 8000ea4:	491a      	ldr	r1, [pc, #104]	; (8000f10 <__aeabi_ddiv+0x600>)
 8000ea6:	9b00      	ldr	r3, [sp, #0]
 8000ea8:	468c      	mov	ip, r1
 8000eaa:	4463      	add	r3, ip
 8000eac:	0018      	movs	r0, r3
 8000eae:	465b      	mov	r3, fp
 8000eb0:	4083      	lsls	r3, r0
 8000eb2:	431a      	orrs	r2, r3
 8000eb4:	1e50      	subs	r0, r2, #1
 8000eb6:	4182      	sbcs	r2, r0
 8000eb8:	433a      	orrs	r2, r7
 8000eba:	2707      	movs	r7, #7
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	4017      	ands	r7, r2
 8000ec0:	d009      	beq.n	8000ed6 <__aeabi_ddiv+0x5c6>
 8000ec2:	210f      	movs	r1, #15
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	4011      	ands	r1, r2
 8000ec8:	0014      	movs	r4, r2
 8000eca:	2904      	cmp	r1, #4
 8000ecc:	d195      	bne.n	8000dfa <__aeabi_ddiv+0x4ea>
 8000ece:	0022      	movs	r2, r4
 8000ed0:	075f      	lsls	r7, r3, #29
 8000ed2:	025b      	lsls	r3, r3, #9
 8000ed4:	0b1b      	lsrs	r3, r3, #12
 8000ed6:	08d2      	lsrs	r2, r2, #3
 8000ed8:	4317      	orrs	r7, r2
 8000eda:	2200      	movs	r2, #0
 8000edc:	e5a6      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000ede:	2380      	movs	r3, #128	; 0x80
 8000ee0:	4659      	mov	r1, fp
 8000ee2:	031b      	lsls	r3, r3, #12
 8000ee4:	430b      	orrs	r3, r1
 8000ee6:	031b      	lsls	r3, r3, #12
 8000ee8:	0017      	movs	r7, r2
 8000eea:	0b1b      	lsrs	r3, r3, #12
 8000eec:	4a06      	ldr	r2, [pc, #24]	; (8000f08 <__aeabi_ddiv+0x5f8>)
 8000eee:	e59d      	b.n	8000a2c <__aeabi_ddiv+0x11c>
 8000ef0:	42bd      	cmp	r5, r7
 8000ef2:	d8b2      	bhi.n	8000e5a <__aeabi_ddiv+0x54a>
 8000ef4:	469b      	mov	fp, r3
 8000ef6:	2400      	movs	r4, #0
 8000ef8:	e6bf      	b.n	8000c7a <__aeabi_ddiv+0x36a>
 8000efa:	4580      	cmp	r8, r0
 8000efc:	d3b9      	bcc.n	8000e72 <__aeabi_ddiv+0x562>
 8000efe:	001a      	movs	r2, r3
 8000f00:	e7c3      	b.n	8000e8a <__aeabi_ddiv+0x57a>
 8000f02:	46c0      	nop			; (mov r8, r8)
 8000f04:	000003ff 	.word	0x000003ff
 8000f08:	000007ff 	.word	0x000007ff
 8000f0c:	0000041e 	.word	0x0000041e
 8000f10:	0000043e 	.word	0x0000043e

08000f14 <__eqdf2>:
 8000f14:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f16:	464f      	mov	r7, r9
 8000f18:	4646      	mov	r6, r8
 8000f1a:	46d6      	mov	lr, sl
 8000f1c:	4684      	mov	ip, r0
 8000f1e:	b5c0      	push	{r6, r7, lr}
 8000f20:	4680      	mov	r8, r0
 8000f22:	4e19      	ldr	r6, [pc, #100]	; (8000f88 <__eqdf2+0x74>)
 8000f24:	0318      	lsls	r0, r3, #12
 8000f26:	030f      	lsls	r7, r1, #12
 8000f28:	004d      	lsls	r5, r1, #1
 8000f2a:	0b00      	lsrs	r0, r0, #12
 8000f2c:	005c      	lsls	r4, r3, #1
 8000f2e:	4682      	mov	sl, r0
 8000f30:	0b3f      	lsrs	r7, r7, #12
 8000f32:	0d6d      	lsrs	r5, r5, #21
 8000f34:	0fc9      	lsrs	r1, r1, #31
 8000f36:	4691      	mov	r9, r2
 8000f38:	0d64      	lsrs	r4, r4, #21
 8000f3a:	0fdb      	lsrs	r3, r3, #31
 8000f3c:	2001      	movs	r0, #1
 8000f3e:	42b5      	cmp	r5, r6
 8000f40:	d00a      	beq.n	8000f58 <__eqdf2+0x44>
 8000f42:	42b4      	cmp	r4, r6
 8000f44:	d003      	beq.n	8000f4e <__eqdf2+0x3a>
 8000f46:	42a5      	cmp	r5, r4
 8000f48:	d101      	bne.n	8000f4e <__eqdf2+0x3a>
 8000f4a:	4557      	cmp	r7, sl
 8000f4c:	d00c      	beq.n	8000f68 <__eqdf2+0x54>
 8000f4e:	bc1c      	pop	{r2, r3, r4}
 8000f50:	4690      	mov	r8, r2
 8000f52:	4699      	mov	r9, r3
 8000f54:	46a2      	mov	sl, r4
 8000f56:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000f58:	4666      	mov	r6, ip
 8000f5a:	433e      	orrs	r6, r7
 8000f5c:	d1f7      	bne.n	8000f4e <__eqdf2+0x3a>
 8000f5e:	42ac      	cmp	r4, r5
 8000f60:	d1f5      	bne.n	8000f4e <__eqdf2+0x3a>
 8000f62:	4654      	mov	r4, sl
 8000f64:	4314      	orrs	r4, r2
 8000f66:	d1f2      	bne.n	8000f4e <__eqdf2+0x3a>
 8000f68:	2001      	movs	r0, #1
 8000f6a:	45c8      	cmp	r8, r9
 8000f6c:	d1ef      	bne.n	8000f4e <__eqdf2+0x3a>
 8000f6e:	4299      	cmp	r1, r3
 8000f70:	d007      	beq.n	8000f82 <__eqdf2+0x6e>
 8000f72:	2d00      	cmp	r5, #0
 8000f74:	d1eb      	bne.n	8000f4e <__eqdf2+0x3a>
 8000f76:	4663      	mov	r3, ip
 8000f78:	431f      	orrs	r7, r3
 8000f7a:	0038      	movs	r0, r7
 8000f7c:	1e47      	subs	r7, r0, #1
 8000f7e:	41b8      	sbcs	r0, r7
 8000f80:	e7e5      	b.n	8000f4e <__eqdf2+0x3a>
 8000f82:	2000      	movs	r0, #0
 8000f84:	e7e3      	b.n	8000f4e <__eqdf2+0x3a>
 8000f86:	46c0      	nop			; (mov r8, r8)
 8000f88:	000007ff 	.word	0x000007ff

08000f8c <__gedf2>:
 8000f8c:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000f8e:	464f      	mov	r7, r9
 8000f90:	4646      	mov	r6, r8
 8000f92:	46d6      	mov	lr, sl
 8000f94:	004d      	lsls	r5, r1, #1
 8000f96:	b5c0      	push	{r6, r7, lr}
 8000f98:	030e      	lsls	r6, r1, #12
 8000f9a:	0fc9      	lsrs	r1, r1, #31
 8000f9c:	468a      	mov	sl, r1
 8000f9e:	492c      	ldr	r1, [pc, #176]	; (8001050 <__gedf2+0xc4>)
 8000fa0:	031f      	lsls	r7, r3, #12
 8000fa2:	005c      	lsls	r4, r3, #1
 8000fa4:	4680      	mov	r8, r0
 8000fa6:	0b36      	lsrs	r6, r6, #12
 8000fa8:	0d6d      	lsrs	r5, r5, #21
 8000faa:	4691      	mov	r9, r2
 8000fac:	0b3f      	lsrs	r7, r7, #12
 8000fae:	0d64      	lsrs	r4, r4, #21
 8000fb0:	0fdb      	lsrs	r3, r3, #31
 8000fb2:	428d      	cmp	r5, r1
 8000fb4:	d01e      	beq.n	8000ff4 <__gedf2+0x68>
 8000fb6:	428c      	cmp	r4, r1
 8000fb8:	d016      	beq.n	8000fe8 <__gedf2+0x5c>
 8000fba:	2d00      	cmp	r5, #0
 8000fbc:	d11e      	bne.n	8000ffc <__gedf2+0x70>
 8000fbe:	4330      	orrs	r0, r6
 8000fc0:	4684      	mov	ip, r0
 8000fc2:	2c00      	cmp	r4, #0
 8000fc4:	d101      	bne.n	8000fca <__gedf2+0x3e>
 8000fc6:	433a      	orrs	r2, r7
 8000fc8:	d023      	beq.n	8001012 <__gedf2+0x86>
 8000fca:	4662      	mov	r2, ip
 8000fcc:	2a00      	cmp	r2, #0
 8000fce:	d01a      	beq.n	8001006 <__gedf2+0x7a>
 8000fd0:	459a      	cmp	sl, r3
 8000fd2:	d029      	beq.n	8001028 <__gedf2+0x9c>
 8000fd4:	4651      	mov	r1, sl
 8000fd6:	2002      	movs	r0, #2
 8000fd8:	3901      	subs	r1, #1
 8000fda:	4008      	ands	r0, r1
 8000fdc:	3801      	subs	r0, #1
 8000fde:	bc1c      	pop	{r2, r3, r4}
 8000fe0:	4690      	mov	r8, r2
 8000fe2:	4699      	mov	r9, r3
 8000fe4:	46a2      	mov	sl, r4
 8000fe6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000fe8:	0039      	movs	r1, r7
 8000fea:	4311      	orrs	r1, r2
 8000fec:	d0e5      	beq.n	8000fba <__gedf2+0x2e>
 8000fee:	2002      	movs	r0, #2
 8000ff0:	4240      	negs	r0, r0
 8000ff2:	e7f4      	b.n	8000fde <__gedf2+0x52>
 8000ff4:	4330      	orrs	r0, r6
 8000ff6:	d1fa      	bne.n	8000fee <__gedf2+0x62>
 8000ff8:	42ac      	cmp	r4, r5
 8000ffa:	d00f      	beq.n	800101c <__gedf2+0x90>
 8000ffc:	2c00      	cmp	r4, #0
 8000ffe:	d10f      	bne.n	8001020 <__gedf2+0x94>
 8001000:	433a      	orrs	r2, r7
 8001002:	d0e7      	beq.n	8000fd4 <__gedf2+0x48>
 8001004:	e00c      	b.n	8001020 <__gedf2+0x94>
 8001006:	2201      	movs	r2, #1
 8001008:	3b01      	subs	r3, #1
 800100a:	4393      	bics	r3, r2
 800100c:	0018      	movs	r0, r3
 800100e:	3001      	adds	r0, #1
 8001010:	e7e5      	b.n	8000fde <__gedf2+0x52>
 8001012:	4663      	mov	r3, ip
 8001014:	2000      	movs	r0, #0
 8001016:	2b00      	cmp	r3, #0
 8001018:	d0e1      	beq.n	8000fde <__gedf2+0x52>
 800101a:	e7db      	b.n	8000fd4 <__gedf2+0x48>
 800101c:	433a      	orrs	r2, r7
 800101e:	d1e6      	bne.n	8000fee <__gedf2+0x62>
 8001020:	459a      	cmp	sl, r3
 8001022:	d1d7      	bne.n	8000fd4 <__gedf2+0x48>
 8001024:	42a5      	cmp	r5, r4
 8001026:	dcd5      	bgt.n	8000fd4 <__gedf2+0x48>
 8001028:	42a5      	cmp	r5, r4
 800102a:	db05      	blt.n	8001038 <__gedf2+0xac>
 800102c:	42be      	cmp	r6, r7
 800102e:	d8d1      	bhi.n	8000fd4 <__gedf2+0x48>
 8001030:	d008      	beq.n	8001044 <__gedf2+0xb8>
 8001032:	2000      	movs	r0, #0
 8001034:	42be      	cmp	r6, r7
 8001036:	d2d2      	bcs.n	8000fde <__gedf2+0x52>
 8001038:	4650      	mov	r0, sl
 800103a:	2301      	movs	r3, #1
 800103c:	3801      	subs	r0, #1
 800103e:	4398      	bics	r0, r3
 8001040:	3001      	adds	r0, #1
 8001042:	e7cc      	b.n	8000fde <__gedf2+0x52>
 8001044:	45c8      	cmp	r8, r9
 8001046:	d8c5      	bhi.n	8000fd4 <__gedf2+0x48>
 8001048:	2000      	movs	r0, #0
 800104a:	45c8      	cmp	r8, r9
 800104c:	d3f4      	bcc.n	8001038 <__gedf2+0xac>
 800104e:	e7c6      	b.n	8000fde <__gedf2+0x52>
 8001050:	000007ff 	.word	0x000007ff

08001054 <__ledf2>:
 8001054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001056:	464f      	mov	r7, r9
 8001058:	4646      	mov	r6, r8
 800105a:	46d6      	mov	lr, sl
 800105c:	004d      	lsls	r5, r1, #1
 800105e:	b5c0      	push	{r6, r7, lr}
 8001060:	030e      	lsls	r6, r1, #12
 8001062:	0fc9      	lsrs	r1, r1, #31
 8001064:	468a      	mov	sl, r1
 8001066:	492e      	ldr	r1, [pc, #184]	; (8001120 <__ledf2+0xcc>)
 8001068:	031f      	lsls	r7, r3, #12
 800106a:	005c      	lsls	r4, r3, #1
 800106c:	4680      	mov	r8, r0
 800106e:	0b36      	lsrs	r6, r6, #12
 8001070:	0d6d      	lsrs	r5, r5, #21
 8001072:	4691      	mov	r9, r2
 8001074:	0b3f      	lsrs	r7, r7, #12
 8001076:	0d64      	lsrs	r4, r4, #21
 8001078:	0fdb      	lsrs	r3, r3, #31
 800107a:	428d      	cmp	r5, r1
 800107c:	d018      	beq.n	80010b0 <__ledf2+0x5c>
 800107e:	428c      	cmp	r4, r1
 8001080:	d011      	beq.n	80010a6 <__ledf2+0x52>
 8001082:	2d00      	cmp	r5, #0
 8001084:	d118      	bne.n	80010b8 <__ledf2+0x64>
 8001086:	4330      	orrs	r0, r6
 8001088:	4684      	mov	ip, r0
 800108a:	2c00      	cmp	r4, #0
 800108c:	d11e      	bne.n	80010cc <__ledf2+0x78>
 800108e:	433a      	orrs	r2, r7
 8001090:	d11c      	bne.n	80010cc <__ledf2+0x78>
 8001092:	4663      	mov	r3, ip
 8001094:	2000      	movs	r0, #0
 8001096:	2b00      	cmp	r3, #0
 8001098:	d030      	beq.n	80010fc <__ledf2+0xa8>
 800109a:	4651      	mov	r1, sl
 800109c:	2002      	movs	r0, #2
 800109e:	3901      	subs	r1, #1
 80010a0:	4008      	ands	r0, r1
 80010a2:	3801      	subs	r0, #1
 80010a4:	e02a      	b.n	80010fc <__ledf2+0xa8>
 80010a6:	0039      	movs	r1, r7
 80010a8:	4311      	orrs	r1, r2
 80010aa:	d0ea      	beq.n	8001082 <__ledf2+0x2e>
 80010ac:	2002      	movs	r0, #2
 80010ae:	e025      	b.n	80010fc <__ledf2+0xa8>
 80010b0:	4330      	orrs	r0, r6
 80010b2:	d1fb      	bne.n	80010ac <__ledf2+0x58>
 80010b4:	42ac      	cmp	r4, r5
 80010b6:	d026      	beq.n	8001106 <__ledf2+0xb2>
 80010b8:	2c00      	cmp	r4, #0
 80010ba:	d126      	bne.n	800110a <__ledf2+0xb6>
 80010bc:	433a      	orrs	r2, r7
 80010be:	d124      	bne.n	800110a <__ledf2+0xb6>
 80010c0:	4651      	mov	r1, sl
 80010c2:	2002      	movs	r0, #2
 80010c4:	3901      	subs	r1, #1
 80010c6:	4008      	ands	r0, r1
 80010c8:	3801      	subs	r0, #1
 80010ca:	e017      	b.n	80010fc <__ledf2+0xa8>
 80010cc:	4662      	mov	r2, ip
 80010ce:	2a00      	cmp	r2, #0
 80010d0:	d00f      	beq.n	80010f2 <__ledf2+0x9e>
 80010d2:	459a      	cmp	sl, r3
 80010d4:	d1e1      	bne.n	800109a <__ledf2+0x46>
 80010d6:	42a5      	cmp	r5, r4
 80010d8:	db05      	blt.n	80010e6 <__ledf2+0x92>
 80010da:	42be      	cmp	r6, r7
 80010dc:	d8dd      	bhi.n	800109a <__ledf2+0x46>
 80010de:	d019      	beq.n	8001114 <__ledf2+0xc0>
 80010e0:	2000      	movs	r0, #0
 80010e2:	42be      	cmp	r6, r7
 80010e4:	d20a      	bcs.n	80010fc <__ledf2+0xa8>
 80010e6:	4650      	mov	r0, sl
 80010e8:	2301      	movs	r3, #1
 80010ea:	3801      	subs	r0, #1
 80010ec:	4398      	bics	r0, r3
 80010ee:	3001      	adds	r0, #1
 80010f0:	e004      	b.n	80010fc <__ledf2+0xa8>
 80010f2:	2201      	movs	r2, #1
 80010f4:	3b01      	subs	r3, #1
 80010f6:	4393      	bics	r3, r2
 80010f8:	0018      	movs	r0, r3
 80010fa:	3001      	adds	r0, #1
 80010fc:	bc1c      	pop	{r2, r3, r4}
 80010fe:	4690      	mov	r8, r2
 8001100:	4699      	mov	r9, r3
 8001102:	46a2      	mov	sl, r4
 8001104:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001106:	433a      	orrs	r2, r7
 8001108:	d1d0      	bne.n	80010ac <__ledf2+0x58>
 800110a:	459a      	cmp	sl, r3
 800110c:	d1c5      	bne.n	800109a <__ledf2+0x46>
 800110e:	42a5      	cmp	r5, r4
 8001110:	dcc3      	bgt.n	800109a <__ledf2+0x46>
 8001112:	e7e0      	b.n	80010d6 <__ledf2+0x82>
 8001114:	45c8      	cmp	r8, r9
 8001116:	d8c0      	bhi.n	800109a <__ledf2+0x46>
 8001118:	2000      	movs	r0, #0
 800111a:	45c8      	cmp	r8, r9
 800111c:	d3e3      	bcc.n	80010e6 <__ledf2+0x92>
 800111e:	e7ed      	b.n	80010fc <__ledf2+0xa8>
 8001120:	000007ff 	.word	0x000007ff

08001124 <__aeabi_dmul>:
 8001124:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001126:	4657      	mov	r7, sl
 8001128:	46de      	mov	lr, fp
 800112a:	464e      	mov	r6, r9
 800112c:	4645      	mov	r5, r8
 800112e:	b5e0      	push	{r5, r6, r7, lr}
 8001130:	4683      	mov	fp, r0
 8001132:	0006      	movs	r6, r0
 8001134:	030f      	lsls	r7, r1, #12
 8001136:	0048      	lsls	r0, r1, #1
 8001138:	b087      	sub	sp, #28
 800113a:	4692      	mov	sl, r2
 800113c:	001d      	movs	r5, r3
 800113e:	0b3f      	lsrs	r7, r7, #12
 8001140:	0d40      	lsrs	r0, r0, #21
 8001142:	0fcc      	lsrs	r4, r1, #31
 8001144:	2800      	cmp	r0, #0
 8001146:	d100      	bne.n	800114a <__aeabi_dmul+0x26>
 8001148:	e06f      	b.n	800122a <__aeabi_dmul+0x106>
 800114a:	4bde      	ldr	r3, [pc, #888]	; (80014c4 <__aeabi_dmul+0x3a0>)
 800114c:	4298      	cmp	r0, r3
 800114e:	d038      	beq.n	80011c2 <__aeabi_dmul+0x9e>
 8001150:	2380      	movs	r3, #128	; 0x80
 8001152:	00ff      	lsls	r7, r7, #3
 8001154:	041b      	lsls	r3, r3, #16
 8001156:	431f      	orrs	r7, r3
 8001158:	0f73      	lsrs	r3, r6, #29
 800115a:	433b      	orrs	r3, r7
 800115c:	9301      	str	r3, [sp, #4]
 800115e:	4bda      	ldr	r3, [pc, #872]	; (80014c8 <__aeabi_dmul+0x3a4>)
 8001160:	2700      	movs	r7, #0
 8001162:	4699      	mov	r9, r3
 8001164:	2300      	movs	r3, #0
 8001166:	469b      	mov	fp, r3
 8001168:	00f6      	lsls	r6, r6, #3
 800116a:	4481      	add	r9, r0
 800116c:	032b      	lsls	r3, r5, #12
 800116e:	0069      	lsls	r1, r5, #1
 8001170:	0b1b      	lsrs	r3, r3, #12
 8001172:	4652      	mov	r2, sl
 8001174:	4698      	mov	r8, r3
 8001176:	0d49      	lsrs	r1, r1, #21
 8001178:	0fed      	lsrs	r5, r5, #31
 800117a:	2900      	cmp	r1, #0
 800117c:	d100      	bne.n	8001180 <__aeabi_dmul+0x5c>
 800117e:	e085      	b.n	800128c <__aeabi_dmul+0x168>
 8001180:	4bd0      	ldr	r3, [pc, #832]	; (80014c4 <__aeabi_dmul+0x3a0>)
 8001182:	4299      	cmp	r1, r3
 8001184:	d100      	bne.n	8001188 <__aeabi_dmul+0x64>
 8001186:	e073      	b.n	8001270 <__aeabi_dmul+0x14c>
 8001188:	4643      	mov	r3, r8
 800118a:	00da      	lsls	r2, r3, #3
 800118c:	2380      	movs	r3, #128	; 0x80
 800118e:	041b      	lsls	r3, r3, #16
 8001190:	4313      	orrs	r3, r2
 8001192:	4652      	mov	r2, sl
 8001194:	48cc      	ldr	r0, [pc, #816]	; (80014c8 <__aeabi_dmul+0x3a4>)
 8001196:	0f52      	lsrs	r2, r2, #29
 8001198:	4684      	mov	ip, r0
 800119a:	4313      	orrs	r3, r2
 800119c:	4652      	mov	r2, sl
 800119e:	2000      	movs	r0, #0
 80011a0:	4461      	add	r1, ip
 80011a2:	00d2      	lsls	r2, r2, #3
 80011a4:	4489      	add	r9, r1
 80011a6:	0021      	movs	r1, r4
 80011a8:	4069      	eors	r1, r5
 80011aa:	9100      	str	r1, [sp, #0]
 80011ac:	468c      	mov	ip, r1
 80011ae:	2101      	movs	r1, #1
 80011b0:	4449      	add	r1, r9
 80011b2:	468a      	mov	sl, r1
 80011b4:	2f0f      	cmp	r7, #15
 80011b6:	d900      	bls.n	80011ba <__aeabi_dmul+0x96>
 80011b8:	e090      	b.n	80012dc <__aeabi_dmul+0x1b8>
 80011ba:	49c4      	ldr	r1, [pc, #784]	; (80014cc <__aeabi_dmul+0x3a8>)
 80011bc:	00bf      	lsls	r7, r7, #2
 80011be:	59cf      	ldr	r7, [r1, r7]
 80011c0:	46bf      	mov	pc, r7
 80011c2:	465b      	mov	r3, fp
 80011c4:	433b      	orrs	r3, r7
 80011c6:	9301      	str	r3, [sp, #4]
 80011c8:	d000      	beq.n	80011cc <__aeabi_dmul+0xa8>
 80011ca:	e16a      	b.n	80014a2 <__aeabi_dmul+0x37e>
 80011cc:	2302      	movs	r3, #2
 80011ce:	2708      	movs	r7, #8
 80011d0:	2600      	movs	r6, #0
 80011d2:	4681      	mov	r9, r0
 80011d4:	469b      	mov	fp, r3
 80011d6:	e7c9      	b.n	800116c <__aeabi_dmul+0x48>
 80011d8:	0032      	movs	r2, r6
 80011da:	4658      	mov	r0, fp
 80011dc:	9b01      	ldr	r3, [sp, #4]
 80011de:	4661      	mov	r1, ip
 80011e0:	9100      	str	r1, [sp, #0]
 80011e2:	2802      	cmp	r0, #2
 80011e4:	d100      	bne.n	80011e8 <__aeabi_dmul+0xc4>
 80011e6:	e075      	b.n	80012d4 <__aeabi_dmul+0x1b0>
 80011e8:	2803      	cmp	r0, #3
 80011ea:	d100      	bne.n	80011ee <__aeabi_dmul+0xca>
 80011ec:	e1fe      	b.n	80015ec <__aeabi_dmul+0x4c8>
 80011ee:	2801      	cmp	r0, #1
 80011f0:	d000      	beq.n	80011f4 <__aeabi_dmul+0xd0>
 80011f2:	e12c      	b.n	800144e <__aeabi_dmul+0x32a>
 80011f4:	2300      	movs	r3, #0
 80011f6:	2700      	movs	r7, #0
 80011f8:	2600      	movs	r6, #0
 80011fa:	2500      	movs	r5, #0
 80011fc:	033f      	lsls	r7, r7, #12
 80011fe:	0d2a      	lsrs	r2, r5, #20
 8001200:	0b3f      	lsrs	r7, r7, #12
 8001202:	48b3      	ldr	r0, [pc, #716]	; (80014d0 <__aeabi_dmul+0x3ac>)
 8001204:	0512      	lsls	r2, r2, #20
 8001206:	433a      	orrs	r2, r7
 8001208:	4002      	ands	r2, r0
 800120a:	051b      	lsls	r3, r3, #20
 800120c:	4313      	orrs	r3, r2
 800120e:	9a00      	ldr	r2, [sp, #0]
 8001210:	005b      	lsls	r3, r3, #1
 8001212:	07d1      	lsls	r1, r2, #31
 8001214:	085b      	lsrs	r3, r3, #1
 8001216:	430b      	orrs	r3, r1
 8001218:	0030      	movs	r0, r6
 800121a:	0019      	movs	r1, r3
 800121c:	b007      	add	sp, #28
 800121e:	bc3c      	pop	{r2, r3, r4, r5}
 8001220:	4690      	mov	r8, r2
 8001222:	4699      	mov	r9, r3
 8001224:	46a2      	mov	sl, r4
 8001226:	46ab      	mov	fp, r5
 8001228:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800122a:	465b      	mov	r3, fp
 800122c:	433b      	orrs	r3, r7
 800122e:	9301      	str	r3, [sp, #4]
 8001230:	d100      	bne.n	8001234 <__aeabi_dmul+0x110>
 8001232:	e12f      	b.n	8001494 <__aeabi_dmul+0x370>
 8001234:	2f00      	cmp	r7, #0
 8001236:	d100      	bne.n	800123a <__aeabi_dmul+0x116>
 8001238:	e1a5      	b.n	8001586 <__aeabi_dmul+0x462>
 800123a:	0038      	movs	r0, r7
 800123c:	f000 fdb8 	bl	8001db0 <__clzsi2>
 8001240:	0003      	movs	r3, r0
 8001242:	3b0b      	subs	r3, #11
 8001244:	2b1c      	cmp	r3, #28
 8001246:	dd00      	ble.n	800124a <__aeabi_dmul+0x126>
 8001248:	e196      	b.n	8001578 <__aeabi_dmul+0x454>
 800124a:	221d      	movs	r2, #29
 800124c:	1ad3      	subs	r3, r2, r3
 800124e:	465a      	mov	r2, fp
 8001250:	0001      	movs	r1, r0
 8001252:	40da      	lsrs	r2, r3
 8001254:	465e      	mov	r6, fp
 8001256:	3908      	subs	r1, #8
 8001258:	408f      	lsls	r7, r1
 800125a:	0013      	movs	r3, r2
 800125c:	408e      	lsls	r6, r1
 800125e:	433b      	orrs	r3, r7
 8001260:	9301      	str	r3, [sp, #4]
 8001262:	4b9c      	ldr	r3, [pc, #624]	; (80014d4 <__aeabi_dmul+0x3b0>)
 8001264:	2700      	movs	r7, #0
 8001266:	1a1b      	subs	r3, r3, r0
 8001268:	4699      	mov	r9, r3
 800126a:	2300      	movs	r3, #0
 800126c:	469b      	mov	fp, r3
 800126e:	e77d      	b.n	800116c <__aeabi_dmul+0x48>
 8001270:	4641      	mov	r1, r8
 8001272:	4653      	mov	r3, sl
 8001274:	430b      	orrs	r3, r1
 8001276:	4993      	ldr	r1, [pc, #588]	; (80014c4 <__aeabi_dmul+0x3a0>)
 8001278:	468c      	mov	ip, r1
 800127a:	44e1      	add	r9, ip
 800127c:	2b00      	cmp	r3, #0
 800127e:	d000      	beq.n	8001282 <__aeabi_dmul+0x15e>
 8001280:	e11a      	b.n	80014b8 <__aeabi_dmul+0x394>
 8001282:	2202      	movs	r2, #2
 8001284:	2002      	movs	r0, #2
 8001286:	4317      	orrs	r7, r2
 8001288:	2200      	movs	r2, #0
 800128a:	e78c      	b.n	80011a6 <__aeabi_dmul+0x82>
 800128c:	4313      	orrs	r3, r2
 800128e:	d100      	bne.n	8001292 <__aeabi_dmul+0x16e>
 8001290:	e10d      	b.n	80014ae <__aeabi_dmul+0x38a>
 8001292:	4643      	mov	r3, r8
 8001294:	2b00      	cmp	r3, #0
 8001296:	d100      	bne.n	800129a <__aeabi_dmul+0x176>
 8001298:	e181      	b.n	800159e <__aeabi_dmul+0x47a>
 800129a:	4640      	mov	r0, r8
 800129c:	f000 fd88 	bl	8001db0 <__clzsi2>
 80012a0:	0002      	movs	r2, r0
 80012a2:	3a0b      	subs	r2, #11
 80012a4:	2a1c      	cmp	r2, #28
 80012a6:	dd00      	ble.n	80012aa <__aeabi_dmul+0x186>
 80012a8:	e172      	b.n	8001590 <__aeabi_dmul+0x46c>
 80012aa:	0001      	movs	r1, r0
 80012ac:	4643      	mov	r3, r8
 80012ae:	3908      	subs	r1, #8
 80012b0:	408b      	lsls	r3, r1
 80012b2:	4698      	mov	r8, r3
 80012b4:	231d      	movs	r3, #29
 80012b6:	1a9a      	subs	r2, r3, r2
 80012b8:	4653      	mov	r3, sl
 80012ba:	40d3      	lsrs	r3, r2
 80012bc:	001a      	movs	r2, r3
 80012be:	4643      	mov	r3, r8
 80012c0:	4313      	orrs	r3, r2
 80012c2:	4652      	mov	r2, sl
 80012c4:	408a      	lsls	r2, r1
 80012c6:	4649      	mov	r1, r9
 80012c8:	1a08      	subs	r0, r1, r0
 80012ca:	4982      	ldr	r1, [pc, #520]	; (80014d4 <__aeabi_dmul+0x3b0>)
 80012cc:	4689      	mov	r9, r1
 80012ce:	4481      	add	r9, r0
 80012d0:	2000      	movs	r0, #0
 80012d2:	e768      	b.n	80011a6 <__aeabi_dmul+0x82>
 80012d4:	4b7b      	ldr	r3, [pc, #492]	; (80014c4 <__aeabi_dmul+0x3a0>)
 80012d6:	2700      	movs	r7, #0
 80012d8:	2600      	movs	r6, #0
 80012da:	e78e      	b.n	80011fa <__aeabi_dmul+0xd6>
 80012dc:	0c14      	lsrs	r4, r2, #16
 80012de:	0412      	lsls	r2, r2, #16
 80012e0:	0c12      	lsrs	r2, r2, #16
 80012e2:	0011      	movs	r1, r2
 80012e4:	0c37      	lsrs	r7, r6, #16
 80012e6:	0436      	lsls	r6, r6, #16
 80012e8:	0c35      	lsrs	r5, r6, #16
 80012ea:	4379      	muls	r1, r7
 80012ec:	0028      	movs	r0, r5
 80012ee:	468c      	mov	ip, r1
 80012f0:	002e      	movs	r6, r5
 80012f2:	4360      	muls	r0, r4
 80012f4:	4460      	add	r0, ip
 80012f6:	4683      	mov	fp, r0
 80012f8:	4356      	muls	r6, r2
 80012fa:	0021      	movs	r1, r4
 80012fc:	0c30      	lsrs	r0, r6, #16
 80012fe:	4680      	mov	r8, r0
 8001300:	4658      	mov	r0, fp
 8001302:	4379      	muls	r1, r7
 8001304:	4440      	add	r0, r8
 8001306:	9102      	str	r1, [sp, #8]
 8001308:	4584      	cmp	ip, r0
 800130a:	d906      	bls.n	800131a <__aeabi_dmul+0x1f6>
 800130c:	4688      	mov	r8, r1
 800130e:	2180      	movs	r1, #128	; 0x80
 8001310:	0249      	lsls	r1, r1, #9
 8001312:	468c      	mov	ip, r1
 8001314:	44e0      	add	r8, ip
 8001316:	4641      	mov	r1, r8
 8001318:	9102      	str	r1, [sp, #8]
 800131a:	0436      	lsls	r6, r6, #16
 800131c:	0c01      	lsrs	r1, r0, #16
 800131e:	0c36      	lsrs	r6, r6, #16
 8001320:	0400      	lsls	r0, r0, #16
 8001322:	468b      	mov	fp, r1
 8001324:	1981      	adds	r1, r0, r6
 8001326:	0c1e      	lsrs	r6, r3, #16
 8001328:	041b      	lsls	r3, r3, #16
 800132a:	0c1b      	lsrs	r3, r3, #16
 800132c:	9103      	str	r1, [sp, #12]
 800132e:	0019      	movs	r1, r3
 8001330:	4379      	muls	r1, r7
 8001332:	468c      	mov	ip, r1
 8001334:	0028      	movs	r0, r5
 8001336:	4375      	muls	r5, r6
 8001338:	4465      	add	r5, ip
 800133a:	46a8      	mov	r8, r5
 800133c:	4358      	muls	r0, r3
 800133e:	0c05      	lsrs	r5, r0, #16
 8001340:	4445      	add	r5, r8
 8001342:	4377      	muls	r7, r6
 8001344:	42a9      	cmp	r1, r5
 8001346:	d903      	bls.n	8001350 <__aeabi_dmul+0x22c>
 8001348:	2180      	movs	r1, #128	; 0x80
 800134a:	0249      	lsls	r1, r1, #9
 800134c:	468c      	mov	ip, r1
 800134e:	4467      	add	r7, ip
 8001350:	0c29      	lsrs	r1, r5, #16
 8001352:	468c      	mov	ip, r1
 8001354:	0039      	movs	r1, r7
 8001356:	0400      	lsls	r0, r0, #16
 8001358:	0c00      	lsrs	r0, r0, #16
 800135a:	042d      	lsls	r5, r5, #16
 800135c:	182d      	adds	r5, r5, r0
 800135e:	4461      	add	r1, ip
 8001360:	44ab      	add	fp, r5
 8001362:	9105      	str	r1, [sp, #20]
 8001364:	4659      	mov	r1, fp
 8001366:	9104      	str	r1, [sp, #16]
 8001368:	9901      	ldr	r1, [sp, #4]
 800136a:	040f      	lsls	r7, r1, #16
 800136c:	0c3f      	lsrs	r7, r7, #16
 800136e:	0c08      	lsrs	r0, r1, #16
 8001370:	0039      	movs	r1, r7
 8001372:	4351      	muls	r1, r2
 8001374:	4342      	muls	r2, r0
 8001376:	4690      	mov	r8, r2
 8001378:	0002      	movs	r2, r0
 800137a:	468c      	mov	ip, r1
 800137c:	0c09      	lsrs	r1, r1, #16
 800137e:	468b      	mov	fp, r1
 8001380:	4362      	muls	r2, r4
 8001382:	437c      	muls	r4, r7
 8001384:	4444      	add	r4, r8
 8001386:	445c      	add	r4, fp
 8001388:	45a0      	cmp	r8, r4
 800138a:	d903      	bls.n	8001394 <__aeabi_dmul+0x270>
 800138c:	2180      	movs	r1, #128	; 0x80
 800138e:	0249      	lsls	r1, r1, #9
 8001390:	4688      	mov	r8, r1
 8001392:	4442      	add	r2, r8
 8001394:	0c21      	lsrs	r1, r4, #16
 8001396:	4688      	mov	r8, r1
 8001398:	4661      	mov	r1, ip
 800139a:	0409      	lsls	r1, r1, #16
 800139c:	0c09      	lsrs	r1, r1, #16
 800139e:	468c      	mov	ip, r1
 80013a0:	0039      	movs	r1, r7
 80013a2:	4359      	muls	r1, r3
 80013a4:	4343      	muls	r3, r0
 80013a6:	4370      	muls	r0, r6
 80013a8:	437e      	muls	r6, r7
 80013aa:	0c0f      	lsrs	r7, r1, #16
 80013ac:	18f6      	adds	r6, r6, r3
 80013ae:	0424      	lsls	r4, r4, #16
 80013b0:	19be      	adds	r6, r7, r6
 80013b2:	4464      	add	r4, ip
 80013b4:	4442      	add	r2, r8
 80013b6:	468c      	mov	ip, r1
 80013b8:	42b3      	cmp	r3, r6
 80013ba:	d903      	bls.n	80013c4 <__aeabi_dmul+0x2a0>
 80013bc:	2380      	movs	r3, #128	; 0x80
 80013be:	025b      	lsls	r3, r3, #9
 80013c0:	4698      	mov	r8, r3
 80013c2:	4440      	add	r0, r8
 80013c4:	9b02      	ldr	r3, [sp, #8]
 80013c6:	4661      	mov	r1, ip
 80013c8:	4698      	mov	r8, r3
 80013ca:	9b04      	ldr	r3, [sp, #16]
 80013cc:	0437      	lsls	r7, r6, #16
 80013ce:	4443      	add	r3, r8
 80013d0:	469b      	mov	fp, r3
 80013d2:	45ab      	cmp	fp, r5
 80013d4:	41ad      	sbcs	r5, r5
 80013d6:	426b      	negs	r3, r5
 80013d8:	040d      	lsls	r5, r1, #16
 80013da:	9905      	ldr	r1, [sp, #20]
 80013dc:	0c2d      	lsrs	r5, r5, #16
 80013de:	468c      	mov	ip, r1
 80013e0:	197f      	adds	r7, r7, r5
 80013e2:	4467      	add	r7, ip
 80013e4:	18fd      	adds	r5, r7, r3
 80013e6:	46a8      	mov	r8, r5
 80013e8:	465d      	mov	r5, fp
 80013ea:	192d      	adds	r5, r5, r4
 80013ec:	42a5      	cmp	r5, r4
 80013ee:	41a4      	sbcs	r4, r4
 80013f0:	4693      	mov	fp, r2
 80013f2:	4264      	negs	r4, r4
 80013f4:	46a4      	mov	ip, r4
 80013f6:	44c3      	add	fp, r8
 80013f8:	44dc      	add	ip, fp
 80013fa:	428f      	cmp	r7, r1
 80013fc:	41bf      	sbcs	r7, r7
 80013fe:	4598      	cmp	r8, r3
 8001400:	419b      	sbcs	r3, r3
 8001402:	4593      	cmp	fp, r2
 8001404:	4192      	sbcs	r2, r2
 8001406:	45a4      	cmp	ip, r4
 8001408:	41a4      	sbcs	r4, r4
 800140a:	425b      	negs	r3, r3
 800140c:	427f      	negs	r7, r7
 800140e:	431f      	orrs	r7, r3
 8001410:	0c36      	lsrs	r6, r6, #16
 8001412:	4252      	negs	r2, r2
 8001414:	4264      	negs	r4, r4
 8001416:	19bf      	adds	r7, r7, r6
 8001418:	4322      	orrs	r2, r4
 800141a:	18bf      	adds	r7, r7, r2
 800141c:	4662      	mov	r2, ip
 800141e:	1838      	adds	r0, r7, r0
 8001420:	0243      	lsls	r3, r0, #9
 8001422:	0dd2      	lsrs	r2, r2, #23
 8001424:	9903      	ldr	r1, [sp, #12]
 8001426:	4313      	orrs	r3, r2
 8001428:	026a      	lsls	r2, r5, #9
 800142a:	430a      	orrs	r2, r1
 800142c:	1e50      	subs	r0, r2, #1
 800142e:	4182      	sbcs	r2, r0
 8001430:	4661      	mov	r1, ip
 8001432:	0ded      	lsrs	r5, r5, #23
 8001434:	432a      	orrs	r2, r5
 8001436:	024e      	lsls	r6, r1, #9
 8001438:	4332      	orrs	r2, r6
 800143a:	01d9      	lsls	r1, r3, #7
 800143c:	d400      	bmi.n	8001440 <__aeabi_dmul+0x31c>
 800143e:	e0b3      	b.n	80015a8 <__aeabi_dmul+0x484>
 8001440:	2601      	movs	r6, #1
 8001442:	0850      	lsrs	r0, r2, #1
 8001444:	4032      	ands	r2, r6
 8001446:	4302      	orrs	r2, r0
 8001448:	07de      	lsls	r6, r3, #31
 800144a:	4332      	orrs	r2, r6
 800144c:	085b      	lsrs	r3, r3, #1
 800144e:	4c22      	ldr	r4, [pc, #136]	; (80014d8 <__aeabi_dmul+0x3b4>)
 8001450:	4454      	add	r4, sl
 8001452:	2c00      	cmp	r4, #0
 8001454:	dd62      	ble.n	800151c <__aeabi_dmul+0x3f8>
 8001456:	0751      	lsls	r1, r2, #29
 8001458:	d009      	beq.n	800146e <__aeabi_dmul+0x34a>
 800145a:	200f      	movs	r0, #15
 800145c:	4010      	ands	r0, r2
 800145e:	2804      	cmp	r0, #4
 8001460:	d005      	beq.n	800146e <__aeabi_dmul+0x34a>
 8001462:	1d10      	adds	r0, r2, #4
 8001464:	4290      	cmp	r0, r2
 8001466:	4192      	sbcs	r2, r2
 8001468:	4252      	negs	r2, r2
 800146a:	189b      	adds	r3, r3, r2
 800146c:	0002      	movs	r2, r0
 800146e:	01d9      	lsls	r1, r3, #7
 8001470:	d504      	bpl.n	800147c <__aeabi_dmul+0x358>
 8001472:	2480      	movs	r4, #128	; 0x80
 8001474:	4819      	ldr	r0, [pc, #100]	; (80014dc <__aeabi_dmul+0x3b8>)
 8001476:	00e4      	lsls	r4, r4, #3
 8001478:	4003      	ands	r3, r0
 800147a:	4454      	add	r4, sl
 800147c:	4818      	ldr	r0, [pc, #96]	; (80014e0 <__aeabi_dmul+0x3bc>)
 800147e:	4284      	cmp	r4, r0
 8001480:	dd00      	ble.n	8001484 <__aeabi_dmul+0x360>
 8001482:	e727      	b.n	80012d4 <__aeabi_dmul+0x1b0>
 8001484:	075e      	lsls	r6, r3, #29
 8001486:	025b      	lsls	r3, r3, #9
 8001488:	08d2      	lsrs	r2, r2, #3
 800148a:	0b1f      	lsrs	r7, r3, #12
 800148c:	0563      	lsls	r3, r4, #21
 800148e:	4316      	orrs	r6, r2
 8001490:	0d5b      	lsrs	r3, r3, #21
 8001492:	e6b2      	b.n	80011fa <__aeabi_dmul+0xd6>
 8001494:	2300      	movs	r3, #0
 8001496:	4699      	mov	r9, r3
 8001498:	3301      	adds	r3, #1
 800149a:	2704      	movs	r7, #4
 800149c:	2600      	movs	r6, #0
 800149e:	469b      	mov	fp, r3
 80014a0:	e664      	b.n	800116c <__aeabi_dmul+0x48>
 80014a2:	2303      	movs	r3, #3
 80014a4:	9701      	str	r7, [sp, #4]
 80014a6:	4681      	mov	r9, r0
 80014a8:	270c      	movs	r7, #12
 80014aa:	469b      	mov	fp, r3
 80014ac:	e65e      	b.n	800116c <__aeabi_dmul+0x48>
 80014ae:	2201      	movs	r2, #1
 80014b0:	2001      	movs	r0, #1
 80014b2:	4317      	orrs	r7, r2
 80014b4:	2200      	movs	r2, #0
 80014b6:	e676      	b.n	80011a6 <__aeabi_dmul+0x82>
 80014b8:	2303      	movs	r3, #3
 80014ba:	2003      	movs	r0, #3
 80014bc:	431f      	orrs	r7, r3
 80014be:	4643      	mov	r3, r8
 80014c0:	e671      	b.n	80011a6 <__aeabi_dmul+0x82>
 80014c2:	46c0      	nop			; (mov r8, r8)
 80014c4:	000007ff 	.word	0x000007ff
 80014c8:	fffffc01 	.word	0xfffffc01
 80014cc:	08004470 	.word	0x08004470
 80014d0:	800fffff 	.word	0x800fffff
 80014d4:	fffffc0d 	.word	0xfffffc0d
 80014d8:	000003ff 	.word	0x000003ff
 80014dc:	feffffff 	.word	0xfeffffff
 80014e0:	000007fe 	.word	0x000007fe
 80014e4:	2300      	movs	r3, #0
 80014e6:	2780      	movs	r7, #128	; 0x80
 80014e8:	9300      	str	r3, [sp, #0]
 80014ea:	033f      	lsls	r7, r7, #12
 80014ec:	2600      	movs	r6, #0
 80014ee:	4b43      	ldr	r3, [pc, #268]	; (80015fc <__aeabi_dmul+0x4d8>)
 80014f0:	e683      	b.n	80011fa <__aeabi_dmul+0xd6>
 80014f2:	9b01      	ldr	r3, [sp, #4]
 80014f4:	0032      	movs	r2, r6
 80014f6:	46a4      	mov	ip, r4
 80014f8:	4658      	mov	r0, fp
 80014fa:	e670      	b.n	80011de <__aeabi_dmul+0xba>
 80014fc:	46ac      	mov	ip, r5
 80014fe:	e66e      	b.n	80011de <__aeabi_dmul+0xba>
 8001500:	2780      	movs	r7, #128	; 0x80
 8001502:	9901      	ldr	r1, [sp, #4]
 8001504:	033f      	lsls	r7, r7, #12
 8001506:	4239      	tst	r1, r7
 8001508:	d02d      	beq.n	8001566 <__aeabi_dmul+0x442>
 800150a:	423b      	tst	r3, r7
 800150c:	d12b      	bne.n	8001566 <__aeabi_dmul+0x442>
 800150e:	431f      	orrs	r7, r3
 8001510:	033f      	lsls	r7, r7, #12
 8001512:	0b3f      	lsrs	r7, r7, #12
 8001514:	9500      	str	r5, [sp, #0]
 8001516:	0016      	movs	r6, r2
 8001518:	4b38      	ldr	r3, [pc, #224]	; (80015fc <__aeabi_dmul+0x4d8>)
 800151a:	e66e      	b.n	80011fa <__aeabi_dmul+0xd6>
 800151c:	2501      	movs	r5, #1
 800151e:	1b2d      	subs	r5, r5, r4
 8001520:	2d38      	cmp	r5, #56	; 0x38
 8001522:	dd00      	ble.n	8001526 <__aeabi_dmul+0x402>
 8001524:	e666      	b.n	80011f4 <__aeabi_dmul+0xd0>
 8001526:	2d1f      	cmp	r5, #31
 8001528:	dc40      	bgt.n	80015ac <__aeabi_dmul+0x488>
 800152a:	4835      	ldr	r0, [pc, #212]	; (8001600 <__aeabi_dmul+0x4dc>)
 800152c:	001c      	movs	r4, r3
 800152e:	4450      	add	r0, sl
 8001530:	0016      	movs	r6, r2
 8001532:	4082      	lsls	r2, r0
 8001534:	4084      	lsls	r4, r0
 8001536:	40ee      	lsrs	r6, r5
 8001538:	1e50      	subs	r0, r2, #1
 800153a:	4182      	sbcs	r2, r0
 800153c:	4334      	orrs	r4, r6
 800153e:	4314      	orrs	r4, r2
 8001540:	40eb      	lsrs	r3, r5
 8001542:	0762      	lsls	r2, r4, #29
 8001544:	d009      	beq.n	800155a <__aeabi_dmul+0x436>
 8001546:	220f      	movs	r2, #15
 8001548:	4022      	ands	r2, r4
 800154a:	2a04      	cmp	r2, #4
 800154c:	d005      	beq.n	800155a <__aeabi_dmul+0x436>
 800154e:	0022      	movs	r2, r4
 8001550:	1d14      	adds	r4, r2, #4
 8001552:	4294      	cmp	r4, r2
 8001554:	4180      	sbcs	r0, r0
 8001556:	4240      	negs	r0, r0
 8001558:	181b      	adds	r3, r3, r0
 800155a:	021a      	lsls	r2, r3, #8
 800155c:	d53e      	bpl.n	80015dc <__aeabi_dmul+0x4b8>
 800155e:	2301      	movs	r3, #1
 8001560:	2700      	movs	r7, #0
 8001562:	2600      	movs	r6, #0
 8001564:	e649      	b.n	80011fa <__aeabi_dmul+0xd6>
 8001566:	2780      	movs	r7, #128	; 0x80
 8001568:	9b01      	ldr	r3, [sp, #4]
 800156a:	033f      	lsls	r7, r7, #12
 800156c:	431f      	orrs	r7, r3
 800156e:	033f      	lsls	r7, r7, #12
 8001570:	0b3f      	lsrs	r7, r7, #12
 8001572:	9400      	str	r4, [sp, #0]
 8001574:	4b21      	ldr	r3, [pc, #132]	; (80015fc <__aeabi_dmul+0x4d8>)
 8001576:	e640      	b.n	80011fa <__aeabi_dmul+0xd6>
 8001578:	0003      	movs	r3, r0
 800157a:	465a      	mov	r2, fp
 800157c:	3b28      	subs	r3, #40	; 0x28
 800157e:	409a      	lsls	r2, r3
 8001580:	2600      	movs	r6, #0
 8001582:	9201      	str	r2, [sp, #4]
 8001584:	e66d      	b.n	8001262 <__aeabi_dmul+0x13e>
 8001586:	4658      	mov	r0, fp
 8001588:	f000 fc12 	bl	8001db0 <__clzsi2>
 800158c:	3020      	adds	r0, #32
 800158e:	e657      	b.n	8001240 <__aeabi_dmul+0x11c>
 8001590:	0003      	movs	r3, r0
 8001592:	4652      	mov	r2, sl
 8001594:	3b28      	subs	r3, #40	; 0x28
 8001596:	409a      	lsls	r2, r3
 8001598:	0013      	movs	r3, r2
 800159a:	2200      	movs	r2, #0
 800159c:	e693      	b.n	80012c6 <__aeabi_dmul+0x1a2>
 800159e:	4650      	mov	r0, sl
 80015a0:	f000 fc06 	bl	8001db0 <__clzsi2>
 80015a4:	3020      	adds	r0, #32
 80015a6:	e67b      	b.n	80012a0 <__aeabi_dmul+0x17c>
 80015a8:	46ca      	mov	sl, r9
 80015aa:	e750      	b.n	800144e <__aeabi_dmul+0x32a>
 80015ac:	201f      	movs	r0, #31
 80015ae:	001e      	movs	r6, r3
 80015b0:	4240      	negs	r0, r0
 80015b2:	1b04      	subs	r4, r0, r4
 80015b4:	40e6      	lsrs	r6, r4
 80015b6:	2d20      	cmp	r5, #32
 80015b8:	d003      	beq.n	80015c2 <__aeabi_dmul+0x49e>
 80015ba:	4c12      	ldr	r4, [pc, #72]	; (8001604 <__aeabi_dmul+0x4e0>)
 80015bc:	4454      	add	r4, sl
 80015be:	40a3      	lsls	r3, r4
 80015c0:	431a      	orrs	r2, r3
 80015c2:	1e50      	subs	r0, r2, #1
 80015c4:	4182      	sbcs	r2, r0
 80015c6:	4332      	orrs	r2, r6
 80015c8:	2607      	movs	r6, #7
 80015ca:	2700      	movs	r7, #0
 80015cc:	4016      	ands	r6, r2
 80015ce:	d009      	beq.n	80015e4 <__aeabi_dmul+0x4c0>
 80015d0:	200f      	movs	r0, #15
 80015d2:	2300      	movs	r3, #0
 80015d4:	4010      	ands	r0, r2
 80015d6:	0014      	movs	r4, r2
 80015d8:	2804      	cmp	r0, #4
 80015da:	d1b9      	bne.n	8001550 <__aeabi_dmul+0x42c>
 80015dc:	0022      	movs	r2, r4
 80015de:	075e      	lsls	r6, r3, #29
 80015e0:	025b      	lsls	r3, r3, #9
 80015e2:	0b1f      	lsrs	r7, r3, #12
 80015e4:	08d2      	lsrs	r2, r2, #3
 80015e6:	4316      	orrs	r6, r2
 80015e8:	2300      	movs	r3, #0
 80015ea:	e606      	b.n	80011fa <__aeabi_dmul+0xd6>
 80015ec:	2780      	movs	r7, #128	; 0x80
 80015ee:	033f      	lsls	r7, r7, #12
 80015f0:	431f      	orrs	r7, r3
 80015f2:	033f      	lsls	r7, r7, #12
 80015f4:	0b3f      	lsrs	r7, r7, #12
 80015f6:	0016      	movs	r6, r2
 80015f8:	4b00      	ldr	r3, [pc, #0]	; (80015fc <__aeabi_dmul+0x4d8>)
 80015fa:	e5fe      	b.n	80011fa <__aeabi_dmul+0xd6>
 80015fc:	000007ff 	.word	0x000007ff
 8001600:	0000041e 	.word	0x0000041e
 8001604:	0000043e 	.word	0x0000043e

08001608 <__aeabi_dsub>:
 8001608:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800160a:	4657      	mov	r7, sl
 800160c:	464e      	mov	r6, r9
 800160e:	4645      	mov	r5, r8
 8001610:	46de      	mov	lr, fp
 8001612:	000c      	movs	r4, r1
 8001614:	0309      	lsls	r1, r1, #12
 8001616:	b5e0      	push	{r5, r6, r7, lr}
 8001618:	0a49      	lsrs	r1, r1, #9
 800161a:	0f46      	lsrs	r6, r0, #29
 800161c:	005f      	lsls	r7, r3, #1
 800161e:	4331      	orrs	r1, r6
 8001620:	031e      	lsls	r6, r3, #12
 8001622:	0fdb      	lsrs	r3, r3, #31
 8001624:	0a76      	lsrs	r6, r6, #9
 8001626:	469b      	mov	fp, r3
 8001628:	0f53      	lsrs	r3, r2, #29
 800162a:	4333      	orrs	r3, r6
 800162c:	4ec8      	ldr	r6, [pc, #800]	; (8001950 <__aeabi_dsub+0x348>)
 800162e:	0065      	lsls	r5, r4, #1
 8001630:	00c0      	lsls	r0, r0, #3
 8001632:	0fe4      	lsrs	r4, r4, #31
 8001634:	00d2      	lsls	r2, r2, #3
 8001636:	0d6d      	lsrs	r5, r5, #21
 8001638:	46a2      	mov	sl, r4
 800163a:	4681      	mov	r9, r0
 800163c:	0d7f      	lsrs	r7, r7, #21
 800163e:	469c      	mov	ip, r3
 8001640:	4690      	mov	r8, r2
 8001642:	42b7      	cmp	r7, r6
 8001644:	d100      	bne.n	8001648 <__aeabi_dsub+0x40>
 8001646:	e0b9      	b.n	80017bc <__aeabi_dsub+0x1b4>
 8001648:	465b      	mov	r3, fp
 800164a:	2601      	movs	r6, #1
 800164c:	4073      	eors	r3, r6
 800164e:	469b      	mov	fp, r3
 8001650:	1bee      	subs	r6, r5, r7
 8001652:	45a3      	cmp	fp, r4
 8001654:	d100      	bne.n	8001658 <__aeabi_dsub+0x50>
 8001656:	e083      	b.n	8001760 <__aeabi_dsub+0x158>
 8001658:	2e00      	cmp	r6, #0
 800165a:	dd63      	ble.n	8001724 <__aeabi_dsub+0x11c>
 800165c:	2f00      	cmp	r7, #0
 800165e:	d000      	beq.n	8001662 <__aeabi_dsub+0x5a>
 8001660:	e0b1      	b.n	80017c6 <__aeabi_dsub+0x1be>
 8001662:	4663      	mov	r3, ip
 8001664:	4313      	orrs	r3, r2
 8001666:	d100      	bne.n	800166a <__aeabi_dsub+0x62>
 8001668:	e123      	b.n	80018b2 <__aeabi_dsub+0x2aa>
 800166a:	1e73      	subs	r3, r6, #1
 800166c:	2b00      	cmp	r3, #0
 800166e:	d000      	beq.n	8001672 <__aeabi_dsub+0x6a>
 8001670:	e1ba      	b.n	80019e8 <__aeabi_dsub+0x3e0>
 8001672:	1a86      	subs	r6, r0, r2
 8001674:	4663      	mov	r3, ip
 8001676:	42b0      	cmp	r0, r6
 8001678:	4180      	sbcs	r0, r0
 800167a:	2501      	movs	r5, #1
 800167c:	1ac9      	subs	r1, r1, r3
 800167e:	4240      	negs	r0, r0
 8001680:	1a09      	subs	r1, r1, r0
 8001682:	020b      	lsls	r3, r1, #8
 8001684:	d400      	bmi.n	8001688 <__aeabi_dsub+0x80>
 8001686:	e147      	b.n	8001918 <__aeabi_dsub+0x310>
 8001688:	0249      	lsls	r1, r1, #9
 800168a:	0a4b      	lsrs	r3, r1, #9
 800168c:	4698      	mov	r8, r3
 800168e:	4643      	mov	r3, r8
 8001690:	2b00      	cmp	r3, #0
 8001692:	d100      	bne.n	8001696 <__aeabi_dsub+0x8e>
 8001694:	e189      	b.n	80019aa <__aeabi_dsub+0x3a2>
 8001696:	4640      	mov	r0, r8
 8001698:	f000 fb8a 	bl	8001db0 <__clzsi2>
 800169c:	0003      	movs	r3, r0
 800169e:	3b08      	subs	r3, #8
 80016a0:	2b1f      	cmp	r3, #31
 80016a2:	dd00      	ble.n	80016a6 <__aeabi_dsub+0x9e>
 80016a4:	e17c      	b.n	80019a0 <__aeabi_dsub+0x398>
 80016a6:	2220      	movs	r2, #32
 80016a8:	0030      	movs	r0, r6
 80016aa:	1ad2      	subs	r2, r2, r3
 80016ac:	4641      	mov	r1, r8
 80016ae:	40d0      	lsrs	r0, r2
 80016b0:	4099      	lsls	r1, r3
 80016b2:	0002      	movs	r2, r0
 80016b4:	409e      	lsls	r6, r3
 80016b6:	430a      	orrs	r2, r1
 80016b8:	429d      	cmp	r5, r3
 80016ba:	dd00      	ble.n	80016be <__aeabi_dsub+0xb6>
 80016bc:	e16a      	b.n	8001994 <__aeabi_dsub+0x38c>
 80016be:	1b5d      	subs	r5, r3, r5
 80016c0:	1c6b      	adds	r3, r5, #1
 80016c2:	2b1f      	cmp	r3, #31
 80016c4:	dd00      	ble.n	80016c8 <__aeabi_dsub+0xc0>
 80016c6:	e194      	b.n	80019f2 <__aeabi_dsub+0x3ea>
 80016c8:	2120      	movs	r1, #32
 80016ca:	0010      	movs	r0, r2
 80016cc:	0035      	movs	r5, r6
 80016ce:	1ac9      	subs	r1, r1, r3
 80016d0:	408e      	lsls	r6, r1
 80016d2:	40da      	lsrs	r2, r3
 80016d4:	4088      	lsls	r0, r1
 80016d6:	40dd      	lsrs	r5, r3
 80016d8:	1e71      	subs	r1, r6, #1
 80016da:	418e      	sbcs	r6, r1
 80016dc:	0011      	movs	r1, r2
 80016de:	2207      	movs	r2, #7
 80016e0:	4328      	orrs	r0, r5
 80016e2:	2500      	movs	r5, #0
 80016e4:	4306      	orrs	r6, r0
 80016e6:	4032      	ands	r2, r6
 80016e8:	2a00      	cmp	r2, #0
 80016ea:	d009      	beq.n	8001700 <__aeabi_dsub+0xf8>
 80016ec:	230f      	movs	r3, #15
 80016ee:	4033      	ands	r3, r6
 80016f0:	2b04      	cmp	r3, #4
 80016f2:	d005      	beq.n	8001700 <__aeabi_dsub+0xf8>
 80016f4:	1d33      	adds	r3, r6, #4
 80016f6:	42b3      	cmp	r3, r6
 80016f8:	41b6      	sbcs	r6, r6
 80016fa:	4276      	negs	r6, r6
 80016fc:	1989      	adds	r1, r1, r6
 80016fe:	001e      	movs	r6, r3
 8001700:	020b      	lsls	r3, r1, #8
 8001702:	d400      	bmi.n	8001706 <__aeabi_dsub+0xfe>
 8001704:	e23d      	b.n	8001b82 <__aeabi_dsub+0x57a>
 8001706:	1c6a      	adds	r2, r5, #1
 8001708:	4b91      	ldr	r3, [pc, #580]	; (8001950 <__aeabi_dsub+0x348>)
 800170a:	0555      	lsls	r5, r2, #21
 800170c:	0d6d      	lsrs	r5, r5, #21
 800170e:	429a      	cmp	r2, r3
 8001710:	d100      	bne.n	8001714 <__aeabi_dsub+0x10c>
 8001712:	e119      	b.n	8001948 <__aeabi_dsub+0x340>
 8001714:	4a8f      	ldr	r2, [pc, #572]	; (8001954 <__aeabi_dsub+0x34c>)
 8001716:	08f6      	lsrs	r6, r6, #3
 8001718:	400a      	ands	r2, r1
 800171a:	0757      	lsls	r7, r2, #29
 800171c:	0252      	lsls	r2, r2, #9
 800171e:	4337      	orrs	r7, r6
 8001720:	0b12      	lsrs	r2, r2, #12
 8001722:	e09b      	b.n	800185c <__aeabi_dsub+0x254>
 8001724:	2e00      	cmp	r6, #0
 8001726:	d000      	beq.n	800172a <__aeabi_dsub+0x122>
 8001728:	e0c5      	b.n	80018b6 <__aeabi_dsub+0x2ae>
 800172a:	1c6e      	adds	r6, r5, #1
 800172c:	0576      	lsls	r6, r6, #21
 800172e:	0d76      	lsrs	r6, r6, #21
 8001730:	2e01      	cmp	r6, #1
 8001732:	dc00      	bgt.n	8001736 <__aeabi_dsub+0x12e>
 8001734:	e148      	b.n	80019c8 <__aeabi_dsub+0x3c0>
 8001736:	4667      	mov	r7, ip
 8001738:	1a86      	subs	r6, r0, r2
 800173a:	1bcb      	subs	r3, r1, r7
 800173c:	42b0      	cmp	r0, r6
 800173e:	41bf      	sbcs	r7, r7
 8001740:	427f      	negs	r7, r7
 8001742:	46b8      	mov	r8, r7
 8001744:	001f      	movs	r7, r3
 8001746:	4643      	mov	r3, r8
 8001748:	1aff      	subs	r7, r7, r3
 800174a:	003b      	movs	r3, r7
 800174c:	46b8      	mov	r8, r7
 800174e:	021b      	lsls	r3, r3, #8
 8001750:	d500      	bpl.n	8001754 <__aeabi_dsub+0x14c>
 8001752:	e15f      	b.n	8001a14 <__aeabi_dsub+0x40c>
 8001754:	4337      	orrs	r7, r6
 8001756:	d19a      	bne.n	800168e <__aeabi_dsub+0x86>
 8001758:	2200      	movs	r2, #0
 800175a:	2400      	movs	r4, #0
 800175c:	2500      	movs	r5, #0
 800175e:	e079      	b.n	8001854 <__aeabi_dsub+0x24c>
 8001760:	2e00      	cmp	r6, #0
 8001762:	dc00      	bgt.n	8001766 <__aeabi_dsub+0x15e>
 8001764:	e0fa      	b.n	800195c <__aeabi_dsub+0x354>
 8001766:	2f00      	cmp	r7, #0
 8001768:	d100      	bne.n	800176c <__aeabi_dsub+0x164>
 800176a:	e08d      	b.n	8001888 <__aeabi_dsub+0x280>
 800176c:	4b78      	ldr	r3, [pc, #480]	; (8001950 <__aeabi_dsub+0x348>)
 800176e:	429d      	cmp	r5, r3
 8001770:	d067      	beq.n	8001842 <__aeabi_dsub+0x23a>
 8001772:	2380      	movs	r3, #128	; 0x80
 8001774:	4667      	mov	r7, ip
 8001776:	041b      	lsls	r3, r3, #16
 8001778:	431f      	orrs	r7, r3
 800177a:	46bc      	mov	ip, r7
 800177c:	2e38      	cmp	r6, #56	; 0x38
 800177e:	dc00      	bgt.n	8001782 <__aeabi_dsub+0x17a>
 8001780:	e152      	b.n	8001a28 <__aeabi_dsub+0x420>
 8001782:	4663      	mov	r3, ip
 8001784:	4313      	orrs	r3, r2
 8001786:	1e5a      	subs	r2, r3, #1
 8001788:	4193      	sbcs	r3, r2
 800178a:	181e      	adds	r6, r3, r0
 800178c:	4286      	cmp	r6, r0
 800178e:	4180      	sbcs	r0, r0
 8001790:	4240      	negs	r0, r0
 8001792:	1809      	adds	r1, r1, r0
 8001794:	020b      	lsls	r3, r1, #8
 8001796:	d400      	bmi.n	800179a <__aeabi_dsub+0x192>
 8001798:	e0be      	b.n	8001918 <__aeabi_dsub+0x310>
 800179a:	4b6d      	ldr	r3, [pc, #436]	; (8001950 <__aeabi_dsub+0x348>)
 800179c:	3501      	adds	r5, #1
 800179e:	429d      	cmp	r5, r3
 80017a0:	d100      	bne.n	80017a4 <__aeabi_dsub+0x19c>
 80017a2:	e0d2      	b.n	800194a <__aeabi_dsub+0x342>
 80017a4:	4a6b      	ldr	r2, [pc, #428]	; (8001954 <__aeabi_dsub+0x34c>)
 80017a6:	0873      	lsrs	r3, r6, #1
 80017a8:	400a      	ands	r2, r1
 80017aa:	2101      	movs	r1, #1
 80017ac:	400e      	ands	r6, r1
 80017ae:	431e      	orrs	r6, r3
 80017b0:	0851      	lsrs	r1, r2, #1
 80017b2:	07d3      	lsls	r3, r2, #31
 80017b4:	2207      	movs	r2, #7
 80017b6:	431e      	orrs	r6, r3
 80017b8:	4032      	ands	r2, r6
 80017ba:	e795      	b.n	80016e8 <__aeabi_dsub+0xe0>
 80017bc:	001e      	movs	r6, r3
 80017be:	4316      	orrs	r6, r2
 80017c0:	d000      	beq.n	80017c4 <__aeabi_dsub+0x1bc>
 80017c2:	e745      	b.n	8001650 <__aeabi_dsub+0x48>
 80017c4:	e740      	b.n	8001648 <__aeabi_dsub+0x40>
 80017c6:	4b62      	ldr	r3, [pc, #392]	; (8001950 <__aeabi_dsub+0x348>)
 80017c8:	429d      	cmp	r5, r3
 80017ca:	d03a      	beq.n	8001842 <__aeabi_dsub+0x23a>
 80017cc:	2380      	movs	r3, #128	; 0x80
 80017ce:	4667      	mov	r7, ip
 80017d0:	041b      	lsls	r3, r3, #16
 80017d2:	431f      	orrs	r7, r3
 80017d4:	46bc      	mov	ip, r7
 80017d6:	2e38      	cmp	r6, #56	; 0x38
 80017d8:	dd00      	ble.n	80017dc <__aeabi_dsub+0x1d4>
 80017da:	e0eb      	b.n	80019b4 <__aeabi_dsub+0x3ac>
 80017dc:	2e1f      	cmp	r6, #31
 80017de:	dc00      	bgt.n	80017e2 <__aeabi_dsub+0x1da>
 80017e0:	e13a      	b.n	8001a58 <__aeabi_dsub+0x450>
 80017e2:	0033      	movs	r3, r6
 80017e4:	4667      	mov	r7, ip
 80017e6:	3b20      	subs	r3, #32
 80017e8:	40df      	lsrs	r7, r3
 80017ea:	003b      	movs	r3, r7
 80017ec:	2e20      	cmp	r6, #32
 80017ee:	d005      	beq.n	80017fc <__aeabi_dsub+0x1f4>
 80017f0:	2740      	movs	r7, #64	; 0x40
 80017f2:	1bbf      	subs	r7, r7, r6
 80017f4:	4666      	mov	r6, ip
 80017f6:	40be      	lsls	r6, r7
 80017f8:	4332      	orrs	r2, r6
 80017fa:	4690      	mov	r8, r2
 80017fc:	4646      	mov	r6, r8
 80017fe:	1e72      	subs	r2, r6, #1
 8001800:	4196      	sbcs	r6, r2
 8001802:	4333      	orrs	r3, r6
 8001804:	e0da      	b.n	80019bc <__aeabi_dsub+0x3b4>
 8001806:	2b00      	cmp	r3, #0
 8001808:	d100      	bne.n	800180c <__aeabi_dsub+0x204>
 800180a:	e214      	b.n	8001c36 <__aeabi_dsub+0x62e>
 800180c:	4663      	mov	r3, ip
 800180e:	4313      	orrs	r3, r2
 8001810:	d100      	bne.n	8001814 <__aeabi_dsub+0x20c>
 8001812:	e168      	b.n	8001ae6 <__aeabi_dsub+0x4de>
 8001814:	2380      	movs	r3, #128	; 0x80
 8001816:	074e      	lsls	r6, r1, #29
 8001818:	08c0      	lsrs	r0, r0, #3
 800181a:	08c9      	lsrs	r1, r1, #3
 800181c:	031b      	lsls	r3, r3, #12
 800181e:	4306      	orrs	r6, r0
 8001820:	4219      	tst	r1, r3
 8001822:	d008      	beq.n	8001836 <__aeabi_dsub+0x22e>
 8001824:	4660      	mov	r0, ip
 8001826:	08c0      	lsrs	r0, r0, #3
 8001828:	4218      	tst	r0, r3
 800182a:	d104      	bne.n	8001836 <__aeabi_dsub+0x22e>
 800182c:	4663      	mov	r3, ip
 800182e:	0001      	movs	r1, r0
 8001830:	08d2      	lsrs	r2, r2, #3
 8001832:	075e      	lsls	r6, r3, #29
 8001834:	4316      	orrs	r6, r2
 8001836:	00f3      	lsls	r3, r6, #3
 8001838:	4699      	mov	r9, r3
 800183a:	00c9      	lsls	r1, r1, #3
 800183c:	0f72      	lsrs	r2, r6, #29
 800183e:	4d44      	ldr	r5, [pc, #272]	; (8001950 <__aeabi_dsub+0x348>)
 8001840:	4311      	orrs	r1, r2
 8001842:	464b      	mov	r3, r9
 8001844:	08de      	lsrs	r6, r3, #3
 8001846:	4b42      	ldr	r3, [pc, #264]	; (8001950 <__aeabi_dsub+0x348>)
 8001848:	074f      	lsls	r7, r1, #29
 800184a:	4337      	orrs	r7, r6
 800184c:	08ca      	lsrs	r2, r1, #3
 800184e:	429d      	cmp	r5, r3
 8001850:	d100      	bne.n	8001854 <__aeabi_dsub+0x24c>
 8001852:	e06e      	b.n	8001932 <__aeabi_dsub+0x32a>
 8001854:	0312      	lsls	r2, r2, #12
 8001856:	056d      	lsls	r5, r5, #21
 8001858:	0b12      	lsrs	r2, r2, #12
 800185a:	0d6d      	lsrs	r5, r5, #21
 800185c:	2100      	movs	r1, #0
 800185e:	0312      	lsls	r2, r2, #12
 8001860:	0b13      	lsrs	r3, r2, #12
 8001862:	0d0a      	lsrs	r2, r1, #20
 8001864:	0512      	lsls	r2, r2, #20
 8001866:	431a      	orrs	r2, r3
 8001868:	4b3b      	ldr	r3, [pc, #236]	; (8001958 <__aeabi_dsub+0x350>)
 800186a:	052d      	lsls	r5, r5, #20
 800186c:	4013      	ands	r3, r2
 800186e:	432b      	orrs	r3, r5
 8001870:	005b      	lsls	r3, r3, #1
 8001872:	07e4      	lsls	r4, r4, #31
 8001874:	085b      	lsrs	r3, r3, #1
 8001876:	4323      	orrs	r3, r4
 8001878:	0038      	movs	r0, r7
 800187a:	0019      	movs	r1, r3
 800187c:	bc3c      	pop	{r2, r3, r4, r5}
 800187e:	4690      	mov	r8, r2
 8001880:	4699      	mov	r9, r3
 8001882:	46a2      	mov	sl, r4
 8001884:	46ab      	mov	fp, r5
 8001886:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001888:	4663      	mov	r3, ip
 800188a:	4313      	orrs	r3, r2
 800188c:	d011      	beq.n	80018b2 <__aeabi_dsub+0x2aa>
 800188e:	1e73      	subs	r3, r6, #1
 8001890:	2b00      	cmp	r3, #0
 8001892:	d000      	beq.n	8001896 <__aeabi_dsub+0x28e>
 8001894:	e107      	b.n	8001aa6 <__aeabi_dsub+0x49e>
 8001896:	1886      	adds	r6, r0, r2
 8001898:	4286      	cmp	r6, r0
 800189a:	4180      	sbcs	r0, r0
 800189c:	4461      	add	r1, ip
 800189e:	4240      	negs	r0, r0
 80018a0:	1809      	adds	r1, r1, r0
 80018a2:	2501      	movs	r5, #1
 80018a4:	020b      	lsls	r3, r1, #8
 80018a6:	d537      	bpl.n	8001918 <__aeabi_dsub+0x310>
 80018a8:	2502      	movs	r5, #2
 80018aa:	e77b      	b.n	80017a4 <__aeabi_dsub+0x19c>
 80018ac:	003e      	movs	r6, r7
 80018ae:	4661      	mov	r1, ip
 80018b0:	4691      	mov	r9, r2
 80018b2:	0035      	movs	r5, r6
 80018b4:	e7c5      	b.n	8001842 <__aeabi_dsub+0x23a>
 80018b6:	465c      	mov	r4, fp
 80018b8:	2d00      	cmp	r5, #0
 80018ba:	d000      	beq.n	80018be <__aeabi_dsub+0x2b6>
 80018bc:	e0e1      	b.n	8001a82 <__aeabi_dsub+0x47a>
 80018be:	000b      	movs	r3, r1
 80018c0:	4303      	orrs	r3, r0
 80018c2:	d0f3      	beq.n	80018ac <__aeabi_dsub+0x2a4>
 80018c4:	1c73      	adds	r3, r6, #1
 80018c6:	d100      	bne.n	80018ca <__aeabi_dsub+0x2c2>
 80018c8:	e1ac      	b.n	8001c24 <__aeabi_dsub+0x61c>
 80018ca:	4b21      	ldr	r3, [pc, #132]	; (8001950 <__aeabi_dsub+0x348>)
 80018cc:	429f      	cmp	r7, r3
 80018ce:	d100      	bne.n	80018d2 <__aeabi_dsub+0x2ca>
 80018d0:	e13a      	b.n	8001b48 <__aeabi_dsub+0x540>
 80018d2:	43f3      	mvns	r3, r6
 80018d4:	2b38      	cmp	r3, #56	; 0x38
 80018d6:	dd00      	ble.n	80018da <__aeabi_dsub+0x2d2>
 80018d8:	e16f      	b.n	8001bba <__aeabi_dsub+0x5b2>
 80018da:	2b1f      	cmp	r3, #31
 80018dc:	dd00      	ble.n	80018e0 <__aeabi_dsub+0x2d8>
 80018de:	e18c      	b.n	8001bfa <__aeabi_dsub+0x5f2>
 80018e0:	2520      	movs	r5, #32
 80018e2:	000e      	movs	r6, r1
 80018e4:	1aed      	subs	r5, r5, r3
 80018e6:	40ae      	lsls	r6, r5
 80018e8:	46b0      	mov	r8, r6
 80018ea:	0006      	movs	r6, r0
 80018ec:	46aa      	mov	sl, r5
 80018ee:	40de      	lsrs	r6, r3
 80018f0:	4645      	mov	r5, r8
 80018f2:	4335      	orrs	r5, r6
 80018f4:	002e      	movs	r6, r5
 80018f6:	4655      	mov	r5, sl
 80018f8:	40d9      	lsrs	r1, r3
 80018fa:	40a8      	lsls	r0, r5
 80018fc:	4663      	mov	r3, ip
 80018fe:	1e45      	subs	r5, r0, #1
 8001900:	41a8      	sbcs	r0, r5
 8001902:	1a5b      	subs	r3, r3, r1
 8001904:	469c      	mov	ip, r3
 8001906:	4330      	orrs	r0, r6
 8001908:	1a16      	subs	r6, r2, r0
 800190a:	42b2      	cmp	r2, r6
 800190c:	4192      	sbcs	r2, r2
 800190e:	4663      	mov	r3, ip
 8001910:	4252      	negs	r2, r2
 8001912:	1a99      	subs	r1, r3, r2
 8001914:	003d      	movs	r5, r7
 8001916:	e6b4      	b.n	8001682 <__aeabi_dsub+0x7a>
 8001918:	2207      	movs	r2, #7
 800191a:	4032      	ands	r2, r6
 800191c:	2a00      	cmp	r2, #0
 800191e:	d000      	beq.n	8001922 <__aeabi_dsub+0x31a>
 8001920:	e6e4      	b.n	80016ec <__aeabi_dsub+0xe4>
 8001922:	4b0b      	ldr	r3, [pc, #44]	; (8001950 <__aeabi_dsub+0x348>)
 8001924:	08f6      	lsrs	r6, r6, #3
 8001926:	074f      	lsls	r7, r1, #29
 8001928:	4337      	orrs	r7, r6
 800192a:	08ca      	lsrs	r2, r1, #3
 800192c:	429d      	cmp	r5, r3
 800192e:	d000      	beq.n	8001932 <__aeabi_dsub+0x32a>
 8001930:	e790      	b.n	8001854 <__aeabi_dsub+0x24c>
 8001932:	003b      	movs	r3, r7
 8001934:	4313      	orrs	r3, r2
 8001936:	d100      	bne.n	800193a <__aeabi_dsub+0x332>
 8001938:	e1a6      	b.n	8001c88 <__aeabi_dsub+0x680>
 800193a:	2380      	movs	r3, #128	; 0x80
 800193c:	031b      	lsls	r3, r3, #12
 800193e:	431a      	orrs	r2, r3
 8001940:	0312      	lsls	r2, r2, #12
 8001942:	0b12      	lsrs	r2, r2, #12
 8001944:	4d02      	ldr	r5, [pc, #8]	; (8001950 <__aeabi_dsub+0x348>)
 8001946:	e789      	b.n	800185c <__aeabi_dsub+0x254>
 8001948:	0015      	movs	r5, r2
 800194a:	2200      	movs	r2, #0
 800194c:	2700      	movs	r7, #0
 800194e:	e785      	b.n	800185c <__aeabi_dsub+0x254>
 8001950:	000007ff 	.word	0x000007ff
 8001954:	ff7fffff 	.word	0xff7fffff
 8001958:	800fffff 	.word	0x800fffff
 800195c:	2e00      	cmp	r6, #0
 800195e:	d000      	beq.n	8001962 <__aeabi_dsub+0x35a>
 8001960:	e0c7      	b.n	8001af2 <__aeabi_dsub+0x4ea>
 8001962:	1c6b      	adds	r3, r5, #1
 8001964:	055e      	lsls	r6, r3, #21
 8001966:	0d76      	lsrs	r6, r6, #21
 8001968:	2e01      	cmp	r6, #1
 800196a:	dc00      	bgt.n	800196e <__aeabi_dsub+0x366>
 800196c:	e0f0      	b.n	8001b50 <__aeabi_dsub+0x548>
 800196e:	4dc8      	ldr	r5, [pc, #800]	; (8001c90 <__aeabi_dsub+0x688>)
 8001970:	42ab      	cmp	r3, r5
 8001972:	d100      	bne.n	8001976 <__aeabi_dsub+0x36e>
 8001974:	e0b9      	b.n	8001aea <__aeabi_dsub+0x4e2>
 8001976:	1885      	adds	r5, r0, r2
 8001978:	000a      	movs	r2, r1
 800197a:	4285      	cmp	r5, r0
 800197c:	4189      	sbcs	r1, r1
 800197e:	4462      	add	r2, ip
 8001980:	4249      	negs	r1, r1
 8001982:	1851      	adds	r1, r2, r1
 8001984:	2207      	movs	r2, #7
 8001986:	07ce      	lsls	r6, r1, #31
 8001988:	086d      	lsrs	r5, r5, #1
 800198a:	432e      	orrs	r6, r5
 800198c:	0849      	lsrs	r1, r1, #1
 800198e:	4032      	ands	r2, r6
 8001990:	001d      	movs	r5, r3
 8001992:	e6a9      	b.n	80016e8 <__aeabi_dsub+0xe0>
 8001994:	49bf      	ldr	r1, [pc, #764]	; (8001c94 <__aeabi_dsub+0x68c>)
 8001996:	1aed      	subs	r5, r5, r3
 8001998:	4011      	ands	r1, r2
 800199a:	2207      	movs	r2, #7
 800199c:	4032      	ands	r2, r6
 800199e:	e6a3      	b.n	80016e8 <__aeabi_dsub+0xe0>
 80019a0:	0032      	movs	r2, r6
 80019a2:	3828      	subs	r0, #40	; 0x28
 80019a4:	4082      	lsls	r2, r0
 80019a6:	2600      	movs	r6, #0
 80019a8:	e686      	b.n	80016b8 <__aeabi_dsub+0xb0>
 80019aa:	0030      	movs	r0, r6
 80019ac:	f000 fa00 	bl	8001db0 <__clzsi2>
 80019b0:	3020      	adds	r0, #32
 80019b2:	e673      	b.n	800169c <__aeabi_dsub+0x94>
 80019b4:	4663      	mov	r3, ip
 80019b6:	4313      	orrs	r3, r2
 80019b8:	1e5a      	subs	r2, r3, #1
 80019ba:	4193      	sbcs	r3, r2
 80019bc:	1ac6      	subs	r6, r0, r3
 80019be:	42b0      	cmp	r0, r6
 80019c0:	4180      	sbcs	r0, r0
 80019c2:	4240      	negs	r0, r0
 80019c4:	1a09      	subs	r1, r1, r0
 80019c6:	e65c      	b.n	8001682 <__aeabi_dsub+0x7a>
 80019c8:	000e      	movs	r6, r1
 80019ca:	4667      	mov	r7, ip
 80019cc:	4306      	orrs	r6, r0
 80019ce:	4317      	orrs	r7, r2
 80019d0:	2d00      	cmp	r5, #0
 80019d2:	d15e      	bne.n	8001a92 <__aeabi_dsub+0x48a>
 80019d4:	2e00      	cmp	r6, #0
 80019d6:	d000      	beq.n	80019da <__aeabi_dsub+0x3d2>
 80019d8:	e0f3      	b.n	8001bc2 <__aeabi_dsub+0x5ba>
 80019da:	2f00      	cmp	r7, #0
 80019dc:	d100      	bne.n	80019e0 <__aeabi_dsub+0x3d8>
 80019de:	e11e      	b.n	8001c1e <__aeabi_dsub+0x616>
 80019e0:	465c      	mov	r4, fp
 80019e2:	4661      	mov	r1, ip
 80019e4:	4691      	mov	r9, r2
 80019e6:	e72c      	b.n	8001842 <__aeabi_dsub+0x23a>
 80019e8:	4fa9      	ldr	r7, [pc, #676]	; (8001c90 <__aeabi_dsub+0x688>)
 80019ea:	42be      	cmp	r6, r7
 80019ec:	d07b      	beq.n	8001ae6 <__aeabi_dsub+0x4de>
 80019ee:	001e      	movs	r6, r3
 80019f0:	e6f1      	b.n	80017d6 <__aeabi_dsub+0x1ce>
 80019f2:	0010      	movs	r0, r2
 80019f4:	3d1f      	subs	r5, #31
 80019f6:	40e8      	lsrs	r0, r5
 80019f8:	2b20      	cmp	r3, #32
 80019fa:	d003      	beq.n	8001a04 <__aeabi_dsub+0x3fc>
 80019fc:	2140      	movs	r1, #64	; 0x40
 80019fe:	1acb      	subs	r3, r1, r3
 8001a00:	409a      	lsls	r2, r3
 8001a02:	4316      	orrs	r6, r2
 8001a04:	1e73      	subs	r3, r6, #1
 8001a06:	419e      	sbcs	r6, r3
 8001a08:	2207      	movs	r2, #7
 8001a0a:	4306      	orrs	r6, r0
 8001a0c:	4032      	ands	r2, r6
 8001a0e:	2100      	movs	r1, #0
 8001a10:	2500      	movs	r5, #0
 8001a12:	e783      	b.n	800191c <__aeabi_dsub+0x314>
 8001a14:	1a16      	subs	r6, r2, r0
 8001a16:	4663      	mov	r3, ip
 8001a18:	42b2      	cmp	r2, r6
 8001a1a:	4180      	sbcs	r0, r0
 8001a1c:	1a59      	subs	r1, r3, r1
 8001a1e:	4240      	negs	r0, r0
 8001a20:	1a0b      	subs	r3, r1, r0
 8001a22:	4698      	mov	r8, r3
 8001a24:	465c      	mov	r4, fp
 8001a26:	e632      	b.n	800168e <__aeabi_dsub+0x86>
 8001a28:	2e1f      	cmp	r6, #31
 8001a2a:	dd00      	ble.n	8001a2e <__aeabi_dsub+0x426>
 8001a2c:	e0ab      	b.n	8001b86 <__aeabi_dsub+0x57e>
 8001a2e:	2720      	movs	r7, #32
 8001a30:	1bbb      	subs	r3, r7, r6
 8001a32:	469a      	mov	sl, r3
 8001a34:	4663      	mov	r3, ip
 8001a36:	4657      	mov	r7, sl
 8001a38:	40bb      	lsls	r3, r7
 8001a3a:	4699      	mov	r9, r3
 8001a3c:	0013      	movs	r3, r2
 8001a3e:	464f      	mov	r7, r9
 8001a40:	40f3      	lsrs	r3, r6
 8001a42:	431f      	orrs	r7, r3
 8001a44:	003b      	movs	r3, r7
 8001a46:	4657      	mov	r7, sl
 8001a48:	40ba      	lsls	r2, r7
 8001a4a:	1e57      	subs	r7, r2, #1
 8001a4c:	41ba      	sbcs	r2, r7
 8001a4e:	4313      	orrs	r3, r2
 8001a50:	4662      	mov	r2, ip
 8001a52:	40f2      	lsrs	r2, r6
 8001a54:	1889      	adds	r1, r1, r2
 8001a56:	e698      	b.n	800178a <__aeabi_dsub+0x182>
 8001a58:	2720      	movs	r7, #32
 8001a5a:	1bbb      	subs	r3, r7, r6
 8001a5c:	469a      	mov	sl, r3
 8001a5e:	4663      	mov	r3, ip
 8001a60:	4657      	mov	r7, sl
 8001a62:	40bb      	lsls	r3, r7
 8001a64:	4699      	mov	r9, r3
 8001a66:	0013      	movs	r3, r2
 8001a68:	464f      	mov	r7, r9
 8001a6a:	40f3      	lsrs	r3, r6
 8001a6c:	431f      	orrs	r7, r3
 8001a6e:	003b      	movs	r3, r7
 8001a70:	4657      	mov	r7, sl
 8001a72:	40ba      	lsls	r2, r7
 8001a74:	1e57      	subs	r7, r2, #1
 8001a76:	41ba      	sbcs	r2, r7
 8001a78:	4313      	orrs	r3, r2
 8001a7a:	4662      	mov	r2, ip
 8001a7c:	40f2      	lsrs	r2, r6
 8001a7e:	1a89      	subs	r1, r1, r2
 8001a80:	e79c      	b.n	80019bc <__aeabi_dsub+0x3b4>
 8001a82:	4b83      	ldr	r3, [pc, #524]	; (8001c90 <__aeabi_dsub+0x688>)
 8001a84:	429f      	cmp	r7, r3
 8001a86:	d05f      	beq.n	8001b48 <__aeabi_dsub+0x540>
 8001a88:	2580      	movs	r5, #128	; 0x80
 8001a8a:	042d      	lsls	r5, r5, #16
 8001a8c:	4273      	negs	r3, r6
 8001a8e:	4329      	orrs	r1, r5
 8001a90:	e720      	b.n	80018d4 <__aeabi_dsub+0x2cc>
 8001a92:	2e00      	cmp	r6, #0
 8001a94:	d10c      	bne.n	8001ab0 <__aeabi_dsub+0x4a8>
 8001a96:	2f00      	cmp	r7, #0
 8001a98:	d100      	bne.n	8001a9c <__aeabi_dsub+0x494>
 8001a9a:	e0d0      	b.n	8001c3e <__aeabi_dsub+0x636>
 8001a9c:	465c      	mov	r4, fp
 8001a9e:	4661      	mov	r1, ip
 8001aa0:	4691      	mov	r9, r2
 8001aa2:	4d7b      	ldr	r5, [pc, #492]	; (8001c90 <__aeabi_dsub+0x688>)
 8001aa4:	e6cd      	b.n	8001842 <__aeabi_dsub+0x23a>
 8001aa6:	4f7a      	ldr	r7, [pc, #488]	; (8001c90 <__aeabi_dsub+0x688>)
 8001aa8:	42be      	cmp	r6, r7
 8001aaa:	d01c      	beq.n	8001ae6 <__aeabi_dsub+0x4de>
 8001aac:	001e      	movs	r6, r3
 8001aae:	e665      	b.n	800177c <__aeabi_dsub+0x174>
 8001ab0:	2f00      	cmp	r7, #0
 8001ab2:	d018      	beq.n	8001ae6 <__aeabi_dsub+0x4de>
 8001ab4:	08c0      	lsrs	r0, r0, #3
 8001ab6:	074e      	lsls	r6, r1, #29
 8001ab8:	4306      	orrs	r6, r0
 8001aba:	2080      	movs	r0, #128	; 0x80
 8001abc:	08c9      	lsrs	r1, r1, #3
 8001abe:	0300      	lsls	r0, r0, #12
 8001ac0:	4201      	tst	r1, r0
 8001ac2:	d008      	beq.n	8001ad6 <__aeabi_dsub+0x4ce>
 8001ac4:	4663      	mov	r3, ip
 8001ac6:	08dc      	lsrs	r4, r3, #3
 8001ac8:	4204      	tst	r4, r0
 8001aca:	d104      	bne.n	8001ad6 <__aeabi_dsub+0x4ce>
 8001acc:	0021      	movs	r1, r4
 8001ace:	46da      	mov	sl, fp
 8001ad0:	08d2      	lsrs	r2, r2, #3
 8001ad2:	075e      	lsls	r6, r3, #29
 8001ad4:	4316      	orrs	r6, r2
 8001ad6:	00f3      	lsls	r3, r6, #3
 8001ad8:	4699      	mov	r9, r3
 8001ada:	2401      	movs	r4, #1
 8001adc:	4653      	mov	r3, sl
 8001ade:	00c9      	lsls	r1, r1, #3
 8001ae0:	0f72      	lsrs	r2, r6, #29
 8001ae2:	4311      	orrs	r1, r2
 8001ae4:	401c      	ands	r4, r3
 8001ae6:	4d6a      	ldr	r5, [pc, #424]	; (8001c90 <__aeabi_dsub+0x688>)
 8001ae8:	e6ab      	b.n	8001842 <__aeabi_dsub+0x23a>
 8001aea:	001d      	movs	r5, r3
 8001aec:	2200      	movs	r2, #0
 8001aee:	2700      	movs	r7, #0
 8001af0:	e6b4      	b.n	800185c <__aeabi_dsub+0x254>
 8001af2:	2d00      	cmp	r5, #0
 8001af4:	d159      	bne.n	8001baa <__aeabi_dsub+0x5a2>
 8001af6:	000b      	movs	r3, r1
 8001af8:	4303      	orrs	r3, r0
 8001afa:	d100      	bne.n	8001afe <__aeabi_dsub+0x4f6>
 8001afc:	e6d6      	b.n	80018ac <__aeabi_dsub+0x2a4>
 8001afe:	1c73      	adds	r3, r6, #1
 8001b00:	d100      	bne.n	8001b04 <__aeabi_dsub+0x4fc>
 8001b02:	e0b2      	b.n	8001c6a <__aeabi_dsub+0x662>
 8001b04:	4b62      	ldr	r3, [pc, #392]	; (8001c90 <__aeabi_dsub+0x688>)
 8001b06:	429f      	cmp	r7, r3
 8001b08:	d01e      	beq.n	8001b48 <__aeabi_dsub+0x540>
 8001b0a:	43f3      	mvns	r3, r6
 8001b0c:	2b38      	cmp	r3, #56	; 0x38
 8001b0e:	dc6f      	bgt.n	8001bf0 <__aeabi_dsub+0x5e8>
 8001b10:	2b1f      	cmp	r3, #31
 8001b12:	dd00      	ble.n	8001b16 <__aeabi_dsub+0x50e>
 8001b14:	e097      	b.n	8001c46 <__aeabi_dsub+0x63e>
 8001b16:	2520      	movs	r5, #32
 8001b18:	000e      	movs	r6, r1
 8001b1a:	1aed      	subs	r5, r5, r3
 8001b1c:	40ae      	lsls	r6, r5
 8001b1e:	46b0      	mov	r8, r6
 8001b20:	0006      	movs	r6, r0
 8001b22:	46aa      	mov	sl, r5
 8001b24:	40de      	lsrs	r6, r3
 8001b26:	4645      	mov	r5, r8
 8001b28:	4335      	orrs	r5, r6
 8001b2a:	002e      	movs	r6, r5
 8001b2c:	4655      	mov	r5, sl
 8001b2e:	40a8      	lsls	r0, r5
 8001b30:	40d9      	lsrs	r1, r3
 8001b32:	1e45      	subs	r5, r0, #1
 8001b34:	41a8      	sbcs	r0, r5
 8001b36:	448c      	add	ip, r1
 8001b38:	4306      	orrs	r6, r0
 8001b3a:	18b6      	adds	r6, r6, r2
 8001b3c:	4296      	cmp	r6, r2
 8001b3e:	4192      	sbcs	r2, r2
 8001b40:	4251      	negs	r1, r2
 8001b42:	4461      	add	r1, ip
 8001b44:	003d      	movs	r5, r7
 8001b46:	e625      	b.n	8001794 <__aeabi_dsub+0x18c>
 8001b48:	003d      	movs	r5, r7
 8001b4a:	4661      	mov	r1, ip
 8001b4c:	4691      	mov	r9, r2
 8001b4e:	e678      	b.n	8001842 <__aeabi_dsub+0x23a>
 8001b50:	000b      	movs	r3, r1
 8001b52:	4303      	orrs	r3, r0
 8001b54:	2d00      	cmp	r5, #0
 8001b56:	d000      	beq.n	8001b5a <__aeabi_dsub+0x552>
 8001b58:	e655      	b.n	8001806 <__aeabi_dsub+0x1fe>
 8001b5a:	2b00      	cmp	r3, #0
 8001b5c:	d0f5      	beq.n	8001b4a <__aeabi_dsub+0x542>
 8001b5e:	4663      	mov	r3, ip
 8001b60:	4313      	orrs	r3, r2
 8001b62:	d100      	bne.n	8001b66 <__aeabi_dsub+0x55e>
 8001b64:	e66d      	b.n	8001842 <__aeabi_dsub+0x23a>
 8001b66:	1886      	adds	r6, r0, r2
 8001b68:	4286      	cmp	r6, r0
 8001b6a:	4180      	sbcs	r0, r0
 8001b6c:	4461      	add	r1, ip
 8001b6e:	4240      	negs	r0, r0
 8001b70:	1809      	adds	r1, r1, r0
 8001b72:	2200      	movs	r2, #0
 8001b74:	020b      	lsls	r3, r1, #8
 8001b76:	d400      	bmi.n	8001b7a <__aeabi_dsub+0x572>
 8001b78:	e6d0      	b.n	800191c <__aeabi_dsub+0x314>
 8001b7a:	4b46      	ldr	r3, [pc, #280]	; (8001c94 <__aeabi_dsub+0x68c>)
 8001b7c:	3501      	adds	r5, #1
 8001b7e:	4019      	ands	r1, r3
 8001b80:	e5b2      	b.n	80016e8 <__aeabi_dsub+0xe0>
 8001b82:	46b1      	mov	r9, r6
 8001b84:	e65d      	b.n	8001842 <__aeabi_dsub+0x23a>
 8001b86:	0033      	movs	r3, r6
 8001b88:	4667      	mov	r7, ip
 8001b8a:	3b20      	subs	r3, #32
 8001b8c:	40df      	lsrs	r7, r3
 8001b8e:	003b      	movs	r3, r7
 8001b90:	2e20      	cmp	r6, #32
 8001b92:	d005      	beq.n	8001ba0 <__aeabi_dsub+0x598>
 8001b94:	2740      	movs	r7, #64	; 0x40
 8001b96:	1bbf      	subs	r7, r7, r6
 8001b98:	4666      	mov	r6, ip
 8001b9a:	40be      	lsls	r6, r7
 8001b9c:	4332      	orrs	r2, r6
 8001b9e:	4690      	mov	r8, r2
 8001ba0:	4646      	mov	r6, r8
 8001ba2:	1e72      	subs	r2, r6, #1
 8001ba4:	4196      	sbcs	r6, r2
 8001ba6:	4333      	orrs	r3, r6
 8001ba8:	e5ef      	b.n	800178a <__aeabi_dsub+0x182>
 8001baa:	4b39      	ldr	r3, [pc, #228]	; (8001c90 <__aeabi_dsub+0x688>)
 8001bac:	429f      	cmp	r7, r3
 8001bae:	d0cb      	beq.n	8001b48 <__aeabi_dsub+0x540>
 8001bb0:	2580      	movs	r5, #128	; 0x80
 8001bb2:	042d      	lsls	r5, r5, #16
 8001bb4:	4273      	negs	r3, r6
 8001bb6:	4329      	orrs	r1, r5
 8001bb8:	e7a8      	b.n	8001b0c <__aeabi_dsub+0x504>
 8001bba:	4308      	orrs	r0, r1
 8001bbc:	1e41      	subs	r1, r0, #1
 8001bbe:	4188      	sbcs	r0, r1
 8001bc0:	e6a2      	b.n	8001908 <__aeabi_dsub+0x300>
 8001bc2:	2f00      	cmp	r7, #0
 8001bc4:	d100      	bne.n	8001bc8 <__aeabi_dsub+0x5c0>
 8001bc6:	e63c      	b.n	8001842 <__aeabi_dsub+0x23a>
 8001bc8:	4663      	mov	r3, ip
 8001bca:	1a86      	subs	r6, r0, r2
 8001bcc:	1acf      	subs	r7, r1, r3
 8001bce:	42b0      	cmp	r0, r6
 8001bd0:	419b      	sbcs	r3, r3
 8001bd2:	425b      	negs	r3, r3
 8001bd4:	1afb      	subs	r3, r7, r3
 8001bd6:	4698      	mov	r8, r3
 8001bd8:	021b      	lsls	r3, r3, #8
 8001bda:	d54e      	bpl.n	8001c7a <__aeabi_dsub+0x672>
 8001bdc:	1a16      	subs	r6, r2, r0
 8001bde:	4663      	mov	r3, ip
 8001be0:	42b2      	cmp	r2, r6
 8001be2:	4192      	sbcs	r2, r2
 8001be4:	1a59      	subs	r1, r3, r1
 8001be6:	4252      	negs	r2, r2
 8001be8:	1a89      	subs	r1, r1, r2
 8001bea:	465c      	mov	r4, fp
 8001bec:	2200      	movs	r2, #0
 8001bee:	e57b      	b.n	80016e8 <__aeabi_dsub+0xe0>
 8001bf0:	4301      	orrs	r1, r0
 8001bf2:	000e      	movs	r6, r1
 8001bf4:	1e71      	subs	r1, r6, #1
 8001bf6:	418e      	sbcs	r6, r1
 8001bf8:	e79f      	b.n	8001b3a <__aeabi_dsub+0x532>
 8001bfa:	001d      	movs	r5, r3
 8001bfc:	000e      	movs	r6, r1
 8001bfe:	3d20      	subs	r5, #32
 8001c00:	40ee      	lsrs	r6, r5
 8001c02:	46b0      	mov	r8, r6
 8001c04:	2b20      	cmp	r3, #32
 8001c06:	d004      	beq.n	8001c12 <__aeabi_dsub+0x60a>
 8001c08:	2540      	movs	r5, #64	; 0x40
 8001c0a:	1aeb      	subs	r3, r5, r3
 8001c0c:	4099      	lsls	r1, r3
 8001c0e:	4308      	orrs	r0, r1
 8001c10:	4681      	mov	r9, r0
 8001c12:	4648      	mov	r0, r9
 8001c14:	4643      	mov	r3, r8
 8001c16:	1e41      	subs	r1, r0, #1
 8001c18:	4188      	sbcs	r0, r1
 8001c1a:	4318      	orrs	r0, r3
 8001c1c:	e674      	b.n	8001908 <__aeabi_dsub+0x300>
 8001c1e:	2200      	movs	r2, #0
 8001c20:	2400      	movs	r4, #0
 8001c22:	e617      	b.n	8001854 <__aeabi_dsub+0x24c>
 8001c24:	1a16      	subs	r6, r2, r0
 8001c26:	4663      	mov	r3, ip
 8001c28:	42b2      	cmp	r2, r6
 8001c2a:	4192      	sbcs	r2, r2
 8001c2c:	1a59      	subs	r1, r3, r1
 8001c2e:	4252      	negs	r2, r2
 8001c30:	1a89      	subs	r1, r1, r2
 8001c32:	003d      	movs	r5, r7
 8001c34:	e525      	b.n	8001682 <__aeabi_dsub+0x7a>
 8001c36:	4661      	mov	r1, ip
 8001c38:	4691      	mov	r9, r2
 8001c3a:	4d15      	ldr	r5, [pc, #84]	; (8001c90 <__aeabi_dsub+0x688>)
 8001c3c:	e601      	b.n	8001842 <__aeabi_dsub+0x23a>
 8001c3e:	2280      	movs	r2, #128	; 0x80
 8001c40:	2400      	movs	r4, #0
 8001c42:	0312      	lsls	r2, r2, #12
 8001c44:	e679      	b.n	800193a <__aeabi_dsub+0x332>
 8001c46:	001d      	movs	r5, r3
 8001c48:	000e      	movs	r6, r1
 8001c4a:	3d20      	subs	r5, #32
 8001c4c:	40ee      	lsrs	r6, r5
 8001c4e:	46b0      	mov	r8, r6
 8001c50:	2b20      	cmp	r3, #32
 8001c52:	d004      	beq.n	8001c5e <__aeabi_dsub+0x656>
 8001c54:	2540      	movs	r5, #64	; 0x40
 8001c56:	1aeb      	subs	r3, r5, r3
 8001c58:	4099      	lsls	r1, r3
 8001c5a:	4308      	orrs	r0, r1
 8001c5c:	4681      	mov	r9, r0
 8001c5e:	464e      	mov	r6, r9
 8001c60:	4643      	mov	r3, r8
 8001c62:	1e71      	subs	r1, r6, #1
 8001c64:	418e      	sbcs	r6, r1
 8001c66:	431e      	orrs	r6, r3
 8001c68:	e767      	b.n	8001b3a <__aeabi_dsub+0x532>
 8001c6a:	1886      	adds	r6, r0, r2
 8001c6c:	4296      	cmp	r6, r2
 8001c6e:	419b      	sbcs	r3, r3
 8001c70:	4461      	add	r1, ip
 8001c72:	425b      	negs	r3, r3
 8001c74:	18c9      	adds	r1, r1, r3
 8001c76:	003d      	movs	r5, r7
 8001c78:	e58c      	b.n	8001794 <__aeabi_dsub+0x18c>
 8001c7a:	4647      	mov	r7, r8
 8001c7c:	4337      	orrs	r7, r6
 8001c7e:	d0ce      	beq.n	8001c1e <__aeabi_dsub+0x616>
 8001c80:	2207      	movs	r2, #7
 8001c82:	4641      	mov	r1, r8
 8001c84:	4032      	ands	r2, r6
 8001c86:	e649      	b.n	800191c <__aeabi_dsub+0x314>
 8001c88:	2700      	movs	r7, #0
 8001c8a:	003a      	movs	r2, r7
 8001c8c:	e5e6      	b.n	800185c <__aeabi_dsub+0x254>
 8001c8e:	46c0      	nop			; (mov r8, r8)
 8001c90:	000007ff 	.word	0x000007ff
 8001c94:	ff7fffff 	.word	0xff7fffff

08001c98 <__aeabi_dcmpun>:
 8001c98:	b570      	push	{r4, r5, r6, lr}
 8001c9a:	4e0c      	ldr	r6, [pc, #48]	; (8001ccc <__aeabi_dcmpun+0x34>)
 8001c9c:	030d      	lsls	r5, r1, #12
 8001c9e:	031c      	lsls	r4, r3, #12
 8001ca0:	0049      	lsls	r1, r1, #1
 8001ca2:	005b      	lsls	r3, r3, #1
 8001ca4:	0b2d      	lsrs	r5, r5, #12
 8001ca6:	0d49      	lsrs	r1, r1, #21
 8001ca8:	0b24      	lsrs	r4, r4, #12
 8001caa:	0d5b      	lsrs	r3, r3, #21
 8001cac:	42b1      	cmp	r1, r6
 8001cae:	d008      	beq.n	8001cc2 <__aeabi_dcmpun+0x2a>
 8001cb0:	4906      	ldr	r1, [pc, #24]	; (8001ccc <__aeabi_dcmpun+0x34>)
 8001cb2:	2000      	movs	r0, #0
 8001cb4:	428b      	cmp	r3, r1
 8001cb6:	d103      	bne.n	8001cc0 <__aeabi_dcmpun+0x28>
 8001cb8:	4314      	orrs	r4, r2
 8001cba:	0020      	movs	r0, r4
 8001cbc:	1e44      	subs	r4, r0, #1
 8001cbe:	41a0      	sbcs	r0, r4
 8001cc0:	bd70      	pop	{r4, r5, r6, pc}
 8001cc2:	4305      	orrs	r5, r0
 8001cc4:	2001      	movs	r0, #1
 8001cc6:	2d00      	cmp	r5, #0
 8001cc8:	d1fa      	bne.n	8001cc0 <__aeabi_dcmpun+0x28>
 8001cca:	e7f1      	b.n	8001cb0 <__aeabi_dcmpun+0x18>
 8001ccc:	000007ff 	.word	0x000007ff

08001cd0 <__aeabi_d2iz>:
 8001cd0:	b530      	push	{r4, r5, lr}
 8001cd2:	4d14      	ldr	r5, [pc, #80]	; (8001d24 <__aeabi_d2iz+0x54>)
 8001cd4:	030a      	lsls	r2, r1, #12
 8001cd6:	004b      	lsls	r3, r1, #1
 8001cd8:	0b12      	lsrs	r2, r2, #12
 8001cda:	0d5b      	lsrs	r3, r3, #21
 8001cdc:	0fc9      	lsrs	r1, r1, #31
 8001cde:	2400      	movs	r4, #0
 8001ce0:	42ab      	cmp	r3, r5
 8001ce2:	dd11      	ble.n	8001d08 <__aeabi_d2iz+0x38>
 8001ce4:	4c10      	ldr	r4, [pc, #64]	; (8001d28 <__aeabi_d2iz+0x58>)
 8001ce6:	42a3      	cmp	r3, r4
 8001ce8:	dc10      	bgt.n	8001d0c <__aeabi_d2iz+0x3c>
 8001cea:	2480      	movs	r4, #128	; 0x80
 8001cec:	0364      	lsls	r4, r4, #13
 8001cee:	4322      	orrs	r2, r4
 8001cf0:	4c0e      	ldr	r4, [pc, #56]	; (8001d2c <__aeabi_d2iz+0x5c>)
 8001cf2:	1ae4      	subs	r4, r4, r3
 8001cf4:	2c1f      	cmp	r4, #31
 8001cf6:	dd0c      	ble.n	8001d12 <__aeabi_d2iz+0x42>
 8001cf8:	480d      	ldr	r0, [pc, #52]	; (8001d30 <__aeabi_d2iz+0x60>)
 8001cfa:	1ac3      	subs	r3, r0, r3
 8001cfc:	40da      	lsrs	r2, r3
 8001cfe:	0013      	movs	r3, r2
 8001d00:	425c      	negs	r4, r3
 8001d02:	2900      	cmp	r1, #0
 8001d04:	d100      	bne.n	8001d08 <__aeabi_d2iz+0x38>
 8001d06:	001c      	movs	r4, r3
 8001d08:	0020      	movs	r0, r4
 8001d0a:	bd30      	pop	{r4, r5, pc}
 8001d0c:	4b09      	ldr	r3, [pc, #36]	; (8001d34 <__aeabi_d2iz+0x64>)
 8001d0e:	18cc      	adds	r4, r1, r3
 8001d10:	e7fa      	b.n	8001d08 <__aeabi_d2iz+0x38>
 8001d12:	4d09      	ldr	r5, [pc, #36]	; (8001d38 <__aeabi_d2iz+0x68>)
 8001d14:	40e0      	lsrs	r0, r4
 8001d16:	46ac      	mov	ip, r5
 8001d18:	4463      	add	r3, ip
 8001d1a:	409a      	lsls	r2, r3
 8001d1c:	0013      	movs	r3, r2
 8001d1e:	4303      	orrs	r3, r0
 8001d20:	e7ee      	b.n	8001d00 <__aeabi_d2iz+0x30>
 8001d22:	46c0      	nop			; (mov r8, r8)
 8001d24:	000003fe 	.word	0x000003fe
 8001d28:	0000041d 	.word	0x0000041d
 8001d2c:	00000433 	.word	0x00000433
 8001d30:	00000413 	.word	0x00000413
 8001d34:	7fffffff 	.word	0x7fffffff
 8001d38:	fffffbed 	.word	0xfffffbed

08001d3c <__aeabi_i2d>:
 8001d3c:	b570      	push	{r4, r5, r6, lr}
 8001d3e:	2800      	cmp	r0, #0
 8001d40:	d02d      	beq.n	8001d9e <__aeabi_i2d+0x62>
 8001d42:	17c3      	asrs	r3, r0, #31
 8001d44:	18c5      	adds	r5, r0, r3
 8001d46:	405d      	eors	r5, r3
 8001d48:	0fc4      	lsrs	r4, r0, #31
 8001d4a:	0028      	movs	r0, r5
 8001d4c:	f000 f830 	bl	8001db0 <__clzsi2>
 8001d50:	4b15      	ldr	r3, [pc, #84]	; (8001da8 <__aeabi_i2d+0x6c>)
 8001d52:	1a1b      	subs	r3, r3, r0
 8001d54:	055b      	lsls	r3, r3, #21
 8001d56:	0d5b      	lsrs	r3, r3, #21
 8001d58:	280a      	cmp	r0, #10
 8001d5a:	dd15      	ble.n	8001d88 <__aeabi_i2d+0x4c>
 8001d5c:	380b      	subs	r0, #11
 8001d5e:	4085      	lsls	r5, r0
 8001d60:	2200      	movs	r2, #0
 8001d62:	032d      	lsls	r5, r5, #12
 8001d64:	0b2d      	lsrs	r5, r5, #12
 8001d66:	2100      	movs	r1, #0
 8001d68:	0010      	movs	r0, r2
 8001d6a:	032d      	lsls	r5, r5, #12
 8001d6c:	0d0a      	lsrs	r2, r1, #20
 8001d6e:	0b2d      	lsrs	r5, r5, #12
 8001d70:	0512      	lsls	r2, r2, #20
 8001d72:	432a      	orrs	r2, r5
 8001d74:	4d0d      	ldr	r5, [pc, #52]	; (8001dac <__aeabi_i2d+0x70>)
 8001d76:	051b      	lsls	r3, r3, #20
 8001d78:	402a      	ands	r2, r5
 8001d7a:	4313      	orrs	r3, r2
 8001d7c:	005b      	lsls	r3, r3, #1
 8001d7e:	07e4      	lsls	r4, r4, #31
 8001d80:	085b      	lsrs	r3, r3, #1
 8001d82:	4323      	orrs	r3, r4
 8001d84:	0019      	movs	r1, r3
 8001d86:	bd70      	pop	{r4, r5, r6, pc}
 8001d88:	0002      	movs	r2, r0
 8001d8a:	0029      	movs	r1, r5
 8001d8c:	3215      	adds	r2, #21
 8001d8e:	4091      	lsls	r1, r2
 8001d90:	000a      	movs	r2, r1
 8001d92:	210b      	movs	r1, #11
 8001d94:	1a08      	subs	r0, r1, r0
 8001d96:	40c5      	lsrs	r5, r0
 8001d98:	032d      	lsls	r5, r5, #12
 8001d9a:	0b2d      	lsrs	r5, r5, #12
 8001d9c:	e7e3      	b.n	8001d66 <__aeabi_i2d+0x2a>
 8001d9e:	2400      	movs	r4, #0
 8001da0:	2300      	movs	r3, #0
 8001da2:	2500      	movs	r5, #0
 8001da4:	2200      	movs	r2, #0
 8001da6:	e7de      	b.n	8001d66 <__aeabi_i2d+0x2a>
 8001da8:	0000041e 	.word	0x0000041e
 8001dac:	800fffff 	.word	0x800fffff

08001db0 <__clzsi2>:
 8001db0:	211c      	movs	r1, #28
 8001db2:	2301      	movs	r3, #1
 8001db4:	041b      	lsls	r3, r3, #16
 8001db6:	4298      	cmp	r0, r3
 8001db8:	d301      	bcc.n	8001dbe <__clzsi2+0xe>
 8001dba:	0c00      	lsrs	r0, r0, #16
 8001dbc:	3910      	subs	r1, #16
 8001dbe:	0a1b      	lsrs	r3, r3, #8
 8001dc0:	4298      	cmp	r0, r3
 8001dc2:	d301      	bcc.n	8001dc8 <__clzsi2+0x18>
 8001dc4:	0a00      	lsrs	r0, r0, #8
 8001dc6:	3908      	subs	r1, #8
 8001dc8:	091b      	lsrs	r3, r3, #4
 8001dca:	4298      	cmp	r0, r3
 8001dcc:	d301      	bcc.n	8001dd2 <__clzsi2+0x22>
 8001dce:	0900      	lsrs	r0, r0, #4
 8001dd0:	3904      	subs	r1, #4
 8001dd2:	a202      	add	r2, pc, #8	; (adr r2, 8001ddc <__clzsi2+0x2c>)
 8001dd4:	5c10      	ldrb	r0, [r2, r0]
 8001dd6:	1840      	adds	r0, r0, r1
 8001dd8:	4770      	bx	lr
 8001dda:	46c0      	nop			; (mov r8, r8)
 8001ddc:	02020304 	.word	0x02020304
 8001de0:	01010101 	.word	0x01010101
	...

08001dec <_ZN12DigitalInOutC1Eci>:
class DigitalInOut
{
	public:
		uint16_t PIN;
		GPIO_TypeDef* ALPHA;
		DigitalInOut(char a,int p)
 8001dec:	b590      	push	{r4, r7, lr}
 8001dee:	b085      	sub	sp, #20
 8001df0:	af00      	add	r7, sp, #0
 8001df2:	60f8      	str	r0, [r7, #12]
 8001df4:	607a      	str	r2, [r7, #4]
 8001df6:	200b      	movs	r0, #11
 8001df8:	183b      	adds	r3, r7, r0
 8001dfa:	1c0a      	adds	r2, r1, #0
 8001dfc:	701a      	strb	r2, [r3, #0]
		{
			switch(a)
 8001dfe:	183b      	adds	r3, r7, r0
 8001e00:	781b      	ldrb	r3, [r3, #0]
 8001e02:	2b42      	cmp	r3, #66	; 0x42
 8001e04:	d00d      	beq.n	8001e22 <_ZN12DigitalInOutC1Eci+0x36>
 8001e06:	dc02      	bgt.n	8001e0e <_ZN12DigitalInOutC1Eci+0x22>
 8001e08:	2b41      	cmp	r3, #65	; 0x41
 8001e0a:	d005      	beq.n	8001e18 <_ZN12DigitalInOutC1Eci+0x2c>
 8001e0c:	e015      	b.n	8001e3a <_ZN12DigitalInOutC1Eci+0x4e>
 8001e0e:	2b43      	cmp	r3, #67	; 0x43
 8001e10:	d00b      	beq.n	8001e2a <_ZN12DigitalInOutC1Eci+0x3e>
 8001e12:	2b48      	cmp	r3, #72	; 0x48
 8001e14:	d00d      	beq.n	8001e32 <_ZN12DigitalInOutC1Eci+0x46>
 8001e16:	e010      	b.n	8001e3a <_ZN12DigitalInOutC1Eci+0x4e>
			{
				case 'A':ALPHA=GPIOA;break;
 8001e18:	68fb      	ldr	r3, [r7, #12]
 8001e1a:	22a0      	movs	r2, #160	; 0xa0
 8001e1c:	05d2      	lsls	r2, r2, #23
 8001e1e:	605a      	str	r2, [r3, #4]
 8001e20:	e00b      	b.n	8001e3a <_ZN12DigitalInOutC1Eci+0x4e>
				case 'B':ALPHA=GPIOB;break;
 8001e22:	68fb      	ldr	r3, [r7, #12]
 8001e24:	4a0f      	ldr	r2, [pc, #60]	; (8001e64 <_ZN12DigitalInOutC1Eci+0x78>)
 8001e26:	605a      	str	r2, [r3, #4]
 8001e28:	e007      	b.n	8001e3a <_ZN12DigitalInOutC1Eci+0x4e>
				case 'C':ALPHA=GPIOC;break;
 8001e2a:	68fb      	ldr	r3, [r7, #12]
 8001e2c:	4a0e      	ldr	r2, [pc, #56]	; (8001e68 <_ZN12DigitalInOutC1Eci+0x7c>)
 8001e2e:	605a      	str	r2, [r3, #4]
 8001e30:	e003      	b.n	8001e3a <_ZN12DigitalInOutC1Eci+0x4e>
				case 'H':ALPHA=GPIOH;break;
 8001e32:	68fb      	ldr	r3, [r7, #12]
 8001e34:	4a0d      	ldr	r2, [pc, #52]	; (8001e6c <_ZN12DigitalInOutC1Eci+0x80>)
 8001e36:	605a      	str	r2, [r3, #4]
 8001e38:	46c0      	nop			; (mov r8, r8)
			}
			PIN=(uint16_t)pow(2,p);
 8001e3a:	687b      	ldr	r3, [r7, #4]
 8001e3c:	0019      	movs	r1, r3
 8001e3e:	2002      	movs	r0, #2
 8001e40:	f000 f943 	bl	80020ca <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
 8001e44:	0003      	movs	r3, r0
 8001e46:	000c      	movs	r4, r1
 8001e48:	0018      	movs	r0, r3
 8001e4a:	0021      	movs	r1, r4
 8001e4c:	f7fe fa26 	bl	800029c <__aeabi_d2uiz>
 8001e50:	0003      	movs	r3, r0
 8001e52:	b29a      	uxth	r2, r3
 8001e54:	68fb      	ldr	r3, [r7, #12]
 8001e56:	801a      	strh	r2, [r3, #0]
		}
 8001e58:	68fb      	ldr	r3, [r7, #12]
 8001e5a:	0018      	movs	r0, r3
 8001e5c:	46bd      	mov	sp, r7
 8001e5e:	b005      	add	sp, #20
 8001e60:	bd90      	pop	{r4, r7, pc}
 8001e62:	46c0      	nop			; (mov r8, r8)
 8001e64:	50000400 	.word	0x50000400
 8001e68:	50000800 	.word	0x50000800
 8001e6c:	50001c00 	.word	0x50001c00

08001e70 <_ZN12DigitalInOut5writeEh>:
		void write(uint8_t val)
 8001e70:	b580      	push	{r7, lr}
 8001e72:	b084      	sub	sp, #16
 8001e74:	af00      	add	r7, sp, #0
 8001e76:	6078      	str	r0, [r7, #4]
 8001e78:	000a      	movs	r2, r1
 8001e7a:	1cfb      	adds	r3, r7, #3
 8001e7c:	701a      	strb	r2, [r3, #0]
		{
			GPIO_PinState value;
			if(val==1) value=GPIO_PIN_SET;
 8001e7e:	1cfb      	adds	r3, r7, #3
 8001e80:	781b      	ldrb	r3, [r3, #0]
 8001e82:	2b01      	cmp	r3, #1
 8001e84:	d104      	bne.n	8001e90 <_ZN12DigitalInOut5writeEh+0x20>
 8001e86:	230f      	movs	r3, #15
 8001e88:	18fb      	adds	r3, r7, r3
 8001e8a:	2201      	movs	r2, #1
 8001e8c:	701a      	strb	r2, [r3, #0]
 8001e8e:	e003      	b.n	8001e98 <_ZN12DigitalInOut5writeEh+0x28>
			else       value=GPIO_PIN_RESET;
 8001e90:	230f      	movs	r3, #15
 8001e92:	18fb      	adds	r3, r7, r3
 8001e94:	2200      	movs	r2, #0
 8001e96:	701a      	strb	r2, [r3, #0]
			HAL_GPIO_WritePin(ALPHA,PIN,value);
 8001e98:	687b      	ldr	r3, [r7, #4]
 8001e9a:	6858      	ldr	r0, [r3, #4]
 8001e9c:	687b      	ldr	r3, [r7, #4]
 8001e9e:	8819      	ldrh	r1, [r3, #0]
 8001ea0:	230f      	movs	r3, #15
 8001ea2:	18fb      	adds	r3, r7, r3
 8001ea4:	781b      	ldrb	r3, [r3, #0]
 8001ea6:	001a      	movs	r2, r3
 8001ea8:	f000 fca1 	bl	80027ee <HAL_GPIO_WritePin>
		}
 8001eac:	46c0      	nop			; (mov r8, r8)
 8001eae:	46bd      	mov	sp, r7
 8001eb0:	b004      	add	sp, #16
 8001eb2:	bd80      	pop	{r7, pc}

08001eb4 <_ZN12DigitalInOut4readEv>:
		bool read()
 8001eb4:	b5b0      	push	{r4, r5, r7, lr}
 8001eb6:	b084      	sub	sp, #16
 8001eb8:	af00      	add	r7, sp, #0
 8001eba:	6078      	str	r0, [r7, #4]
		{
			GPIO_PinState value;
			value=HAL_GPIO_ReadPin(ALPHA,PIN);
 8001ebc:	687b      	ldr	r3, [r7, #4]
 8001ebe:	685a      	ldr	r2, [r3, #4]
 8001ec0:	687b      	ldr	r3, [r7, #4]
 8001ec2:	881b      	ldrh	r3, [r3, #0]
 8001ec4:	250f      	movs	r5, #15
 8001ec6:	197c      	adds	r4, r7, r5
 8001ec8:	0019      	movs	r1, r3
 8001eca:	0010      	movs	r0, r2
 8001ecc:	f000 fc72 	bl	80027b4 <HAL_GPIO_ReadPin>
 8001ed0:	0003      	movs	r3, r0
 8001ed2:	7023      	strb	r3, [r4, #0]
			if(value==GPIO_PIN_SET) return 1;
 8001ed4:	197b      	adds	r3, r7, r5
 8001ed6:	781b      	ldrb	r3, [r3, #0]
 8001ed8:	2b01      	cmp	r3, #1
 8001eda:	d101      	bne.n	8001ee0 <_ZN12DigitalInOut4readEv+0x2c>
 8001edc:	2301      	movs	r3, #1
 8001ede:	e000      	b.n	8001ee2 <_ZN12DigitalInOut4readEv+0x2e>
			else                    return 0;
 8001ee0:	2300      	movs	r3, #0
		}
 8001ee2:	0018      	movs	r0, r3
 8001ee4:	46bd      	mov	sp, r7
 8001ee6:	b004      	add	sp, #16
 8001ee8:	bdb0      	pop	{r4, r5, r7, pc}

08001eea <main>:
#include "main.h"
#include "DigitalInOut.h"
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
int main(void)
{
 8001eea:	b580      	push	{r7, lr}
 8001eec:	b084      	sub	sp, #16
 8001eee:	af00      	add	r7, sp, #0

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 8001ef0:	f000 f99c 	bl	800222c <HAL_Init>

  /* Configure the system clock */
  SystemClock_Config();
 8001ef4:	f000 f832 	bl	8001f5c <_Z18SystemClock_Configv>

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 8001ef8:	f000 f88c 	bl	8002014 <_ZL12MX_GPIO_Initv>
  DigitalInOut Led('A',5),Switch('C',13);
 8001efc:	2308      	movs	r3, #8
 8001efe:	18fb      	adds	r3, r7, r3
 8001f00:	2205      	movs	r2, #5
 8001f02:	2141      	movs	r1, #65	; 0x41
 8001f04:	0018      	movs	r0, r3
 8001f06:	f7ff ff71 	bl	8001dec <_ZN12DigitalInOutC1Eci>
 8001f0a:	003b      	movs	r3, r7
 8001f0c:	220d      	movs	r2, #13
 8001f0e:	2143      	movs	r1, #67	; 0x43
 8001f10:	0018      	movs	r0, r3
 8001f12:	f7ff ff6b 	bl	8001dec <_ZN12DigitalInOutC1Eci>
  while(1)
  {
	  if(!Switch.read())
 8001f16:	003b      	movs	r3, r7
 8001f18:	0018      	movs	r0, r3
 8001f1a:	f7ff ffcb 	bl	8001eb4 <_ZN12DigitalInOut4readEv>
 8001f1e:	0003      	movs	r3, r0
 8001f20:	001a      	movs	r2, r3
 8001f22:	2301      	movs	r3, #1
 8001f24:	4053      	eors	r3, r2
 8001f26:	b2db      	uxtb	r3, r3
 8001f28:	2b00      	cmp	r3, #0
 8001f2a:	d0f4      	beq.n	8001f16 <main+0x2c>
	  {
		  if(Led.read()) Led.write(0);
 8001f2c:	2308      	movs	r3, #8
 8001f2e:	18fb      	adds	r3, r7, r3
 8001f30:	0018      	movs	r0, r3
 8001f32:	f7ff ffbf 	bl	8001eb4 <_ZN12DigitalInOut4readEv>
 8001f36:	1e03      	subs	r3, r0, #0
 8001f38:	d006      	beq.n	8001f48 <main+0x5e>
 8001f3a:	2308      	movs	r3, #8
 8001f3c:	18fb      	adds	r3, r7, r3
 8001f3e:	2100      	movs	r1, #0
 8001f40:	0018      	movs	r0, r3
 8001f42:	f7ff ff95 	bl	8001e70 <_ZN12DigitalInOut5writeEh>
 8001f46:	e005      	b.n	8001f54 <main+0x6a>
		  else           Led.write(1);
 8001f48:	2308      	movs	r3, #8
 8001f4a:	18fb      	adds	r3, r7, r3
 8001f4c:	2101      	movs	r1, #1
 8001f4e:	0018      	movs	r0, r3
 8001f50:	f7ff ff8e 	bl	8001e70 <_ZN12DigitalInOut5writeEh>
		  HAL_Delay(200);
 8001f54:	20c8      	movs	r0, #200	; 0xc8
 8001f56:	f000 f9d9 	bl	800230c <HAL_Delay>
	  if(!Switch.read())
 8001f5a:	e7dc      	b.n	8001f16 <main+0x2c>

08001f5c <_Z18SystemClock_Configv>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8001f5c:	b590      	push	{r4, r7, lr}
 8001f5e:	b095      	sub	sp, #84	; 0x54
 8001f60:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8001f62:	2418      	movs	r4, #24
 8001f64:	193b      	adds	r3, r7, r4
 8001f66:	0018      	movs	r0, r3
 8001f68:	2338      	movs	r3, #56	; 0x38
 8001f6a:	001a      	movs	r2, r3
 8001f6c:	2100      	movs	r1, #0
 8001f6e:	f002 fa49 	bl	8004404 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8001f72:	1d3b      	adds	r3, r7, #4
 8001f74:	0018      	movs	r0, r3
 8001f76:	2314      	movs	r3, #20
 8001f78:	001a      	movs	r2, r3
 8001f7a:	2100      	movs	r1, #0
 8001f7c:	f002 fa42 	bl	8004404 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8001f80:	4b22      	ldr	r3, [pc, #136]	; (800200c <_Z18SystemClock_Configv+0xb0>)
 8001f82:	681b      	ldr	r3, [r3, #0]
 8001f84:	4a22      	ldr	r2, [pc, #136]	; (8002010 <_Z18SystemClock_Configv+0xb4>)
 8001f86:	401a      	ands	r2, r3
 8001f88:	4b20      	ldr	r3, [pc, #128]	; (800200c <_Z18SystemClock_Configv+0xb0>)
 8001f8a:	2180      	movs	r1, #128	; 0x80
 8001f8c:	0109      	lsls	r1, r1, #4
 8001f8e:	430a      	orrs	r2, r1
 8001f90:	601a      	str	r2, [r3, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_MSI;
 8001f92:	0021      	movs	r1, r4
 8001f94:	187b      	adds	r3, r7, r1
 8001f96:	2210      	movs	r2, #16
 8001f98:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8001f9a:	187b      	adds	r3, r7, r1
 8001f9c:	2201      	movs	r2, #1
 8001f9e:	61da      	str	r2, [r3, #28]
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8001fa0:	187b      	adds	r3, r7, r1
 8001fa2:	2200      	movs	r2, #0
 8001fa4:	621a      	str	r2, [r3, #32]
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_5;
 8001fa6:	187b      	adds	r3, r7, r1
 8001fa8:	22a0      	movs	r2, #160	; 0xa0
 8001faa:	0212      	lsls	r2, r2, #8
 8001fac:	625a      	str	r2, [r3, #36]	; 0x24
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 8001fae:	187b      	adds	r3, r7, r1
 8001fb0:	2200      	movs	r2, #0
 8001fb2:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8001fb4:	187b      	adds	r3, r7, r1
 8001fb6:	0018      	movs	r0, r3
 8001fb8:	f000 fc36 	bl	8002828 <HAL_RCC_OscConfig>
 8001fbc:	0003      	movs	r3, r0
 8001fbe:	1e5a      	subs	r2, r3, #1
 8001fc0:	4193      	sbcs	r3, r2
 8001fc2:	b2db      	uxtb	r3, r3
 8001fc4:	2b00      	cmp	r3, #0
 8001fc6:	d001      	beq.n	8001fcc <_Z18SystemClock_Configv+0x70>
  {
    Error_Handler();
 8001fc8:	f000 f87a 	bl	80020c0 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8001fcc:	1d3b      	adds	r3, r7, #4
 8001fce:	220f      	movs	r2, #15
 8001fd0:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_MSI;
 8001fd2:	1d3b      	adds	r3, r7, #4
 8001fd4:	2200      	movs	r2, #0
 8001fd6:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8001fd8:	1d3b      	adds	r3, r7, #4
 8001fda:	2200      	movs	r2, #0
 8001fdc:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8001fde:	1d3b      	adds	r3, r7, #4
 8001fe0:	2200      	movs	r2, #0
 8001fe2:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8001fe4:	1d3b      	adds	r3, r7, #4
 8001fe6:	2200      	movs	r2, #0
 8001fe8:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 8001fea:	1d3b      	adds	r3, r7, #4
 8001fec:	2100      	movs	r1, #0
 8001fee:	0018      	movs	r0, r3
 8001ff0:	f000 ffea 	bl	8002fc8 <HAL_RCC_ClockConfig>
 8001ff4:	0003      	movs	r3, r0
 8001ff6:	1e5a      	subs	r2, r3, #1
 8001ff8:	4193      	sbcs	r3, r2
 8001ffa:	b2db      	uxtb	r3, r3
 8001ffc:	2b00      	cmp	r3, #0
 8001ffe:	d001      	beq.n	8002004 <_Z18SystemClock_Configv+0xa8>
  {
    Error_Handler();
 8002000:	f000 f85e 	bl	80020c0 <Error_Handler>
  }
}
 8002004:	46c0      	nop			; (mov r8, r8)
 8002006:	46bd      	mov	sp, r7
 8002008:	b015      	add	sp, #84	; 0x54
 800200a:	bd90      	pop	{r4, r7, pc}
 800200c:	40007000 	.word	0x40007000
 8002010:	ffffe7ff 	.word	0xffffe7ff

08002014 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002014:	b590      	push	{r4, r7, lr}
 8002016:	b089      	sub	sp, #36	; 0x24
 8002018:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800201a:	240c      	movs	r4, #12
 800201c:	193b      	adds	r3, r7, r4
 800201e:	0018      	movs	r0, r3
 8002020:	2314      	movs	r3, #20
 8002022:	001a      	movs	r2, r3
 8002024:	2100      	movs	r1, #0
 8002026:	f002 f9ed 	bl	8004404 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 800202a:	4b23      	ldr	r3, [pc, #140]	; (80020b8 <_ZL12MX_GPIO_Initv+0xa4>)
 800202c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800202e:	4b22      	ldr	r3, [pc, #136]	; (80020b8 <_ZL12MX_GPIO_Initv+0xa4>)
 8002030:	2104      	movs	r1, #4
 8002032:	430a      	orrs	r2, r1
 8002034:	62da      	str	r2, [r3, #44]	; 0x2c
 8002036:	4b20      	ldr	r3, [pc, #128]	; (80020b8 <_ZL12MX_GPIO_Initv+0xa4>)
 8002038:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800203a:	2204      	movs	r2, #4
 800203c:	4013      	ands	r3, r2
 800203e:	60bb      	str	r3, [r7, #8]
 8002040:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002042:	4b1d      	ldr	r3, [pc, #116]	; (80020b8 <_ZL12MX_GPIO_Initv+0xa4>)
 8002044:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002046:	4b1c      	ldr	r3, [pc, #112]	; (80020b8 <_ZL12MX_GPIO_Initv+0xa4>)
 8002048:	2101      	movs	r1, #1
 800204a:	430a      	orrs	r2, r1
 800204c:	62da      	str	r2, [r3, #44]	; 0x2c
 800204e:	4b1a      	ldr	r3, [pc, #104]	; (80020b8 <_ZL12MX_GPIO_Initv+0xa4>)
 8002050:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002052:	2201      	movs	r2, #1
 8002054:	4013      	ands	r3, r2
 8002056:	607b      	str	r3, [r7, #4]
 8002058:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
 800205a:	23a0      	movs	r3, #160	; 0xa0
 800205c:	05db      	lsls	r3, r3, #23
 800205e:	2200      	movs	r2, #0
 8002060:	2120      	movs	r1, #32
 8002062:	0018      	movs	r0, r3
 8002064:	f000 fbc3 	bl	80027ee <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8002068:	193b      	adds	r3, r7, r4
 800206a:	2280      	movs	r2, #128	; 0x80
 800206c:	0192      	lsls	r2, r2, #6
 800206e:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8002070:	193b      	adds	r3, r7, r4
 8002072:	2200      	movs	r2, #0
 8002074:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002076:	193b      	adds	r3, r7, r4
 8002078:	2200      	movs	r2, #0
 800207a:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 800207c:	193b      	adds	r3, r7, r4
 800207e:	4a0f      	ldr	r2, [pc, #60]	; (80020bc <_ZL12MX_GPIO_Initv+0xa8>)
 8002080:	0019      	movs	r1, r3
 8002082:	0010      	movs	r0, r2
 8002084:	f000 fa18 	bl	80024b8 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 8002088:	0021      	movs	r1, r4
 800208a:	187b      	adds	r3, r7, r1
 800208c:	2220      	movs	r2, #32
 800208e:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002090:	187b      	adds	r3, r7, r1
 8002092:	2201      	movs	r2, #1
 8002094:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002096:	187b      	adds	r3, r7, r1
 8002098:	2200      	movs	r2, #0
 800209a:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800209c:	187b      	adds	r3, r7, r1
 800209e:	2200      	movs	r2, #0
 80020a0:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 80020a2:	187a      	adds	r2, r7, r1
 80020a4:	23a0      	movs	r3, #160	; 0xa0
 80020a6:	05db      	lsls	r3, r3, #23
 80020a8:	0011      	movs	r1, r2
 80020aa:	0018      	movs	r0, r3
 80020ac:	f000 fa04 	bl	80024b8 <HAL_GPIO_Init>

}
 80020b0:	46c0      	nop			; (mov r8, r8)
 80020b2:	46bd      	mov	sp, r7
 80020b4:	b009      	add	sp, #36	; 0x24
 80020b6:	bd90      	pop	{r4, r7, pc}
 80020b8:	40021000 	.word	0x40021000
 80020bc:	50000800 	.word	0x50000800

080020c0 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80020c0:	b580      	push	{r7, lr}
 80020c2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80020c4:	46c0      	nop			; (mov r8, r8)
 80020c6:	46bd      	mov	sp, r7
 80020c8:	bd80      	pop	{r7, pc}

080020ca <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>:
#endif

  template<typename _Tp, typename _Up>
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
 80020ca:	b5b0      	push	{r4, r5, r7, lr}
 80020cc:	b082      	sub	sp, #8
 80020ce:	af00      	add	r7, sp, #0
 80020d0:	6078      	str	r0, [r7, #4]
 80020d2:	6039      	str	r1, [r7, #0]
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
 80020d4:	6878      	ldr	r0, [r7, #4]
 80020d6:	f7ff fe31 	bl	8001d3c <__aeabi_i2d>
 80020da:	0004      	movs	r4, r0
 80020dc:	000d      	movs	r5, r1
 80020de:	6838      	ldr	r0, [r7, #0]
 80020e0:	f7ff fe2c 	bl	8001d3c <__aeabi_i2d>
 80020e4:	0002      	movs	r2, r0
 80020e6:	000b      	movs	r3, r1
 80020e8:	0020      	movs	r0, r4
 80020ea:	0029      	movs	r1, r5
 80020ec:	f001 f91a 	bl	8003324 <pow>
 80020f0:	0003      	movs	r3, r0
 80020f2:	000c      	movs	r4, r1
    }
 80020f4:	0018      	movs	r0, r3
 80020f6:	0021      	movs	r1, r4
 80020f8:	46bd      	mov	sp, r7
 80020fa:	b002      	add	sp, #8
 80020fc:	bdb0      	pop	{r4, r5, r7, pc}
	...

08002100 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002100:	b580      	push	{r7, lr}
 8002102:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002104:	4b07      	ldr	r3, [pc, #28]	; (8002124 <HAL_MspInit+0x24>)
 8002106:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002108:	4b06      	ldr	r3, [pc, #24]	; (8002124 <HAL_MspInit+0x24>)
 800210a:	2101      	movs	r1, #1
 800210c:	430a      	orrs	r2, r1
 800210e:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8002110:	4b04      	ldr	r3, [pc, #16]	; (8002124 <HAL_MspInit+0x24>)
 8002112:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002114:	4b03      	ldr	r3, [pc, #12]	; (8002124 <HAL_MspInit+0x24>)
 8002116:	2180      	movs	r1, #128	; 0x80
 8002118:	0549      	lsls	r1, r1, #21
 800211a:	430a      	orrs	r2, r1
 800211c:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 800211e:	46c0      	nop			; (mov r8, r8)
 8002120:	46bd      	mov	sp, r7
 8002122:	bd80      	pop	{r7, pc}
 8002124:	40021000 	.word	0x40021000

08002128 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable Interrupt.
  */
void NMI_Handler(void)
{
 8002128:	b580      	push	{r7, lr}
 800212a:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 800212c:	46c0      	nop			; (mov r8, r8)
 800212e:	46bd      	mov	sp, r7
 8002130:	bd80      	pop	{r7, pc}

08002132 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8002132:	b580      	push	{r7, lr}
 8002134:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8002136:	e7fe      	b.n	8002136 <HardFault_Handler+0x4>

08002138 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 8002138:	b580      	push	{r7, lr}
 800213a:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 800213c:	46c0      	nop			; (mov r8, r8)
 800213e:	46bd      	mov	sp, r7
 8002140:	bd80      	pop	{r7, pc}

08002142 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8002142:	b580      	push	{r7, lr}
 8002144:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 8002146:	46c0      	nop			; (mov r8, r8)
 8002148:	46bd      	mov	sp, r7
 800214a:	bd80      	pop	{r7, pc}

0800214c <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 800214c:	b580      	push	{r7, lr}
 800214e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8002150:	f000 f8c0 	bl	80022d4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8002154:	46c0      	nop			; (mov r8, r8)
 8002156:	46bd      	mov	sp, r7
 8002158:	bd80      	pop	{r7, pc}
	...

0800215c <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800215c:	b580      	push	{r7, lr}
 800215e:	af00      	add	r7, sp, #0
/*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100U;
 8002160:	4b17      	ldr	r3, [pc, #92]	; (80021c0 <SystemInit+0x64>)
 8002162:	681a      	ldr	r2, [r3, #0]
 8002164:	4b16      	ldr	r3, [pc, #88]	; (80021c0 <SystemInit+0x64>)
 8002166:	2180      	movs	r1, #128	; 0x80
 8002168:	0049      	lsls	r1, r1, #1
 800216a:	430a      	orrs	r2, r1
 800216c:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t) 0x88FF400CU;
 800216e:	4b14      	ldr	r3, [pc, #80]	; (80021c0 <SystemInit+0x64>)
 8002170:	68da      	ldr	r2, [r3, #12]
 8002172:	4b13      	ldr	r3, [pc, #76]	; (80021c0 <SystemInit+0x64>)
 8002174:	4913      	ldr	r1, [pc, #76]	; (80021c4 <SystemInit+0x68>)
 8002176:	400a      	ands	r2, r1
 8002178:	60da      	str	r2, [r3, #12]

  /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFF6U;
 800217a:	4b11      	ldr	r3, [pc, #68]	; (80021c0 <SystemInit+0x64>)
 800217c:	681a      	ldr	r2, [r3, #0]
 800217e:	4b10      	ldr	r3, [pc, #64]	; (80021c0 <SystemInit+0x64>)
 8002180:	4911      	ldr	r1, [pc, #68]	; (80021c8 <SystemInit+0x6c>)
 8002182:	400a      	ands	r2, r1
 8002184:	601a      	str	r2, [r3, #0]

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8002186:	4b0e      	ldr	r3, [pc, #56]	; (80021c0 <SystemInit+0x64>)
 8002188:	689a      	ldr	r2, [r3, #8]
 800218a:	4b0d      	ldr	r3, [pc, #52]	; (80021c0 <SystemInit+0x64>)
 800218c:	2101      	movs	r1, #1
 800218e:	438a      	bics	r2, r1
 8002190:	609a      	str	r2, [r3, #8]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFFU;
 8002192:	4b0b      	ldr	r3, [pc, #44]	; (80021c0 <SystemInit+0x64>)
 8002194:	681a      	ldr	r2, [r3, #0]
 8002196:	4b0a      	ldr	r3, [pc, #40]	; (80021c0 <SystemInit+0x64>)
 8002198:	490c      	ldr	r1, [pc, #48]	; (80021cc <SystemInit+0x70>)
 800219a:	400a      	ands	r2, r1
 800219c:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFFU;
 800219e:	4b08      	ldr	r3, [pc, #32]	; (80021c0 <SystemInit+0x64>)
 80021a0:	68da      	ldr	r2, [r3, #12]
 80021a2:	4b07      	ldr	r3, [pc, #28]	; (80021c0 <SystemInit+0x64>)
 80021a4:	490a      	ldr	r1, [pc, #40]	; (80021d0 <SystemInit+0x74>)
 80021a6:	400a      	ands	r2, r1
 80021a8:	60da      	str	r2, [r3, #12]

  /*!< Disable all interrupts */
  RCC->CIER = 0x00000000U;
 80021aa:	4b05      	ldr	r3, [pc, #20]	; (80021c0 <SystemInit+0x64>)
 80021ac:	2200      	movs	r2, #0
 80021ae:	611a      	str	r2, [r3, #16]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80021b0:	4b08      	ldr	r3, [pc, #32]	; (80021d4 <SystemInit+0x78>)
 80021b2:	2280      	movs	r2, #128	; 0x80
 80021b4:	0512      	lsls	r2, r2, #20
 80021b6:	609a      	str	r2, [r3, #8]
#endif
}
 80021b8:	46c0      	nop			; (mov r8, r8)
 80021ba:	46bd      	mov	sp, r7
 80021bc:	bd80      	pop	{r7, pc}
 80021be:	46c0      	nop			; (mov r8, r8)
 80021c0:	40021000 	.word	0x40021000
 80021c4:	88ff400c 	.word	0x88ff400c
 80021c8:	fef6fff6 	.word	0xfef6fff6
 80021cc:	fffbffff 	.word	0xfffbffff
 80021d0:	ff02ffff 	.word	0xff02ffff
 80021d4:	e000ed00 	.word	0xe000ed00

080021d8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 80021d8:	480d      	ldr	r0, [pc, #52]	; (8002210 <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 80021da:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 80021dc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80021de:	e003      	b.n	80021e8 <LoopCopyDataInit>

080021e0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80021e0:	4b0c      	ldr	r3, [pc, #48]	; (8002214 <LoopForever+0x6>)
  ldr  r3, [r3, r1]
 80021e2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80021e4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80021e6:	3104      	adds	r1, #4

080021e8 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 80021e8:	480b      	ldr	r0, [pc, #44]	; (8002218 <LoopForever+0xa>)
  ldr  r3, =_edata
 80021ea:	4b0c      	ldr	r3, [pc, #48]	; (800221c <LoopForever+0xe>)
  adds  r2, r0, r1
 80021ec:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80021ee:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80021f0:	d3f6      	bcc.n	80021e0 <CopyDataInit>
  ldr  r2, =_sbss
 80021f2:	4a0b      	ldr	r2, [pc, #44]	; (8002220 <LoopForever+0x12>)
  b  LoopFillZerobss
 80021f4:	e002      	b.n	80021fc <LoopFillZerobss>

080021f6 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 80021f6:	2300      	movs	r3, #0
  str  r3, [r2]
 80021f8:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80021fa:	3204      	adds	r2, #4

080021fc <LoopFillZerobss>:


LoopFillZerobss:
  ldr  r3, = _ebss
 80021fc:	4b09      	ldr	r3, [pc, #36]	; (8002224 <LoopForever+0x16>)
  cmp  r2, r3
 80021fe:	429a      	cmp	r2, r3
  bcc  FillZerobss
 8002200:	d3f9      	bcc.n	80021f6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 8002202:	f7ff ffab 	bl	800215c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 8002206:	f002 f8d9 	bl	80043bc <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 800220a:	f7ff fe6e 	bl	8001eea <main>

0800220e <LoopForever>:

LoopForever:
    b LoopForever
 800220e:	e7fe      	b.n	800220e <LoopForever>
   ldr   r0, =_estack
 8002210:	20005000 	.word	0x20005000
  ldr  r3, =_sidata
 8002214:	08004518 	.word	0x08004518
  ldr  r0, =_sdata
 8002218:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800221c:	20000070 	.word	0x20000070
  ldr  r2, =_sbss
 8002220:	20000070 	.word	0x20000070
  ldr  r3, = _ebss
 8002224:	20000090 	.word	0x20000090

08002228 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8002228:	e7fe      	b.n	8002228 <ADC1_COMP_IRQHandler>
	...

0800222c <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800222c:	b580      	push	{r7, lr}
 800222e:	b082      	sub	sp, #8
 8002230:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8002232:	1dfb      	adds	r3, r7, #7
 8002234:	2200      	movs	r2, #0
 8002236:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8002238:	4b0b      	ldr	r3, [pc, #44]	; (8002268 <HAL_Init+0x3c>)
 800223a:	681a      	ldr	r2, [r3, #0]
 800223c:	4b0a      	ldr	r3, [pc, #40]	; (8002268 <HAL_Init+0x3c>)
 800223e:	2140      	movs	r1, #64	; 0x40
 8002240:	430a      	orrs	r2, r1
 8002242:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8002244:	2000      	movs	r0, #0
 8002246:	f000 f811 	bl	800226c <HAL_InitTick>
 800224a:	1e03      	subs	r3, r0, #0
 800224c:	d003      	beq.n	8002256 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 800224e:	1dfb      	adds	r3, r7, #7
 8002250:	2201      	movs	r2, #1
 8002252:	701a      	strb	r2, [r3, #0]
 8002254:	e001      	b.n	800225a <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8002256:	f7ff ff53 	bl	8002100 <HAL_MspInit>
  }

  /* Return function status */
  return status;
 800225a:	1dfb      	adds	r3, r7, #7
 800225c:	781b      	ldrb	r3, [r3, #0]
}
 800225e:	0018      	movs	r0, r3
 8002260:	46bd      	mov	sp, r7
 8002262:	b002      	add	sp, #8
 8002264:	bd80      	pop	{r7, pc}
 8002266:	46c0      	nop			; (mov r8, r8)
 8002268:	40022000 	.word	0x40022000

0800226c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800226c:	b590      	push	{r4, r7, lr}
 800226e:	b083      	sub	sp, #12
 8002270:	af00      	add	r7, sp, #0
 8002272:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8002274:	4b14      	ldr	r3, [pc, #80]	; (80022c8 <HAL_InitTick+0x5c>)
 8002276:	681c      	ldr	r4, [r3, #0]
 8002278:	4b14      	ldr	r3, [pc, #80]	; (80022cc <HAL_InitTick+0x60>)
 800227a:	781b      	ldrb	r3, [r3, #0]
 800227c:	0019      	movs	r1, r3
 800227e:	23fa      	movs	r3, #250	; 0xfa
 8002280:	0098      	lsls	r0, r3, #2
 8002282:	f7fd ff41 	bl	8000108 <__udivsi3>
 8002286:	0003      	movs	r3, r0
 8002288:	0019      	movs	r1, r3
 800228a:	0020      	movs	r0, r4
 800228c:	f7fd ff3c 	bl	8000108 <__udivsi3>
 8002290:	0003      	movs	r3, r0
 8002292:	0018      	movs	r0, r3
 8002294:	f000 f903 	bl	800249e <HAL_SYSTICK_Config>
 8002298:	1e03      	subs	r3, r0, #0
 800229a:	d001      	beq.n	80022a0 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 800229c:	2301      	movs	r3, #1
 800229e:	e00f      	b.n	80022c0 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 80022a0:	687b      	ldr	r3, [r7, #4]
 80022a2:	2b03      	cmp	r3, #3
 80022a4:	d80b      	bhi.n	80022be <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 80022a6:	6879      	ldr	r1, [r7, #4]
 80022a8:	2301      	movs	r3, #1
 80022aa:	425b      	negs	r3, r3
 80022ac:	2200      	movs	r2, #0
 80022ae:	0018      	movs	r0, r3
 80022b0:	f000 f8e0 	bl	8002474 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80022b4:	4b06      	ldr	r3, [pc, #24]	; (80022d0 <HAL_InitTick+0x64>)
 80022b6:	687a      	ldr	r2, [r7, #4]
 80022b8:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80022ba:	2300      	movs	r3, #0
 80022bc:	e000      	b.n	80022c0 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80022be:	2301      	movs	r3, #1
}
 80022c0:	0018      	movs	r0, r3
 80022c2:	46bd      	mov	sp, r7
 80022c4:	b003      	add	sp, #12
 80022c6:	bd90      	pop	{r4, r7, pc}
 80022c8:	20000000 	.word	0x20000000
 80022cc:	20000008 	.word	0x20000008
 80022d0:	20000004 	.word	0x20000004

080022d4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80022d4:	b580      	push	{r7, lr}
 80022d6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80022d8:	4b05      	ldr	r3, [pc, #20]	; (80022f0 <HAL_IncTick+0x1c>)
 80022da:	781b      	ldrb	r3, [r3, #0]
 80022dc:	001a      	movs	r2, r3
 80022de:	4b05      	ldr	r3, [pc, #20]	; (80022f4 <HAL_IncTick+0x20>)
 80022e0:	681b      	ldr	r3, [r3, #0]
 80022e2:	18d2      	adds	r2, r2, r3
 80022e4:	4b03      	ldr	r3, [pc, #12]	; (80022f4 <HAL_IncTick+0x20>)
 80022e6:	601a      	str	r2, [r3, #0]
}
 80022e8:	46c0      	nop			; (mov r8, r8)
 80022ea:	46bd      	mov	sp, r7
 80022ec:	bd80      	pop	{r7, pc}
 80022ee:	46c0      	nop			; (mov r8, r8)
 80022f0:	20000008 	.word	0x20000008
 80022f4:	2000008c 	.word	0x2000008c

080022f8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80022f8:	b580      	push	{r7, lr}
 80022fa:	af00      	add	r7, sp, #0
  return uwTick;
 80022fc:	4b02      	ldr	r3, [pc, #8]	; (8002308 <HAL_GetTick+0x10>)
 80022fe:	681b      	ldr	r3, [r3, #0]
}
 8002300:	0018      	movs	r0, r3
 8002302:	46bd      	mov	sp, r7
 8002304:	bd80      	pop	{r7, pc}
 8002306:	46c0      	nop			; (mov r8, r8)
 8002308:	2000008c 	.word	0x2000008c

0800230c <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 800230c:	b580      	push	{r7, lr}
 800230e:	b084      	sub	sp, #16
 8002310:	af00      	add	r7, sp, #0
 8002312:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8002314:	f7ff fff0 	bl	80022f8 <HAL_GetTick>
 8002318:	0003      	movs	r3, r0
 800231a:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 800231c:	687b      	ldr	r3, [r7, #4]
 800231e:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8002320:	68fb      	ldr	r3, [r7, #12]
 8002322:	3301      	adds	r3, #1
 8002324:	d005      	beq.n	8002332 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8002326:	4b09      	ldr	r3, [pc, #36]	; (800234c <HAL_Delay+0x40>)
 8002328:	781b      	ldrb	r3, [r3, #0]
 800232a:	001a      	movs	r2, r3
 800232c:	68fb      	ldr	r3, [r7, #12]
 800232e:	189b      	adds	r3, r3, r2
 8002330:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8002332:	46c0      	nop			; (mov r8, r8)
 8002334:	f7ff ffe0 	bl	80022f8 <HAL_GetTick>
 8002338:	0002      	movs	r2, r0
 800233a:	68bb      	ldr	r3, [r7, #8]
 800233c:	1ad3      	subs	r3, r2, r3
 800233e:	68fa      	ldr	r2, [r7, #12]
 8002340:	429a      	cmp	r2, r3
 8002342:	d8f7      	bhi.n	8002334 <HAL_Delay+0x28>
  {
  }
}
 8002344:	46c0      	nop			; (mov r8, r8)
 8002346:	46bd      	mov	sp, r7
 8002348:	b004      	add	sp, #16
 800234a:	bd80      	pop	{r7, pc}
 800234c:	20000008 	.word	0x20000008

08002350 <NVIC_SetPriority>:
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 8002350:	b590      	push	{r4, r7, lr}
 8002352:	b083      	sub	sp, #12
 8002354:	af00      	add	r7, sp, #0
 8002356:	0002      	movs	r2, r0
 8002358:	6039      	str	r1, [r7, #0]
 800235a:	1dfb      	adds	r3, r7, #7
 800235c:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) < 0)
 800235e:	1dfb      	adds	r3, r7, #7
 8002360:	781b      	ldrb	r3, [r3, #0]
 8002362:	2b7f      	cmp	r3, #127	; 0x7f
 8002364:	d932      	bls.n	80023cc <NVIC_SetPriority+0x7c>
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8002366:	4a2f      	ldr	r2, [pc, #188]	; (8002424 <NVIC_SetPriority+0xd4>)
 8002368:	1dfb      	adds	r3, r7, #7
 800236a:	781b      	ldrb	r3, [r3, #0]
 800236c:	0019      	movs	r1, r3
 800236e:	230f      	movs	r3, #15
 8002370:	400b      	ands	r3, r1
 8002372:	3b08      	subs	r3, #8
 8002374:	089b      	lsrs	r3, r3, #2
 8002376:	3306      	adds	r3, #6
 8002378:	009b      	lsls	r3, r3, #2
 800237a:	18d3      	adds	r3, r2, r3
 800237c:	3304      	adds	r3, #4
 800237e:	681b      	ldr	r3, [r3, #0]
 8002380:	1dfa      	adds	r2, r7, #7
 8002382:	7812      	ldrb	r2, [r2, #0]
 8002384:	0011      	movs	r1, r2
 8002386:	2203      	movs	r2, #3
 8002388:	400a      	ands	r2, r1
 800238a:	00d2      	lsls	r2, r2, #3
 800238c:	21ff      	movs	r1, #255	; 0xff
 800238e:	4091      	lsls	r1, r2
 8002390:	000a      	movs	r2, r1
 8002392:	43d2      	mvns	r2, r2
 8002394:	401a      	ands	r2, r3
 8002396:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8002398:	683b      	ldr	r3, [r7, #0]
 800239a:	019b      	lsls	r3, r3, #6
 800239c:	22ff      	movs	r2, #255	; 0xff
 800239e:	401a      	ands	r2, r3
 80023a0:	1dfb      	adds	r3, r7, #7
 80023a2:	781b      	ldrb	r3, [r3, #0]
 80023a4:	0018      	movs	r0, r3
 80023a6:	2303      	movs	r3, #3
 80023a8:	4003      	ands	r3, r0
 80023aa:	00db      	lsls	r3, r3, #3
 80023ac:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80023ae:	481d      	ldr	r0, [pc, #116]	; (8002424 <NVIC_SetPriority+0xd4>)
 80023b0:	1dfb      	adds	r3, r7, #7
 80023b2:	781b      	ldrb	r3, [r3, #0]
 80023b4:	001c      	movs	r4, r3
 80023b6:	230f      	movs	r3, #15
 80023b8:	4023      	ands	r3, r4
 80023ba:	3b08      	subs	r3, #8
 80023bc:	089b      	lsrs	r3, r3, #2
 80023be:	430a      	orrs	r2, r1
 80023c0:	3306      	adds	r3, #6
 80023c2:	009b      	lsls	r3, r3, #2
 80023c4:	18c3      	adds	r3, r0, r3
 80023c6:	3304      	adds	r3, #4
 80023c8:	601a      	str	r2, [r3, #0]
  else
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80023ca:	e027      	b.n	800241c <NVIC_SetPriority+0xcc>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80023cc:	4a16      	ldr	r2, [pc, #88]	; (8002428 <NVIC_SetPriority+0xd8>)
 80023ce:	1dfb      	adds	r3, r7, #7
 80023d0:	781b      	ldrb	r3, [r3, #0]
 80023d2:	b25b      	sxtb	r3, r3
 80023d4:	089b      	lsrs	r3, r3, #2
 80023d6:	33c0      	adds	r3, #192	; 0xc0
 80023d8:	009b      	lsls	r3, r3, #2
 80023da:	589b      	ldr	r3, [r3, r2]
 80023dc:	1dfa      	adds	r2, r7, #7
 80023de:	7812      	ldrb	r2, [r2, #0]
 80023e0:	0011      	movs	r1, r2
 80023e2:	2203      	movs	r2, #3
 80023e4:	400a      	ands	r2, r1
 80023e6:	00d2      	lsls	r2, r2, #3
 80023e8:	21ff      	movs	r1, #255	; 0xff
 80023ea:	4091      	lsls	r1, r2
 80023ec:	000a      	movs	r2, r1
 80023ee:	43d2      	mvns	r2, r2
 80023f0:	401a      	ands	r2, r3
 80023f2:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80023f4:	683b      	ldr	r3, [r7, #0]
 80023f6:	019b      	lsls	r3, r3, #6
 80023f8:	22ff      	movs	r2, #255	; 0xff
 80023fa:	401a      	ands	r2, r3
 80023fc:	1dfb      	adds	r3, r7, #7
 80023fe:	781b      	ldrb	r3, [r3, #0]
 8002400:	0018      	movs	r0, r3
 8002402:	2303      	movs	r3, #3
 8002404:	4003      	ands	r3, r0
 8002406:	00db      	lsls	r3, r3, #3
 8002408:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 800240a:	4807      	ldr	r0, [pc, #28]	; (8002428 <NVIC_SetPriority+0xd8>)
 800240c:	1dfb      	adds	r3, r7, #7
 800240e:	781b      	ldrb	r3, [r3, #0]
 8002410:	b25b      	sxtb	r3, r3
 8002412:	089b      	lsrs	r3, r3, #2
 8002414:	430a      	orrs	r2, r1
 8002416:	33c0      	adds	r3, #192	; 0xc0
 8002418:	009b      	lsls	r3, r3, #2
 800241a:	501a      	str	r2, [r3, r0]
}
 800241c:	46c0      	nop			; (mov r8, r8)
 800241e:	46bd      	mov	sp, r7
 8002420:	b003      	add	sp, #12
 8002422:	bd90      	pop	{r4, r7, pc}
 8002424:	e000ed00 	.word	0xe000ed00
 8002428:	e000e100 	.word	0xe000e100

0800242c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 800242c:	b580      	push	{r7, lr}
 800242e:	b082      	sub	sp, #8
 8002430:	af00      	add	r7, sp, #0
 8002432:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8002434:	687b      	ldr	r3, [r7, #4]
 8002436:	3b01      	subs	r3, #1
 8002438:	4a0c      	ldr	r2, [pc, #48]	; (800246c <SysTick_Config+0x40>)
 800243a:	4293      	cmp	r3, r2
 800243c:	d901      	bls.n	8002442 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800243e:	2301      	movs	r3, #1
 8002440:	e010      	b.n	8002464 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 8002442:	4b0b      	ldr	r3, [pc, #44]	; (8002470 <SysTick_Config+0x44>)
 8002444:	687a      	ldr	r2, [r7, #4]
 8002446:	3a01      	subs	r2, #1
 8002448:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 800244a:	2301      	movs	r3, #1
 800244c:	425b      	negs	r3, r3
 800244e:	2103      	movs	r1, #3
 8002450:	0018      	movs	r0, r3
 8002452:	f7ff ff7d 	bl	8002350 <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8002456:	4b06      	ldr	r3, [pc, #24]	; (8002470 <SysTick_Config+0x44>)
 8002458:	2200      	movs	r2, #0
 800245a:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 800245c:	4b04      	ldr	r3, [pc, #16]	; (8002470 <SysTick_Config+0x44>)
 800245e:	2207      	movs	r2, #7
 8002460:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 8002462:	2300      	movs	r3, #0
}
 8002464:	0018      	movs	r0, r3
 8002466:	46bd      	mov	sp, r7
 8002468:	b002      	add	sp, #8
 800246a:	bd80      	pop	{r7, pc}
 800246c:	00ffffff 	.word	0x00ffffff
 8002470:	e000e010 	.word	0xe000e010

08002474 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8002474:	b580      	push	{r7, lr}
 8002476:	b084      	sub	sp, #16
 8002478:	af00      	add	r7, sp, #0
 800247a:	60b9      	str	r1, [r7, #8]
 800247c:	607a      	str	r2, [r7, #4]
 800247e:	210f      	movs	r1, #15
 8002480:	187b      	adds	r3, r7, r1
 8002482:	1c02      	adds	r2, r0, #0
 8002484:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 8002486:	68ba      	ldr	r2, [r7, #8]
 8002488:	187b      	adds	r3, r7, r1
 800248a:	781b      	ldrb	r3, [r3, #0]
 800248c:	b25b      	sxtb	r3, r3
 800248e:	0011      	movs	r1, r2
 8002490:	0018      	movs	r0, r3
 8002492:	f7ff ff5d 	bl	8002350 <NVIC_SetPriority>
}
 8002496:	46c0      	nop			; (mov r8, r8)
 8002498:	46bd      	mov	sp, r7
 800249a:	b004      	add	sp, #16
 800249c:	bd80      	pop	{r7, pc}

0800249e <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 800249e:	b580      	push	{r7, lr}
 80024a0:	b082      	sub	sp, #8
 80024a2:	af00      	add	r7, sp, #0
 80024a4:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80024a6:	687b      	ldr	r3, [r7, #4]
 80024a8:	0018      	movs	r0, r3
 80024aa:	f7ff ffbf 	bl	800242c <SysTick_Config>
 80024ae:	0003      	movs	r3, r0
}
 80024b0:	0018      	movs	r0, r3
 80024b2:	46bd      	mov	sp, r7
 80024b4:	b002      	add	sp, #8
 80024b6:	bd80      	pop	{r7, pc}

080024b8 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80024b8:	b580      	push	{r7, lr}
 80024ba:	b086      	sub	sp, #24
 80024bc:	af00      	add	r7, sp, #0
 80024be:	6078      	str	r0, [r7, #4]
 80024c0:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 80024c2:	2300      	movs	r3, #0
 80024c4:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 80024c6:	2300      	movs	r3, #0
 80024c8:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 80024ca:	2300      	movs	r3, #0
 80024cc:	613b      	str	r3, [r7, #16]
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 80024ce:	e155      	b.n	800277c <HAL_GPIO_Init+0x2c4>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 80024d0:	683b      	ldr	r3, [r7, #0]
 80024d2:	681b      	ldr	r3, [r3, #0]
 80024d4:	2101      	movs	r1, #1
 80024d6:	697a      	ldr	r2, [r7, #20]
 80024d8:	4091      	lsls	r1, r2
 80024da:	000a      	movs	r2, r1
 80024dc:	4013      	ands	r3, r2
 80024de:	60fb      	str	r3, [r7, #12]

    if (iocurrent)
 80024e0:	68fb      	ldr	r3, [r7, #12]
 80024e2:	2b00      	cmp	r3, #0
 80024e4:	d100      	bne.n	80024e8 <HAL_GPIO_Init+0x30>
 80024e6:	e146      	b.n	8002776 <HAL_GPIO_Init+0x2be>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80024e8:	683b      	ldr	r3, [r7, #0]
 80024ea:	685b      	ldr	r3, [r3, #4]
 80024ec:	2b01      	cmp	r3, #1
 80024ee:	d00b      	beq.n	8002508 <HAL_GPIO_Init+0x50>
 80024f0:	683b      	ldr	r3, [r7, #0]
 80024f2:	685b      	ldr	r3, [r3, #4]
 80024f4:	2b02      	cmp	r3, #2
 80024f6:	d007      	beq.n	8002508 <HAL_GPIO_Init+0x50>
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80024f8:	683b      	ldr	r3, [r7, #0]
 80024fa:	685b      	ldr	r3, [r3, #4]
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 80024fc:	2b11      	cmp	r3, #17
 80024fe:	d003      	beq.n	8002508 <HAL_GPIO_Init+0x50>
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8002500:	683b      	ldr	r3, [r7, #0]
 8002502:	685b      	ldr	r3, [r3, #4]
 8002504:	2b12      	cmp	r3, #18
 8002506:	d130      	bne.n	800256a <HAL_GPIO_Init+0xb2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8002508:	687b      	ldr	r3, [r7, #4]
 800250a:	689b      	ldr	r3, [r3, #8]
 800250c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 800250e:	697b      	ldr	r3, [r7, #20]
 8002510:	005b      	lsls	r3, r3, #1
 8002512:	2203      	movs	r2, #3
 8002514:	409a      	lsls	r2, r3
 8002516:	0013      	movs	r3, r2
 8002518:	43da      	mvns	r2, r3
 800251a:	693b      	ldr	r3, [r7, #16]
 800251c:	4013      	ands	r3, r2
 800251e:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 8002520:	683b      	ldr	r3, [r7, #0]
 8002522:	68da      	ldr	r2, [r3, #12]
 8002524:	697b      	ldr	r3, [r7, #20]
 8002526:	005b      	lsls	r3, r3, #1
 8002528:	409a      	lsls	r2, r3
 800252a:	0013      	movs	r3, r2
 800252c:	693a      	ldr	r2, [r7, #16]
 800252e:	4313      	orrs	r3, r2
 8002530:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 8002532:	687b      	ldr	r3, [r7, #4]
 8002534:	693a      	ldr	r2, [r7, #16]
 8002536:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8002538:	687b      	ldr	r3, [r7, #4]
 800253a:	685b      	ldr	r3, [r3, #4]
 800253c:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800253e:	2201      	movs	r2, #1
 8002540:	697b      	ldr	r3, [r7, #20]
 8002542:	409a      	lsls	r2, r3
 8002544:	0013      	movs	r3, r2
 8002546:	43da      	mvns	r2, r3
 8002548:	693b      	ldr	r3, [r7, #16]
 800254a:	4013      	ands	r3, r2
 800254c:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800254e:	683b      	ldr	r3, [r7, #0]
 8002550:	685b      	ldr	r3, [r3, #4]
 8002552:	091b      	lsrs	r3, r3, #4
 8002554:	2201      	movs	r2, #1
 8002556:	401a      	ands	r2, r3
 8002558:	697b      	ldr	r3, [r7, #20]
 800255a:	409a      	lsls	r2, r3
 800255c:	0013      	movs	r3, r2
 800255e:	693a      	ldr	r2, [r7, #16]
 8002560:	4313      	orrs	r3, r2
 8002562:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 8002564:	687b      	ldr	r3, [r7, #4]
 8002566:	693a      	ldr	r2, [r7, #16]
 8002568:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 800256a:	687b      	ldr	r3, [r7, #4]
 800256c:	68db      	ldr	r3, [r3, #12]
 800256e:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 8002570:	697b      	ldr	r3, [r7, #20]
 8002572:	005b      	lsls	r3, r3, #1
 8002574:	2203      	movs	r2, #3
 8002576:	409a      	lsls	r2, r3
 8002578:	0013      	movs	r3, r2
 800257a:	43da      	mvns	r2, r3
 800257c:	693b      	ldr	r3, [r7, #16]
 800257e:	4013      	ands	r3, r2
 8002580:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 8002582:	683b      	ldr	r3, [r7, #0]
 8002584:	689a      	ldr	r2, [r3, #8]
 8002586:	697b      	ldr	r3, [r7, #20]
 8002588:	005b      	lsls	r3, r3, #1
 800258a:	409a      	lsls	r2, r3
 800258c:	0013      	movs	r3, r2
 800258e:	693a      	ldr	r2, [r7, #16]
 8002590:	4313      	orrs	r3, r2
 8002592:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 8002594:	687b      	ldr	r3, [r7, #4]
 8002596:	693a      	ldr	r2, [r7, #16]
 8002598:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800259a:	683b      	ldr	r3, [r7, #0]
 800259c:	685b      	ldr	r3, [r3, #4]
 800259e:	2b02      	cmp	r3, #2
 80025a0:	d003      	beq.n	80025aa <HAL_GPIO_Init+0xf2>
 80025a2:	683b      	ldr	r3, [r7, #0]
 80025a4:	685b      	ldr	r3, [r3, #4]
 80025a6:	2b12      	cmp	r3, #18
 80025a8:	d123      	bne.n	80025f2 <HAL_GPIO_Init+0x13a>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 80025aa:	697b      	ldr	r3, [r7, #20]
 80025ac:	08da      	lsrs	r2, r3, #3
 80025ae:	687b      	ldr	r3, [r7, #4]
 80025b0:	3208      	adds	r2, #8
 80025b2:	0092      	lsls	r2, r2, #2
 80025b4:	58d3      	ldr	r3, [r2, r3]
 80025b6:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)0xFU << ((uint32_t)(position & (uint32_t)0x07U) * 4U));
 80025b8:	697b      	ldr	r3, [r7, #20]
 80025ba:	2207      	movs	r2, #7
 80025bc:	4013      	ands	r3, r2
 80025be:	009b      	lsls	r3, r3, #2
 80025c0:	220f      	movs	r2, #15
 80025c2:	409a      	lsls	r2, r3
 80025c4:	0013      	movs	r3, r2
 80025c6:	43da      	mvns	r2, r3
 80025c8:	693b      	ldr	r3, [r7, #16]
 80025ca:	4013      	ands	r3, r2
 80025cc:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 80025ce:	683b      	ldr	r3, [r7, #0]
 80025d0:	691a      	ldr	r2, [r3, #16]
 80025d2:	697b      	ldr	r3, [r7, #20]
 80025d4:	2107      	movs	r1, #7
 80025d6:	400b      	ands	r3, r1
 80025d8:	009b      	lsls	r3, r3, #2
 80025da:	409a      	lsls	r2, r3
 80025dc:	0013      	movs	r3, r2
 80025de:	693a      	ldr	r2, [r7, #16]
 80025e0:	4313      	orrs	r3, r2
 80025e2:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 80025e4:	697b      	ldr	r3, [r7, #20]
 80025e6:	08da      	lsrs	r2, r3, #3
 80025e8:	687b      	ldr	r3, [r7, #4]
 80025ea:	3208      	adds	r2, #8
 80025ec:	0092      	lsls	r2, r2, #2
 80025ee:	6939      	ldr	r1, [r7, #16]
 80025f0:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 80025f2:	687b      	ldr	r3, [r7, #4]
 80025f4:	681b      	ldr	r3, [r3, #0]
 80025f6:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 80025f8:	697b      	ldr	r3, [r7, #20]
 80025fa:	005b      	lsls	r3, r3, #1
 80025fc:	2203      	movs	r2, #3
 80025fe:	409a      	lsls	r2, r3
 8002600:	0013      	movs	r3, r2
 8002602:	43da      	mvns	r2, r3
 8002604:	693b      	ldr	r3, [r7, #16]
 8002606:	4013      	ands	r3, r2
 8002608:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 800260a:	683b      	ldr	r3, [r7, #0]
 800260c:	685b      	ldr	r3, [r3, #4]
 800260e:	2203      	movs	r2, #3
 8002610:	401a      	ands	r2, r3
 8002612:	697b      	ldr	r3, [r7, #20]
 8002614:	005b      	lsls	r3, r3, #1
 8002616:	409a      	lsls	r2, r3
 8002618:	0013      	movs	r3, r2
 800261a:	693a      	ldr	r2, [r7, #16]
 800261c:	4313      	orrs	r3, r2
 800261e:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 8002620:	687b      	ldr	r3, [r7, #4]
 8002622:	693a      	ldr	r2, [r7, #16]
 8002624:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8002626:	683b      	ldr	r3, [r7, #0]
 8002628:	685a      	ldr	r2, [r3, #4]
 800262a:	2380      	movs	r3, #128	; 0x80
 800262c:	055b      	lsls	r3, r3, #21
 800262e:	4013      	ands	r3, r2
 8002630:	d100      	bne.n	8002634 <HAL_GPIO_Init+0x17c>
 8002632:	e0a0      	b.n	8002776 <HAL_GPIO_Init+0x2be>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002634:	4b57      	ldr	r3, [pc, #348]	; (8002794 <HAL_GPIO_Init+0x2dc>)
 8002636:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002638:	4b56      	ldr	r3, [pc, #344]	; (8002794 <HAL_GPIO_Init+0x2dc>)
 800263a:	2101      	movs	r1, #1
 800263c:	430a      	orrs	r2, r1
 800263e:	635a      	str	r2, [r3, #52]	; 0x34

        temp = SYSCFG->EXTICR[position >> 2U];
 8002640:	4a55      	ldr	r2, [pc, #340]	; (8002798 <HAL_GPIO_Init+0x2e0>)
 8002642:	697b      	ldr	r3, [r7, #20]
 8002644:	089b      	lsrs	r3, r3, #2
 8002646:	3302      	adds	r3, #2
 8002648:	009b      	lsls	r3, r3, #2
 800264a:	589b      	ldr	r3, [r3, r2]
 800264c:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 800264e:	697b      	ldr	r3, [r7, #20]
 8002650:	2203      	movs	r2, #3
 8002652:	4013      	ands	r3, r2
 8002654:	009b      	lsls	r3, r3, #2
 8002656:	220f      	movs	r2, #15
 8002658:	409a      	lsls	r2, r3
 800265a:	0013      	movs	r3, r2
 800265c:	43da      	mvns	r2, r3
 800265e:	693b      	ldr	r3, [r7, #16]
 8002660:	4013      	ands	r3, r2
 8002662:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 8002664:	687a      	ldr	r2, [r7, #4]
 8002666:	23a0      	movs	r3, #160	; 0xa0
 8002668:	05db      	lsls	r3, r3, #23
 800266a:	429a      	cmp	r2, r3
 800266c:	d01f      	beq.n	80026ae <HAL_GPIO_Init+0x1f6>
 800266e:	687b      	ldr	r3, [r7, #4]
 8002670:	4a4a      	ldr	r2, [pc, #296]	; (800279c <HAL_GPIO_Init+0x2e4>)
 8002672:	4293      	cmp	r3, r2
 8002674:	d019      	beq.n	80026aa <HAL_GPIO_Init+0x1f2>
 8002676:	687b      	ldr	r3, [r7, #4]
 8002678:	4a49      	ldr	r2, [pc, #292]	; (80027a0 <HAL_GPIO_Init+0x2e8>)
 800267a:	4293      	cmp	r3, r2
 800267c:	d013      	beq.n	80026a6 <HAL_GPIO_Init+0x1ee>
 800267e:	687b      	ldr	r3, [r7, #4]
 8002680:	4a48      	ldr	r2, [pc, #288]	; (80027a4 <HAL_GPIO_Init+0x2ec>)
 8002682:	4293      	cmp	r3, r2
 8002684:	d00d      	beq.n	80026a2 <HAL_GPIO_Init+0x1ea>
 8002686:	687b      	ldr	r3, [r7, #4]
 8002688:	4a47      	ldr	r2, [pc, #284]	; (80027a8 <HAL_GPIO_Init+0x2f0>)
 800268a:	4293      	cmp	r3, r2
 800268c:	d007      	beq.n	800269e <HAL_GPIO_Init+0x1e6>
 800268e:	687b      	ldr	r3, [r7, #4]
 8002690:	4a46      	ldr	r2, [pc, #280]	; (80027ac <HAL_GPIO_Init+0x2f4>)
 8002692:	4293      	cmp	r3, r2
 8002694:	d101      	bne.n	800269a <HAL_GPIO_Init+0x1e2>
 8002696:	2305      	movs	r3, #5
 8002698:	e00a      	b.n	80026b0 <HAL_GPIO_Init+0x1f8>
 800269a:	2306      	movs	r3, #6
 800269c:	e008      	b.n	80026b0 <HAL_GPIO_Init+0x1f8>
 800269e:	2304      	movs	r3, #4
 80026a0:	e006      	b.n	80026b0 <HAL_GPIO_Init+0x1f8>
 80026a2:	2303      	movs	r3, #3
 80026a4:	e004      	b.n	80026b0 <HAL_GPIO_Init+0x1f8>
 80026a6:	2302      	movs	r3, #2
 80026a8:	e002      	b.n	80026b0 <HAL_GPIO_Init+0x1f8>
 80026aa:	2301      	movs	r3, #1
 80026ac:	e000      	b.n	80026b0 <HAL_GPIO_Init+0x1f8>
 80026ae:	2300      	movs	r3, #0
 80026b0:	697a      	ldr	r2, [r7, #20]
 80026b2:	2103      	movs	r1, #3
 80026b4:	400a      	ands	r2, r1
 80026b6:	0092      	lsls	r2, r2, #2
 80026b8:	4093      	lsls	r3, r2
 80026ba:	693a      	ldr	r2, [r7, #16]
 80026bc:	4313      	orrs	r3, r2
 80026be:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80026c0:	4935      	ldr	r1, [pc, #212]	; (8002798 <HAL_GPIO_Init+0x2e0>)
 80026c2:	697b      	ldr	r3, [r7, #20]
 80026c4:	089b      	lsrs	r3, r3, #2
 80026c6:	3302      	adds	r3, #2
 80026c8:	009b      	lsls	r3, r3, #2
 80026ca:	693a      	ldr	r2, [r7, #16]
 80026cc:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 80026ce:	4b38      	ldr	r3, [pc, #224]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 80026d0:	681b      	ldr	r3, [r3, #0]
 80026d2:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80026d4:	68fb      	ldr	r3, [r7, #12]
 80026d6:	43da      	mvns	r2, r3
 80026d8:	693b      	ldr	r3, [r7, #16]
 80026da:	4013      	ands	r3, r2
 80026dc:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 80026de:	683b      	ldr	r3, [r7, #0]
 80026e0:	685a      	ldr	r2, [r3, #4]
 80026e2:	2380      	movs	r3, #128	; 0x80
 80026e4:	025b      	lsls	r3, r3, #9
 80026e6:	4013      	ands	r3, r2
 80026e8:	d003      	beq.n	80026f2 <HAL_GPIO_Init+0x23a>
        {
          temp |= iocurrent;
 80026ea:	693a      	ldr	r2, [r7, #16]
 80026ec:	68fb      	ldr	r3, [r7, #12]
 80026ee:	4313      	orrs	r3, r2
 80026f0:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 80026f2:	4b2f      	ldr	r3, [pc, #188]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 80026f4:	693a      	ldr	r2, [r7, #16]
 80026f6:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 80026f8:	4b2d      	ldr	r3, [pc, #180]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 80026fa:	685b      	ldr	r3, [r3, #4]
 80026fc:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 80026fe:	68fb      	ldr	r3, [r7, #12]
 8002700:	43da      	mvns	r2, r3
 8002702:	693b      	ldr	r3, [r7, #16]
 8002704:	4013      	ands	r3, r2
 8002706:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8002708:	683b      	ldr	r3, [r7, #0]
 800270a:	685a      	ldr	r2, [r3, #4]
 800270c:	2380      	movs	r3, #128	; 0x80
 800270e:	029b      	lsls	r3, r3, #10
 8002710:	4013      	ands	r3, r2
 8002712:	d003      	beq.n	800271c <HAL_GPIO_Init+0x264>
        {
          temp |= iocurrent;
 8002714:	693a      	ldr	r2, [r7, #16]
 8002716:	68fb      	ldr	r3, [r7, #12]
 8002718:	4313      	orrs	r3, r2
 800271a:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 800271c:	4b24      	ldr	r3, [pc, #144]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 800271e:	693a      	ldr	r2, [r7, #16]
 8002720:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 8002722:	4b23      	ldr	r3, [pc, #140]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 8002724:	689b      	ldr	r3, [r3, #8]
 8002726:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002728:	68fb      	ldr	r3, [r7, #12]
 800272a:	43da      	mvns	r2, r3
 800272c:	693b      	ldr	r3, [r7, #16]
 800272e:	4013      	ands	r3, r2
 8002730:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 8002732:	683b      	ldr	r3, [r7, #0]
 8002734:	685a      	ldr	r2, [r3, #4]
 8002736:	2380      	movs	r3, #128	; 0x80
 8002738:	035b      	lsls	r3, r3, #13
 800273a:	4013      	ands	r3, r2
 800273c:	d003      	beq.n	8002746 <HAL_GPIO_Init+0x28e>
        {
          temp |= iocurrent;
 800273e:	693a      	ldr	r2, [r7, #16]
 8002740:	68fb      	ldr	r3, [r7, #12]
 8002742:	4313      	orrs	r3, r2
 8002744:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8002746:	4b1a      	ldr	r3, [pc, #104]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 8002748:	693a      	ldr	r2, [r7, #16]
 800274a:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 800274c:	4b18      	ldr	r3, [pc, #96]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 800274e:	68db      	ldr	r3, [r3, #12]
 8002750:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8002752:	68fb      	ldr	r3, [r7, #12]
 8002754:	43da      	mvns	r2, r3
 8002756:	693b      	ldr	r3, [r7, #16]
 8002758:	4013      	ands	r3, r2
 800275a:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 800275c:	683b      	ldr	r3, [r7, #0]
 800275e:	685a      	ldr	r2, [r3, #4]
 8002760:	2380      	movs	r3, #128	; 0x80
 8002762:	039b      	lsls	r3, r3, #14
 8002764:	4013      	ands	r3, r2
 8002766:	d003      	beq.n	8002770 <HAL_GPIO_Init+0x2b8>
        {
          temp |= iocurrent;
 8002768:	693a      	ldr	r2, [r7, #16]
 800276a:	68fb      	ldr	r3, [r7, #12]
 800276c:	4313      	orrs	r3, r2
 800276e:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 8002770:	4b0f      	ldr	r3, [pc, #60]	; (80027b0 <HAL_GPIO_Init+0x2f8>)
 8002772:	693a      	ldr	r2, [r7, #16]
 8002774:	60da      	str	r2, [r3, #12]
      }
    }
    position++;
 8002776:	697b      	ldr	r3, [r7, #20]
 8002778:	3301      	adds	r3, #1
 800277a:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 800277c:	683b      	ldr	r3, [r7, #0]
 800277e:	681a      	ldr	r2, [r3, #0]
 8002780:	697b      	ldr	r3, [r7, #20]
 8002782:	40da      	lsrs	r2, r3
 8002784:	1e13      	subs	r3, r2, #0
 8002786:	d000      	beq.n	800278a <HAL_GPIO_Init+0x2d2>
 8002788:	e6a2      	b.n	80024d0 <HAL_GPIO_Init+0x18>
  }
}
 800278a:	46c0      	nop			; (mov r8, r8)
 800278c:	46bd      	mov	sp, r7
 800278e:	b006      	add	sp, #24
 8002790:	bd80      	pop	{r7, pc}
 8002792:	46c0      	nop			; (mov r8, r8)
 8002794:	40021000 	.word	0x40021000
 8002798:	40010000 	.word	0x40010000
 800279c:	50000400 	.word	0x50000400
 80027a0:	50000800 	.word	0x50000800
 80027a4:	50000c00 	.word	0x50000c00
 80027a8:	50001000 	.word	0x50001000
 80027ac:	50001c00 	.word	0x50001c00
 80027b0:	40010400 	.word	0x40010400

080027b4 <HAL_GPIO_ReadPin>:
  *                   This parameter can be GPIO_PIN_x where x can be (0..15).
  *                   All port bits are not necessarily available on all GPIOs.
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80027b4:	b580      	push	{r7, lr}
 80027b6:	b084      	sub	sp, #16
 80027b8:	af00      	add	r7, sp, #0
 80027ba:	6078      	str	r0, [r7, #4]
 80027bc:	000a      	movs	r2, r1
 80027be:	1cbb      	adds	r3, r7, #2
 80027c0:	801a      	strh	r2, [r3, #0]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80027c2:	687b      	ldr	r3, [r7, #4]
 80027c4:	691b      	ldr	r3, [r3, #16]
 80027c6:	1cba      	adds	r2, r7, #2
 80027c8:	8812      	ldrh	r2, [r2, #0]
 80027ca:	4013      	ands	r3, r2
 80027cc:	d004      	beq.n	80027d8 <HAL_GPIO_ReadPin+0x24>
  {
    bitstatus = GPIO_PIN_SET;
 80027ce:	230f      	movs	r3, #15
 80027d0:	18fb      	adds	r3, r7, r3
 80027d2:	2201      	movs	r2, #1
 80027d4:	701a      	strb	r2, [r3, #0]
 80027d6:	e003      	b.n	80027e0 <HAL_GPIO_ReadPin+0x2c>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 80027d8:	230f      	movs	r3, #15
 80027da:	18fb      	adds	r3, r7, r3
 80027dc:	2200      	movs	r2, #0
 80027de:	701a      	strb	r2, [r3, #0]
  }
  return bitstatus;
 80027e0:	230f      	movs	r3, #15
 80027e2:	18fb      	adds	r3, r7, r3
 80027e4:	781b      	ldrb	r3, [r3, #0]
}
 80027e6:	0018      	movs	r0, r3
 80027e8:	46bd      	mov	sp, r7
 80027ea:	b004      	add	sp, #16
 80027ec:	bd80      	pop	{r7, pc}

080027ee <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 80027ee:	b580      	push	{r7, lr}
 80027f0:	b082      	sub	sp, #8
 80027f2:	af00      	add	r7, sp, #0
 80027f4:	6078      	str	r0, [r7, #4]
 80027f6:	0008      	movs	r0, r1
 80027f8:	0011      	movs	r1, r2
 80027fa:	1cbb      	adds	r3, r7, #2
 80027fc:	1c02      	adds	r2, r0, #0
 80027fe:	801a      	strh	r2, [r3, #0]
 8002800:	1c7b      	adds	r3, r7, #1
 8002802:	1c0a      	adds	r2, r1, #0
 8002804:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8002806:	1c7b      	adds	r3, r7, #1
 8002808:	781b      	ldrb	r3, [r3, #0]
 800280a:	2b00      	cmp	r3, #0
 800280c:	d004      	beq.n	8002818 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 800280e:	1cbb      	adds	r3, r7, #2
 8002810:	881a      	ldrh	r2, [r3, #0]
 8002812:	687b      	ldr	r3, [r7, #4]
 8002814:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 8002816:	e003      	b.n	8002820 <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 8002818:	1cbb      	adds	r3, r7, #2
 800281a:	881a      	ldrh	r2, [r3, #0]
 800281c:	687b      	ldr	r3, [r7, #4]
 800281e:	629a      	str	r2, [r3, #40]	; 0x28
}
 8002820:	46c0      	nop			; (mov r8, r8)
 8002822:	46bd      	mov	sp, r7
 8002824:	b002      	add	sp, #8
 8002826:	bd80      	pop	{r7, pc}

08002828 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 8002828:	b5b0      	push	{r4, r5, r7, lr}
 800282a:	b08a      	sub	sp, #40	; 0x28
 800282c:	af00      	add	r7, sp, #0
 800282e:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check the parameters */
  if(RCC_OscInitStruct == NULL)
 8002830:	687b      	ldr	r3, [r7, #4]
 8002832:	2b00      	cmp	r3, #0
 8002834:	d102      	bne.n	800283c <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 8002836:	2301      	movs	r3, #1
 8002838:	f000 fbbc 	bl	8002fb4 <HAL_RCC_OscConfig+0x78c>
  }

  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 800283c:	4bc8      	ldr	r3, [pc, #800]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 800283e:	68db      	ldr	r3, [r3, #12]
 8002840:	220c      	movs	r2, #12
 8002842:	4013      	ands	r3, r2
 8002844:	61fb      	str	r3, [r7, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 8002846:	4bc6      	ldr	r3, [pc, #792]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002848:	68da      	ldr	r2, [r3, #12]
 800284a:	2380      	movs	r3, #128	; 0x80
 800284c:	025b      	lsls	r3, r3, #9
 800284e:	4013      	ands	r3, r2
 8002850:	61bb      	str	r3, [r7, #24]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 8002852:	687b      	ldr	r3, [r7, #4]
 8002854:	681b      	ldr	r3, [r3, #0]
 8002856:	2201      	movs	r2, #1
 8002858:	4013      	ands	r3, r2
 800285a:	d100      	bne.n	800285e <HAL_RCC_OscConfig+0x36>
 800285c:	e07e      	b.n	800295c <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 800285e:	69fb      	ldr	r3, [r7, #28]
 8002860:	2b08      	cmp	r3, #8
 8002862:	d007      	beq.n	8002874 <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8002864:	69fb      	ldr	r3, [r7, #28]
 8002866:	2b0c      	cmp	r3, #12
 8002868:	d112      	bne.n	8002890 <HAL_RCC_OscConfig+0x68>
 800286a:	69ba      	ldr	r2, [r7, #24]
 800286c:	2380      	movs	r3, #128	; 0x80
 800286e:	025b      	lsls	r3, r3, #9
 8002870:	429a      	cmp	r2, r3
 8002872:	d10d      	bne.n	8002890 <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8002874:	4bba      	ldr	r3, [pc, #744]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002876:	681a      	ldr	r2, [r3, #0]
 8002878:	2380      	movs	r3, #128	; 0x80
 800287a:	029b      	lsls	r3, r3, #10
 800287c:	4013      	ands	r3, r2
 800287e:	d100      	bne.n	8002882 <HAL_RCC_OscConfig+0x5a>
 8002880:	e06b      	b.n	800295a <HAL_RCC_OscConfig+0x132>
 8002882:	687b      	ldr	r3, [r7, #4]
 8002884:	685b      	ldr	r3, [r3, #4]
 8002886:	2b00      	cmp	r3, #0
 8002888:	d167      	bne.n	800295a <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 800288a:	2301      	movs	r3, #1
 800288c:	f000 fb92 	bl	8002fb4 <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 8002890:	687b      	ldr	r3, [r7, #4]
 8002892:	685a      	ldr	r2, [r3, #4]
 8002894:	2380      	movs	r3, #128	; 0x80
 8002896:	025b      	lsls	r3, r3, #9
 8002898:	429a      	cmp	r2, r3
 800289a:	d107      	bne.n	80028ac <HAL_RCC_OscConfig+0x84>
 800289c:	4bb0      	ldr	r3, [pc, #704]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 800289e:	681a      	ldr	r2, [r3, #0]
 80028a0:	4baf      	ldr	r3, [pc, #700]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028a2:	2180      	movs	r1, #128	; 0x80
 80028a4:	0249      	lsls	r1, r1, #9
 80028a6:	430a      	orrs	r2, r1
 80028a8:	601a      	str	r2, [r3, #0]
 80028aa:	e027      	b.n	80028fc <HAL_RCC_OscConfig+0xd4>
 80028ac:	687b      	ldr	r3, [r7, #4]
 80028ae:	685a      	ldr	r2, [r3, #4]
 80028b0:	23a0      	movs	r3, #160	; 0xa0
 80028b2:	02db      	lsls	r3, r3, #11
 80028b4:	429a      	cmp	r2, r3
 80028b6:	d10e      	bne.n	80028d6 <HAL_RCC_OscConfig+0xae>
 80028b8:	4ba9      	ldr	r3, [pc, #676]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028ba:	681a      	ldr	r2, [r3, #0]
 80028bc:	4ba8      	ldr	r3, [pc, #672]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028be:	2180      	movs	r1, #128	; 0x80
 80028c0:	02c9      	lsls	r1, r1, #11
 80028c2:	430a      	orrs	r2, r1
 80028c4:	601a      	str	r2, [r3, #0]
 80028c6:	4ba6      	ldr	r3, [pc, #664]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028c8:	681a      	ldr	r2, [r3, #0]
 80028ca:	4ba5      	ldr	r3, [pc, #660]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028cc:	2180      	movs	r1, #128	; 0x80
 80028ce:	0249      	lsls	r1, r1, #9
 80028d0:	430a      	orrs	r2, r1
 80028d2:	601a      	str	r2, [r3, #0]
 80028d4:	e012      	b.n	80028fc <HAL_RCC_OscConfig+0xd4>
 80028d6:	4ba2      	ldr	r3, [pc, #648]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028d8:	681a      	ldr	r2, [r3, #0]
 80028da:	4ba1      	ldr	r3, [pc, #644]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028dc:	49a1      	ldr	r1, [pc, #644]	; (8002b64 <HAL_RCC_OscConfig+0x33c>)
 80028de:	400a      	ands	r2, r1
 80028e0:	601a      	str	r2, [r3, #0]
 80028e2:	4b9f      	ldr	r3, [pc, #636]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028e4:	681a      	ldr	r2, [r3, #0]
 80028e6:	2380      	movs	r3, #128	; 0x80
 80028e8:	025b      	lsls	r3, r3, #9
 80028ea:	4013      	ands	r3, r2
 80028ec:	60fb      	str	r3, [r7, #12]
 80028ee:	68fb      	ldr	r3, [r7, #12]
 80028f0:	4b9b      	ldr	r3, [pc, #620]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028f2:	681a      	ldr	r2, [r3, #0]
 80028f4:	4b9a      	ldr	r3, [pc, #616]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80028f6:	499c      	ldr	r1, [pc, #624]	; (8002b68 <HAL_RCC_OscConfig+0x340>)
 80028f8:	400a      	ands	r2, r1
 80028fa:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80028fc:	687b      	ldr	r3, [r7, #4]
 80028fe:	685b      	ldr	r3, [r3, #4]
 8002900:	2b00      	cmp	r3, #0
 8002902:	d015      	beq.n	8002930 <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002904:	f7ff fcf8 	bl	80022f8 <HAL_GetTick>
 8002908:	0003      	movs	r3, r0
 800290a:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 800290c:	e009      	b.n	8002922 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800290e:	f7ff fcf3 	bl	80022f8 <HAL_GetTick>
 8002912:	0002      	movs	r2, r0
 8002914:	697b      	ldr	r3, [r7, #20]
 8002916:	1ad3      	subs	r3, r2, r3
 8002918:	2b64      	cmp	r3, #100	; 0x64
 800291a:	d902      	bls.n	8002922 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 800291c:	2303      	movs	r3, #3
 800291e:	f000 fb49 	bl	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8002922:	4b8f      	ldr	r3, [pc, #572]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002924:	681a      	ldr	r2, [r3, #0]
 8002926:	2380      	movs	r3, #128	; 0x80
 8002928:	029b      	lsls	r3, r3, #10
 800292a:	4013      	ands	r3, r2
 800292c:	d0ef      	beq.n	800290e <HAL_RCC_OscConfig+0xe6>
 800292e:	e015      	b.n	800295c <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002930:	f7ff fce2 	bl	80022f8 <HAL_GetTick>
 8002934:	0003      	movs	r3, r0
 8002936:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 8002938:	e008      	b.n	800294c <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 800293a:	f7ff fcdd 	bl	80022f8 <HAL_GetTick>
 800293e:	0002      	movs	r2, r0
 8002940:	697b      	ldr	r3, [r7, #20]
 8002942:	1ad3      	subs	r3, r2, r3
 8002944:	2b64      	cmp	r3, #100	; 0x64
 8002946:	d901      	bls.n	800294c <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 8002948:	2303      	movs	r3, #3
 800294a:	e333      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 800294c:	4b84      	ldr	r3, [pc, #528]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 800294e:	681a      	ldr	r2, [r3, #0]
 8002950:	2380      	movs	r3, #128	; 0x80
 8002952:	029b      	lsls	r3, r3, #10
 8002954:	4013      	ands	r3, r2
 8002956:	d1f0      	bne.n	800293a <HAL_RCC_OscConfig+0x112>
 8002958:	e000      	b.n	800295c <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 800295a:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 800295c:	687b      	ldr	r3, [r7, #4]
 800295e:	681b      	ldr	r3, [r3, #0]
 8002960:	2202      	movs	r2, #2
 8002962:	4013      	ands	r3, r2
 8002964:	d100      	bne.n	8002968 <HAL_RCC_OscConfig+0x140>
 8002966:	e098      	b.n	8002a9a <HAL_RCC_OscConfig+0x272>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 8002968:	687b      	ldr	r3, [r7, #4]
 800296a:	68db      	ldr	r3, [r3, #12]
 800296c:	627b      	str	r3, [r7, #36]	; 0x24

#if defined(RCC_CR_HSIOUTEN)
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 800296e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002970:	2220      	movs	r2, #32
 8002972:	4013      	ands	r3, r2
 8002974:	d009      	beq.n	800298a <HAL_RCC_OscConfig+0x162>
    {
      /* HSI Output enable for timer requested */
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8002976:	4b7a      	ldr	r3, [pc, #488]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002978:	681a      	ldr	r2, [r3, #0]
 800297a:	4b79      	ldr	r3, [pc, #484]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 800297c:	2120      	movs	r1, #32
 800297e:	430a      	orrs	r2, r1
 8002980:	601a      	str	r2, [r3, #0]

      hsi_state &= ~RCC_CR_HSIOUTEN;
 8002982:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002984:	2220      	movs	r2, #32
 8002986:	4393      	bics	r3, r2
 8002988:	627b      	str	r3, [r7, #36]	; 0x24
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 800298a:	69fb      	ldr	r3, [r7, #28]
 800298c:	2b04      	cmp	r3, #4
 800298e:	d005      	beq.n	800299c <HAL_RCC_OscConfig+0x174>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8002990:	69fb      	ldr	r3, [r7, #28]
 8002992:	2b0c      	cmp	r3, #12
 8002994:	d13d      	bne.n	8002a12 <HAL_RCC_OscConfig+0x1ea>
 8002996:	69bb      	ldr	r3, [r7, #24]
 8002998:	2b00      	cmp	r3, #0
 800299a:	d13a      	bne.n	8002a12 <HAL_RCC_OscConfig+0x1ea>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 800299c:	4b70      	ldr	r3, [pc, #448]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	2204      	movs	r2, #4
 80029a2:	4013      	ands	r3, r2
 80029a4:	d004      	beq.n	80029b0 <HAL_RCC_OscConfig+0x188>
 80029a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80029a8:	2b00      	cmp	r3, #0
 80029aa:	d101      	bne.n	80029b0 <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 80029ac:	2301      	movs	r3, #1
 80029ae:	e301      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 80029b0:	4b6b      	ldr	r3, [pc, #428]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80029b2:	685b      	ldr	r3, [r3, #4]
 80029b4:	4a6d      	ldr	r2, [pc, #436]	; (8002b6c <HAL_RCC_OscConfig+0x344>)
 80029b6:	4013      	ands	r3, r2
 80029b8:	0019      	movs	r1, r3
 80029ba:	687b      	ldr	r3, [r7, #4]
 80029bc:	691b      	ldr	r3, [r3, #16]
 80029be:	021a      	lsls	r2, r3, #8
 80029c0:	4b67      	ldr	r3, [pc, #412]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80029c2:	430a      	orrs	r2, r1
 80029c4:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 80029c6:	4b66      	ldr	r3, [pc, #408]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80029c8:	681b      	ldr	r3, [r3, #0]
 80029ca:	2209      	movs	r2, #9
 80029cc:	4393      	bics	r3, r2
 80029ce:	0019      	movs	r1, r3
 80029d0:	4b63      	ldr	r3, [pc, #396]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80029d2:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80029d4:	430a      	orrs	r2, r1
 80029d6:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80029d8:	f000 fc20 	bl	800321c <HAL_RCC_GetSysClockFreq>
 80029dc:	0001      	movs	r1, r0
 80029de:	4b60      	ldr	r3, [pc, #384]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 80029e0:	68db      	ldr	r3, [r3, #12]
 80029e2:	091b      	lsrs	r3, r3, #4
 80029e4:	220f      	movs	r2, #15
 80029e6:	4013      	ands	r3, r2
 80029e8:	4a61      	ldr	r2, [pc, #388]	; (8002b70 <HAL_RCC_OscConfig+0x348>)
 80029ea:	5cd3      	ldrb	r3, [r2, r3]
 80029ec:	000a      	movs	r2, r1
 80029ee:	40da      	lsrs	r2, r3
 80029f0:	4b60      	ldr	r3, [pc, #384]	; (8002b74 <HAL_RCC_OscConfig+0x34c>)
 80029f2:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (TICK_INT_PRIORITY);
 80029f4:	2513      	movs	r5, #19
 80029f6:	197c      	adds	r4, r7, r5
 80029f8:	2000      	movs	r0, #0
 80029fa:	f7ff fc37 	bl	800226c <HAL_InitTick>
 80029fe:	0003      	movs	r3, r0
 8002a00:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 8002a02:	197b      	adds	r3, r7, r5
 8002a04:	781b      	ldrb	r3, [r3, #0]
 8002a06:	2b00      	cmp	r3, #0
 8002a08:	d047      	beq.n	8002a9a <HAL_RCC_OscConfig+0x272>
      {
        return status;
 8002a0a:	2313      	movs	r3, #19
 8002a0c:	18fb      	adds	r3, r7, r3
 8002a0e:	781b      	ldrb	r3, [r3, #0]
 8002a10:	e2d0      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 8002a12:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8002a14:	2b00      	cmp	r3, #0
 8002a16:	d027      	beq.n	8002a68 <HAL_RCC_OscConfig+0x240>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8002a18:	4b51      	ldr	r3, [pc, #324]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a1a:	681b      	ldr	r3, [r3, #0]
 8002a1c:	2209      	movs	r2, #9
 8002a1e:	4393      	bics	r3, r2
 8002a20:	0019      	movs	r1, r3
 8002a22:	4b4f      	ldr	r3, [pc, #316]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a24:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8002a26:	430a      	orrs	r2, r1
 8002a28:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002a2a:	f7ff fc65 	bl	80022f8 <HAL_GetTick>
 8002a2e:	0003      	movs	r3, r0
 8002a30:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002a32:	e008      	b.n	8002a46 <HAL_RCC_OscConfig+0x21e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002a34:	f7ff fc60 	bl	80022f8 <HAL_GetTick>
 8002a38:	0002      	movs	r2, r0
 8002a3a:	697b      	ldr	r3, [r7, #20]
 8002a3c:	1ad3      	subs	r3, r2, r3
 8002a3e:	2b02      	cmp	r3, #2
 8002a40:	d901      	bls.n	8002a46 <HAL_RCC_OscConfig+0x21e>
          {
            return HAL_TIMEOUT;
 8002a42:	2303      	movs	r3, #3
 8002a44:	e2b6      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8002a46:	4b46      	ldr	r3, [pc, #280]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a48:	681b      	ldr	r3, [r3, #0]
 8002a4a:	2204      	movs	r2, #4
 8002a4c:	4013      	ands	r3, r2
 8002a4e:	d0f1      	beq.n	8002a34 <HAL_RCC_OscConfig+0x20c>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8002a50:	4b43      	ldr	r3, [pc, #268]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a52:	685b      	ldr	r3, [r3, #4]
 8002a54:	4a45      	ldr	r2, [pc, #276]	; (8002b6c <HAL_RCC_OscConfig+0x344>)
 8002a56:	4013      	ands	r3, r2
 8002a58:	0019      	movs	r1, r3
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	691b      	ldr	r3, [r3, #16]
 8002a5e:	021a      	lsls	r2, r3, #8
 8002a60:	4b3f      	ldr	r3, [pc, #252]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a62:	430a      	orrs	r2, r1
 8002a64:	605a      	str	r2, [r3, #4]
 8002a66:	e018      	b.n	8002a9a <HAL_RCC_OscConfig+0x272>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8002a68:	4b3d      	ldr	r3, [pc, #244]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a6a:	681a      	ldr	r2, [r3, #0]
 8002a6c:	4b3c      	ldr	r3, [pc, #240]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a6e:	2101      	movs	r1, #1
 8002a70:	438a      	bics	r2, r1
 8002a72:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002a74:	f7ff fc40 	bl	80022f8 <HAL_GetTick>
 8002a78:	0003      	movs	r3, r0
 8002a7a:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002a7c:	e008      	b.n	8002a90 <HAL_RCC_OscConfig+0x268>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8002a7e:	f7ff fc3b 	bl	80022f8 <HAL_GetTick>
 8002a82:	0002      	movs	r2, r0
 8002a84:	697b      	ldr	r3, [r7, #20]
 8002a86:	1ad3      	subs	r3, r2, r3
 8002a88:	2b02      	cmp	r3, #2
 8002a8a:	d901      	bls.n	8002a90 <HAL_RCC_OscConfig+0x268>
          {
            return HAL_TIMEOUT;
 8002a8c:	2303      	movs	r3, #3
 8002a8e:	e291      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8002a90:	4b33      	ldr	r3, [pc, #204]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002a92:	681b      	ldr	r3, [r3, #0]
 8002a94:	2204      	movs	r2, #4
 8002a96:	4013      	ands	r3, r2
 8002a98:	d1f1      	bne.n	8002a7e <HAL_RCC_OscConfig+0x256>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8002a9a:	687b      	ldr	r3, [r7, #4]
 8002a9c:	681b      	ldr	r3, [r3, #0]
 8002a9e:	2210      	movs	r2, #16
 8002aa0:	4013      	ands	r3, r2
 8002aa2:	d100      	bne.n	8002aa6 <HAL_RCC_OscConfig+0x27e>
 8002aa4:	e09f      	b.n	8002be6 <HAL_RCC_OscConfig+0x3be>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if((sysclk_source == RCC_CFGR_SWS_MSI) )
 8002aa6:	69fb      	ldr	r3, [r7, #28]
 8002aa8:	2b00      	cmp	r3, #0
 8002aaa:	d13f      	bne.n	8002b2c <HAL_RCC_OscConfig+0x304>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8002aac:	4b2c      	ldr	r3, [pc, #176]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002aae:	681a      	ldr	r2, [r3, #0]
 8002ab0:	2380      	movs	r3, #128	; 0x80
 8002ab2:	009b      	lsls	r3, r3, #2
 8002ab4:	4013      	ands	r3, r2
 8002ab6:	d005      	beq.n	8002ac4 <HAL_RCC_OscConfig+0x29c>
 8002ab8:	687b      	ldr	r3, [r7, #4]
 8002aba:	69db      	ldr	r3, [r3, #28]
 8002abc:	2b00      	cmp	r3, #0
 8002abe:	d101      	bne.n	8002ac4 <HAL_RCC_OscConfig+0x29c>
      {
        return HAL_ERROR;
 8002ac0:	2301      	movs	r3, #1
 8002ac2:	e277      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002ac4:	4b26      	ldr	r3, [pc, #152]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002ac6:	685b      	ldr	r3, [r3, #4]
 8002ac8:	4a2b      	ldr	r2, [pc, #172]	; (8002b78 <HAL_RCC_OscConfig+0x350>)
 8002aca:	4013      	ands	r3, r2
 8002acc:	0019      	movs	r1, r3
 8002ace:	687b      	ldr	r3, [r7, #4]
 8002ad0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002ad2:	4b23      	ldr	r3, [pc, #140]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002ad4:	430a      	orrs	r2, r1
 8002ad6:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002ad8:	4b21      	ldr	r3, [pc, #132]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002ada:	685b      	ldr	r3, [r3, #4]
 8002adc:	021b      	lsls	r3, r3, #8
 8002ade:	0a19      	lsrs	r1, r3, #8
 8002ae0:	687b      	ldr	r3, [r7, #4]
 8002ae2:	6a1b      	ldr	r3, [r3, #32]
 8002ae4:	061a      	lsls	r2, r3, #24
 8002ae6:	4b1e      	ldr	r3, [pc, #120]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002ae8:	430a      	orrs	r2, r1
 8002aea:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002aec:	687b      	ldr	r3, [r7, #4]
 8002aee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8002af0:	0b5b      	lsrs	r3, r3, #13
 8002af2:	3301      	adds	r3, #1
 8002af4:	2280      	movs	r2, #128	; 0x80
 8002af6:	0212      	lsls	r2, r2, #8
 8002af8:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8002afa:	4b19      	ldr	r3, [pc, #100]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002afc:	68db      	ldr	r3, [r3, #12]
 8002afe:	091b      	lsrs	r3, r3, #4
 8002b00:	210f      	movs	r1, #15
 8002b02:	400b      	ands	r3, r1
 8002b04:	491a      	ldr	r1, [pc, #104]	; (8002b70 <HAL_RCC_OscConfig+0x348>)
 8002b06:	5ccb      	ldrb	r3, [r1, r3]
 8002b08:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8002b0a:	4b1a      	ldr	r3, [pc, #104]	; (8002b74 <HAL_RCC_OscConfig+0x34c>)
 8002b0c:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (TICK_INT_PRIORITY);
 8002b0e:	2513      	movs	r5, #19
 8002b10:	197c      	adds	r4, r7, r5
 8002b12:	2000      	movs	r0, #0
 8002b14:	f7ff fbaa 	bl	800226c <HAL_InitTick>
 8002b18:	0003      	movs	r3, r0
 8002b1a:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8002b1c:	197b      	adds	r3, r7, r5
 8002b1e:	781b      	ldrb	r3, [r3, #0]
 8002b20:	2b00      	cmp	r3, #0
 8002b22:	d060      	beq.n	8002be6 <HAL_RCC_OscConfig+0x3be>
        {
          return status;
 8002b24:	2313      	movs	r3, #19
 8002b26:	18fb      	adds	r3, r7, r3
 8002b28:	781b      	ldrb	r3, [r3, #0]
 8002b2a:	e243      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8002b2c:	687b      	ldr	r3, [r7, #4]
 8002b2e:	69db      	ldr	r3, [r3, #28]
 8002b30:	2b00      	cmp	r3, #0
 8002b32:	d03e      	beq.n	8002bb2 <HAL_RCC_OscConfig+0x38a>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 8002b34:	4b0a      	ldr	r3, [pc, #40]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002b36:	681a      	ldr	r2, [r3, #0]
 8002b38:	4b09      	ldr	r3, [pc, #36]	; (8002b60 <HAL_RCC_OscConfig+0x338>)
 8002b3a:	2180      	movs	r1, #128	; 0x80
 8002b3c:	0049      	lsls	r1, r1, #1
 8002b3e:	430a      	orrs	r2, r1
 8002b40:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002b42:	f7ff fbd9 	bl	80022f8 <HAL_GetTick>
 8002b46:	0003      	movs	r3, r0
 8002b48:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002b4a:	e017      	b.n	8002b7c <HAL_RCC_OscConfig+0x354>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002b4c:	f7ff fbd4 	bl	80022f8 <HAL_GetTick>
 8002b50:	0002      	movs	r2, r0
 8002b52:	697b      	ldr	r3, [r7, #20]
 8002b54:	1ad3      	subs	r3, r2, r3
 8002b56:	2b02      	cmp	r3, #2
 8002b58:	d910      	bls.n	8002b7c <HAL_RCC_OscConfig+0x354>
          {
            return HAL_TIMEOUT;
 8002b5a:	2303      	movs	r3, #3
 8002b5c:	e22a      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
 8002b5e:	46c0      	nop			; (mov r8, r8)
 8002b60:	40021000 	.word	0x40021000
 8002b64:	fffeffff 	.word	0xfffeffff
 8002b68:	fffbffff 	.word	0xfffbffff
 8002b6c:	ffffe0ff 	.word	0xffffe0ff
 8002b70:	080044b0 	.word	0x080044b0
 8002b74:	20000000 	.word	0x20000000
 8002b78:	ffff1fff 	.word	0xffff1fff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8002b7c:	4bc6      	ldr	r3, [pc, #792]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002b7e:	681a      	ldr	r2, [r3, #0]
 8002b80:	2380      	movs	r3, #128	; 0x80
 8002b82:	009b      	lsls	r3, r3, #2
 8002b84:	4013      	ands	r3, r2
 8002b86:	d0e1      	beq.n	8002b4c <HAL_RCC_OscConfig+0x324>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8002b88:	4bc3      	ldr	r3, [pc, #780]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002b8a:	685b      	ldr	r3, [r3, #4]
 8002b8c:	4ac3      	ldr	r2, [pc, #780]	; (8002e9c <HAL_RCC_OscConfig+0x674>)
 8002b8e:	4013      	ands	r3, r2
 8002b90:	0019      	movs	r1, r3
 8002b92:	687b      	ldr	r3, [r7, #4]
 8002b94:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8002b96:	4bc0      	ldr	r3, [pc, #768]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002b98:	430a      	orrs	r2, r1
 8002b9a:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8002b9c:	4bbe      	ldr	r3, [pc, #760]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002b9e:	685b      	ldr	r3, [r3, #4]
 8002ba0:	021b      	lsls	r3, r3, #8
 8002ba2:	0a19      	lsrs	r1, r3, #8
 8002ba4:	687b      	ldr	r3, [r7, #4]
 8002ba6:	6a1b      	ldr	r3, [r3, #32]
 8002ba8:	061a      	lsls	r2, r3, #24
 8002baa:	4bbb      	ldr	r3, [pc, #748]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002bac:	430a      	orrs	r2, r1
 8002bae:	605a      	str	r2, [r3, #4]
 8002bb0:	e019      	b.n	8002be6 <HAL_RCC_OscConfig+0x3be>
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8002bb2:	4bb9      	ldr	r3, [pc, #740]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002bb4:	681a      	ldr	r2, [r3, #0]
 8002bb6:	4bb8      	ldr	r3, [pc, #736]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002bb8:	49b9      	ldr	r1, [pc, #740]	; (8002ea0 <HAL_RCC_OscConfig+0x678>)
 8002bba:	400a      	ands	r2, r1
 8002bbc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002bbe:	f7ff fb9b 	bl	80022f8 <HAL_GetTick>
 8002bc2:	0003      	movs	r3, r0
 8002bc4:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8002bc6:	e008      	b.n	8002bda <HAL_RCC_OscConfig+0x3b2>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8002bc8:	f7ff fb96 	bl	80022f8 <HAL_GetTick>
 8002bcc:	0002      	movs	r2, r0
 8002bce:	697b      	ldr	r3, [r7, #20]
 8002bd0:	1ad3      	subs	r3, r2, r3
 8002bd2:	2b02      	cmp	r3, #2
 8002bd4:	d901      	bls.n	8002bda <HAL_RCC_OscConfig+0x3b2>
          {
            return HAL_TIMEOUT;
 8002bd6:	2303      	movs	r3, #3
 8002bd8:	e1ec      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8002bda:	4baf      	ldr	r3, [pc, #700]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002bdc:	681a      	ldr	r2, [r3, #0]
 8002bde:	2380      	movs	r3, #128	; 0x80
 8002be0:	009b      	lsls	r3, r3, #2
 8002be2:	4013      	ands	r3, r2
 8002be4:	d1f0      	bne.n	8002bc8 <HAL_RCC_OscConfig+0x3a0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8002be6:	687b      	ldr	r3, [r7, #4]
 8002be8:	681b      	ldr	r3, [r3, #0]
 8002bea:	2208      	movs	r2, #8
 8002bec:	4013      	ands	r3, r2
 8002bee:	d036      	beq.n	8002c5e <HAL_RCC_OscConfig+0x436>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8002bf0:	687b      	ldr	r3, [r7, #4]
 8002bf2:	695b      	ldr	r3, [r3, #20]
 8002bf4:	2b00      	cmp	r3, #0
 8002bf6:	d019      	beq.n	8002c2c <HAL_RCC_OscConfig+0x404>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8002bf8:	4ba7      	ldr	r3, [pc, #668]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002bfa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002bfc:	4ba6      	ldr	r3, [pc, #664]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002bfe:	2101      	movs	r1, #1
 8002c00:	430a      	orrs	r2, r1
 8002c02:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002c04:	f7ff fb78 	bl	80022f8 <HAL_GetTick>
 8002c08:	0003      	movs	r3, r0
 8002c0a:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8002c0c:	e008      	b.n	8002c20 <HAL_RCC_OscConfig+0x3f8>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002c0e:	f7ff fb73 	bl	80022f8 <HAL_GetTick>
 8002c12:	0002      	movs	r2, r0
 8002c14:	697b      	ldr	r3, [r7, #20]
 8002c16:	1ad3      	subs	r3, r2, r3
 8002c18:	2b02      	cmp	r3, #2
 8002c1a:	d901      	bls.n	8002c20 <HAL_RCC_OscConfig+0x3f8>
        {
          return HAL_TIMEOUT;
 8002c1c:	2303      	movs	r3, #3
 8002c1e:	e1c9      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8002c20:	4b9d      	ldr	r3, [pc, #628]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002c22:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002c24:	2202      	movs	r2, #2
 8002c26:	4013      	ands	r3, r2
 8002c28:	d0f1      	beq.n	8002c0e <HAL_RCC_OscConfig+0x3e6>
 8002c2a:	e018      	b.n	8002c5e <HAL_RCC_OscConfig+0x436>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8002c2c:	4b9a      	ldr	r3, [pc, #616]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002c2e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002c30:	4b99      	ldr	r3, [pc, #612]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002c32:	2101      	movs	r1, #1
 8002c34:	438a      	bics	r2, r1
 8002c36:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002c38:	f7ff fb5e 	bl	80022f8 <HAL_GetTick>
 8002c3c:	0003      	movs	r3, r0
 8002c3e:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8002c40:	e008      	b.n	8002c54 <HAL_RCC_OscConfig+0x42c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8002c42:	f7ff fb59 	bl	80022f8 <HAL_GetTick>
 8002c46:	0002      	movs	r2, r0
 8002c48:	697b      	ldr	r3, [r7, #20]
 8002c4a:	1ad3      	subs	r3, r2, r3
 8002c4c:	2b02      	cmp	r3, #2
 8002c4e:	d901      	bls.n	8002c54 <HAL_RCC_OscConfig+0x42c>
        {
          return HAL_TIMEOUT;
 8002c50:	2303      	movs	r3, #3
 8002c52:	e1af      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8002c54:	4b90      	ldr	r3, [pc, #576]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002c56:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8002c58:	2202      	movs	r2, #2
 8002c5a:	4013      	ands	r3, r2
 8002c5c:	d1f1      	bne.n	8002c42 <HAL_RCC_OscConfig+0x41a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8002c5e:	687b      	ldr	r3, [r7, #4]
 8002c60:	681b      	ldr	r3, [r3, #0]
 8002c62:	2204      	movs	r2, #4
 8002c64:	4013      	ands	r3, r2
 8002c66:	d100      	bne.n	8002c6a <HAL_RCC_OscConfig+0x442>
 8002c68:	e0af      	b.n	8002dca <HAL_RCC_OscConfig+0x5a2>
  {
    FlagStatus       pwrclkchanged = RESET;
 8002c6a:	2323      	movs	r3, #35	; 0x23
 8002c6c:	18fb      	adds	r3, r7, r3
 8002c6e:	2200      	movs	r2, #0
 8002c70:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8002c72:	4b89      	ldr	r3, [pc, #548]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002c74:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002c76:	2380      	movs	r3, #128	; 0x80
 8002c78:	055b      	lsls	r3, r3, #21
 8002c7a:	4013      	ands	r3, r2
 8002c7c:	d10a      	bne.n	8002c94 <HAL_RCC_OscConfig+0x46c>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8002c7e:	4b86      	ldr	r3, [pc, #536]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002c80:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002c82:	4b85      	ldr	r3, [pc, #532]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002c84:	2180      	movs	r1, #128	; 0x80
 8002c86:	0549      	lsls	r1, r1, #21
 8002c88:	430a      	orrs	r2, r1
 8002c8a:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 8002c8c:	2323      	movs	r3, #35	; 0x23
 8002c8e:	18fb      	adds	r3, r7, r3
 8002c90:	2201      	movs	r2, #1
 8002c92:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002c94:	4b83      	ldr	r3, [pc, #524]	; (8002ea4 <HAL_RCC_OscConfig+0x67c>)
 8002c96:	681a      	ldr	r2, [r3, #0]
 8002c98:	2380      	movs	r3, #128	; 0x80
 8002c9a:	005b      	lsls	r3, r3, #1
 8002c9c:	4013      	ands	r3, r2
 8002c9e:	d11a      	bne.n	8002cd6 <HAL_RCC_OscConfig+0x4ae>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8002ca0:	4b80      	ldr	r3, [pc, #512]	; (8002ea4 <HAL_RCC_OscConfig+0x67c>)
 8002ca2:	681a      	ldr	r2, [r3, #0]
 8002ca4:	4b7f      	ldr	r3, [pc, #508]	; (8002ea4 <HAL_RCC_OscConfig+0x67c>)
 8002ca6:	2180      	movs	r1, #128	; 0x80
 8002ca8:	0049      	lsls	r1, r1, #1
 8002caa:	430a      	orrs	r2, r1
 8002cac:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8002cae:	f7ff fb23 	bl	80022f8 <HAL_GetTick>
 8002cb2:	0003      	movs	r3, r0
 8002cb4:	617b      	str	r3, [r7, #20]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002cb6:	e008      	b.n	8002cca <HAL_RCC_OscConfig+0x4a2>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8002cb8:	f7ff fb1e 	bl	80022f8 <HAL_GetTick>
 8002cbc:	0002      	movs	r2, r0
 8002cbe:	697b      	ldr	r3, [r7, #20]
 8002cc0:	1ad3      	subs	r3, r2, r3
 8002cc2:	2b64      	cmp	r3, #100	; 0x64
 8002cc4:	d901      	bls.n	8002cca <HAL_RCC_OscConfig+0x4a2>
        {
          return HAL_TIMEOUT;
 8002cc6:	2303      	movs	r3, #3
 8002cc8:	e174      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8002cca:	4b76      	ldr	r3, [pc, #472]	; (8002ea4 <HAL_RCC_OscConfig+0x67c>)
 8002ccc:	681a      	ldr	r2, [r3, #0]
 8002cce:	2380      	movs	r3, #128	; 0x80
 8002cd0:	005b      	lsls	r3, r3, #1
 8002cd2:	4013      	ands	r3, r2
 8002cd4:	d0f0      	beq.n	8002cb8 <HAL_RCC_OscConfig+0x490>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8002cd6:	687b      	ldr	r3, [r7, #4]
 8002cd8:	689a      	ldr	r2, [r3, #8]
 8002cda:	2380      	movs	r3, #128	; 0x80
 8002cdc:	005b      	lsls	r3, r3, #1
 8002cde:	429a      	cmp	r2, r3
 8002ce0:	d107      	bne.n	8002cf2 <HAL_RCC_OscConfig+0x4ca>
 8002ce2:	4b6d      	ldr	r3, [pc, #436]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002ce4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002ce6:	4b6c      	ldr	r3, [pc, #432]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002ce8:	2180      	movs	r1, #128	; 0x80
 8002cea:	0049      	lsls	r1, r1, #1
 8002cec:	430a      	orrs	r2, r1
 8002cee:	651a      	str	r2, [r3, #80]	; 0x50
 8002cf0:	e031      	b.n	8002d56 <HAL_RCC_OscConfig+0x52e>
 8002cf2:	687b      	ldr	r3, [r7, #4]
 8002cf4:	689b      	ldr	r3, [r3, #8]
 8002cf6:	2b00      	cmp	r3, #0
 8002cf8:	d10c      	bne.n	8002d14 <HAL_RCC_OscConfig+0x4ec>
 8002cfa:	4b67      	ldr	r3, [pc, #412]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002cfc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002cfe:	4b66      	ldr	r3, [pc, #408]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d00:	4967      	ldr	r1, [pc, #412]	; (8002ea0 <HAL_RCC_OscConfig+0x678>)
 8002d02:	400a      	ands	r2, r1
 8002d04:	651a      	str	r2, [r3, #80]	; 0x50
 8002d06:	4b64      	ldr	r3, [pc, #400]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d08:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002d0a:	4b63      	ldr	r3, [pc, #396]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d0c:	4966      	ldr	r1, [pc, #408]	; (8002ea8 <HAL_RCC_OscConfig+0x680>)
 8002d0e:	400a      	ands	r2, r1
 8002d10:	651a      	str	r2, [r3, #80]	; 0x50
 8002d12:	e020      	b.n	8002d56 <HAL_RCC_OscConfig+0x52e>
 8002d14:	687b      	ldr	r3, [r7, #4]
 8002d16:	689a      	ldr	r2, [r3, #8]
 8002d18:	23a0      	movs	r3, #160	; 0xa0
 8002d1a:	00db      	lsls	r3, r3, #3
 8002d1c:	429a      	cmp	r2, r3
 8002d1e:	d10e      	bne.n	8002d3e <HAL_RCC_OscConfig+0x516>
 8002d20:	4b5d      	ldr	r3, [pc, #372]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d22:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002d24:	4b5c      	ldr	r3, [pc, #368]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d26:	2180      	movs	r1, #128	; 0x80
 8002d28:	00c9      	lsls	r1, r1, #3
 8002d2a:	430a      	orrs	r2, r1
 8002d2c:	651a      	str	r2, [r3, #80]	; 0x50
 8002d2e:	4b5a      	ldr	r3, [pc, #360]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d30:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002d32:	4b59      	ldr	r3, [pc, #356]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d34:	2180      	movs	r1, #128	; 0x80
 8002d36:	0049      	lsls	r1, r1, #1
 8002d38:	430a      	orrs	r2, r1
 8002d3a:	651a      	str	r2, [r3, #80]	; 0x50
 8002d3c:	e00b      	b.n	8002d56 <HAL_RCC_OscConfig+0x52e>
 8002d3e:	4b56      	ldr	r3, [pc, #344]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d40:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002d42:	4b55      	ldr	r3, [pc, #340]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d44:	4956      	ldr	r1, [pc, #344]	; (8002ea0 <HAL_RCC_OscConfig+0x678>)
 8002d46:	400a      	ands	r2, r1
 8002d48:	651a      	str	r2, [r3, #80]	; 0x50
 8002d4a:	4b53      	ldr	r3, [pc, #332]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d4c:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002d4e:	4b52      	ldr	r3, [pc, #328]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d50:	4955      	ldr	r1, [pc, #340]	; (8002ea8 <HAL_RCC_OscConfig+0x680>)
 8002d52:	400a      	ands	r2, r1
 8002d54:	651a      	str	r2, [r3, #80]	; 0x50
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8002d56:	687b      	ldr	r3, [r7, #4]
 8002d58:	689b      	ldr	r3, [r3, #8]
 8002d5a:	2b00      	cmp	r3, #0
 8002d5c:	d015      	beq.n	8002d8a <HAL_RCC_OscConfig+0x562>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002d5e:	f7ff facb 	bl	80022f8 <HAL_GetTick>
 8002d62:	0003      	movs	r3, r0
 8002d64:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8002d66:	e009      	b.n	8002d7c <HAL_RCC_OscConfig+0x554>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002d68:	f7ff fac6 	bl	80022f8 <HAL_GetTick>
 8002d6c:	0002      	movs	r2, r0
 8002d6e:	697b      	ldr	r3, [r7, #20]
 8002d70:	1ad3      	subs	r3, r2, r3
 8002d72:	4a4e      	ldr	r2, [pc, #312]	; (8002eac <HAL_RCC_OscConfig+0x684>)
 8002d74:	4293      	cmp	r3, r2
 8002d76:	d901      	bls.n	8002d7c <HAL_RCC_OscConfig+0x554>
        {
          return HAL_TIMEOUT;
 8002d78:	2303      	movs	r3, #3
 8002d7a:	e11b      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8002d7c:	4b46      	ldr	r3, [pc, #280]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002d7e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002d80:	2380      	movs	r3, #128	; 0x80
 8002d82:	009b      	lsls	r3, r3, #2
 8002d84:	4013      	ands	r3, r2
 8002d86:	d0ef      	beq.n	8002d68 <HAL_RCC_OscConfig+0x540>
 8002d88:	e014      	b.n	8002db4 <HAL_RCC_OscConfig+0x58c>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8002d8a:	f7ff fab5 	bl	80022f8 <HAL_GetTick>
 8002d8e:	0003      	movs	r3, r0
 8002d90:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8002d92:	e009      	b.n	8002da8 <HAL_RCC_OscConfig+0x580>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8002d94:	f7ff fab0 	bl	80022f8 <HAL_GetTick>
 8002d98:	0002      	movs	r2, r0
 8002d9a:	697b      	ldr	r3, [r7, #20]
 8002d9c:	1ad3      	subs	r3, r2, r3
 8002d9e:	4a43      	ldr	r2, [pc, #268]	; (8002eac <HAL_RCC_OscConfig+0x684>)
 8002da0:	4293      	cmp	r3, r2
 8002da2:	d901      	bls.n	8002da8 <HAL_RCC_OscConfig+0x580>
        {
          return HAL_TIMEOUT;
 8002da4:	2303      	movs	r3, #3
 8002da6:	e105      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8002da8:	4b3b      	ldr	r3, [pc, #236]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002daa:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8002dac:	2380      	movs	r3, #128	; 0x80
 8002dae:	009b      	lsls	r3, r3, #2
 8002db0:	4013      	ands	r3, r2
 8002db2:	d1ef      	bne.n	8002d94 <HAL_RCC_OscConfig+0x56c>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8002db4:	2323      	movs	r3, #35	; 0x23
 8002db6:	18fb      	adds	r3, r7, r3
 8002db8:	781b      	ldrb	r3, [r3, #0]
 8002dba:	2b01      	cmp	r3, #1
 8002dbc:	d105      	bne.n	8002dca <HAL_RCC_OscConfig+0x5a2>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8002dbe:	4b36      	ldr	r3, [pc, #216]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002dc0:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002dc2:	4b35      	ldr	r3, [pc, #212]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002dc4:	493a      	ldr	r1, [pc, #232]	; (8002eb0 <HAL_RCC_OscConfig+0x688>)
 8002dc6:	400a      	ands	r2, r1
 8002dc8:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8002dca:	687b      	ldr	r3, [r7, #4]
 8002dcc:	681b      	ldr	r3, [r3, #0]
 8002dce:	2220      	movs	r2, #32
 8002dd0:	4013      	ands	r3, r2
 8002dd2:	d049      	beq.n	8002e68 <HAL_RCC_OscConfig+0x640>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	699b      	ldr	r3, [r3, #24]
 8002dd8:	2b00      	cmp	r3, #0
 8002dda:	d026      	beq.n	8002e2a <HAL_RCC_OscConfig+0x602>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8002ddc:	4b2e      	ldr	r3, [pc, #184]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002dde:	689a      	ldr	r2, [r3, #8]
 8002de0:	4b2d      	ldr	r3, [pc, #180]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002de2:	2101      	movs	r1, #1
 8002de4:	430a      	orrs	r2, r1
 8002de6:	609a      	str	r2, [r3, #8]
 8002de8:	4b2b      	ldr	r3, [pc, #172]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002dea:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002dec:	4b2a      	ldr	r3, [pc, #168]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002dee:	2101      	movs	r1, #1
 8002df0:	430a      	orrs	r2, r1
 8002df2:	635a      	str	r2, [r3, #52]	; 0x34
 8002df4:	4b2f      	ldr	r3, [pc, #188]	; (8002eb4 <HAL_RCC_OscConfig+0x68c>)
 8002df6:	6a1a      	ldr	r2, [r3, #32]
 8002df8:	4b2e      	ldr	r3, [pc, #184]	; (8002eb4 <HAL_RCC_OscConfig+0x68c>)
 8002dfa:	2180      	movs	r1, #128	; 0x80
 8002dfc:	0189      	lsls	r1, r1, #6
 8002dfe:	430a      	orrs	r2, r1
 8002e00:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002e02:	f7ff fa79 	bl	80022f8 <HAL_GetTick>
 8002e06:	0003      	movs	r3, r0
 8002e08:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8002e0a:	e008      	b.n	8002e1e <HAL_RCC_OscConfig+0x5f6>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8002e0c:	f7ff fa74 	bl	80022f8 <HAL_GetTick>
 8002e10:	0002      	movs	r2, r0
 8002e12:	697b      	ldr	r3, [r7, #20]
 8002e14:	1ad3      	subs	r3, r2, r3
 8002e16:	2b02      	cmp	r3, #2
 8002e18:	d901      	bls.n	8002e1e <HAL_RCC_OscConfig+0x5f6>
          {
            return HAL_TIMEOUT;
 8002e1a:	2303      	movs	r3, #3
 8002e1c:	e0ca      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8002e1e:	4b1e      	ldr	r3, [pc, #120]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002e20:	689b      	ldr	r3, [r3, #8]
 8002e22:	2202      	movs	r2, #2
 8002e24:	4013      	ands	r3, r2
 8002e26:	d0f1      	beq.n	8002e0c <HAL_RCC_OscConfig+0x5e4>
 8002e28:	e01e      	b.n	8002e68 <HAL_RCC_OscConfig+0x640>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 8002e2a:	4b1b      	ldr	r3, [pc, #108]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002e2c:	689a      	ldr	r2, [r3, #8]
 8002e2e:	4b1a      	ldr	r3, [pc, #104]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002e30:	2101      	movs	r1, #1
 8002e32:	438a      	bics	r2, r1
 8002e34:	609a      	str	r2, [r3, #8]
 8002e36:	4b1f      	ldr	r3, [pc, #124]	; (8002eb4 <HAL_RCC_OscConfig+0x68c>)
 8002e38:	6a1a      	ldr	r2, [r3, #32]
 8002e3a:	4b1e      	ldr	r3, [pc, #120]	; (8002eb4 <HAL_RCC_OscConfig+0x68c>)
 8002e3c:	491e      	ldr	r1, [pc, #120]	; (8002eb8 <HAL_RCC_OscConfig+0x690>)
 8002e3e:	400a      	ands	r2, r1
 8002e40:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002e42:	f7ff fa59 	bl	80022f8 <HAL_GetTick>
 8002e46:	0003      	movs	r3, r0
 8002e48:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8002e4a:	e008      	b.n	8002e5e <HAL_RCC_OscConfig+0x636>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8002e4c:	f7ff fa54 	bl	80022f8 <HAL_GetTick>
 8002e50:	0002      	movs	r2, r0
 8002e52:	697b      	ldr	r3, [r7, #20]
 8002e54:	1ad3      	subs	r3, r2, r3
 8002e56:	2b02      	cmp	r3, #2
 8002e58:	d901      	bls.n	8002e5e <HAL_RCC_OscConfig+0x636>
          {
            return HAL_TIMEOUT;
 8002e5a:	2303      	movs	r3, #3
 8002e5c:	e0aa      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8002e5e:	4b0e      	ldr	r3, [pc, #56]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002e60:	689b      	ldr	r3, [r3, #8]
 8002e62:	2202      	movs	r2, #2
 8002e64:	4013      	ands	r3, r2
 8002e66:	d1f1      	bne.n	8002e4c <HAL_RCC_OscConfig+0x624>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8002e68:	687b      	ldr	r3, [r7, #4]
 8002e6a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e6c:	2b00      	cmp	r3, #0
 8002e6e:	d100      	bne.n	8002e72 <HAL_RCC_OscConfig+0x64a>
 8002e70:	e09f      	b.n	8002fb2 <HAL_RCC_OscConfig+0x78a>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8002e72:	69fb      	ldr	r3, [r7, #28]
 8002e74:	2b0c      	cmp	r3, #12
 8002e76:	d100      	bne.n	8002e7a <HAL_RCC_OscConfig+0x652>
 8002e78:	e078      	b.n	8002f6c <HAL_RCC_OscConfig+0x744>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8002e7a:	687b      	ldr	r3, [r7, #4]
 8002e7c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002e7e:	2b02      	cmp	r3, #2
 8002e80:	d159      	bne.n	8002f36 <HAL_RCC_OscConfig+0x70e>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002e82:	4b05      	ldr	r3, [pc, #20]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002e84:	681a      	ldr	r2, [r3, #0]
 8002e86:	4b04      	ldr	r3, [pc, #16]	; (8002e98 <HAL_RCC_OscConfig+0x670>)
 8002e88:	490c      	ldr	r1, [pc, #48]	; (8002ebc <HAL_RCC_OscConfig+0x694>)
 8002e8a:	400a      	ands	r2, r1
 8002e8c:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002e8e:	f7ff fa33 	bl	80022f8 <HAL_GetTick>
 8002e92:	0003      	movs	r3, r0
 8002e94:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002e96:	e01c      	b.n	8002ed2 <HAL_RCC_OscConfig+0x6aa>
 8002e98:	40021000 	.word	0x40021000
 8002e9c:	ffff1fff 	.word	0xffff1fff
 8002ea0:	fffffeff 	.word	0xfffffeff
 8002ea4:	40007000 	.word	0x40007000
 8002ea8:	fffffbff 	.word	0xfffffbff
 8002eac:	00001388 	.word	0x00001388
 8002eb0:	efffffff 	.word	0xefffffff
 8002eb4:	40010000 	.word	0x40010000
 8002eb8:	ffffdfff 	.word	0xffffdfff
 8002ebc:	feffffff 	.word	0xfeffffff
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002ec0:	f7ff fa1a 	bl	80022f8 <HAL_GetTick>
 8002ec4:	0002      	movs	r2, r0
 8002ec6:	697b      	ldr	r3, [r7, #20]
 8002ec8:	1ad3      	subs	r3, r2, r3
 8002eca:	2b02      	cmp	r3, #2
 8002ecc:	d901      	bls.n	8002ed2 <HAL_RCC_OscConfig+0x6aa>
          {
            return HAL_TIMEOUT;
 8002ece:	2303      	movs	r3, #3
 8002ed0:	e070      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002ed2:	4b3a      	ldr	r3, [pc, #232]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002ed4:	681a      	ldr	r2, [r3, #0]
 8002ed6:	2380      	movs	r3, #128	; 0x80
 8002ed8:	049b      	lsls	r3, r3, #18
 8002eda:	4013      	ands	r3, r2
 8002edc:	d1f0      	bne.n	8002ec0 <HAL_RCC_OscConfig+0x698>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8002ede:	4b37      	ldr	r3, [pc, #220]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002ee0:	68db      	ldr	r3, [r3, #12]
 8002ee2:	4a37      	ldr	r2, [pc, #220]	; (8002fc0 <HAL_RCC_OscConfig+0x798>)
 8002ee4:	4013      	ands	r3, r2
 8002ee6:	0019      	movs	r1, r3
 8002ee8:	687b      	ldr	r3, [r7, #4]
 8002eea:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002eec:	687b      	ldr	r3, [r7, #4]
 8002eee:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8002ef0:	431a      	orrs	r2, r3
 8002ef2:	687b      	ldr	r3, [r7, #4]
 8002ef4:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8002ef6:	431a      	orrs	r2, r3
 8002ef8:	4b30      	ldr	r3, [pc, #192]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002efa:	430a      	orrs	r2, r1
 8002efc:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8002efe:	4b2f      	ldr	r3, [pc, #188]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002f00:	681a      	ldr	r2, [r3, #0]
 8002f02:	4b2e      	ldr	r3, [pc, #184]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002f04:	2180      	movs	r1, #128	; 0x80
 8002f06:	0449      	lsls	r1, r1, #17
 8002f08:	430a      	orrs	r2, r1
 8002f0a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002f0c:	f7ff f9f4 	bl	80022f8 <HAL_GetTick>
 8002f10:	0003      	movs	r3, r0
 8002f12:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8002f14:	e008      	b.n	8002f28 <HAL_RCC_OscConfig+0x700>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002f16:	f7ff f9ef 	bl	80022f8 <HAL_GetTick>
 8002f1a:	0002      	movs	r2, r0
 8002f1c:	697b      	ldr	r3, [r7, #20]
 8002f1e:	1ad3      	subs	r3, r2, r3
 8002f20:	2b02      	cmp	r3, #2
 8002f22:	d901      	bls.n	8002f28 <HAL_RCC_OscConfig+0x700>
          {
            return HAL_TIMEOUT;
 8002f24:	2303      	movs	r3, #3
 8002f26:	e045      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8002f28:	4b24      	ldr	r3, [pc, #144]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002f2a:	681a      	ldr	r2, [r3, #0]
 8002f2c:	2380      	movs	r3, #128	; 0x80
 8002f2e:	049b      	lsls	r3, r3, #18
 8002f30:	4013      	ands	r3, r2
 8002f32:	d0f0      	beq.n	8002f16 <HAL_RCC_OscConfig+0x6ee>
 8002f34:	e03d      	b.n	8002fb2 <HAL_RCC_OscConfig+0x78a>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8002f36:	4b21      	ldr	r3, [pc, #132]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002f38:	681a      	ldr	r2, [r3, #0]
 8002f3a:	4b20      	ldr	r3, [pc, #128]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002f3c:	4921      	ldr	r1, [pc, #132]	; (8002fc4 <HAL_RCC_OscConfig+0x79c>)
 8002f3e:	400a      	ands	r2, r1
 8002f40:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8002f42:	f7ff f9d9 	bl	80022f8 <HAL_GetTick>
 8002f46:	0003      	movs	r3, r0
 8002f48:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002f4a:	e008      	b.n	8002f5e <HAL_RCC_OscConfig+0x736>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8002f4c:	f7ff f9d4 	bl	80022f8 <HAL_GetTick>
 8002f50:	0002      	movs	r2, r0
 8002f52:	697b      	ldr	r3, [r7, #20]
 8002f54:	1ad3      	subs	r3, r2, r3
 8002f56:	2b02      	cmp	r3, #2
 8002f58:	d901      	bls.n	8002f5e <HAL_RCC_OscConfig+0x736>
          {
            return HAL_TIMEOUT;
 8002f5a:	2303      	movs	r3, #3
 8002f5c:	e02a      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8002f5e:	4b17      	ldr	r3, [pc, #92]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002f60:	681a      	ldr	r2, [r3, #0]
 8002f62:	2380      	movs	r3, #128	; 0x80
 8002f64:	049b      	lsls	r3, r3, #18
 8002f66:	4013      	ands	r3, r2
 8002f68:	d1f0      	bne.n	8002f4c <HAL_RCC_OscConfig+0x724>
 8002f6a:	e022      	b.n	8002fb2 <HAL_RCC_OscConfig+0x78a>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8002f6c:	687b      	ldr	r3, [r7, #4]
 8002f6e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8002f70:	2b01      	cmp	r3, #1
 8002f72:	d101      	bne.n	8002f78 <HAL_RCC_OscConfig+0x750>
      {
        return HAL_ERROR;
 8002f74:	2301      	movs	r3, #1
 8002f76:	e01d      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8002f78:	4b10      	ldr	r3, [pc, #64]	; (8002fbc <HAL_RCC_OscConfig+0x794>)
 8002f7a:	68db      	ldr	r3, [r3, #12]
 8002f7c:	61bb      	str	r3, [r7, #24]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002f7e:	69ba      	ldr	r2, [r7, #24]
 8002f80:	2380      	movs	r3, #128	; 0x80
 8002f82:	025b      	lsls	r3, r3, #9
 8002f84:	401a      	ands	r2, r3
 8002f86:	687b      	ldr	r3, [r7, #4]
 8002f88:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002f8a:	429a      	cmp	r2, r3
 8002f8c:	d10f      	bne.n	8002fae <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8002f8e:	69ba      	ldr	r2, [r7, #24]
 8002f90:	23f0      	movs	r3, #240	; 0xf0
 8002f92:	039b      	lsls	r3, r3, #14
 8002f94:	401a      	ands	r2, r3
 8002f96:	687b      	ldr	r3, [r7, #4]
 8002f98:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8002f9a:	429a      	cmp	r2, r3
 8002f9c:	d107      	bne.n	8002fae <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 8002f9e:	69ba      	ldr	r2, [r7, #24]
 8002fa0:	23c0      	movs	r3, #192	; 0xc0
 8002fa2:	041b      	lsls	r3, r3, #16
 8002fa4:	401a      	ands	r2, r3
 8002fa6:	687b      	ldr	r3, [r7, #4]
 8002fa8:	6b5b      	ldr	r3, [r3, #52]	; 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8002faa:	429a      	cmp	r2, r3
 8002fac:	d001      	beq.n	8002fb2 <HAL_RCC_OscConfig+0x78a>
        {
          return HAL_ERROR;
 8002fae:	2301      	movs	r3, #1
 8002fb0:	e000      	b.n	8002fb4 <HAL_RCC_OscConfig+0x78c>
        }
      }
    }
  }

  return HAL_OK;
 8002fb2:	2300      	movs	r3, #0
}
 8002fb4:	0018      	movs	r0, r3
 8002fb6:	46bd      	mov	sp, r7
 8002fb8:	b00a      	add	sp, #40	; 0x28
 8002fba:	bdb0      	pop	{r4, r5, r7, pc}
 8002fbc:	40021000 	.word	0x40021000
 8002fc0:	ff02ffff 	.word	0xff02ffff
 8002fc4:	feffffff 	.word	0xfeffffff

08002fc8 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8002fc8:	b5b0      	push	{r4, r5, r7, lr}
 8002fca:	b084      	sub	sp, #16
 8002fcc:	af00      	add	r7, sp, #0
 8002fce:	6078      	str	r0, [r7, #4]
 8002fd0:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check the parameters */
  if(RCC_ClkInitStruct == NULL)
 8002fd2:	687b      	ldr	r3, [r7, #4]
 8002fd4:	2b00      	cmp	r3, #0
 8002fd6:	d101      	bne.n	8002fdc <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8002fd8:	2301      	movs	r3, #1
 8002fda:	e10d      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8002fdc:	4b88      	ldr	r3, [pc, #544]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 8002fde:	681b      	ldr	r3, [r3, #0]
 8002fe0:	2201      	movs	r2, #1
 8002fe2:	4013      	ands	r3, r2
 8002fe4:	683a      	ldr	r2, [r7, #0]
 8002fe6:	429a      	cmp	r2, r3
 8002fe8:	d911      	bls.n	800300e <HAL_RCC_ClockConfig+0x46>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8002fea:	4b85      	ldr	r3, [pc, #532]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 8002fec:	681b      	ldr	r3, [r3, #0]
 8002fee:	2201      	movs	r2, #1
 8002ff0:	4393      	bics	r3, r2
 8002ff2:	0019      	movs	r1, r3
 8002ff4:	4b82      	ldr	r3, [pc, #520]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 8002ff6:	683a      	ldr	r2, [r7, #0]
 8002ff8:	430a      	orrs	r2, r1
 8002ffa:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8002ffc:	4b80      	ldr	r3, [pc, #512]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	2201      	movs	r2, #1
 8003002:	4013      	ands	r3, r2
 8003004:	683a      	ldr	r2, [r7, #0]
 8003006:	429a      	cmp	r2, r3
 8003008:	d001      	beq.n	800300e <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 800300a:	2301      	movs	r3, #1
 800300c:	e0f4      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 800300e:	687b      	ldr	r3, [r7, #4]
 8003010:	681b      	ldr	r3, [r3, #0]
 8003012:	2202      	movs	r2, #2
 8003014:	4013      	ands	r3, r2
 8003016:	d009      	beq.n	800302c <HAL_RCC_ClockConfig+0x64>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 8003018:	4b7a      	ldr	r3, [pc, #488]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 800301a:	68db      	ldr	r3, [r3, #12]
 800301c:	22f0      	movs	r2, #240	; 0xf0
 800301e:	4393      	bics	r3, r2
 8003020:	0019      	movs	r1, r3
 8003022:	687b      	ldr	r3, [r7, #4]
 8003024:	689a      	ldr	r2, [r3, #8]
 8003026:	4b77      	ldr	r3, [pc, #476]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003028:	430a      	orrs	r2, r1
 800302a:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 800302c:	687b      	ldr	r3, [r7, #4]
 800302e:	681b      	ldr	r3, [r3, #0]
 8003030:	2201      	movs	r2, #1
 8003032:	4013      	ands	r3, r2
 8003034:	d100      	bne.n	8003038 <HAL_RCC_ClockConfig+0x70>
 8003036:	e089      	b.n	800314c <HAL_RCC_ClockConfig+0x184>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8003038:	687b      	ldr	r3, [r7, #4]
 800303a:	685b      	ldr	r3, [r3, #4]
 800303c:	2b02      	cmp	r3, #2
 800303e:	d107      	bne.n	8003050 <HAL_RCC_ClockConfig+0x88>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 8003040:	4b70      	ldr	r3, [pc, #448]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003042:	681a      	ldr	r2, [r3, #0]
 8003044:	2380      	movs	r3, #128	; 0x80
 8003046:	029b      	lsls	r3, r3, #10
 8003048:	4013      	ands	r3, r2
 800304a:	d120      	bne.n	800308e <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 800304c:	2301      	movs	r3, #1
 800304e:	e0d3      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	685b      	ldr	r3, [r3, #4]
 8003054:	2b03      	cmp	r3, #3
 8003056:	d107      	bne.n	8003068 <HAL_RCC_ClockConfig+0xa0>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8003058:	4b6a      	ldr	r3, [pc, #424]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 800305a:	681a      	ldr	r2, [r3, #0]
 800305c:	2380      	movs	r3, #128	; 0x80
 800305e:	049b      	lsls	r3, r3, #18
 8003060:	4013      	ands	r3, r2
 8003062:	d114      	bne.n	800308e <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8003064:	2301      	movs	r3, #1
 8003066:	e0c7      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	685b      	ldr	r3, [r3, #4]
 800306c:	2b01      	cmp	r3, #1
 800306e:	d106      	bne.n	800307e <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8003070:	4b64      	ldr	r3, [pc, #400]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003072:	681b      	ldr	r3, [r3, #0]
 8003074:	2204      	movs	r2, #4
 8003076:	4013      	ands	r3, r2
 8003078:	d109      	bne.n	800308e <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 800307a:	2301      	movs	r3, #1
 800307c:	e0bc      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 800307e:	4b61      	ldr	r3, [pc, #388]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003080:	681a      	ldr	r2, [r3, #0]
 8003082:	2380      	movs	r3, #128	; 0x80
 8003084:	009b      	lsls	r3, r3, #2
 8003086:	4013      	ands	r3, r2
 8003088:	d101      	bne.n	800308e <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 800308a:	2301      	movs	r3, #1
 800308c:	e0b4      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800308e:	4b5d      	ldr	r3, [pc, #372]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003090:	68db      	ldr	r3, [r3, #12]
 8003092:	2203      	movs	r2, #3
 8003094:	4393      	bics	r3, r2
 8003096:	0019      	movs	r1, r3
 8003098:	687b      	ldr	r3, [r7, #4]
 800309a:	685a      	ldr	r2, [r3, #4]
 800309c:	4b59      	ldr	r3, [pc, #356]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 800309e:	430a      	orrs	r2, r1
 80030a0:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 80030a2:	f7ff f929 	bl	80022f8 <HAL_GetTick>
 80030a6:	0003      	movs	r3, r0
 80030a8:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80030aa:	687b      	ldr	r3, [r7, #4]
 80030ac:	685b      	ldr	r3, [r3, #4]
 80030ae:	2b02      	cmp	r3, #2
 80030b0:	d111      	bne.n	80030d6 <HAL_RCC_ClockConfig+0x10e>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 80030b2:	e009      	b.n	80030c8 <HAL_RCC_ClockConfig+0x100>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80030b4:	f7ff f920 	bl	80022f8 <HAL_GetTick>
 80030b8:	0002      	movs	r2, r0
 80030ba:	68fb      	ldr	r3, [r7, #12]
 80030bc:	1ad3      	subs	r3, r2, r3
 80030be:	4a52      	ldr	r2, [pc, #328]	; (8003208 <HAL_RCC_ClockConfig+0x240>)
 80030c0:	4293      	cmp	r3, r2
 80030c2:	d901      	bls.n	80030c8 <HAL_RCC_ClockConfig+0x100>
        {
          return HAL_TIMEOUT;
 80030c4:	2303      	movs	r3, #3
 80030c6:	e097      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 80030c8:	4b4e      	ldr	r3, [pc, #312]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 80030ca:	68db      	ldr	r3, [r3, #12]
 80030cc:	220c      	movs	r2, #12
 80030ce:	4013      	ands	r3, r2
 80030d0:	2b08      	cmp	r3, #8
 80030d2:	d1ef      	bne.n	80030b4 <HAL_RCC_ClockConfig+0xec>
 80030d4:	e03a      	b.n	800314c <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	685b      	ldr	r3, [r3, #4]
 80030da:	2b03      	cmp	r3, #3
 80030dc:	d111      	bne.n	8003102 <HAL_RCC_ClockConfig+0x13a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80030de:	e009      	b.n	80030f4 <HAL_RCC_ClockConfig+0x12c>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80030e0:	f7ff f90a 	bl	80022f8 <HAL_GetTick>
 80030e4:	0002      	movs	r2, r0
 80030e6:	68fb      	ldr	r3, [r7, #12]
 80030e8:	1ad3      	subs	r3, r2, r3
 80030ea:	4a47      	ldr	r2, [pc, #284]	; (8003208 <HAL_RCC_ClockConfig+0x240>)
 80030ec:	4293      	cmp	r3, r2
 80030ee:	d901      	bls.n	80030f4 <HAL_RCC_ClockConfig+0x12c>
        {
          return HAL_TIMEOUT;
 80030f0:	2303      	movs	r3, #3
 80030f2:	e081      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80030f4:	4b43      	ldr	r3, [pc, #268]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 80030f6:	68db      	ldr	r3, [r3, #12]
 80030f8:	220c      	movs	r2, #12
 80030fa:	4013      	ands	r3, r2
 80030fc:	2b0c      	cmp	r3, #12
 80030fe:	d1ef      	bne.n	80030e0 <HAL_RCC_ClockConfig+0x118>
 8003100:	e024      	b.n	800314c <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8003102:	687b      	ldr	r3, [r7, #4]
 8003104:	685b      	ldr	r3, [r3, #4]
 8003106:	2b01      	cmp	r3, #1
 8003108:	d11b      	bne.n	8003142 <HAL_RCC_ClockConfig+0x17a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 800310a:	e009      	b.n	8003120 <HAL_RCC_ClockConfig+0x158>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800310c:	f7ff f8f4 	bl	80022f8 <HAL_GetTick>
 8003110:	0002      	movs	r2, r0
 8003112:	68fb      	ldr	r3, [r7, #12]
 8003114:	1ad3      	subs	r3, r2, r3
 8003116:	4a3c      	ldr	r2, [pc, #240]	; (8003208 <HAL_RCC_ClockConfig+0x240>)
 8003118:	4293      	cmp	r3, r2
 800311a:	d901      	bls.n	8003120 <HAL_RCC_ClockConfig+0x158>
        {
          return HAL_TIMEOUT;
 800311c:	2303      	movs	r3, #3
 800311e:	e06b      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 8003120:	4b38      	ldr	r3, [pc, #224]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003122:	68db      	ldr	r3, [r3, #12]
 8003124:	220c      	movs	r2, #12
 8003126:	4013      	ands	r3, r2
 8003128:	2b04      	cmp	r3, #4
 800312a:	d1ef      	bne.n	800310c <HAL_RCC_ClockConfig+0x144>
 800312c:	e00e      	b.n	800314c <HAL_RCC_ClockConfig+0x184>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800312e:	f7ff f8e3 	bl	80022f8 <HAL_GetTick>
 8003132:	0002      	movs	r2, r0
 8003134:	68fb      	ldr	r3, [r7, #12]
 8003136:	1ad3      	subs	r3, r2, r3
 8003138:	4a33      	ldr	r2, [pc, #204]	; (8003208 <HAL_RCC_ClockConfig+0x240>)
 800313a:	4293      	cmp	r3, r2
 800313c:	d901      	bls.n	8003142 <HAL_RCC_ClockConfig+0x17a>
        {
          return HAL_TIMEOUT;
 800313e:	2303      	movs	r3, #3
 8003140:	e05a      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 8003142:	4b30      	ldr	r3, [pc, #192]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003144:	68db      	ldr	r3, [r3, #12]
 8003146:	220c      	movs	r2, #12
 8003148:	4013      	ands	r3, r2
 800314a:	d1f0      	bne.n	800312e <HAL_RCC_ClockConfig+0x166>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 800314c:	4b2c      	ldr	r3, [pc, #176]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	2201      	movs	r2, #1
 8003152:	4013      	ands	r3, r2
 8003154:	683a      	ldr	r2, [r7, #0]
 8003156:	429a      	cmp	r2, r3
 8003158:	d211      	bcs.n	800317e <HAL_RCC_ClockConfig+0x1b6>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 800315a:	4b29      	ldr	r3, [pc, #164]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 800315c:	681b      	ldr	r3, [r3, #0]
 800315e:	2201      	movs	r2, #1
 8003160:	4393      	bics	r3, r2
 8003162:	0019      	movs	r1, r3
 8003164:	4b26      	ldr	r3, [pc, #152]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 8003166:	683a      	ldr	r2, [r7, #0]
 8003168:	430a      	orrs	r2, r1
 800316a:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 800316c:	4b24      	ldr	r3, [pc, #144]	; (8003200 <HAL_RCC_ClockConfig+0x238>)
 800316e:	681b      	ldr	r3, [r3, #0]
 8003170:	2201      	movs	r2, #1
 8003172:	4013      	ands	r3, r2
 8003174:	683a      	ldr	r2, [r7, #0]
 8003176:	429a      	cmp	r2, r3
 8003178:	d001      	beq.n	800317e <HAL_RCC_ClockConfig+0x1b6>
    {
      return HAL_ERROR;
 800317a:	2301      	movs	r3, #1
 800317c:	e03c      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800317e:	687b      	ldr	r3, [r7, #4]
 8003180:	681b      	ldr	r3, [r3, #0]
 8003182:	2204      	movs	r2, #4
 8003184:	4013      	ands	r3, r2
 8003186:	d009      	beq.n	800319c <HAL_RCC_ClockConfig+0x1d4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8003188:	4b1e      	ldr	r3, [pc, #120]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 800318a:	68db      	ldr	r3, [r3, #12]
 800318c:	4a1f      	ldr	r2, [pc, #124]	; (800320c <HAL_RCC_ClockConfig+0x244>)
 800318e:	4013      	ands	r3, r2
 8003190:	0019      	movs	r1, r3
 8003192:	687b      	ldr	r3, [r7, #4]
 8003194:	68da      	ldr	r2, [r3, #12]
 8003196:	4b1b      	ldr	r3, [pc, #108]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 8003198:	430a      	orrs	r2, r1
 800319a:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 800319c:	687b      	ldr	r3, [r7, #4]
 800319e:	681b      	ldr	r3, [r3, #0]
 80031a0:	2208      	movs	r2, #8
 80031a2:	4013      	ands	r3, r2
 80031a4:	d00a      	beq.n	80031bc <HAL_RCC_ClockConfig+0x1f4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 80031a6:	4b17      	ldr	r3, [pc, #92]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 80031a8:	68db      	ldr	r3, [r3, #12]
 80031aa:	4a19      	ldr	r2, [pc, #100]	; (8003210 <HAL_RCC_ClockConfig+0x248>)
 80031ac:	4013      	ands	r3, r2
 80031ae:	0019      	movs	r1, r3
 80031b0:	687b      	ldr	r3, [r7, #4]
 80031b2:	691b      	ldr	r3, [r3, #16]
 80031b4:	00da      	lsls	r2, r3, #3
 80031b6:	4b13      	ldr	r3, [pc, #76]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 80031b8:	430a      	orrs	r2, r1
 80031ba:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 80031bc:	f000 f82e 	bl	800321c <HAL_RCC_GetSysClockFreq>
 80031c0:	0001      	movs	r1, r0
 80031c2:	4b10      	ldr	r3, [pc, #64]	; (8003204 <HAL_RCC_ClockConfig+0x23c>)
 80031c4:	68db      	ldr	r3, [r3, #12]
 80031c6:	091b      	lsrs	r3, r3, #4
 80031c8:	220f      	movs	r2, #15
 80031ca:	4013      	ands	r3, r2
 80031cc:	4a11      	ldr	r2, [pc, #68]	; (8003214 <HAL_RCC_ClockConfig+0x24c>)
 80031ce:	5cd3      	ldrb	r3, [r2, r3]
 80031d0:	000a      	movs	r2, r1
 80031d2:	40da      	lsrs	r2, r3
 80031d4:	4b10      	ldr	r3, [pc, #64]	; (8003218 <HAL_RCC_ClockConfig+0x250>)
 80031d6:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(TICK_INT_PRIORITY);
 80031d8:	250b      	movs	r5, #11
 80031da:	197c      	adds	r4, r7, r5
 80031dc:	2000      	movs	r0, #0
 80031de:	f7ff f845 	bl	800226c <HAL_InitTick>
 80031e2:	0003      	movs	r3, r0
 80031e4:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 80031e6:	197b      	adds	r3, r7, r5
 80031e8:	781b      	ldrb	r3, [r3, #0]
 80031ea:	2b00      	cmp	r3, #0
 80031ec:	d003      	beq.n	80031f6 <HAL_RCC_ClockConfig+0x22e>
  {
    return status;
 80031ee:	230b      	movs	r3, #11
 80031f0:	18fb      	adds	r3, r7, r3
 80031f2:	781b      	ldrb	r3, [r3, #0]
 80031f4:	e000      	b.n	80031f8 <HAL_RCC_ClockConfig+0x230>
  }

  return HAL_OK;
 80031f6:	2300      	movs	r3, #0
}
 80031f8:	0018      	movs	r0, r3
 80031fa:	46bd      	mov	sp, r7
 80031fc:	b004      	add	sp, #16
 80031fe:	bdb0      	pop	{r4, r5, r7, pc}
 8003200:	40022000 	.word	0x40022000
 8003204:	40021000 	.word	0x40021000
 8003208:	00001388 	.word	0x00001388
 800320c:	fffff8ff 	.word	0xfffff8ff
 8003210:	ffffc7ff 	.word	0xffffc7ff
 8003214:	080044b0 	.word	0x080044b0
 8003218:	20000000 	.word	0x20000000

0800321c <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 800321c:	b580      	push	{r7, lr}
 800321e:	b086      	sub	sp, #24
 8003220:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 8003222:	4b3b      	ldr	r3, [pc, #236]	; (8003310 <HAL_RCC_GetSysClockFreq+0xf4>)
 8003224:	68db      	ldr	r3, [r3, #12]
 8003226:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 8003228:	68fb      	ldr	r3, [r7, #12]
 800322a:	220c      	movs	r2, #12
 800322c:	4013      	ands	r3, r2
 800322e:	2b08      	cmp	r3, #8
 8003230:	d00e      	beq.n	8003250 <HAL_RCC_GetSysClockFreq+0x34>
 8003232:	2b0c      	cmp	r3, #12
 8003234:	d00f      	beq.n	8003256 <HAL_RCC_GetSysClockFreq+0x3a>
 8003236:	2b04      	cmp	r3, #4
 8003238:	d157      	bne.n	80032ea <HAL_RCC_GetSysClockFreq+0xce>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 800323a:	4b35      	ldr	r3, [pc, #212]	; (8003310 <HAL_RCC_GetSysClockFreq+0xf4>)
 800323c:	681b      	ldr	r3, [r3, #0]
 800323e:	2210      	movs	r2, #16
 8003240:	4013      	ands	r3, r2
 8003242:	d002      	beq.n	800324a <HAL_RCC_GetSysClockFreq+0x2e>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 8003244:	4b33      	ldr	r3, [pc, #204]	; (8003314 <HAL_RCC_GetSysClockFreq+0xf8>)
 8003246:	613b      	str	r3, [r7, #16]
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 8003248:	e05d      	b.n	8003306 <HAL_RCC_GetSysClockFreq+0xea>
        sysclockfreq =  HSI_VALUE;
 800324a:	4b33      	ldr	r3, [pc, #204]	; (8003318 <HAL_RCC_GetSysClockFreq+0xfc>)
 800324c:	613b      	str	r3, [r7, #16]
      break;
 800324e:	e05a      	b.n	8003306 <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 8003250:	4b32      	ldr	r3, [pc, #200]	; (800331c <HAL_RCC_GetSysClockFreq+0x100>)
 8003252:	613b      	str	r3, [r7, #16]
      break;
 8003254:	e057      	b.n	8003306 <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8003256:	68fb      	ldr	r3, [r7, #12]
 8003258:	0c9b      	lsrs	r3, r3, #18
 800325a:	220f      	movs	r2, #15
 800325c:	4013      	ands	r3, r2
 800325e:	4a30      	ldr	r2, [pc, #192]	; (8003320 <HAL_RCC_GetSysClockFreq+0x104>)
 8003260:	5cd3      	ldrb	r3, [r2, r3]
 8003262:	60bb      	str	r3, [r7, #8]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8003264:	68fb      	ldr	r3, [r7, #12]
 8003266:	0d9b      	lsrs	r3, r3, #22
 8003268:	2203      	movs	r2, #3
 800326a:	4013      	ands	r3, r2
 800326c:	3301      	adds	r3, #1
 800326e:	607b      	str	r3, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 8003270:	4b27      	ldr	r3, [pc, #156]	; (8003310 <HAL_RCC_GetSysClockFreq+0xf4>)
 8003272:	68da      	ldr	r2, [r3, #12]
 8003274:	2380      	movs	r3, #128	; 0x80
 8003276:	025b      	lsls	r3, r3, #9
 8003278:	4013      	ands	r3, r2
 800327a:	d00f      	beq.n	800329c <HAL_RCC_GetSysClockFreq+0x80>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE * pllm) / plld;
 800327c:	68b9      	ldr	r1, [r7, #8]
 800327e:	000a      	movs	r2, r1
 8003280:	0152      	lsls	r2, r2, #5
 8003282:	1a52      	subs	r2, r2, r1
 8003284:	0193      	lsls	r3, r2, #6
 8003286:	1a9b      	subs	r3, r3, r2
 8003288:	00db      	lsls	r3, r3, #3
 800328a:	185b      	adds	r3, r3, r1
 800328c:	025b      	lsls	r3, r3, #9
 800328e:	6879      	ldr	r1, [r7, #4]
 8003290:	0018      	movs	r0, r3
 8003292:	f7fc ff39 	bl	8000108 <__udivsi3>
 8003296:	0003      	movs	r3, r0
 8003298:	617b      	str	r3, [r7, #20]
 800329a:	e023      	b.n	80032e4 <HAL_RCC_GetSysClockFreq+0xc8>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 800329c:	4b1c      	ldr	r3, [pc, #112]	; (8003310 <HAL_RCC_GetSysClockFreq+0xf4>)
 800329e:	681b      	ldr	r3, [r3, #0]
 80032a0:	2210      	movs	r2, #16
 80032a2:	4013      	ands	r3, r2
 80032a4:	d00f      	beq.n	80032c6 <HAL_RCC_GetSysClockFreq+0xaa>
        {
          pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
 80032a6:	68b9      	ldr	r1, [r7, #8]
 80032a8:	000a      	movs	r2, r1
 80032aa:	0152      	lsls	r2, r2, #5
 80032ac:	1a52      	subs	r2, r2, r1
 80032ae:	0193      	lsls	r3, r2, #6
 80032b0:	1a9b      	subs	r3, r3, r2
 80032b2:	00db      	lsls	r3, r3, #3
 80032b4:	185b      	adds	r3, r3, r1
 80032b6:	021b      	lsls	r3, r3, #8
 80032b8:	6879      	ldr	r1, [r7, #4]
 80032ba:	0018      	movs	r0, r3
 80032bc:	f7fc ff24 	bl	8000108 <__udivsi3>
 80032c0:	0003      	movs	r3, r0
 80032c2:	617b      	str	r3, [r7, #20]
 80032c4:	e00e      	b.n	80032e4 <HAL_RCC_GetSysClockFreq+0xc8>
        }
        else
        {
         pllvco = (HSI_VALUE * pllm) / plld;
 80032c6:	68b9      	ldr	r1, [r7, #8]
 80032c8:	000a      	movs	r2, r1
 80032ca:	0152      	lsls	r2, r2, #5
 80032cc:	1a52      	subs	r2, r2, r1
 80032ce:	0193      	lsls	r3, r2, #6
 80032d0:	1a9b      	subs	r3, r3, r2
 80032d2:	00db      	lsls	r3, r3, #3
 80032d4:	185b      	adds	r3, r3, r1
 80032d6:	029b      	lsls	r3, r3, #10
 80032d8:	6879      	ldr	r1, [r7, #4]
 80032da:	0018      	movs	r0, r3
 80032dc:	f7fc ff14 	bl	8000108 <__udivsi3>
 80032e0:	0003      	movs	r3, r0
 80032e2:	617b      	str	r3, [r7, #20]
        }
      }
      sysclockfreq = pllvco;
 80032e4:	697b      	ldr	r3, [r7, #20]
 80032e6:	613b      	str	r3, [r7, #16]
      break;
 80032e8:	e00d      	b.n	8003306 <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 80032ea:	4b09      	ldr	r3, [pc, #36]	; (8003310 <HAL_RCC_GetSysClockFreq+0xf4>)
 80032ec:	685b      	ldr	r3, [r3, #4]
 80032ee:	0b5b      	lsrs	r3, r3, #13
 80032f0:	2207      	movs	r2, #7
 80032f2:	4013      	ands	r3, r2
 80032f4:	603b      	str	r3, [r7, #0]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 80032f6:	683b      	ldr	r3, [r7, #0]
 80032f8:	3301      	adds	r3, #1
 80032fa:	2280      	movs	r2, #128	; 0x80
 80032fc:	0212      	lsls	r2, r2, #8
 80032fe:	409a      	lsls	r2, r3
 8003300:	0013      	movs	r3, r2
 8003302:	613b      	str	r3, [r7, #16]
      break;
 8003304:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 8003306:	693b      	ldr	r3, [r7, #16]
}
 8003308:	0018      	movs	r0, r3
 800330a:	46bd      	mov	sp, r7
 800330c:	b006      	add	sp, #24
 800330e:	bd80      	pop	{r7, pc}
 8003310:	40021000 	.word	0x40021000
 8003314:	003d0900 	.word	0x003d0900
 8003318:	00f42400 	.word	0x00f42400
 800331c:	007a1200 	.word	0x007a1200
 8003320:	080044c0 	.word	0x080044c0

08003324 <pow>:
 8003324:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003326:	2400      	movs	r4, #0
 8003328:	b091      	sub	sp, #68	; 0x44
 800332a:	001f      	movs	r7, r3
 800332c:	9000      	str	r0, [sp, #0]
 800332e:	9101      	str	r1, [sp, #4]
 8003330:	0016      	movs	r6, r2
 8003332:	f000 f98d 	bl	8003650 <__ieee754_pow>
 8003336:	4bbe      	ldr	r3, [pc, #760]	; (8003630 <pow+0x30c>)
 8003338:	9002      	str	r0, [sp, #8]
 800333a:	9103      	str	r1, [sp, #12]
 800333c:	571c      	ldrsb	r4, [r3, r4]
 800333e:	1c63      	adds	r3, r4, #1
 8003340:	d100      	bne.n	8003344 <pow+0x20>
 8003342:	e0d4      	b.n	80034ee <pow+0x1ca>
 8003344:	0032      	movs	r2, r6
 8003346:	003b      	movs	r3, r7
 8003348:	0030      	movs	r0, r6
 800334a:	0039      	movs	r1, r7
 800334c:	f7fe fca4 	bl	8001c98 <__aeabi_dcmpun>
 8003350:	1e05      	subs	r5, r0, #0
 8003352:	d000      	beq.n	8003356 <pow+0x32>
 8003354:	e0cb      	b.n	80034ee <pow+0x1ca>
 8003356:	9a00      	ldr	r2, [sp, #0]
 8003358:	9b01      	ldr	r3, [sp, #4]
 800335a:	0010      	movs	r0, r2
 800335c:	0019      	movs	r1, r3
 800335e:	f7fe fc9b 	bl	8001c98 <__aeabi_dcmpun>
 8003362:	2200      	movs	r2, #0
 8003364:	9005      	str	r0, [sp, #20]
 8003366:	2800      	cmp	r0, #0
 8003368:	d01e      	beq.n	80033a8 <pow+0x84>
 800336a:	2300      	movs	r3, #0
 800336c:	0030      	movs	r0, r6
 800336e:	0039      	movs	r1, r7
 8003370:	f7fc ff66 	bl	8000240 <__aeabi_dcmpeq>
 8003374:	2800      	cmp	r0, #0
 8003376:	d100      	bne.n	800337a <pow+0x56>
 8003378:	e0b9      	b.n	80034ee <pow+0x1ca>
 800337a:	2301      	movs	r3, #1
 800337c:	9306      	str	r3, [sp, #24]
 800337e:	4bad      	ldr	r3, [pc, #692]	; (8003634 <pow+0x310>)
 8003380:	950e      	str	r5, [sp, #56]	; 0x38
 8003382:	9307      	str	r3, [sp, #28]
 8003384:	9a00      	ldr	r2, [sp, #0]
 8003386:	9b01      	ldr	r3, [sp, #4]
 8003388:	9208      	str	r2, [sp, #32]
 800338a:	9309      	str	r3, [sp, #36]	; 0x24
 800338c:	2200      	movs	r2, #0
 800338e:	4baa      	ldr	r3, [pc, #680]	; (8003638 <pow+0x314>)
 8003390:	960a      	str	r6, [sp, #40]	; 0x28
 8003392:	970b      	str	r7, [sp, #44]	; 0x2c
 8003394:	920c      	str	r2, [sp, #48]	; 0x30
 8003396:	930d      	str	r3, [sp, #52]	; 0x34
 8003398:	2c02      	cmp	r4, #2
 800339a:	d033      	beq.n	8003404 <pow+0xe0>
 800339c:	a806      	add	r0, sp, #24
 800339e:	f000 ff0b 	bl	80041b8 <matherr>
 80033a2:	2800      	cmp	r0, #0
 80033a4:	d125      	bne.n	80033f2 <pow+0xce>
 80033a6:	e059      	b.n	800345c <pow+0x138>
 80033a8:	2300      	movs	r3, #0
 80033aa:	9800      	ldr	r0, [sp, #0]
 80033ac:	9901      	ldr	r1, [sp, #4]
 80033ae:	f7fc ff47 	bl	8000240 <__aeabi_dcmpeq>
 80033b2:	2800      	cmp	r0, #0
 80033b4:	d057      	beq.n	8003466 <pow+0x142>
 80033b6:	2200      	movs	r2, #0
 80033b8:	2300      	movs	r3, #0
 80033ba:	0030      	movs	r0, r6
 80033bc:	0039      	movs	r1, r7
 80033be:	f7fc ff3f 	bl	8000240 <__aeabi_dcmpeq>
 80033c2:	1e05      	subs	r5, r0, #0
 80033c4:	d021      	beq.n	800340a <pow+0xe6>
 80033c6:	2301      	movs	r3, #1
 80033c8:	9306      	str	r3, [sp, #24]
 80033ca:	4b9a      	ldr	r3, [pc, #616]	; (8003634 <pow+0x310>)
 80033cc:	960a      	str	r6, [sp, #40]	; 0x28
 80033ce:	970b      	str	r7, [sp, #44]	; 0x2c
 80033d0:	9307      	str	r3, [sp, #28]
 80033d2:	9b05      	ldr	r3, [sp, #20]
 80033d4:	930e      	str	r3, [sp, #56]	; 0x38
 80033d6:	9a00      	ldr	r2, [sp, #0]
 80033d8:	9b01      	ldr	r3, [sp, #4]
 80033da:	9208      	str	r2, [sp, #32]
 80033dc:	9309      	str	r3, [sp, #36]	; 0x24
 80033de:	2200      	movs	r2, #0
 80033e0:	2300      	movs	r3, #0
 80033e2:	920c      	str	r2, [sp, #48]	; 0x30
 80033e4:	930d      	str	r3, [sp, #52]	; 0x34
 80033e6:	2c00      	cmp	r4, #0
 80033e8:	d0d8      	beq.n	800339c <pow+0x78>
 80033ea:	2200      	movs	r2, #0
 80033ec:	4b92      	ldr	r3, [pc, #584]	; (8003638 <pow+0x314>)
 80033ee:	920c      	str	r2, [sp, #48]	; 0x30
 80033f0:	930d      	str	r3, [sp, #52]	; 0x34
 80033f2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80033f4:	9300      	str	r3, [sp, #0]
 80033f6:	2b00      	cmp	r3, #0
 80033f8:	d004      	beq.n	8003404 <pow+0xe0>
 80033fa:	f000 ffd9 	bl	80043b0 <__errno>
 80033fe:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8003400:	9300      	str	r3, [sp, #0]
 8003402:	6003      	str	r3, [r0, #0]
 8003404:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8003406:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8003408:	e06f      	b.n	80034ea <pow+0x1c6>
 800340a:	0030      	movs	r0, r6
 800340c:	0039      	movs	r1, r7
 800340e:	f000 fecb 	bl	80041a8 <finite>
 8003412:	2800      	cmp	r0, #0
 8003414:	d06b      	beq.n	80034ee <pow+0x1ca>
 8003416:	2200      	movs	r2, #0
 8003418:	2300      	movs	r3, #0
 800341a:	0030      	movs	r0, r6
 800341c:	0039      	movs	r1, r7
 800341e:	f7fc ff15 	bl	800024c <__aeabi_dcmplt>
 8003422:	2800      	cmp	r0, #0
 8003424:	d063      	beq.n	80034ee <pow+0x1ca>
 8003426:	2301      	movs	r3, #1
 8003428:	9306      	str	r3, [sp, #24]
 800342a:	4b82      	ldr	r3, [pc, #520]	; (8003634 <pow+0x310>)
 800342c:	950e      	str	r5, [sp, #56]	; 0x38
 800342e:	9307      	str	r3, [sp, #28]
 8003430:	9b00      	ldr	r3, [sp, #0]
 8003432:	9c01      	ldr	r4, [sp, #4]
 8003434:	9308      	str	r3, [sp, #32]
 8003436:	9409      	str	r4, [sp, #36]	; 0x24
 8003438:	4b7d      	ldr	r3, [pc, #500]	; (8003630 <pow+0x30c>)
 800343a:	960a      	str	r6, [sp, #40]	; 0x28
 800343c:	970b      	str	r7, [sp, #44]	; 0x2c
 800343e:	781b      	ldrb	r3, [r3, #0]
 8003440:	b25b      	sxtb	r3, r3
 8003442:	2b00      	cmp	r3, #0
 8003444:	d104      	bne.n	8003450 <pow+0x12c>
 8003446:	2300      	movs	r3, #0
 8003448:	2400      	movs	r4, #0
 800344a:	930c      	str	r3, [sp, #48]	; 0x30
 800344c:	940d      	str	r4, [sp, #52]	; 0x34
 800344e:	e7a5      	b.n	800339c <pow+0x78>
 8003450:	2000      	movs	r0, #0
 8003452:	497a      	ldr	r1, [pc, #488]	; (800363c <pow+0x318>)
 8003454:	900c      	str	r0, [sp, #48]	; 0x30
 8003456:	910d      	str	r1, [sp, #52]	; 0x34
 8003458:	2b02      	cmp	r3, #2
 800345a:	d19f      	bne.n	800339c <pow+0x78>
 800345c:	f000 ffa8 	bl	80043b0 <__errno>
 8003460:	2321      	movs	r3, #33	; 0x21
 8003462:	6003      	str	r3, [r0, #0]
 8003464:	e7c5      	b.n	80033f2 <pow+0xce>
 8003466:	9802      	ldr	r0, [sp, #8]
 8003468:	9903      	ldr	r1, [sp, #12]
 800346a:	f000 fe9d 	bl	80041a8 <finite>
 800346e:	9005      	str	r0, [sp, #20]
 8003470:	2800      	cmp	r0, #0
 8003472:	d000      	beq.n	8003476 <pow+0x152>
 8003474:	e0a5      	b.n	80035c2 <pow+0x29e>
 8003476:	9800      	ldr	r0, [sp, #0]
 8003478:	9901      	ldr	r1, [sp, #4]
 800347a:	f000 fe95 	bl	80041a8 <finite>
 800347e:	2800      	cmp	r0, #0
 8003480:	d100      	bne.n	8003484 <pow+0x160>
 8003482:	e09e      	b.n	80035c2 <pow+0x29e>
 8003484:	0030      	movs	r0, r6
 8003486:	0039      	movs	r1, r7
 8003488:	f000 fe8e 	bl	80041a8 <finite>
 800348c:	2800      	cmp	r0, #0
 800348e:	d100      	bne.n	8003492 <pow+0x16e>
 8003490:	e097      	b.n	80035c2 <pow+0x29e>
 8003492:	2500      	movs	r5, #0
 8003494:	4b66      	ldr	r3, [pc, #408]	; (8003630 <pow+0x30c>)
 8003496:	ac06      	add	r4, sp, #24
 8003498:	575d      	ldrsb	r5, [r3, r5]
 800349a:	9a02      	ldr	r2, [sp, #8]
 800349c:	9b03      	ldr	r3, [sp, #12]
 800349e:	0019      	movs	r1, r3
 80034a0:	0010      	movs	r0, r2
 80034a2:	f7fe fbf9 	bl	8001c98 <__aeabi_dcmpun>
 80034a6:	4b63      	ldr	r3, [pc, #396]	; (8003634 <pow+0x310>)
 80034a8:	2800      	cmp	r0, #0
 80034aa:	d031      	beq.n	8003510 <pow+0x1ec>
 80034ac:	2201      	movs	r2, #1
 80034ae:	6063      	str	r3, [r4, #4]
 80034b0:	9b05      	ldr	r3, [sp, #20]
 80034b2:	9206      	str	r2, [sp, #24]
 80034b4:	6223      	str	r3, [r4, #32]
 80034b6:	6126      	str	r6, [r4, #16]
 80034b8:	6167      	str	r7, [r4, #20]
 80034ba:	9a00      	ldr	r2, [sp, #0]
 80034bc:	9b01      	ldr	r3, [sp, #4]
 80034be:	60a2      	str	r2, [r4, #8]
 80034c0:	60e3      	str	r3, [r4, #12]
 80034c2:	2200      	movs	r2, #0
 80034c4:	2300      	movs	r3, #0
 80034c6:	2d00      	cmp	r5, #0
 80034c8:	d115      	bne.n	80034f6 <pow+0x1d2>
 80034ca:	61a2      	str	r2, [r4, #24]
 80034cc:	61e3      	str	r3, [r4, #28]
 80034ce:	0020      	movs	r0, r4
 80034d0:	f000 fe72 	bl	80041b8 <matherr>
 80034d4:	2800      	cmp	r0, #0
 80034d6:	d016      	beq.n	8003506 <pow+0x1e2>
 80034d8:	6a23      	ldr	r3, [r4, #32]
 80034da:	2b00      	cmp	r3, #0
 80034dc:	d003      	beq.n	80034e6 <pow+0x1c2>
 80034de:	f000 ff67 	bl	80043b0 <__errno>
 80034e2:	6a23      	ldr	r3, [r4, #32]
 80034e4:	6003      	str	r3, [r0, #0]
 80034e6:	69a3      	ldr	r3, [r4, #24]
 80034e8:	69e4      	ldr	r4, [r4, #28]
 80034ea:	9302      	str	r3, [sp, #8]
 80034ec:	9403      	str	r4, [sp, #12]
 80034ee:	9802      	ldr	r0, [sp, #8]
 80034f0:	9903      	ldr	r1, [sp, #12]
 80034f2:	b011      	add	sp, #68	; 0x44
 80034f4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80034f6:	0010      	movs	r0, r2
 80034f8:	0019      	movs	r1, r3
 80034fa:	f7fd fa09 	bl	8000910 <__aeabi_ddiv>
 80034fe:	61a0      	str	r0, [r4, #24]
 8003500:	61e1      	str	r1, [r4, #28]
 8003502:	2d02      	cmp	r5, #2
 8003504:	d1e3      	bne.n	80034ce <pow+0x1aa>
 8003506:	f000 ff53 	bl	80043b0 <__errno>
 800350a:	2321      	movs	r3, #33	; 0x21
 800350c:	6003      	str	r3, [r0, #0]
 800350e:	e7e3      	b.n	80034d8 <pow+0x1b4>
 8003510:	2203      	movs	r2, #3
 8003512:	6126      	str	r6, [r4, #16]
 8003514:	6167      	str	r7, [r4, #20]
 8003516:	9206      	str	r2, [sp, #24]
 8003518:	6063      	str	r3, [r4, #4]
 800351a:	6220      	str	r0, [r4, #32]
 800351c:	9a00      	ldr	r2, [sp, #0]
 800351e:	9b01      	ldr	r3, [sp, #4]
 8003520:	0030      	movs	r0, r6
 8003522:	60a2      	str	r2, [r4, #8]
 8003524:	60e3      	str	r3, [r4, #12]
 8003526:	0039      	movs	r1, r7
 8003528:	2200      	movs	r2, #0
 800352a:	4b45      	ldr	r3, [pc, #276]	; (8003640 <pow+0x31c>)
 800352c:	f7fd fdfa 	bl	8001124 <__aeabi_dmul>
 8003530:	0006      	movs	r6, r0
 8003532:	000f      	movs	r7, r1
 8003534:	2d00      	cmp	r5, #0
 8003536:	d124      	bne.n	8003582 <pow+0x25e>
 8003538:	9800      	ldr	r0, [sp, #0]
 800353a:	9901      	ldr	r1, [sp, #4]
 800353c:	22e0      	movs	r2, #224	; 0xe0
 800353e:	4b41      	ldr	r3, [pc, #260]	; (8003644 <pow+0x320>)
 8003540:	0612      	lsls	r2, r2, #24
 8003542:	61a2      	str	r2, [r4, #24]
 8003544:	61e3      	str	r3, [r4, #28]
 8003546:	2200      	movs	r2, #0
 8003548:	2300      	movs	r3, #0
 800354a:	f7fc fe7f 	bl	800024c <__aeabi_dcmplt>
 800354e:	2800      	cmp	r0, #0
 8003550:	d030      	beq.n	80035b4 <pow+0x290>
 8003552:	0030      	movs	r0, r6
 8003554:	0039      	movs	r1, r7
 8003556:	f000 fe37 	bl	80041c8 <rint>
 800355a:	0032      	movs	r2, r6
 800355c:	003b      	movs	r3, r7
 800355e:	f7fc fe6f 	bl	8000240 <__aeabi_dcmpeq>
 8003562:	2800      	cmp	r0, #0
 8003564:	d104      	bne.n	8003570 <pow+0x24c>
 8003566:	22e0      	movs	r2, #224	; 0xe0
 8003568:	4b37      	ldr	r3, [pc, #220]	; (8003648 <pow+0x324>)
 800356a:	0612      	lsls	r2, r2, #24
 800356c:	61a2      	str	r2, [r4, #24]
 800356e:	61e3      	str	r3, [r4, #28]
 8003570:	4b2f      	ldr	r3, [pc, #188]	; (8003630 <pow+0x30c>)
 8003572:	781b      	ldrb	r3, [r3, #0]
 8003574:	b25b      	sxtb	r3, r3
 8003576:	2b02      	cmp	r3, #2
 8003578:	d11c      	bne.n	80035b4 <pow+0x290>
 800357a:	f000 ff19 	bl	80043b0 <__errno>
 800357e:	2322      	movs	r3, #34	; 0x22
 8003580:	e7c4      	b.n	800350c <pow+0x1e8>
 8003582:	2200      	movs	r2, #0
 8003584:	9800      	ldr	r0, [sp, #0]
 8003586:	9901      	ldr	r1, [sp, #4]
 8003588:	4b30      	ldr	r3, [pc, #192]	; (800364c <pow+0x328>)
 800358a:	61a2      	str	r2, [r4, #24]
 800358c:	61e3      	str	r3, [r4, #28]
 800358e:	2200      	movs	r2, #0
 8003590:	2300      	movs	r3, #0
 8003592:	f7fc fe5b 	bl	800024c <__aeabi_dcmplt>
 8003596:	2800      	cmp	r0, #0
 8003598:	d0ea      	beq.n	8003570 <pow+0x24c>
 800359a:	0030      	movs	r0, r6
 800359c:	0039      	movs	r1, r7
 800359e:	f000 fe13 	bl	80041c8 <rint>
 80035a2:	0032      	movs	r2, r6
 80035a4:	003b      	movs	r3, r7
 80035a6:	f7fc fe4b 	bl	8000240 <__aeabi_dcmpeq>
 80035aa:	2800      	cmp	r0, #0
 80035ac:	d1e0      	bne.n	8003570 <pow+0x24c>
 80035ae:	2200      	movs	r2, #0
 80035b0:	4b22      	ldr	r3, [pc, #136]	; (800363c <pow+0x318>)
 80035b2:	e7db      	b.n	800356c <pow+0x248>
 80035b4:	0020      	movs	r0, r4
 80035b6:	f000 fdff 	bl	80041b8 <matherr>
 80035ba:	2800      	cmp	r0, #0
 80035bc:	d000      	beq.n	80035c0 <pow+0x29c>
 80035be:	e78b      	b.n	80034d8 <pow+0x1b4>
 80035c0:	e7db      	b.n	800357a <pow+0x256>
 80035c2:	2200      	movs	r2, #0
 80035c4:	9802      	ldr	r0, [sp, #8]
 80035c6:	9903      	ldr	r1, [sp, #12]
 80035c8:	2300      	movs	r3, #0
 80035ca:	f7fc fe39 	bl	8000240 <__aeabi_dcmpeq>
 80035ce:	2800      	cmp	r0, #0
 80035d0:	d100      	bne.n	80035d4 <pow+0x2b0>
 80035d2:	e78c      	b.n	80034ee <pow+0x1ca>
 80035d4:	9800      	ldr	r0, [sp, #0]
 80035d6:	9901      	ldr	r1, [sp, #4]
 80035d8:	f000 fde6 	bl	80041a8 <finite>
 80035dc:	2800      	cmp	r0, #0
 80035de:	d100      	bne.n	80035e2 <pow+0x2be>
 80035e0:	e785      	b.n	80034ee <pow+0x1ca>
 80035e2:	0030      	movs	r0, r6
 80035e4:	0039      	movs	r1, r7
 80035e6:	f000 fddf 	bl	80041a8 <finite>
 80035ea:	2800      	cmp	r0, #0
 80035ec:	d100      	bne.n	80035f0 <pow+0x2cc>
 80035ee:	e77e      	b.n	80034ee <pow+0x1ca>
 80035f0:	2304      	movs	r3, #4
 80035f2:	9306      	str	r3, [sp, #24]
 80035f4:	4b0f      	ldr	r3, [pc, #60]	; (8003634 <pow+0x310>)
 80035f6:	960a      	str	r6, [sp, #40]	; 0x28
 80035f8:	970b      	str	r7, [sp, #44]	; 0x2c
 80035fa:	9307      	str	r3, [sp, #28]
 80035fc:	2300      	movs	r3, #0
 80035fe:	930e      	str	r3, [sp, #56]	; 0x38
 8003600:	9b00      	ldr	r3, [sp, #0]
 8003602:	9c01      	ldr	r4, [sp, #4]
 8003604:	9308      	str	r3, [sp, #32]
 8003606:	9409      	str	r4, [sp, #36]	; 0x24
 8003608:	2300      	movs	r3, #0
 800360a:	2400      	movs	r4, #0
 800360c:	930c      	str	r3, [sp, #48]	; 0x30
 800360e:	940d      	str	r4, [sp, #52]	; 0x34
 8003610:	4b07      	ldr	r3, [pc, #28]	; (8003630 <pow+0x30c>)
 8003612:	781b      	ldrb	r3, [r3, #0]
 8003614:	b25b      	sxtb	r3, r3
 8003616:	2b02      	cmp	r3, #2
 8003618:	d103      	bne.n	8003622 <pow+0x2fe>
 800361a:	f000 fec9 	bl	80043b0 <__errno>
 800361e:	2322      	movs	r3, #34	; 0x22
 8003620:	e71f      	b.n	8003462 <pow+0x13e>
 8003622:	a806      	add	r0, sp, #24
 8003624:	f000 fdc8 	bl	80041b8 <matherr>
 8003628:	2800      	cmp	r0, #0
 800362a:	d000      	beq.n	800362e <pow+0x30a>
 800362c:	e6e1      	b.n	80033f2 <pow+0xce>
 800362e:	e7f4      	b.n	800361a <pow+0x2f6>
 8003630:	20000009 	.word	0x20000009
 8003634:	080044c9 	.word	0x080044c9
 8003638:	3ff00000 	.word	0x3ff00000
 800363c:	fff00000 	.word	0xfff00000
 8003640:	3fe00000 	.word	0x3fe00000
 8003644:	47efffff 	.word	0x47efffff
 8003648:	c7efffff 	.word	0xc7efffff
 800364c:	7ff00000 	.word	0x7ff00000

08003650 <__ieee754_pow>:
 8003650:	b5f0      	push	{r4, r5, r6, r7, lr}
 8003652:	b095      	sub	sp, #84	; 0x54
 8003654:	9202      	str	r2, [sp, #8]
 8003656:	9303      	str	r3, [sp, #12]
 8003658:	9b03      	ldr	r3, [sp, #12]
 800365a:	000e      	movs	r6, r1
 800365c:	9902      	ldr	r1, [sp, #8]
 800365e:	005d      	lsls	r5, r3, #1
 8003660:	9304      	str	r3, [sp, #16]
 8003662:	000b      	movs	r3, r1
 8003664:	086d      	lsrs	r5, r5, #1
 8003666:	0007      	movs	r7, r0
 8003668:	432b      	orrs	r3, r5
 800366a:	d101      	bne.n	8003670 <__ieee754_pow+0x20>
 800366c:	f000 fcad 	bl	8003fca <__ieee754_pow+0x97a>
 8003670:	4b7e      	ldr	r3, [pc, #504]	; (800386c <__ieee754_pow+0x21c>)
 8003672:	0074      	lsls	r4, r6, #1
 8003674:	9608      	str	r6, [sp, #32]
 8003676:	9000      	str	r0, [sp, #0]
 8003678:	0864      	lsrs	r4, r4, #1
 800367a:	469c      	mov	ip, r3
 800367c:	429c      	cmp	r4, r3
 800367e:	dc0b      	bgt.n	8003698 <__ieee754_pow+0x48>
 8003680:	d104      	bne.n	800368c <__ieee754_pow+0x3c>
 8003682:	2800      	cmp	r0, #0
 8003684:	d108      	bne.n	8003698 <__ieee754_pow+0x48>
 8003686:	42a5      	cmp	r5, r4
 8003688:	dc0c      	bgt.n	80036a4 <__ieee754_pow+0x54>
 800368a:	e001      	b.n	8003690 <__ieee754_pow+0x40>
 800368c:	429d      	cmp	r5, r3
 800368e:	dc03      	bgt.n	8003698 <__ieee754_pow+0x48>
 8003690:	4565      	cmp	r5, ip
 8003692:	d10d      	bne.n	80036b0 <__ieee754_pow+0x60>
 8003694:	2900      	cmp	r1, #0
 8003696:	d00b      	beq.n	80036b0 <__ieee754_pow+0x60>
 8003698:	4b75      	ldr	r3, [pc, #468]	; (8003870 <__ieee754_pow+0x220>)
 800369a:	18e4      	adds	r4, r4, r3
 800369c:	4327      	orrs	r7, r4
 800369e:	d101      	bne.n	80036a4 <__ieee754_pow+0x54>
 80036a0:	f000 fc93 	bl	8003fca <__ieee754_pow+0x97a>
 80036a4:	4873      	ldr	r0, [pc, #460]	; (8003874 <__ieee754_pow+0x224>)
 80036a6:	f000 fd89 	bl	80041bc <nan>
 80036aa:	9000      	str	r0, [sp, #0]
 80036ac:	9101      	str	r1, [sp, #4]
 80036ae:	e061      	b.n	8003774 <__ieee754_pow+0x124>
 80036b0:	2300      	movs	r3, #0
 80036b2:	9306      	str	r3, [sp, #24]
 80036b4:	2e00      	cmp	r6, #0
 80036b6:	da17      	bge.n	80036e8 <__ieee754_pow+0x98>
 80036b8:	4a6f      	ldr	r2, [pc, #444]	; (8003878 <__ieee754_pow+0x228>)
 80036ba:	4295      	cmp	r5, r2
 80036bc:	dc4d      	bgt.n	800375a <__ieee754_pow+0x10a>
 80036be:	4a6f      	ldr	r2, [pc, #444]	; (800387c <__ieee754_pow+0x22c>)
 80036c0:	4295      	cmp	r5, r2
 80036c2:	dd11      	ble.n	80036e8 <__ieee754_pow+0x98>
 80036c4:	4b6e      	ldr	r3, [pc, #440]	; (8003880 <__ieee754_pow+0x230>)
 80036c6:	152a      	asrs	r2, r5, #20
 80036c8:	18d2      	adds	r2, r2, r3
 80036ca:	2a14      	cmp	r2, #20
 80036cc:	dd25      	ble.n	800371a <__ieee754_pow+0xca>
 80036ce:	2034      	movs	r0, #52	; 0x34
 80036d0:	1a82      	subs	r2, r0, r2
 80036d2:	9802      	ldr	r0, [sp, #8]
 80036d4:	40d0      	lsrs	r0, r2
 80036d6:	0003      	movs	r3, r0
 80036d8:	4093      	lsls	r3, r2
 80036da:	428b      	cmp	r3, r1
 80036dc:	d104      	bne.n	80036e8 <__ieee754_pow+0x98>
 80036de:	2201      	movs	r2, #1
 80036e0:	4010      	ands	r0, r2
 80036e2:	1892      	adds	r2, r2, r2
 80036e4:	1a13      	subs	r3, r2, r0
 80036e6:	9306      	str	r3, [sp, #24]
 80036e8:	2900      	cmp	r1, #0
 80036ea:	d15e      	bne.n	80037aa <__ieee754_pow+0x15a>
 80036ec:	4565      	cmp	r5, ip
 80036ee:	d123      	bne.n	8003738 <__ieee754_pow+0xe8>
 80036f0:	4b5f      	ldr	r3, [pc, #380]	; (8003870 <__ieee754_pow+0x220>)
 80036f2:	18e3      	adds	r3, r4, r3
 80036f4:	431f      	orrs	r7, r3
 80036f6:	d101      	bne.n	80036fc <__ieee754_pow+0xac>
 80036f8:	f000 fc67 	bl	8003fca <__ieee754_pow+0x97a>
 80036fc:	4b5f      	ldr	r3, [pc, #380]	; (800387c <__ieee754_pow+0x22c>)
 80036fe:	429c      	cmp	r4, r3
 8003700:	dd2d      	ble.n	800375e <__ieee754_pow+0x10e>
 8003702:	9b02      	ldr	r3, [sp, #8]
 8003704:	9c03      	ldr	r4, [sp, #12]
 8003706:	9300      	str	r3, [sp, #0]
 8003708:	9401      	str	r4, [sp, #4]
 800370a:	9b04      	ldr	r3, [sp, #16]
 800370c:	2b00      	cmp	r3, #0
 800370e:	da31      	bge.n	8003774 <__ieee754_pow+0x124>
 8003710:	2300      	movs	r3, #0
 8003712:	2400      	movs	r4, #0
 8003714:	9300      	str	r3, [sp, #0]
 8003716:	9401      	str	r4, [sp, #4]
 8003718:	e02c      	b.n	8003774 <__ieee754_pow+0x124>
 800371a:	2900      	cmp	r1, #0
 800371c:	d145      	bne.n	80037aa <__ieee754_pow+0x15a>
 800371e:	2314      	movs	r3, #20
 8003720:	1a9a      	subs	r2, r3, r2
 8003722:	002b      	movs	r3, r5
 8003724:	4113      	asrs	r3, r2
 8003726:	0019      	movs	r1, r3
 8003728:	4091      	lsls	r1, r2
 800372a:	42a9      	cmp	r1, r5
 800372c:	d104      	bne.n	8003738 <__ieee754_pow+0xe8>
 800372e:	2201      	movs	r2, #1
 8003730:	4013      	ands	r3, r2
 8003732:	1892      	adds	r2, r2, r2
 8003734:	1ad3      	subs	r3, r2, r3
 8003736:	9306      	str	r3, [sp, #24]
 8003738:	4b52      	ldr	r3, [pc, #328]	; (8003884 <__ieee754_pow+0x234>)
 800373a:	429d      	cmp	r5, r3
 800373c:	d11e      	bne.n	800377c <__ieee754_pow+0x12c>
 800373e:	0038      	movs	r0, r7
 8003740:	0031      	movs	r1, r6
 8003742:	9b04      	ldr	r3, [sp, #16]
 8003744:	9000      	str	r0, [sp, #0]
 8003746:	9101      	str	r1, [sp, #4]
 8003748:	2b00      	cmp	r3, #0
 800374a:	da13      	bge.n	8003774 <__ieee754_pow+0x124>
 800374c:	003a      	movs	r2, r7
 800374e:	0033      	movs	r3, r6
 8003750:	2000      	movs	r0, #0
 8003752:	494c      	ldr	r1, [pc, #304]	; (8003884 <__ieee754_pow+0x234>)
 8003754:	f7fd f8dc 	bl	8000910 <__aeabi_ddiv>
 8003758:	e7a7      	b.n	80036aa <__ieee754_pow+0x5a>
 800375a:	2302      	movs	r3, #2
 800375c:	e7c3      	b.n	80036e6 <__ieee754_pow+0x96>
 800375e:	9b04      	ldr	r3, [sp, #16]
 8003760:	2b00      	cmp	r3, #0
 8003762:	dad5      	bge.n	8003710 <__ieee754_pow+0xc0>
 8003764:	2280      	movs	r2, #128	; 0x80
 8003766:	0612      	lsls	r2, r2, #24
 8003768:	4694      	mov	ip, r2
 800376a:	9b02      	ldr	r3, [sp, #8]
 800376c:	9300      	str	r3, [sp, #0]
 800376e:	9b03      	ldr	r3, [sp, #12]
 8003770:	4463      	add	r3, ip
 8003772:	9301      	str	r3, [sp, #4]
 8003774:	9800      	ldr	r0, [sp, #0]
 8003776:	9901      	ldr	r1, [sp, #4]
 8003778:	b015      	add	sp, #84	; 0x54
 800377a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800377c:	2380      	movs	r3, #128	; 0x80
 800377e:	9a04      	ldr	r2, [sp, #16]
 8003780:	05db      	lsls	r3, r3, #23
 8003782:	429a      	cmp	r2, r3
 8003784:	d106      	bne.n	8003794 <__ieee754_pow+0x144>
 8003786:	003a      	movs	r2, r7
 8003788:	0033      	movs	r3, r6
 800378a:	0038      	movs	r0, r7
 800378c:	0031      	movs	r1, r6
 800378e:	f7fd fcc9 	bl	8001124 <__aeabi_dmul>
 8003792:	e78a      	b.n	80036aa <__ieee754_pow+0x5a>
 8003794:	4b3c      	ldr	r3, [pc, #240]	; (8003888 <__ieee754_pow+0x238>)
 8003796:	9a04      	ldr	r2, [sp, #16]
 8003798:	429a      	cmp	r2, r3
 800379a:	d106      	bne.n	80037aa <__ieee754_pow+0x15a>
 800379c:	2e00      	cmp	r6, #0
 800379e:	db04      	blt.n	80037aa <__ieee754_pow+0x15a>
 80037a0:	0038      	movs	r0, r7
 80037a2:	0031      	movs	r1, r6
 80037a4:	f000 fc4a 	bl	800403c <__ieee754_sqrt>
 80037a8:	e77f      	b.n	80036aa <__ieee754_pow+0x5a>
 80037aa:	0038      	movs	r0, r7
 80037ac:	0031      	movs	r1, r6
 80037ae:	f000 fcf7 	bl	80041a0 <fabs>
 80037b2:	9000      	str	r0, [sp, #0]
 80037b4:	9101      	str	r1, [sp, #4]
 80037b6:	2f00      	cmp	r7, #0
 80037b8:	d12e      	bne.n	8003818 <__ieee754_pow+0x1c8>
 80037ba:	2c00      	cmp	r4, #0
 80037bc:	d004      	beq.n	80037c8 <__ieee754_pow+0x178>
 80037be:	4a31      	ldr	r2, [pc, #196]	; (8003884 <__ieee754_pow+0x234>)
 80037c0:	00b3      	lsls	r3, r6, #2
 80037c2:	089b      	lsrs	r3, r3, #2
 80037c4:	4293      	cmp	r3, r2
 80037c6:	d127      	bne.n	8003818 <__ieee754_pow+0x1c8>
 80037c8:	9b04      	ldr	r3, [sp, #16]
 80037ca:	2b00      	cmp	r3, #0
 80037cc:	da07      	bge.n	80037de <__ieee754_pow+0x18e>
 80037ce:	9a00      	ldr	r2, [sp, #0]
 80037d0:	9b01      	ldr	r3, [sp, #4]
 80037d2:	2000      	movs	r0, #0
 80037d4:	492b      	ldr	r1, [pc, #172]	; (8003884 <__ieee754_pow+0x234>)
 80037d6:	f7fd f89b 	bl	8000910 <__aeabi_ddiv>
 80037da:	9000      	str	r0, [sp, #0]
 80037dc:	9101      	str	r1, [sp, #4]
 80037de:	9b08      	ldr	r3, [sp, #32]
 80037e0:	2b00      	cmp	r3, #0
 80037e2:	dac7      	bge.n	8003774 <__ieee754_pow+0x124>
 80037e4:	4b22      	ldr	r3, [pc, #136]	; (8003870 <__ieee754_pow+0x220>)
 80037e6:	18e4      	adds	r4, r4, r3
 80037e8:	9b06      	ldr	r3, [sp, #24]
 80037ea:	431c      	orrs	r4, r3
 80037ec:	d108      	bne.n	8003800 <__ieee754_pow+0x1b0>
 80037ee:	9a00      	ldr	r2, [sp, #0]
 80037f0:	9b01      	ldr	r3, [sp, #4]
 80037f2:	0010      	movs	r0, r2
 80037f4:	0019      	movs	r1, r3
 80037f6:	f7fd ff07 	bl	8001608 <__aeabi_dsub>
 80037fa:	0002      	movs	r2, r0
 80037fc:	000b      	movs	r3, r1
 80037fe:	e7a9      	b.n	8003754 <__ieee754_pow+0x104>
 8003800:	9b06      	ldr	r3, [sp, #24]
 8003802:	2b01      	cmp	r3, #1
 8003804:	d1b6      	bne.n	8003774 <__ieee754_pow+0x124>
 8003806:	9800      	ldr	r0, [sp, #0]
 8003808:	2180      	movs	r1, #128	; 0x80
 800380a:	0002      	movs	r2, r0
 800380c:	9801      	ldr	r0, [sp, #4]
 800380e:	0609      	lsls	r1, r1, #24
 8003810:	1843      	adds	r3, r0, r1
 8003812:	9200      	str	r2, [sp, #0]
 8003814:	9301      	str	r3, [sp, #4]
 8003816:	e7ad      	b.n	8003774 <__ieee754_pow+0x124>
 8003818:	0ff3      	lsrs	r3, r6, #31
 800381a:	3b01      	subs	r3, #1
 800381c:	9310      	str	r3, [sp, #64]	; 0x40
 800381e:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003820:	9b06      	ldr	r3, [sp, #24]
 8003822:	4313      	orrs	r3, r2
 8003824:	d104      	bne.n	8003830 <__ieee754_pow+0x1e0>
 8003826:	003a      	movs	r2, r7
 8003828:	0033      	movs	r3, r6
 800382a:	0038      	movs	r0, r7
 800382c:	0031      	movs	r1, r6
 800382e:	e7e2      	b.n	80037f6 <__ieee754_pow+0x1a6>
 8003830:	4b16      	ldr	r3, [pc, #88]	; (800388c <__ieee754_pow+0x23c>)
 8003832:	429d      	cmp	r5, r3
 8003834:	dc00      	bgt.n	8003838 <__ieee754_pow+0x1e8>
 8003836:	e0f7      	b.n	8003a28 <__ieee754_pow+0x3d8>
 8003838:	4b15      	ldr	r3, [pc, #84]	; (8003890 <__ieee754_pow+0x240>)
 800383a:	429d      	cmp	r5, r3
 800383c:	dd0b      	ble.n	8003856 <__ieee754_pow+0x206>
 800383e:	4b0f      	ldr	r3, [pc, #60]	; (800387c <__ieee754_pow+0x22c>)
 8003840:	429c      	cmp	r4, r3
 8003842:	dc0e      	bgt.n	8003862 <__ieee754_pow+0x212>
 8003844:	9b04      	ldr	r3, [sp, #16]
 8003846:	2b00      	cmp	r3, #0
 8003848:	db00      	blt.n	800384c <__ieee754_pow+0x1fc>
 800384a:	e761      	b.n	8003710 <__ieee754_pow+0xc0>
 800384c:	4a11      	ldr	r2, [pc, #68]	; (8003894 <__ieee754_pow+0x244>)
 800384e:	4b12      	ldr	r3, [pc, #72]	; (8003898 <__ieee754_pow+0x248>)
 8003850:	0010      	movs	r0, r2
 8003852:	0019      	movs	r1, r3
 8003854:	e79b      	b.n	800378e <__ieee754_pow+0x13e>
 8003856:	4b11      	ldr	r3, [pc, #68]	; (800389c <__ieee754_pow+0x24c>)
 8003858:	429c      	cmp	r4, r3
 800385a:	ddf3      	ble.n	8003844 <__ieee754_pow+0x1f4>
 800385c:	4b09      	ldr	r3, [pc, #36]	; (8003884 <__ieee754_pow+0x234>)
 800385e:	429c      	cmp	r4, r3
 8003860:	dd1e      	ble.n	80038a0 <__ieee754_pow+0x250>
 8003862:	9b04      	ldr	r3, [sp, #16]
 8003864:	2b00      	cmp	r3, #0
 8003866:	dcf1      	bgt.n	800384c <__ieee754_pow+0x1fc>
 8003868:	e752      	b.n	8003710 <__ieee754_pow+0xc0>
 800386a:	46c0      	nop			; (mov r8, r8)
 800386c:	7ff00000 	.word	0x7ff00000
 8003870:	c0100000 	.word	0xc0100000
 8003874:	080044cc 	.word	0x080044cc
 8003878:	433fffff 	.word	0x433fffff
 800387c:	3fefffff 	.word	0x3fefffff
 8003880:	fffffc01 	.word	0xfffffc01
 8003884:	3ff00000 	.word	0x3ff00000
 8003888:	3fe00000 	.word	0x3fe00000
 800388c:	41e00000 	.word	0x41e00000
 8003890:	43f00000 	.word	0x43f00000
 8003894:	8800759c 	.word	0x8800759c
 8003898:	7e37e43c 	.word	0x7e37e43c
 800389c:	3feffffe 	.word	0x3feffffe
 80038a0:	2200      	movs	r2, #0
 80038a2:	9800      	ldr	r0, [sp, #0]
 80038a4:	9901      	ldr	r1, [sp, #4]
 80038a6:	4b52      	ldr	r3, [pc, #328]	; (80039f0 <__ieee754_pow+0x3a0>)
 80038a8:	f7fd feae 	bl	8001608 <__aeabi_dsub>
 80038ac:	22c0      	movs	r2, #192	; 0xc0
 80038ae:	4b51      	ldr	r3, [pc, #324]	; (80039f4 <__ieee754_pow+0x3a4>)
 80038b0:	05d2      	lsls	r2, r2, #23
 80038b2:	0006      	movs	r6, r0
 80038b4:	000f      	movs	r7, r1
 80038b6:	f7fd fc35 	bl	8001124 <__aeabi_dmul>
 80038ba:	4a4f      	ldr	r2, [pc, #316]	; (80039f8 <__ieee754_pow+0x3a8>)
 80038bc:	9000      	str	r0, [sp, #0]
 80038be:	9101      	str	r1, [sp, #4]
 80038c0:	4b4e      	ldr	r3, [pc, #312]	; (80039fc <__ieee754_pow+0x3ac>)
 80038c2:	0030      	movs	r0, r6
 80038c4:	0039      	movs	r1, r7
 80038c6:	f7fd fc2d 	bl	8001124 <__aeabi_dmul>
 80038ca:	2200      	movs	r2, #0
 80038cc:	9004      	str	r0, [sp, #16]
 80038ce:	9105      	str	r1, [sp, #20]
 80038d0:	4b4b      	ldr	r3, [pc, #300]	; (8003a00 <__ieee754_pow+0x3b0>)
 80038d2:	0030      	movs	r0, r6
 80038d4:	0039      	movs	r1, r7
 80038d6:	f7fd fc25 	bl	8001124 <__aeabi_dmul>
 80038da:	0002      	movs	r2, r0
 80038dc:	000b      	movs	r3, r1
 80038de:	4849      	ldr	r0, [pc, #292]	; (8003a04 <__ieee754_pow+0x3b4>)
 80038e0:	4949      	ldr	r1, [pc, #292]	; (8003a08 <__ieee754_pow+0x3b8>)
 80038e2:	f7fd fe91 	bl	8001608 <__aeabi_dsub>
 80038e6:	0032      	movs	r2, r6
 80038e8:	003b      	movs	r3, r7
 80038ea:	f7fd fc1b 	bl	8001124 <__aeabi_dmul>
 80038ee:	0002      	movs	r2, r0
 80038f0:	000b      	movs	r3, r1
 80038f2:	2000      	movs	r0, #0
 80038f4:	4945      	ldr	r1, [pc, #276]	; (8003a0c <__ieee754_pow+0x3bc>)
 80038f6:	f7fd fe87 	bl	8001608 <__aeabi_dsub>
 80038fa:	0032      	movs	r2, r6
 80038fc:	0004      	movs	r4, r0
 80038fe:	000d      	movs	r5, r1
 8003900:	003b      	movs	r3, r7
 8003902:	0030      	movs	r0, r6
 8003904:	0039      	movs	r1, r7
 8003906:	f7fd fc0d 	bl	8001124 <__aeabi_dmul>
 800390a:	0002      	movs	r2, r0
 800390c:	000b      	movs	r3, r1
 800390e:	0020      	movs	r0, r4
 8003910:	0029      	movs	r1, r5
 8003912:	f7fd fc07 	bl	8001124 <__aeabi_dmul>
 8003916:	4a3e      	ldr	r2, [pc, #248]	; (8003a10 <__ieee754_pow+0x3c0>)
 8003918:	4b36      	ldr	r3, [pc, #216]	; (80039f4 <__ieee754_pow+0x3a4>)
 800391a:	f7fd fc03 	bl	8001124 <__aeabi_dmul>
 800391e:	0002      	movs	r2, r0
 8003920:	000b      	movs	r3, r1
 8003922:	9804      	ldr	r0, [sp, #16]
 8003924:	9905      	ldr	r1, [sp, #20]
 8003926:	f7fd fe6f 	bl	8001608 <__aeabi_dsub>
 800392a:	0002      	movs	r2, r0
 800392c:	000b      	movs	r3, r1
 800392e:	0004      	movs	r4, r0
 8003930:	000d      	movs	r5, r1
 8003932:	9800      	ldr	r0, [sp, #0]
 8003934:	9901      	ldr	r1, [sp, #4]
 8003936:	f7fc fccf 	bl	80002d8 <__aeabi_dadd>
 800393a:	9a00      	ldr	r2, [sp, #0]
 800393c:	9b01      	ldr	r3, [sp, #4]
 800393e:	2000      	movs	r0, #0
 8003940:	9004      	str	r0, [sp, #16]
 8003942:	9105      	str	r1, [sp, #20]
 8003944:	f7fd fe60 	bl	8001608 <__aeabi_dsub>
 8003948:	0002      	movs	r2, r0
 800394a:	000b      	movs	r3, r1
 800394c:	0020      	movs	r0, r4
 800394e:	0029      	movs	r1, r5
 8003950:	f7fd fe5a 	bl	8001608 <__aeabi_dsub>
 8003954:	9b06      	ldr	r3, [sp, #24]
 8003956:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8003958:	3b01      	subs	r3, #1
 800395a:	0006      	movs	r6, r0
 800395c:	000f      	movs	r7, r1
 800395e:	4313      	orrs	r3, r2
 8003960:	d000      	beq.n	8003964 <__ieee754_pow+0x314>
 8003962:	e1de      	b.n	8003d22 <__ieee754_pow+0x6d2>
 8003964:	2300      	movs	r3, #0
 8003966:	4c2b      	ldr	r4, [pc, #172]	; (8003a14 <__ieee754_pow+0x3c4>)
 8003968:	9300      	str	r3, [sp, #0]
 800396a:	9401      	str	r4, [sp, #4]
 800396c:	9c02      	ldr	r4, [sp, #8]
 800396e:	9d03      	ldr	r5, [sp, #12]
 8003970:	9802      	ldr	r0, [sp, #8]
 8003972:	9903      	ldr	r1, [sp, #12]
 8003974:	2400      	movs	r4, #0
 8003976:	002b      	movs	r3, r5
 8003978:	0022      	movs	r2, r4
 800397a:	f7fd fe45 	bl	8001608 <__aeabi_dsub>
 800397e:	9a04      	ldr	r2, [sp, #16]
 8003980:	9b05      	ldr	r3, [sp, #20]
 8003982:	f7fd fbcf 	bl	8001124 <__aeabi_dmul>
 8003986:	9a02      	ldr	r2, [sp, #8]
 8003988:	9b03      	ldr	r3, [sp, #12]
 800398a:	9006      	str	r0, [sp, #24]
 800398c:	9107      	str	r1, [sp, #28]
 800398e:	0030      	movs	r0, r6
 8003990:	0039      	movs	r1, r7
 8003992:	f7fd fbc7 	bl	8001124 <__aeabi_dmul>
 8003996:	0002      	movs	r2, r0
 8003998:	000b      	movs	r3, r1
 800399a:	9806      	ldr	r0, [sp, #24]
 800399c:	9907      	ldr	r1, [sp, #28]
 800399e:	f7fc fc9b 	bl	80002d8 <__aeabi_dadd>
 80039a2:	0022      	movs	r2, r4
 80039a4:	002b      	movs	r3, r5
 80039a6:	9006      	str	r0, [sp, #24]
 80039a8:	9107      	str	r1, [sp, #28]
 80039aa:	9804      	ldr	r0, [sp, #16]
 80039ac:	9905      	ldr	r1, [sp, #20]
 80039ae:	f7fd fbb9 	bl	8001124 <__aeabi_dmul>
 80039b2:	0006      	movs	r6, r0
 80039b4:	000f      	movs	r7, r1
 80039b6:	000b      	movs	r3, r1
 80039b8:	0002      	movs	r2, r0
 80039ba:	9806      	ldr	r0, [sp, #24]
 80039bc:	9907      	ldr	r1, [sp, #28]
 80039be:	9604      	str	r6, [sp, #16]
 80039c0:	9705      	str	r7, [sp, #20]
 80039c2:	f7fc fc89 	bl	80002d8 <__aeabi_dadd>
 80039c6:	4b14      	ldr	r3, [pc, #80]	; (8003a18 <__ieee754_pow+0x3c8>)
 80039c8:	0005      	movs	r5, r0
 80039ca:	000c      	movs	r4, r1
 80039cc:	9108      	str	r1, [sp, #32]
 80039ce:	4299      	cmp	r1, r3
 80039d0:	dc00      	bgt.n	80039d4 <__ieee754_pow+0x384>
 80039d2:	e2d8      	b.n	8003f86 <__ieee754_pow+0x936>
 80039d4:	4b11      	ldr	r3, [pc, #68]	; (8003a1c <__ieee754_pow+0x3cc>)
 80039d6:	18cb      	adds	r3, r1, r3
 80039d8:	4303      	orrs	r3, r0
 80039da:	d100      	bne.n	80039de <__ieee754_pow+0x38e>
 80039dc:	e1da      	b.n	8003d94 <__ieee754_pow+0x744>
 80039de:	9800      	ldr	r0, [sp, #0]
 80039e0:	9901      	ldr	r1, [sp, #4]
 80039e2:	4a0f      	ldr	r2, [pc, #60]	; (8003a20 <__ieee754_pow+0x3d0>)
 80039e4:	4b0f      	ldr	r3, [pc, #60]	; (8003a24 <__ieee754_pow+0x3d4>)
 80039e6:	f7fd fb9d 	bl	8001124 <__aeabi_dmul>
 80039ea:	4a0d      	ldr	r2, [pc, #52]	; (8003a20 <__ieee754_pow+0x3d0>)
 80039ec:	4b0d      	ldr	r3, [pc, #52]	; (8003a24 <__ieee754_pow+0x3d4>)
 80039ee:	e6ce      	b.n	800378e <__ieee754_pow+0x13e>
 80039f0:	3ff00000 	.word	0x3ff00000
 80039f4:	3ff71547 	.word	0x3ff71547
 80039f8:	f85ddf44 	.word	0xf85ddf44
 80039fc:	3e54ae0b 	.word	0x3e54ae0b
 8003a00:	3fd00000 	.word	0x3fd00000
 8003a04:	55555555 	.word	0x55555555
 8003a08:	3fd55555 	.word	0x3fd55555
 8003a0c:	3fe00000 	.word	0x3fe00000
 8003a10:	652b82fe 	.word	0x652b82fe
 8003a14:	bff00000 	.word	0xbff00000
 8003a18:	408fffff 	.word	0x408fffff
 8003a1c:	bf700000 	.word	0xbf700000
 8003a20:	8800759c 	.word	0x8800759c
 8003a24:	7e37e43c 	.word	0x7e37e43c
 8003a28:	4bbf      	ldr	r3, [pc, #764]	; (8003d28 <__ieee754_pow+0x6d8>)
 8003a2a:	2200      	movs	r2, #0
 8003a2c:	429c      	cmp	r4, r3
 8003a2e:	dc0a      	bgt.n	8003a46 <__ieee754_pow+0x3f6>
 8003a30:	9800      	ldr	r0, [sp, #0]
 8003a32:	9901      	ldr	r1, [sp, #4]
 8003a34:	2200      	movs	r2, #0
 8003a36:	4bbd      	ldr	r3, [pc, #756]	; (8003d2c <__ieee754_pow+0x6dc>)
 8003a38:	f7fd fb74 	bl	8001124 <__aeabi_dmul>
 8003a3c:	2235      	movs	r2, #53	; 0x35
 8003a3e:	9000      	str	r0, [sp, #0]
 8003a40:	9101      	str	r1, [sp, #4]
 8003a42:	9c01      	ldr	r4, [sp, #4]
 8003a44:	4252      	negs	r2, r2
 8003a46:	49ba      	ldr	r1, [pc, #744]	; (8003d30 <__ieee754_pow+0x6e0>)
 8003a48:	1523      	asrs	r3, r4, #20
 8003a4a:	185b      	adds	r3, r3, r1
 8003a4c:	189b      	adds	r3, r3, r2
 8003a4e:	0324      	lsls	r4, r4, #12
 8003a50:	4db8      	ldr	r5, [pc, #736]	; (8003d34 <__ieee754_pow+0x6e4>)
 8003a52:	4ab9      	ldr	r2, [pc, #740]	; (8003d38 <__ieee754_pow+0x6e8>)
 8003a54:	930d      	str	r3, [sp, #52]	; 0x34
 8003a56:	0b23      	lsrs	r3, r4, #12
 8003a58:	431d      	orrs	r5, r3
 8003a5a:	2400      	movs	r4, #0
 8003a5c:	4293      	cmp	r3, r2
 8003a5e:	dd09      	ble.n	8003a74 <__ieee754_pow+0x424>
 8003a60:	4ab6      	ldr	r2, [pc, #728]	; (8003d3c <__ieee754_pow+0x6ec>)
 8003a62:	3401      	adds	r4, #1
 8003a64:	4293      	cmp	r3, r2
 8003a66:	dd05      	ble.n	8003a74 <__ieee754_pow+0x424>
 8003a68:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8003a6a:	191b      	adds	r3, r3, r4
 8003a6c:	2400      	movs	r4, #0
 8003a6e:	930d      	str	r3, [sp, #52]	; 0x34
 8003a70:	4bb3      	ldr	r3, [pc, #716]	; (8003d40 <__ieee754_pow+0x6f0>)
 8003a72:	18ed      	adds	r5, r5, r3
 8003a74:	9800      	ldr	r0, [sp, #0]
 8003a76:	9901      	ldr	r1, [sp, #4]
 8003a78:	0029      	movs	r1, r5
 8003a7a:	00e3      	lsls	r3, r4, #3
 8003a7c:	9311      	str	r3, [sp, #68]	; 0x44
 8003a7e:	4bb1      	ldr	r3, [pc, #708]	; (8003d44 <__ieee754_pow+0x6f4>)
 8003a80:	00e2      	lsls	r2, r4, #3
 8003a82:	189b      	adds	r3, r3, r2
 8003a84:	681a      	ldr	r2, [r3, #0]
 8003a86:	685b      	ldr	r3, [r3, #4]
 8003a88:	900e      	str	r0, [sp, #56]	; 0x38
 8003a8a:	910f      	str	r1, [sp, #60]	; 0x3c
 8003a8c:	920a      	str	r2, [sp, #40]	; 0x28
 8003a8e:	930b      	str	r3, [sp, #44]	; 0x2c
 8003a90:	f7fd fdba 	bl	8001608 <__aeabi_dsub>
 8003a94:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003a96:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003a98:	0006      	movs	r6, r0
 8003a9a:	000f      	movs	r7, r1
 8003a9c:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003a9e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003aa0:	f7fc fc1a 	bl	80002d8 <__aeabi_dadd>
 8003aa4:	0002      	movs	r2, r0
 8003aa6:	000b      	movs	r3, r1
 8003aa8:	2000      	movs	r0, #0
 8003aaa:	49a2      	ldr	r1, [pc, #648]	; (8003d34 <__ieee754_pow+0x6e4>)
 8003aac:	f7fc ff30 	bl	8000910 <__aeabi_ddiv>
 8003ab0:	9012      	str	r0, [sp, #72]	; 0x48
 8003ab2:	9113      	str	r1, [sp, #76]	; 0x4c
 8003ab4:	0002      	movs	r2, r0
 8003ab6:	000b      	movs	r3, r1
 8003ab8:	0030      	movs	r0, r6
 8003aba:	0039      	movs	r1, r7
 8003abc:	f7fd fb32 	bl	8001124 <__aeabi_dmul>
 8003ac0:	9008      	str	r0, [sp, #32]
 8003ac2:	9109      	str	r1, [sp, #36]	; 0x24
 8003ac4:	9a08      	ldr	r2, [sp, #32]
 8003ac6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003ac8:	2180      	movs	r1, #128	; 0x80
 8003aca:	9204      	str	r2, [sp, #16]
 8003acc:	9305      	str	r3, [sp, #20]
 8003ace:	2300      	movs	r3, #0
 8003ad0:	0589      	lsls	r1, r1, #22
 8003ad2:	106d      	asrs	r5, r5, #1
 8003ad4:	430d      	orrs	r5, r1
 8003ad6:	2180      	movs	r1, #128	; 0x80
 8003ad8:	9304      	str	r3, [sp, #16]
 8003ada:	9a04      	ldr	r2, [sp, #16]
 8003adc:	9b05      	ldr	r3, [sp, #20]
 8003ade:	9200      	str	r2, [sp, #0]
 8003ae0:	9301      	str	r3, [sp, #4]
 8003ae2:	2200      	movs	r2, #0
 8003ae4:	0309      	lsls	r1, r1, #12
 8003ae6:	186d      	adds	r5, r5, r1
 8003ae8:	04a4      	lsls	r4, r4, #18
 8003aea:	192b      	adds	r3, r5, r4
 8003aec:	9800      	ldr	r0, [sp, #0]
 8003aee:	9901      	ldr	r1, [sp, #4]
 8003af0:	0014      	movs	r4, r2
 8003af2:	001d      	movs	r5, r3
 8003af4:	f7fd fb16 	bl	8001124 <__aeabi_dmul>
 8003af8:	0002      	movs	r2, r0
 8003afa:	000b      	movs	r3, r1
 8003afc:	0030      	movs	r0, r6
 8003afe:	0039      	movs	r1, r7
 8003b00:	f7fd fd82 	bl	8001608 <__aeabi_dsub>
 8003b04:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003b06:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003b08:	0006      	movs	r6, r0
 8003b0a:	000f      	movs	r7, r1
 8003b0c:	0020      	movs	r0, r4
 8003b0e:	0029      	movs	r1, r5
 8003b10:	f7fd fd7a 	bl	8001608 <__aeabi_dsub>
 8003b14:	0002      	movs	r2, r0
 8003b16:	000b      	movs	r3, r1
 8003b18:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003b1a:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003b1c:	f7fd fd74 	bl	8001608 <__aeabi_dsub>
 8003b20:	9a00      	ldr	r2, [sp, #0]
 8003b22:	9b01      	ldr	r3, [sp, #4]
 8003b24:	f7fd fafe 	bl	8001124 <__aeabi_dmul>
 8003b28:	0002      	movs	r2, r0
 8003b2a:	000b      	movs	r3, r1
 8003b2c:	0030      	movs	r0, r6
 8003b2e:	0039      	movs	r1, r7
 8003b30:	f7fd fd6a 	bl	8001608 <__aeabi_dsub>
 8003b34:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8003b36:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8003b38:	f7fd faf4 	bl	8001124 <__aeabi_dmul>
 8003b3c:	9a08      	ldr	r2, [sp, #32]
 8003b3e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003b40:	900a      	str	r0, [sp, #40]	; 0x28
 8003b42:	910b      	str	r1, [sp, #44]	; 0x2c
 8003b44:	0010      	movs	r0, r2
 8003b46:	0019      	movs	r1, r3
 8003b48:	f7fd faec 	bl	8001124 <__aeabi_dmul>
 8003b4c:	0006      	movs	r6, r0
 8003b4e:	000f      	movs	r7, r1
 8003b50:	4a7d      	ldr	r2, [pc, #500]	; (8003d48 <__ieee754_pow+0x6f8>)
 8003b52:	4b7e      	ldr	r3, [pc, #504]	; (8003d4c <__ieee754_pow+0x6fc>)
 8003b54:	f7fd fae6 	bl	8001124 <__aeabi_dmul>
 8003b58:	4a7d      	ldr	r2, [pc, #500]	; (8003d50 <__ieee754_pow+0x700>)
 8003b5a:	4b7e      	ldr	r3, [pc, #504]	; (8003d54 <__ieee754_pow+0x704>)
 8003b5c:	f7fc fbbc 	bl	80002d8 <__aeabi_dadd>
 8003b60:	0032      	movs	r2, r6
 8003b62:	003b      	movs	r3, r7
 8003b64:	f7fd fade 	bl	8001124 <__aeabi_dmul>
 8003b68:	4a7b      	ldr	r2, [pc, #492]	; (8003d58 <__ieee754_pow+0x708>)
 8003b6a:	4b7c      	ldr	r3, [pc, #496]	; (8003d5c <__ieee754_pow+0x70c>)
 8003b6c:	f7fc fbb4 	bl	80002d8 <__aeabi_dadd>
 8003b70:	0032      	movs	r2, r6
 8003b72:	003b      	movs	r3, r7
 8003b74:	f7fd fad6 	bl	8001124 <__aeabi_dmul>
 8003b78:	4a79      	ldr	r2, [pc, #484]	; (8003d60 <__ieee754_pow+0x710>)
 8003b7a:	4b7a      	ldr	r3, [pc, #488]	; (8003d64 <__ieee754_pow+0x714>)
 8003b7c:	f7fc fbac 	bl	80002d8 <__aeabi_dadd>
 8003b80:	0032      	movs	r2, r6
 8003b82:	003b      	movs	r3, r7
 8003b84:	f7fd face 	bl	8001124 <__aeabi_dmul>
 8003b88:	4a77      	ldr	r2, [pc, #476]	; (8003d68 <__ieee754_pow+0x718>)
 8003b8a:	4b78      	ldr	r3, [pc, #480]	; (8003d6c <__ieee754_pow+0x71c>)
 8003b8c:	f7fc fba4 	bl	80002d8 <__aeabi_dadd>
 8003b90:	0032      	movs	r2, r6
 8003b92:	003b      	movs	r3, r7
 8003b94:	f7fd fac6 	bl	8001124 <__aeabi_dmul>
 8003b98:	4a75      	ldr	r2, [pc, #468]	; (8003d70 <__ieee754_pow+0x720>)
 8003b9a:	4b76      	ldr	r3, [pc, #472]	; (8003d74 <__ieee754_pow+0x724>)
 8003b9c:	f7fc fb9c 	bl	80002d8 <__aeabi_dadd>
 8003ba0:	0032      	movs	r2, r6
 8003ba2:	0004      	movs	r4, r0
 8003ba4:	000d      	movs	r5, r1
 8003ba6:	003b      	movs	r3, r7
 8003ba8:	0030      	movs	r0, r6
 8003baa:	0039      	movs	r1, r7
 8003bac:	f7fd faba 	bl	8001124 <__aeabi_dmul>
 8003bb0:	0002      	movs	r2, r0
 8003bb2:	000b      	movs	r3, r1
 8003bb4:	0020      	movs	r0, r4
 8003bb6:	0029      	movs	r1, r5
 8003bb8:	f7fd fab4 	bl	8001124 <__aeabi_dmul>
 8003bbc:	9a00      	ldr	r2, [sp, #0]
 8003bbe:	9b01      	ldr	r3, [sp, #4]
 8003bc0:	0004      	movs	r4, r0
 8003bc2:	000d      	movs	r5, r1
 8003bc4:	9808      	ldr	r0, [sp, #32]
 8003bc6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003bc8:	f7fc fb86 	bl	80002d8 <__aeabi_dadd>
 8003bcc:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8003bce:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8003bd0:	f7fd faa8 	bl	8001124 <__aeabi_dmul>
 8003bd4:	0022      	movs	r2, r4
 8003bd6:	002b      	movs	r3, r5
 8003bd8:	f7fc fb7e 	bl	80002d8 <__aeabi_dadd>
 8003bdc:	9a00      	ldr	r2, [sp, #0]
 8003bde:	9b01      	ldr	r3, [sp, #4]
 8003be0:	900e      	str	r0, [sp, #56]	; 0x38
 8003be2:	910f      	str	r1, [sp, #60]	; 0x3c
 8003be4:	0010      	movs	r0, r2
 8003be6:	0019      	movs	r1, r3
 8003be8:	f7fd fa9c 	bl	8001124 <__aeabi_dmul>
 8003bec:	2200      	movs	r2, #0
 8003bee:	4b62      	ldr	r3, [pc, #392]	; (8003d78 <__ieee754_pow+0x728>)
 8003bf0:	0004      	movs	r4, r0
 8003bf2:	000d      	movs	r5, r1
 8003bf4:	f7fc fb70 	bl	80002d8 <__aeabi_dadd>
 8003bf8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8003bfa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8003bfc:	f7fc fb6c 	bl	80002d8 <__aeabi_dadd>
 8003c00:	9e04      	ldr	r6, [sp, #16]
 8003c02:	000f      	movs	r7, r1
 8003c04:	0032      	movs	r2, r6
 8003c06:	000b      	movs	r3, r1
 8003c08:	9800      	ldr	r0, [sp, #0]
 8003c0a:	9901      	ldr	r1, [sp, #4]
 8003c0c:	f7fd fa8a 	bl	8001124 <__aeabi_dmul>
 8003c10:	2200      	movs	r2, #0
 8003c12:	9000      	str	r0, [sp, #0]
 8003c14:	9101      	str	r1, [sp, #4]
 8003c16:	4b58      	ldr	r3, [pc, #352]	; (8003d78 <__ieee754_pow+0x728>)
 8003c18:	0030      	movs	r0, r6
 8003c1a:	0039      	movs	r1, r7
 8003c1c:	f7fd fcf4 	bl	8001608 <__aeabi_dsub>
 8003c20:	0022      	movs	r2, r4
 8003c22:	002b      	movs	r3, r5
 8003c24:	f7fd fcf0 	bl	8001608 <__aeabi_dsub>
 8003c28:	0002      	movs	r2, r0
 8003c2a:	000b      	movs	r3, r1
 8003c2c:	980e      	ldr	r0, [sp, #56]	; 0x38
 8003c2e:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8003c30:	f7fd fcea 	bl	8001608 <__aeabi_dsub>
 8003c34:	9a08      	ldr	r2, [sp, #32]
 8003c36:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003c38:	f7fd fa74 	bl	8001124 <__aeabi_dmul>
 8003c3c:	0032      	movs	r2, r6
 8003c3e:	0004      	movs	r4, r0
 8003c40:	000d      	movs	r5, r1
 8003c42:	980a      	ldr	r0, [sp, #40]	; 0x28
 8003c44:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8003c46:	003b      	movs	r3, r7
 8003c48:	f7fd fa6c 	bl	8001124 <__aeabi_dmul>
 8003c4c:	0002      	movs	r2, r0
 8003c4e:	000b      	movs	r3, r1
 8003c50:	0020      	movs	r0, r4
 8003c52:	0029      	movs	r1, r5
 8003c54:	f7fc fb40 	bl	80002d8 <__aeabi_dadd>
 8003c58:	0004      	movs	r4, r0
 8003c5a:	000d      	movs	r5, r1
 8003c5c:	0002      	movs	r2, r0
 8003c5e:	000b      	movs	r3, r1
 8003c60:	9800      	ldr	r0, [sp, #0]
 8003c62:	9901      	ldr	r1, [sp, #4]
 8003c64:	f7fc fb38 	bl	80002d8 <__aeabi_dadd>
 8003c68:	22e0      	movs	r2, #224	; 0xe0
 8003c6a:	9e04      	ldr	r6, [sp, #16]
 8003c6c:	0612      	lsls	r2, r2, #24
 8003c6e:	4b43      	ldr	r3, [pc, #268]	; (8003d7c <__ieee754_pow+0x72c>)
 8003c70:	0030      	movs	r0, r6
 8003c72:	000f      	movs	r7, r1
 8003c74:	f7fd fa56 	bl	8001124 <__aeabi_dmul>
 8003c78:	9008      	str	r0, [sp, #32]
 8003c7a:	9109      	str	r1, [sp, #36]	; 0x24
 8003c7c:	9a00      	ldr	r2, [sp, #0]
 8003c7e:	9b01      	ldr	r3, [sp, #4]
 8003c80:	0030      	movs	r0, r6
 8003c82:	0039      	movs	r1, r7
 8003c84:	f7fd fcc0 	bl	8001608 <__aeabi_dsub>
 8003c88:	0002      	movs	r2, r0
 8003c8a:	000b      	movs	r3, r1
 8003c8c:	0020      	movs	r0, r4
 8003c8e:	0029      	movs	r1, r5
 8003c90:	f7fd fcba 	bl	8001608 <__aeabi_dsub>
 8003c94:	4a3a      	ldr	r2, [pc, #232]	; (8003d80 <__ieee754_pow+0x730>)
 8003c96:	4b39      	ldr	r3, [pc, #228]	; (8003d7c <__ieee754_pow+0x72c>)
 8003c98:	f7fd fa44 	bl	8001124 <__aeabi_dmul>
 8003c9c:	4a39      	ldr	r2, [pc, #228]	; (8003d84 <__ieee754_pow+0x734>)
 8003c9e:	0004      	movs	r4, r0
 8003ca0:	000d      	movs	r5, r1
 8003ca2:	4b39      	ldr	r3, [pc, #228]	; (8003d88 <__ieee754_pow+0x738>)
 8003ca4:	0030      	movs	r0, r6
 8003ca6:	0039      	movs	r1, r7
 8003ca8:	f7fd fa3c 	bl	8001124 <__aeabi_dmul>
 8003cac:	0002      	movs	r2, r0
 8003cae:	000b      	movs	r3, r1
 8003cb0:	0020      	movs	r0, r4
 8003cb2:	0029      	movs	r1, r5
 8003cb4:	f7fc fb10 	bl	80002d8 <__aeabi_dadd>
 8003cb8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8003cba:	4b34      	ldr	r3, [pc, #208]	; (8003d8c <__ieee754_pow+0x73c>)
 8003cbc:	189b      	adds	r3, r3, r2
 8003cbe:	681a      	ldr	r2, [r3, #0]
 8003cc0:	685b      	ldr	r3, [r3, #4]
 8003cc2:	f7fc fb09 	bl	80002d8 <__aeabi_dadd>
 8003cc6:	9000      	str	r0, [sp, #0]
 8003cc8:	9101      	str	r1, [sp, #4]
 8003cca:	980d      	ldr	r0, [sp, #52]	; 0x34
 8003ccc:	f7fe f836 	bl	8001d3c <__aeabi_i2d>
 8003cd0:	0004      	movs	r4, r0
 8003cd2:	000d      	movs	r5, r1
 8003cd4:	9808      	ldr	r0, [sp, #32]
 8003cd6:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003cd8:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8003cda:	4b2d      	ldr	r3, [pc, #180]	; (8003d90 <__ieee754_pow+0x740>)
 8003cdc:	189b      	adds	r3, r3, r2
 8003cde:	681e      	ldr	r6, [r3, #0]
 8003ce0:	685f      	ldr	r7, [r3, #4]
 8003ce2:	9a00      	ldr	r2, [sp, #0]
 8003ce4:	9b01      	ldr	r3, [sp, #4]
 8003ce6:	f7fc faf7 	bl	80002d8 <__aeabi_dadd>
 8003cea:	0032      	movs	r2, r6
 8003cec:	003b      	movs	r3, r7
 8003cee:	f7fc faf3 	bl	80002d8 <__aeabi_dadd>
 8003cf2:	0022      	movs	r2, r4
 8003cf4:	002b      	movs	r3, r5
 8003cf6:	f7fc faef 	bl	80002d8 <__aeabi_dadd>
 8003cfa:	9804      	ldr	r0, [sp, #16]
 8003cfc:	0022      	movs	r2, r4
 8003cfe:	002b      	movs	r3, r5
 8003d00:	9004      	str	r0, [sp, #16]
 8003d02:	9105      	str	r1, [sp, #20]
 8003d04:	f7fd fc80 	bl	8001608 <__aeabi_dsub>
 8003d08:	0032      	movs	r2, r6
 8003d0a:	003b      	movs	r3, r7
 8003d0c:	f7fd fc7c 	bl	8001608 <__aeabi_dsub>
 8003d10:	9a08      	ldr	r2, [sp, #32]
 8003d12:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003d14:	f7fd fc78 	bl	8001608 <__aeabi_dsub>
 8003d18:	0002      	movs	r2, r0
 8003d1a:	000b      	movs	r3, r1
 8003d1c:	9800      	ldr	r0, [sp, #0]
 8003d1e:	9901      	ldr	r1, [sp, #4]
 8003d20:	e616      	b.n	8003950 <__ieee754_pow+0x300>
 8003d22:	2300      	movs	r3, #0
 8003d24:	4c03      	ldr	r4, [pc, #12]	; (8003d34 <__ieee754_pow+0x6e4>)
 8003d26:	e61f      	b.n	8003968 <__ieee754_pow+0x318>
 8003d28:	000fffff 	.word	0x000fffff
 8003d2c:	43400000 	.word	0x43400000
 8003d30:	fffffc01 	.word	0xfffffc01
 8003d34:	3ff00000 	.word	0x3ff00000
 8003d38:	0003988e 	.word	0x0003988e
 8003d3c:	000bb679 	.word	0x000bb679
 8003d40:	fff00000 	.word	0xfff00000
 8003d44:	080044d0 	.word	0x080044d0
 8003d48:	4a454eef 	.word	0x4a454eef
 8003d4c:	3fca7e28 	.word	0x3fca7e28
 8003d50:	93c9db65 	.word	0x93c9db65
 8003d54:	3fcd864a 	.word	0x3fcd864a
 8003d58:	a91d4101 	.word	0xa91d4101
 8003d5c:	3fd17460 	.word	0x3fd17460
 8003d60:	518f264d 	.word	0x518f264d
 8003d64:	3fd55555 	.word	0x3fd55555
 8003d68:	db6fabff 	.word	0xdb6fabff
 8003d6c:	3fdb6db6 	.word	0x3fdb6db6
 8003d70:	33333303 	.word	0x33333303
 8003d74:	3fe33333 	.word	0x3fe33333
 8003d78:	40080000 	.word	0x40080000
 8003d7c:	3feec709 	.word	0x3feec709
 8003d80:	dc3a03fd 	.word	0xdc3a03fd
 8003d84:	145b01f5 	.word	0x145b01f5
 8003d88:	be3e2fe0 	.word	0xbe3e2fe0
 8003d8c:	080044f0 	.word	0x080044f0
 8003d90:	080044e0 	.word	0x080044e0
 8003d94:	4a8f      	ldr	r2, [pc, #572]	; (8003fd4 <__ieee754_pow+0x984>)
 8003d96:	4b90      	ldr	r3, [pc, #576]	; (8003fd8 <__ieee754_pow+0x988>)
 8003d98:	9806      	ldr	r0, [sp, #24]
 8003d9a:	9907      	ldr	r1, [sp, #28]
 8003d9c:	f7fc fa9c 	bl	80002d8 <__aeabi_dadd>
 8003da0:	0032      	movs	r2, r6
 8003da2:	9002      	str	r0, [sp, #8]
 8003da4:	9103      	str	r1, [sp, #12]
 8003da6:	003b      	movs	r3, r7
 8003da8:	0028      	movs	r0, r5
 8003daa:	0021      	movs	r1, r4
 8003dac:	f7fd fc2c 	bl	8001608 <__aeabi_dsub>
 8003db0:	0002      	movs	r2, r0
 8003db2:	000b      	movs	r3, r1
 8003db4:	9802      	ldr	r0, [sp, #8]
 8003db6:	9903      	ldr	r1, [sp, #12]
 8003db8:	f7fc fa5c 	bl	8000274 <__aeabi_dcmpgt>
 8003dbc:	2800      	cmp	r0, #0
 8003dbe:	d000      	beq.n	8003dc2 <__ieee754_pow+0x772>
 8003dc0:	e60d      	b.n	80039de <__ieee754_pow+0x38e>
 8003dc2:	2100      	movs	r1, #0
 8003dc4:	4a85      	ldr	r2, [pc, #532]	; (8003fdc <__ieee754_pow+0x98c>)
 8003dc6:	0063      	lsls	r3, r4, #1
 8003dc8:	085b      	lsrs	r3, r3, #1
 8003dca:	9102      	str	r1, [sp, #8]
 8003dcc:	4293      	cmp	r3, r2
 8003dce:	dd25      	ble.n	8003e1c <__ieee754_pow+0x7cc>
 8003dd0:	4a83      	ldr	r2, [pc, #524]	; (8003fe0 <__ieee754_pow+0x990>)
 8003dd2:	151b      	asrs	r3, r3, #20
 8003dd4:	189b      	adds	r3, r3, r2
 8003dd6:	2280      	movs	r2, #128	; 0x80
 8003dd8:	0352      	lsls	r2, r2, #13
 8003dda:	4694      	mov	ip, r2
 8003ddc:	411a      	asrs	r2, r3
 8003dde:	1914      	adds	r4, r2, r4
 8003de0:	0060      	lsls	r0, r4, #1
 8003de2:	4b80      	ldr	r3, [pc, #512]	; (8003fe4 <__ieee754_pow+0x994>)
 8003de4:	0d40      	lsrs	r0, r0, #21
 8003de6:	4d80      	ldr	r5, [pc, #512]	; (8003fe8 <__ieee754_pow+0x998>)
 8003de8:	18c0      	adds	r0, r0, r3
 8003dea:	4105      	asrs	r5, r0
 8003dec:	0021      	movs	r1, r4
 8003dee:	43a9      	bics	r1, r5
 8003df0:	000b      	movs	r3, r1
 8003df2:	4661      	mov	r1, ip
 8003df4:	0324      	lsls	r4, r4, #12
 8003df6:	0b24      	lsrs	r4, r4, #12
 8003df8:	4321      	orrs	r1, r4
 8003dfa:	2414      	movs	r4, #20
 8003dfc:	1a20      	subs	r0, r4, r0
 8003dfe:	4101      	asrs	r1, r0
 8003e00:	9102      	str	r1, [sp, #8]
 8003e02:	9908      	ldr	r1, [sp, #32]
 8003e04:	2200      	movs	r2, #0
 8003e06:	2900      	cmp	r1, #0
 8003e08:	da02      	bge.n	8003e10 <__ieee754_pow+0x7c0>
 8003e0a:	9902      	ldr	r1, [sp, #8]
 8003e0c:	4249      	negs	r1, r1
 8003e0e:	9102      	str	r1, [sp, #8]
 8003e10:	0030      	movs	r0, r6
 8003e12:	0039      	movs	r1, r7
 8003e14:	f7fd fbf8 	bl	8001608 <__aeabi_dsub>
 8003e18:	9004      	str	r0, [sp, #16]
 8003e1a:	9105      	str	r1, [sp, #20]
 8003e1c:	9a06      	ldr	r2, [sp, #24]
 8003e1e:	9b07      	ldr	r3, [sp, #28]
 8003e20:	9804      	ldr	r0, [sp, #16]
 8003e22:	9905      	ldr	r1, [sp, #20]
 8003e24:	2600      	movs	r6, #0
 8003e26:	f7fc fa57 	bl	80002d8 <__aeabi_dadd>
 8003e2a:	2200      	movs	r2, #0
 8003e2c:	4b6f      	ldr	r3, [pc, #444]	; (8003fec <__ieee754_pow+0x99c>)
 8003e2e:	0030      	movs	r0, r6
 8003e30:	000f      	movs	r7, r1
 8003e32:	f7fd f977 	bl	8001124 <__aeabi_dmul>
 8003e36:	9a04      	ldr	r2, [sp, #16]
 8003e38:	9b05      	ldr	r3, [sp, #20]
 8003e3a:	9008      	str	r0, [sp, #32]
 8003e3c:	9109      	str	r1, [sp, #36]	; 0x24
 8003e3e:	0030      	movs	r0, r6
 8003e40:	0039      	movs	r1, r7
 8003e42:	f7fd fbe1 	bl	8001608 <__aeabi_dsub>
 8003e46:	0002      	movs	r2, r0
 8003e48:	000b      	movs	r3, r1
 8003e4a:	9806      	ldr	r0, [sp, #24]
 8003e4c:	9907      	ldr	r1, [sp, #28]
 8003e4e:	f7fd fbdb 	bl	8001608 <__aeabi_dsub>
 8003e52:	4a67      	ldr	r2, [pc, #412]	; (8003ff0 <__ieee754_pow+0x9a0>)
 8003e54:	4b67      	ldr	r3, [pc, #412]	; (8003ff4 <__ieee754_pow+0x9a4>)
 8003e56:	f7fd f965 	bl	8001124 <__aeabi_dmul>
 8003e5a:	4a67      	ldr	r2, [pc, #412]	; (8003ff8 <__ieee754_pow+0x9a8>)
 8003e5c:	0004      	movs	r4, r0
 8003e5e:	000d      	movs	r5, r1
 8003e60:	4b66      	ldr	r3, [pc, #408]	; (8003ffc <__ieee754_pow+0x9ac>)
 8003e62:	0030      	movs	r0, r6
 8003e64:	0039      	movs	r1, r7
 8003e66:	f7fd f95d 	bl	8001124 <__aeabi_dmul>
 8003e6a:	0002      	movs	r2, r0
 8003e6c:	000b      	movs	r3, r1
 8003e6e:	0020      	movs	r0, r4
 8003e70:	0029      	movs	r1, r5
 8003e72:	f7fc fa31 	bl	80002d8 <__aeabi_dadd>
 8003e76:	0004      	movs	r4, r0
 8003e78:	000d      	movs	r5, r1
 8003e7a:	0002      	movs	r2, r0
 8003e7c:	000b      	movs	r3, r1
 8003e7e:	9808      	ldr	r0, [sp, #32]
 8003e80:	9909      	ldr	r1, [sp, #36]	; 0x24
 8003e82:	f7fc fa29 	bl	80002d8 <__aeabi_dadd>
 8003e86:	9a08      	ldr	r2, [sp, #32]
 8003e88:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8003e8a:	0006      	movs	r6, r0
 8003e8c:	000f      	movs	r7, r1
 8003e8e:	f7fd fbbb 	bl	8001608 <__aeabi_dsub>
 8003e92:	0002      	movs	r2, r0
 8003e94:	000b      	movs	r3, r1
 8003e96:	0020      	movs	r0, r4
 8003e98:	0029      	movs	r1, r5
 8003e9a:	f7fd fbb5 	bl	8001608 <__aeabi_dsub>
 8003e9e:	0032      	movs	r2, r6
 8003ea0:	9004      	str	r0, [sp, #16]
 8003ea2:	9105      	str	r1, [sp, #20]
 8003ea4:	003b      	movs	r3, r7
 8003ea6:	0030      	movs	r0, r6
 8003ea8:	0039      	movs	r1, r7
 8003eaa:	f7fd f93b 	bl	8001124 <__aeabi_dmul>
 8003eae:	0004      	movs	r4, r0
 8003eb0:	000d      	movs	r5, r1
 8003eb2:	4a53      	ldr	r2, [pc, #332]	; (8004000 <__ieee754_pow+0x9b0>)
 8003eb4:	4b53      	ldr	r3, [pc, #332]	; (8004004 <__ieee754_pow+0x9b4>)
 8003eb6:	f7fd f935 	bl	8001124 <__aeabi_dmul>
 8003eba:	4a53      	ldr	r2, [pc, #332]	; (8004008 <__ieee754_pow+0x9b8>)
 8003ebc:	4b53      	ldr	r3, [pc, #332]	; (800400c <__ieee754_pow+0x9bc>)
 8003ebe:	f7fd fba3 	bl	8001608 <__aeabi_dsub>
 8003ec2:	0022      	movs	r2, r4
 8003ec4:	002b      	movs	r3, r5
 8003ec6:	f7fd f92d 	bl	8001124 <__aeabi_dmul>
 8003eca:	4a51      	ldr	r2, [pc, #324]	; (8004010 <__ieee754_pow+0x9c0>)
 8003ecc:	4b51      	ldr	r3, [pc, #324]	; (8004014 <__ieee754_pow+0x9c4>)
 8003ece:	f7fc fa03 	bl	80002d8 <__aeabi_dadd>
 8003ed2:	0022      	movs	r2, r4
 8003ed4:	002b      	movs	r3, r5
 8003ed6:	f7fd f925 	bl	8001124 <__aeabi_dmul>
 8003eda:	4a4f      	ldr	r2, [pc, #316]	; (8004018 <__ieee754_pow+0x9c8>)
 8003edc:	4b4f      	ldr	r3, [pc, #316]	; (800401c <__ieee754_pow+0x9cc>)
 8003ede:	f7fd fb93 	bl	8001608 <__aeabi_dsub>
 8003ee2:	0022      	movs	r2, r4
 8003ee4:	002b      	movs	r3, r5
 8003ee6:	f7fd f91d 	bl	8001124 <__aeabi_dmul>
 8003eea:	4a4d      	ldr	r2, [pc, #308]	; (8004020 <__ieee754_pow+0x9d0>)
 8003eec:	4b4d      	ldr	r3, [pc, #308]	; (8004024 <__ieee754_pow+0x9d4>)
 8003eee:	f7fc f9f3 	bl	80002d8 <__aeabi_dadd>
 8003ef2:	0022      	movs	r2, r4
 8003ef4:	002b      	movs	r3, r5
 8003ef6:	f7fd f915 	bl	8001124 <__aeabi_dmul>
 8003efa:	0002      	movs	r2, r0
 8003efc:	000b      	movs	r3, r1
 8003efe:	0030      	movs	r0, r6
 8003f00:	0039      	movs	r1, r7
 8003f02:	f7fd fb81 	bl	8001608 <__aeabi_dsub>
 8003f06:	0004      	movs	r4, r0
 8003f08:	000d      	movs	r5, r1
 8003f0a:	0002      	movs	r2, r0
 8003f0c:	000b      	movs	r3, r1
 8003f0e:	0030      	movs	r0, r6
 8003f10:	0039      	movs	r1, r7
 8003f12:	f7fd f907 	bl	8001124 <__aeabi_dmul>
 8003f16:	2380      	movs	r3, #128	; 0x80
 8003f18:	9006      	str	r0, [sp, #24]
 8003f1a:	9107      	str	r1, [sp, #28]
 8003f1c:	2200      	movs	r2, #0
 8003f1e:	05db      	lsls	r3, r3, #23
 8003f20:	0020      	movs	r0, r4
 8003f22:	0029      	movs	r1, r5
 8003f24:	f7fd fb70 	bl	8001608 <__aeabi_dsub>
 8003f28:	0002      	movs	r2, r0
 8003f2a:	000b      	movs	r3, r1
 8003f2c:	9806      	ldr	r0, [sp, #24]
 8003f2e:	9907      	ldr	r1, [sp, #28]
 8003f30:	f7fc fcee 	bl	8000910 <__aeabi_ddiv>
 8003f34:	9a04      	ldr	r2, [sp, #16]
 8003f36:	9b05      	ldr	r3, [sp, #20]
 8003f38:	0004      	movs	r4, r0
 8003f3a:	000d      	movs	r5, r1
 8003f3c:	0030      	movs	r0, r6
 8003f3e:	0039      	movs	r1, r7
 8003f40:	f7fd f8f0 	bl	8001124 <__aeabi_dmul>
 8003f44:	9a04      	ldr	r2, [sp, #16]
 8003f46:	9b05      	ldr	r3, [sp, #20]
 8003f48:	f7fc f9c6 	bl	80002d8 <__aeabi_dadd>
 8003f4c:	0002      	movs	r2, r0
 8003f4e:	000b      	movs	r3, r1
 8003f50:	0020      	movs	r0, r4
 8003f52:	0029      	movs	r1, r5
 8003f54:	f7fd fb58 	bl	8001608 <__aeabi_dsub>
 8003f58:	0032      	movs	r2, r6
 8003f5a:	003b      	movs	r3, r7
 8003f5c:	f7fd fb54 	bl	8001608 <__aeabi_dsub>
 8003f60:	0002      	movs	r2, r0
 8003f62:	000b      	movs	r3, r1
 8003f64:	2000      	movs	r0, #0
 8003f66:	4930      	ldr	r1, [pc, #192]	; (8004028 <__ieee754_pow+0x9d8>)
 8003f68:	f7fd fb4e 	bl	8001608 <__aeabi_dsub>
 8003f6c:	9b02      	ldr	r3, [sp, #8]
 8003f6e:	051b      	lsls	r3, r3, #20
 8003f70:	185b      	adds	r3, r3, r1
 8003f72:	151a      	asrs	r2, r3, #20
 8003f74:	2a00      	cmp	r2, #0
 8003f76:	dc26      	bgt.n	8003fc6 <__ieee754_pow+0x976>
 8003f78:	9a02      	ldr	r2, [sp, #8]
 8003f7a:	f000 f9ad 	bl	80042d8 <scalbn>
 8003f7e:	9a00      	ldr	r2, [sp, #0]
 8003f80:	9b01      	ldr	r3, [sp, #4]
 8003f82:	f7ff fc04 	bl	800378e <__ieee754_pow+0x13e>
 8003f86:	4a29      	ldr	r2, [pc, #164]	; (800402c <__ieee754_pow+0x9dc>)
 8003f88:	004b      	lsls	r3, r1, #1
 8003f8a:	085b      	lsrs	r3, r3, #1
 8003f8c:	4293      	cmp	r3, r2
 8003f8e:	dc00      	bgt.n	8003f92 <__ieee754_pow+0x942>
 8003f90:	e717      	b.n	8003dc2 <__ieee754_pow+0x772>
 8003f92:	4b27      	ldr	r3, [pc, #156]	; (8004030 <__ieee754_pow+0x9e0>)
 8003f94:	18cb      	adds	r3, r1, r3
 8003f96:	4303      	orrs	r3, r0
 8003f98:	d009      	beq.n	8003fae <__ieee754_pow+0x95e>
 8003f9a:	9800      	ldr	r0, [sp, #0]
 8003f9c:	9901      	ldr	r1, [sp, #4]
 8003f9e:	4a25      	ldr	r2, [pc, #148]	; (8004034 <__ieee754_pow+0x9e4>)
 8003fa0:	4b25      	ldr	r3, [pc, #148]	; (8004038 <__ieee754_pow+0x9e8>)
 8003fa2:	f7fd f8bf 	bl	8001124 <__aeabi_dmul>
 8003fa6:	4a23      	ldr	r2, [pc, #140]	; (8004034 <__ieee754_pow+0x9e4>)
 8003fa8:	4b23      	ldr	r3, [pc, #140]	; (8004038 <__ieee754_pow+0x9e8>)
 8003faa:	f7ff fbf0 	bl	800378e <__ieee754_pow+0x13e>
 8003fae:	0032      	movs	r2, r6
 8003fb0:	003b      	movs	r3, r7
 8003fb2:	f7fd fb29 	bl	8001608 <__aeabi_dsub>
 8003fb6:	9a06      	ldr	r2, [sp, #24]
 8003fb8:	9b07      	ldr	r3, [sp, #28]
 8003fba:	f7fc f965 	bl	8000288 <__aeabi_dcmpge>
 8003fbe:	2800      	cmp	r0, #0
 8003fc0:	d100      	bne.n	8003fc4 <__ieee754_pow+0x974>
 8003fc2:	e6fe      	b.n	8003dc2 <__ieee754_pow+0x772>
 8003fc4:	e7e9      	b.n	8003f9a <__ieee754_pow+0x94a>
 8003fc6:	0019      	movs	r1, r3
 8003fc8:	e7d9      	b.n	8003f7e <__ieee754_pow+0x92e>
 8003fca:	2300      	movs	r3, #0
 8003fcc:	4c16      	ldr	r4, [pc, #88]	; (8004028 <__ieee754_pow+0x9d8>)
 8003fce:	f7ff fba1 	bl	8003714 <__ieee754_pow+0xc4>
 8003fd2:	46c0      	nop			; (mov r8, r8)
 8003fd4:	652b82fe 	.word	0x652b82fe
 8003fd8:	3c971547 	.word	0x3c971547
 8003fdc:	3fe00000 	.word	0x3fe00000
 8003fe0:	fffffc02 	.word	0xfffffc02
 8003fe4:	fffffc01 	.word	0xfffffc01
 8003fe8:	000fffff 	.word	0x000fffff
 8003fec:	3fe62e43 	.word	0x3fe62e43
 8003ff0:	fefa39ef 	.word	0xfefa39ef
 8003ff4:	3fe62e42 	.word	0x3fe62e42
 8003ff8:	0ca86c39 	.word	0x0ca86c39
 8003ffc:	be205c61 	.word	0xbe205c61
 8004000:	72bea4d0 	.word	0x72bea4d0
 8004004:	3e663769 	.word	0x3e663769
 8004008:	c5d26bf1 	.word	0xc5d26bf1
 800400c:	3ebbbd41 	.word	0x3ebbbd41
 8004010:	af25de2c 	.word	0xaf25de2c
 8004014:	3f11566a 	.word	0x3f11566a
 8004018:	16bebd93 	.word	0x16bebd93
 800401c:	3f66c16c 	.word	0x3f66c16c
 8004020:	5555553e 	.word	0x5555553e
 8004024:	3fc55555 	.word	0x3fc55555
 8004028:	3ff00000 	.word	0x3ff00000
 800402c:	4090cbff 	.word	0x4090cbff
 8004030:	3f6f3400 	.word	0x3f6f3400
 8004034:	c2f8f359 	.word	0xc2f8f359
 8004038:	01a56e1f 	.word	0x01a56e1f

0800403c <__ieee754_sqrt>:
 800403c:	4b55      	ldr	r3, [pc, #340]	; (8004194 <__ieee754_sqrt+0x158>)
 800403e:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8004040:	001a      	movs	r2, r3
 8004042:	0005      	movs	r5, r0
 8004044:	000c      	movs	r4, r1
 8004046:	400a      	ands	r2, r1
 8004048:	429a      	cmp	r2, r3
 800404a:	d10f      	bne.n	800406c <__ieee754_sqrt+0x30>
 800404c:	0002      	movs	r2, r0
 800404e:	000b      	movs	r3, r1
 8004050:	f7fd f868 	bl	8001124 <__aeabi_dmul>
 8004054:	0002      	movs	r2, r0
 8004056:	000b      	movs	r3, r1
 8004058:	0028      	movs	r0, r5
 800405a:	0021      	movs	r1, r4
 800405c:	f7fc f93c 	bl	80002d8 <__aeabi_dadd>
 8004060:	0005      	movs	r5, r0
 8004062:	000c      	movs	r4, r1
 8004064:	0028      	movs	r0, r5
 8004066:	0021      	movs	r1, r4
 8004068:	b003      	add	sp, #12
 800406a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800406c:	0002      	movs	r2, r0
 800406e:	2900      	cmp	r1, #0
 8004070:	dc10      	bgt.n	8004094 <__ieee754_sqrt+0x58>
 8004072:	004b      	lsls	r3, r1, #1
 8004074:	085b      	lsrs	r3, r3, #1
 8004076:	4303      	orrs	r3, r0
 8004078:	d0f4      	beq.n	8004064 <__ieee754_sqrt+0x28>
 800407a:	2000      	movs	r0, #0
 800407c:	4281      	cmp	r1, r0
 800407e:	d100      	bne.n	8004082 <__ieee754_sqrt+0x46>
 8004080:	e07f      	b.n	8004182 <__ieee754_sqrt+0x146>
 8004082:	000b      	movs	r3, r1
 8004084:	0028      	movs	r0, r5
 8004086:	f7fd fabf 	bl	8001608 <__aeabi_dsub>
 800408a:	0002      	movs	r2, r0
 800408c:	000b      	movs	r3, r1
 800408e:	f7fc fc3f 	bl	8000910 <__aeabi_ddiv>
 8004092:	e7e5      	b.n	8004060 <__ieee754_sqrt+0x24>
 8004094:	1508      	asrs	r0, r1, #20
 8004096:	d074      	beq.n	8004182 <__ieee754_sqrt+0x146>
 8004098:	4b3f      	ldr	r3, [pc, #252]	; (8004198 <__ieee754_sqrt+0x15c>)
 800409a:	0309      	lsls	r1, r1, #12
 800409c:	18c0      	adds	r0, r0, r3
 800409e:	2380      	movs	r3, #128	; 0x80
 80040a0:	0b09      	lsrs	r1, r1, #12
 80040a2:	035b      	lsls	r3, r3, #13
 80040a4:	4319      	orrs	r1, r3
 80040a6:	07c3      	lsls	r3, r0, #31
 80040a8:	d503      	bpl.n	80040b2 <__ieee754_sqrt+0x76>
 80040aa:	0fd3      	lsrs	r3, r2, #31
 80040ac:	0049      	lsls	r1, r1, #1
 80040ae:	18c9      	adds	r1, r1, r3
 80040b0:	0052      	lsls	r2, r2, #1
 80040b2:	2400      	movs	r4, #0
 80040b4:	1043      	asrs	r3, r0, #1
 80040b6:	0049      	lsls	r1, r1, #1
 80040b8:	9301      	str	r3, [sp, #4]
 80040ba:	2580      	movs	r5, #128	; 0x80
 80040bc:	0fd3      	lsrs	r3, r2, #31
 80040be:	18cb      	adds	r3, r1, r3
 80040c0:	0020      	movs	r0, r4
 80040c2:	2116      	movs	r1, #22
 80040c4:	0052      	lsls	r2, r2, #1
 80040c6:	03ad      	lsls	r5, r5, #14
 80040c8:	1946      	adds	r6, r0, r5
 80040ca:	429e      	cmp	r6, r3
 80040cc:	dc02      	bgt.n	80040d4 <__ieee754_sqrt+0x98>
 80040ce:	1970      	adds	r0, r6, r5
 80040d0:	1b9b      	subs	r3, r3, r6
 80040d2:	1964      	adds	r4, r4, r5
 80040d4:	0fd6      	lsrs	r6, r2, #31
 80040d6:	005b      	lsls	r3, r3, #1
 80040d8:	3901      	subs	r1, #1
 80040da:	199b      	adds	r3, r3, r6
 80040dc:	0052      	lsls	r2, r2, #1
 80040de:	086d      	lsrs	r5, r5, #1
 80040e0:	2900      	cmp	r1, #0
 80040e2:	d1f1      	bne.n	80040c8 <__ieee754_sqrt+0x8c>
 80040e4:	2520      	movs	r5, #32
 80040e6:	2680      	movs	r6, #128	; 0x80
 80040e8:	46ac      	mov	ip, r5
 80040ea:	9100      	str	r1, [sp, #0]
 80040ec:	0636      	lsls	r6, r6, #24
 80040ee:	9d00      	ldr	r5, [sp, #0]
 80040f0:	1977      	adds	r7, r6, r5
 80040f2:	4283      	cmp	r3, r0
 80040f4:	dc02      	bgt.n	80040fc <__ieee754_sqrt+0xc0>
 80040f6:	d112      	bne.n	800411e <__ieee754_sqrt+0xe2>
 80040f8:	4297      	cmp	r7, r2
 80040fa:	d810      	bhi.n	800411e <__ieee754_sqrt+0xe2>
 80040fc:	19bd      	adds	r5, r7, r6
 80040fe:	9500      	str	r5, [sp, #0]
 8004100:	0005      	movs	r5, r0
 8004102:	2f00      	cmp	r7, #0
 8004104:	da03      	bge.n	800410e <__ieee754_sqrt+0xd2>
 8004106:	9d00      	ldr	r5, [sp, #0]
 8004108:	43ed      	mvns	r5, r5
 800410a:	0fed      	lsrs	r5, r5, #31
 800410c:	1945      	adds	r5, r0, r5
 800410e:	1a1b      	subs	r3, r3, r0
 8004110:	42ba      	cmp	r2, r7
 8004112:	4180      	sbcs	r0, r0
 8004114:	4240      	negs	r0, r0
 8004116:	1a1b      	subs	r3, r3, r0
 8004118:	0028      	movs	r0, r5
 800411a:	1bd2      	subs	r2, r2, r7
 800411c:	1989      	adds	r1, r1, r6
 800411e:	0fd5      	lsrs	r5, r2, #31
 8004120:	005b      	lsls	r3, r3, #1
 8004122:	18eb      	adds	r3, r5, r3
 8004124:	2501      	movs	r5, #1
 8004126:	426d      	negs	r5, r5
 8004128:	44ac      	add	ip, r5
 800412a:	4665      	mov	r5, ip
 800412c:	0052      	lsls	r2, r2, #1
 800412e:	0876      	lsrs	r6, r6, #1
 8004130:	2d00      	cmp	r5, #0
 8004132:	d1dc      	bne.n	80040ee <__ieee754_sqrt+0xb2>
 8004134:	4313      	orrs	r3, r2
 8004136:	d003      	beq.n	8004140 <__ieee754_sqrt+0x104>
 8004138:	1c4b      	adds	r3, r1, #1
 800413a:	d127      	bne.n	800418c <__ieee754_sqrt+0x150>
 800413c:	4661      	mov	r1, ip
 800413e:	3401      	adds	r4, #1
 8004140:	4b16      	ldr	r3, [pc, #88]	; (800419c <__ieee754_sqrt+0x160>)
 8004142:	1060      	asrs	r0, r4, #1
 8004144:	18c0      	adds	r0, r0, r3
 8004146:	0849      	lsrs	r1, r1, #1
 8004148:	07e3      	lsls	r3, r4, #31
 800414a:	d502      	bpl.n	8004152 <__ieee754_sqrt+0x116>
 800414c:	2380      	movs	r3, #128	; 0x80
 800414e:	061b      	lsls	r3, r3, #24
 8004150:	4319      	orrs	r1, r3
 8004152:	9b01      	ldr	r3, [sp, #4]
 8004154:	000d      	movs	r5, r1
 8004156:	051c      	lsls	r4, r3, #20
 8004158:	1823      	adds	r3, r4, r0
 800415a:	001c      	movs	r4, r3
 800415c:	e782      	b.n	8004064 <__ieee754_sqrt+0x28>
 800415e:	0ad1      	lsrs	r1, r2, #11
 8004160:	3b15      	subs	r3, #21
 8004162:	0552      	lsls	r2, r2, #21
 8004164:	2900      	cmp	r1, #0
 8004166:	d0fa      	beq.n	800415e <__ieee754_sqrt+0x122>
 8004168:	2480      	movs	r4, #128	; 0x80
 800416a:	0364      	lsls	r4, r4, #13
 800416c:	4221      	tst	r1, r4
 800416e:	d00a      	beq.n	8004186 <__ieee754_sqrt+0x14a>
 8004170:	2420      	movs	r4, #32
 8004172:	0016      	movs	r6, r2
 8004174:	1a24      	subs	r4, r4, r0
 8004176:	40e6      	lsrs	r6, r4
 8004178:	1e45      	subs	r5, r0, #1
 800417a:	4082      	lsls	r2, r0
 800417c:	4331      	orrs	r1, r6
 800417e:	1b58      	subs	r0, r3, r5
 8004180:	e78a      	b.n	8004098 <__ieee754_sqrt+0x5c>
 8004182:	2300      	movs	r3, #0
 8004184:	e7ee      	b.n	8004164 <__ieee754_sqrt+0x128>
 8004186:	0049      	lsls	r1, r1, #1
 8004188:	3001      	adds	r0, #1
 800418a:	e7ef      	b.n	800416c <__ieee754_sqrt+0x130>
 800418c:	2301      	movs	r3, #1
 800418e:	3101      	adds	r1, #1
 8004190:	4399      	bics	r1, r3
 8004192:	e7d5      	b.n	8004140 <__ieee754_sqrt+0x104>
 8004194:	7ff00000 	.word	0x7ff00000
 8004198:	fffffc01 	.word	0xfffffc01
 800419c:	3fe00000 	.word	0x3fe00000

080041a0 <fabs>:
 80041a0:	0049      	lsls	r1, r1, #1
 80041a2:	084b      	lsrs	r3, r1, #1
 80041a4:	0019      	movs	r1, r3
 80041a6:	4770      	bx	lr

080041a8 <finite>:
 80041a8:	0048      	lsls	r0, r1, #1
 80041aa:	4b02      	ldr	r3, [pc, #8]	; (80041b4 <finite+0xc>)
 80041ac:	0840      	lsrs	r0, r0, #1
 80041ae:	18c0      	adds	r0, r0, r3
 80041b0:	0fc0      	lsrs	r0, r0, #31
 80041b2:	4770      	bx	lr
 80041b4:	80100000 	.word	0x80100000

080041b8 <matherr>:
 80041b8:	2000      	movs	r0, #0
 80041ba:	4770      	bx	lr

080041bc <nan>:
 80041bc:	2000      	movs	r0, #0
 80041be:	4901      	ldr	r1, [pc, #4]	; (80041c4 <nan+0x8>)
 80041c0:	4770      	bx	lr
 80041c2:	46c0      	nop			; (mov r8, r8)
 80041c4:	7ff80000 	.word	0x7ff80000

080041c8 <rint>:
 80041c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80041ca:	004a      	lsls	r2, r1, #1
 80041cc:	4e3e      	ldr	r6, [pc, #248]	; (80042c8 <rint+0x100>)
 80041ce:	0d52      	lsrs	r2, r2, #21
 80041d0:	b085      	sub	sp, #20
 80041d2:	1996      	adds	r6, r2, r6
 80041d4:	000d      	movs	r5, r1
 80041d6:	9101      	str	r1, [sp, #4]
 80041d8:	0003      	movs	r3, r0
 80041da:	0fcc      	lsrs	r4, r1, #31
 80041dc:	2e13      	cmp	r6, #19
 80041de:	dc57      	bgt.n	8004290 <rint+0xc8>
 80041e0:	2e00      	cmp	r6, #0
 80041e2:	da2a      	bge.n	800423a <rint+0x72>
 80041e4:	004a      	lsls	r2, r1, #1
 80041e6:	0852      	lsrs	r2, r2, #1
 80041e8:	4302      	orrs	r2, r0
 80041ea:	d024      	beq.n	8004236 <rint+0x6e>
 80041ec:	030a      	lsls	r2, r1, #12
 80041ee:	0b12      	lsrs	r2, r2, #12
 80041f0:	4302      	orrs	r2, r0
 80041f2:	4253      	negs	r3, r2
 80041f4:	4313      	orrs	r3, r2
 80041f6:	2280      	movs	r2, #128	; 0x80
 80041f8:	0c4d      	lsrs	r5, r1, #17
 80041fa:	0312      	lsls	r2, r2, #12
 80041fc:	0b1b      	lsrs	r3, r3, #12
 80041fe:	4013      	ands	r3, r2
 8004200:	046d      	lsls	r5, r5, #17
 8004202:	432b      	orrs	r3, r5
 8004204:	0019      	movs	r1, r3
 8004206:	4b31      	ldr	r3, [pc, #196]	; (80042cc <rint+0x104>)
 8004208:	00e2      	lsls	r2, r4, #3
 800420a:	189b      	adds	r3, r3, r2
 800420c:	681e      	ldr	r6, [r3, #0]
 800420e:	685f      	ldr	r7, [r3, #4]
 8004210:	0002      	movs	r2, r0
 8004212:	000b      	movs	r3, r1
 8004214:	0030      	movs	r0, r6
 8004216:	0039      	movs	r1, r7
 8004218:	f7fc f85e 	bl	80002d8 <__aeabi_dadd>
 800421c:	9002      	str	r0, [sp, #8]
 800421e:	9103      	str	r1, [sp, #12]
 8004220:	9802      	ldr	r0, [sp, #8]
 8004222:	9903      	ldr	r1, [sp, #12]
 8004224:	003b      	movs	r3, r7
 8004226:	0032      	movs	r2, r6
 8004228:	f7fd f9ee 	bl	8001608 <__aeabi_dsub>
 800422c:	004b      	lsls	r3, r1, #1
 800422e:	085b      	lsrs	r3, r3, #1
 8004230:	07e4      	lsls	r4, r4, #31
 8004232:	4323      	orrs	r3, r4
 8004234:	0019      	movs	r1, r3
 8004236:	b005      	add	sp, #20
 8004238:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800423a:	4a25      	ldr	r2, [pc, #148]	; (80042d0 <rint+0x108>)
 800423c:	4132      	asrs	r2, r6
 800423e:	0017      	movs	r7, r2
 8004240:	400f      	ands	r7, r1
 8004242:	4307      	orrs	r7, r0
 8004244:	d0f7      	beq.n	8004236 <rint+0x6e>
 8004246:	0852      	lsrs	r2, r2, #1
 8004248:	0011      	movs	r1, r2
 800424a:	4029      	ands	r1, r5
 800424c:	430b      	orrs	r3, r1
 800424e:	d00a      	beq.n	8004266 <rint+0x9e>
 8004250:	2300      	movs	r3, #0
 8004252:	2e13      	cmp	r6, #19
 8004254:	d101      	bne.n	800425a <rint+0x92>
 8004256:	2380      	movs	r3, #128	; 0x80
 8004258:	061b      	lsls	r3, r3, #24
 800425a:	2780      	movs	r7, #128	; 0x80
 800425c:	02ff      	lsls	r7, r7, #11
 800425e:	4137      	asrs	r7, r6
 8004260:	4395      	bics	r5, r2
 8004262:	432f      	orrs	r7, r5
 8004264:	9701      	str	r7, [sp, #4]
 8004266:	9901      	ldr	r1, [sp, #4]
 8004268:	001a      	movs	r2, r3
 800426a:	000b      	movs	r3, r1
 800426c:	4917      	ldr	r1, [pc, #92]	; (80042cc <rint+0x104>)
 800426e:	00e4      	lsls	r4, r4, #3
 8004270:	190c      	adds	r4, r1, r4
 8004272:	6865      	ldr	r5, [r4, #4]
 8004274:	6824      	ldr	r4, [r4, #0]
 8004276:	0020      	movs	r0, r4
 8004278:	0029      	movs	r1, r5
 800427a:	f7fc f82d 	bl	80002d8 <__aeabi_dadd>
 800427e:	9002      	str	r0, [sp, #8]
 8004280:	9103      	str	r1, [sp, #12]
 8004282:	9802      	ldr	r0, [sp, #8]
 8004284:	9903      	ldr	r1, [sp, #12]
 8004286:	0022      	movs	r2, r4
 8004288:	002b      	movs	r3, r5
 800428a:	f7fd f9bd 	bl	8001608 <__aeabi_dsub>
 800428e:	e7d2      	b.n	8004236 <rint+0x6e>
 8004290:	2e33      	cmp	r6, #51	; 0x33
 8004292:	dd08      	ble.n	80042a6 <rint+0xde>
 8004294:	2380      	movs	r3, #128	; 0x80
 8004296:	00db      	lsls	r3, r3, #3
 8004298:	429e      	cmp	r6, r3
 800429a:	d1cc      	bne.n	8004236 <rint+0x6e>
 800429c:	0002      	movs	r2, r0
 800429e:	000b      	movs	r3, r1
 80042a0:	f7fc f81a 	bl	80002d8 <__aeabi_dadd>
 80042a4:	e7c7      	b.n	8004236 <rint+0x6e>
 80042a6:	2601      	movs	r6, #1
 80042a8:	4d0a      	ldr	r5, [pc, #40]	; (80042d4 <rint+0x10c>)
 80042aa:	4276      	negs	r6, r6
 80042ac:	1952      	adds	r2, r2, r5
 80042ae:	40d6      	lsrs	r6, r2
 80042b0:	4206      	tst	r6, r0
 80042b2:	d0c0      	beq.n	8004236 <rint+0x6e>
 80042b4:	0876      	lsrs	r6, r6, #1
 80042b6:	4206      	tst	r6, r0
 80042b8:	d0d5      	beq.n	8004266 <rint+0x9e>
 80042ba:	2180      	movs	r1, #128	; 0x80
 80042bc:	05c9      	lsls	r1, r1, #23
 80042be:	4111      	asrs	r1, r2
 80042c0:	43b3      	bics	r3, r6
 80042c2:	430b      	orrs	r3, r1
 80042c4:	e7cf      	b.n	8004266 <rint+0x9e>
 80042c6:	46c0      	nop			; (mov r8, r8)
 80042c8:	fffffc01 	.word	0xfffffc01
 80042cc:	08004500 	.word	0x08004500
 80042d0:	000fffff 	.word	0x000fffff
 80042d4:	fffffbed 	.word	0xfffffbed

080042d8 <scalbn>:
 80042d8:	004b      	lsls	r3, r1, #1
 80042da:	b570      	push	{r4, r5, r6, lr}
 80042dc:	0d5b      	lsrs	r3, r3, #21
 80042de:	0014      	movs	r4, r2
 80042e0:	000a      	movs	r2, r1
 80042e2:	2b00      	cmp	r3, #0
 80042e4:	d10d      	bne.n	8004302 <scalbn+0x2a>
 80042e6:	004b      	lsls	r3, r1, #1
 80042e8:	085b      	lsrs	r3, r3, #1
 80042ea:	4303      	orrs	r3, r0
 80042ec:	d010      	beq.n	8004310 <scalbn+0x38>
 80042ee:	4b21      	ldr	r3, [pc, #132]	; (8004374 <scalbn+0x9c>)
 80042f0:	2200      	movs	r2, #0
 80042f2:	f7fc ff17 	bl	8001124 <__aeabi_dmul>
 80042f6:	4b20      	ldr	r3, [pc, #128]	; (8004378 <scalbn+0xa0>)
 80042f8:	429c      	cmp	r4, r3
 80042fa:	da0a      	bge.n	8004312 <scalbn+0x3a>
 80042fc:	4a1f      	ldr	r2, [pc, #124]	; (800437c <scalbn+0xa4>)
 80042fe:	4b20      	ldr	r3, [pc, #128]	; (8004380 <scalbn+0xa8>)
 8004300:	e017      	b.n	8004332 <scalbn+0x5a>
 8004302:	4d20      	ldr	r5, [pc, #128]	; (8004384 <scalbn+0xac>)
 8004304:	42ab      	cmp	r3, r5
 8004306:	d108      	bne.n	800431a <scalbn+0x42>
 8004308:	0002      	movs	r2, r0
 800430a:	000b      	movs	r3, r1
 800430c:	f7fb ffe4 	bl	80002d8 <__aeabi_dadd>
 8004310:	bd70      	pop	{r4, r5, r6, pc}
 8004312:	000a      	movs	r2, r1
 8004314:	004b      	lsls	r3, r1, #1
 8004316:	0d5b      	lsrs	r3, r3, #21
 8004318:	3b36      	subs	r3, #54	; 0x36
 800431a:	4d1b      	ldr	r5, [pc, #108]	; (8004388 <scalbn+0xb0>)
 800431c:	18e3      	adds	r3, r4, r3
 800431e:	42ab      	cmp	r3, r5
 8004320:	dd0a      	ble.n	8004338 <scalbn+0x60>
 8004322:	0002      	movs	r2, r0
 8004324:	000b      	movs	r3, r1
 8004326:	4819      	ldr	r0, [pc, #100]	; (800438c <scalbn+0xb4>)
 8004328:	4919      	ldr	r1, [pc, #100]	; (8004390 <scalbn+0xb8>)
 800432a:	f000 f839 	bl	80043a0 <copysign>
 800432e:	4a17      	ldr	r2, [pc, #92]	; (800438c <scalbn+0xb4>)
 8004330:	4b17      	ldr	r3, [pc, #92]	; (8004390 <scalbn+0xb8>)
 8004332:	f7fc fef7 	bl	8001124 <__aeabi_dmul>
 8004336:	e7eb      	b.n	8004310 <scalbn+0x38>
 8004338:	2b00      	cmp	r3, #0
 800433a:	dd05      	ble.n	8004348 <scalbn+0x70>
 800433c:	4c15      	ldr	r4, [pc, #84]	; (8004394 <scalbn+0xbc>)
 800433e:	051b      	lsls	r3, r3, #20
 8004340:	4022      	ands	r2, r4
 8004342:	431a      	orrs	r2, r3
 8004344:	0011      	movs	r1, r2
 8004346:	e7e3      	b.n	8004310 <scalbn+0x38>
 8004348:	001d      	movs	r5, r3
 800434a:	3535      	adds	r5, #53	; 0x35
 800434c:	da09      	bge.n	8004362 <scalbn+0x8a>
 800434e:	4b12      	ldr	r3, [pc, #72]	; (8004398 <scalbn+0xc0>)
 8004350:	0002      	movs	r2, r0
 8004352:	429c      	cmp	r4, r3
 8004354:	dce6      	bgt.n	8004324 <scalbn+0x4c>
 8004356:	000b      	movs	r3, r1
 8004358:	4808      	ldr	r0, [pc, #32]	; (800437c <scalbn+0xa4>)
 800435a:	4909      	ldr	r1, [pc, #36]	; (8004380 <scalbn+0xa8>)
 800435c:	f000 f820 	bl	80043a0 <copysign>
 8004360:	e7cc      	b.n	80042fc <scalbn+0x24>
 8004362:	4c0c      	ldr	r4, [pc, #48]	; (8004394 <scalbn+0xbc>)
 8004364:	3336      	adds	r3, #54	; 0x36
 8004366:	4022      	ands	r2, r4
 8004368:	051b      	lsls	r3, r3, #20
 800436a:	4313      	orrs	r3, r2
 800436c:	0019      	movs	r1, r3
 800436e:	2200      	movs	r2, #0
 8004370:	4b0a      	ldr	r3, [pc, #40]	; (800439c <scalbn+0xc4>)
 8004372:	e7de      	b.n	8004332 <scalbn+0x5a>
 8004374:	43500000 	.word	0x43500000
 8004378:	ffff3cb0 	.word	0xffff3cb0
 800437c:	c2f8f359 	.word	0xc2f8f359
 8004380:	01a56e1f 	.word	0x01a56e1f
 8004384:	000007ff 	.word	0x000007ff
 8004388:	000007fe 	.word	0x000007fe
 800438c:	8800759c 	.word	0x8800759c
 8004390:	7e37e43c 	.word	0x7e37e43c
 8004394:	800fffff 	.word	0x800fffff
 8004398:	0000c350 	.word	0x0000c350
 800439c:	3c900000 	.word	0x3c900000

080043a0 <copysign>:
 80043a0:	b530      	push	{r4, r5, lr}
 80043a2:	004a      	lsls	r2, r1, #1
 80043a4:	0fdb      	lsrs	r3, r3, #31
 80043a6:	07db      	lsls	r3, r3, #31
 80043a8:	0852      	lsrs	r2, r2, #1
 80043aa:	431a      	orrs	r2, r3
 80043ac:	0011      	movs	r1, r2
 80043ae:	bd30      	pop	{r4, r5, pc}

080043b0 <__errno>:
 80043b0:	4b01      	ldr	r3, [pc, #4]	; (80043b8 <__errno+0x8>)
 80043b2:	6818      	ldr	r0, [r3, #0]
 80043b4:	4770      	bx	lr
 80043b6:	46c0      	nop			; (mov r8, r8)
 80043b8:	2000000c 	.word	0x2000000c

080043bc <__libc_init_array>:
 80043bc:	b570      	push	{r4, r5, r6, lr}
 80043be:	2600      	movs	r6, #0
 80043c0:	4d0c      	ldr	r5, [pc, #48]	; (80043f4 <__libc_init_array+0x38>)
 80043c2:	4c0d      	ldr	r4, [pc, #52]	; (80043f8 <__libc_init_array+0x3c>)
 80043c4:	1b64      	subs	r4, r4, r5
 80043c6:	10a4      	asrs	r4, r4, #2
 80043c8:	42a6      	cmp	r6, r4
 80043ca:	d109      	bne.n	80043e0 <__libc_init_array+0x24>
 80043cc:	2600      	movs	r6, #0
 80043ce:	f000 f821 	bl	8004414 <_init>
 80043d2:	4d0a      	ldr	r5, [pc, #40]	; (80043fc <__libc_init_array+0x40>)
 80043d4:	4c0a      	ldr	r4, [pc, #40]	; (8004400 <__libc_init_array+0x44>)
 80043d6:	1b64      	subs	r4, r4, r5
 80043d8:	10a4      	asrs	r4, r4, #2
 80043da:	42a6      	cmp	r6, r4
 80043dc:	d105      	bne.n	80043ea <__libc_init_array+0x2e>
 80043de:	bd70      	pop	{r4, r5, r6, pc}
 80043e0:	00b3      	lsls	r3, r6, #2
 80043e2:	58eb      	ldr	r3, [r5, r3]
 80043e4:	4798      	blx	r3
 80043e6:	3601      	adds	r6, #1
 80043e8:	e7ee      	b.n	80043c8 <__libc_init_array+0xc>
 80043ea:	00b3      	lsls	r3, r6, #2
 80043ec:	58eb      	ldr	r3, [r5, r3]
 80043ee:	4798      	blx	r3
 80043f0:	3601      	adds	r6, #1
 80043f2:	e7f2      	b.n	80043da <__libc_init_array+0x1e>
 80043f4:	08004510 	.word	0x08004510
 80043f8:	08004510 	.word	0x08004510
 80043fc:	08004510 	.word	0x08004510
 8004400:	08004514 	.word	0x08004514

08004404 <memset>:
 8004404:	0003      	movs	r3, r0
 8004406:	1812      	adds	r2, r2, r0
 8004408:	4293      	cmp	r3, r2
 800440a:	d100      	bne.n	800440e <memset+0xa>
 800440c:	4770      	bx	lr
 800440e:	7019      	strb	r1, [r3, #0]
 8004410:	3301      	adds	r3, #1
 8004412:	e7f9      	b.n	8004408 <memset+0x4>

08004414 <_init>:
 8004414:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004416:	46c0      	nop			; (mov r8, r8)
 8004418:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800441a:	bc08      	pop	{r3}
 800441c:	469e      	mov	lr, r3
 800441e:	4770      	bx	lr

08004420 <_fini>:
 8004420:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8004422:	46c0      	nop			; (mov r8, r8)
 8004424:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8004426:	bc08      	pop	{r3}
 8004428:	469e      	mov	lr, r3
 800442a:	4770      	bx	lr

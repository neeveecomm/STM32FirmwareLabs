
DHT11 and Interrupts.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000000c0  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0000a17c  080000c0  080000c0  000100c0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000428  0800a240  0800a240  0001a240  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0800a668  0800a668  000201dc  2**0
                  CONTENTS
  4 .ARM          00000008  0800a668  0800a668  0001a668  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0800a670  0800a670  000201dc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000008  0800a670  0800a670  0001a670  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0800a678  0800a678  0001a678  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001dc  20000000  0800a67c  00020000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000144  200001dc  0800a858  000201dc  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000320  0800a858  00020320  2**0
                  ALLOC
 11 .ARM.attributes 00000028  00000000  00000000  000201dc  2**0
                  CONTENTS, READONLY
 12 .debug_info   0000b3c5  00000000  00000000  00020204  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00001b55  00000000  00000000  0002b5c9  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00000b00  00000000  00000000  0002d120  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000a28  00000000  00000000  0002dc20  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  000041ec  00000000  00000000  0002e648  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   000087c1  00000000  00000000  00032834  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    00085787  00000000  00000000  0003aff5  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000c077c  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000035fc  00000000  00000000  000c07f8  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080000c0 <__do_global_dtors_aux>:
 80000c0:	b510      	push	{r4, lr}
 80000c2:	4c06      	ldr	r4, [pc, #24]	; (80000dc <__do_global_dtors_aux+0x1c>)
 80000c4:	7823      	ldrb	r3, [r4, #0]
 80000c6:	2b00      	cmp	r3, #0
 80000c8:	d107      	bne.n	80000da <__do_global_dtors_aux+0x1a>
 80000ca:	4b05      	ldr	r3, [pc, #20]	; (80000e0 <__do_global_dtors_aux+0x20>)
 80000cc:	2b00      	cmp	r3, #0
 80000ce:	d002      	beq.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d0:	4804      	ldr	r0, [pc, #16]	; (80000e4 <__do_global_dtors_aux+0x24>)
 80000d2:	e000      	b.n	80000d6 <__do_global_dtors_aux+0x16>
 80000d4:	bf00      	nop
 80000d6:	2301      	movs	r3, #1
 80000d8:	7023      	strb	r3, [r4, #0]
 80000da:	bd10      	pop	{r4, pc}
 80000dc:	200001dc 	.word	0x200001dc
 80000e0:	00000000 	.word	0x00000000
 80000e4:	0800a224 	.word	0x0800a224

080000e8 <frame_dummy>:
 80000e8:	4b04      	ldr	r3, [pc, #16]	; (80000fc <frame_dummy+0x14>)
 80000ea:	b510      	push	{r4, lr}
 80000ec:	2b00      	cmp	r3, #0
 80000ee:	d003      	beq.n	80000f8 <frame_dummy+0x10>
 80000f0:	4903      	ldr	r1, [pc, #12]	; (8000100 <frame_dummy+0x18>)
 80000f2:	4804      	ldr	r0, [pc, #16]	; (8000104 <frame_dummy+0x1c>)
 80000f4:	e000      	b.n	80000f8 <frame_dummy+0x10>
 80000f6:	bf00      	nop
 80000f8:	bd10      	pop	{r4, pc}
 80000fa:	46c0      	nop			; (mov r8, r8)
 80000fc:	00000000 	.word	0x00000000
 8000100:	200001e0 	.word	0x200001e0
 8000104:	0800a224 	.word	0x0800a224

08000108 <strlen>:
 8000108:	2300      	movs	r3, #0
 800010a:	5cc2      	ldrb	r2, [r0, r3]
 800010c:	3301      	adds	r3, #1
 800010e:	2a00      	cmp	r2, #0
 8000110:	d1fb      	bne.n	800010a <strlen+0x2>
 8000112:	1e58      	subs	r0, r3, #1
 8000114:	4770      	bx	lr
	...

08000118 <__gnu_thumb1_case_uqi>:
 8000118:	b402      	push	{r1}
 800011a:	4671      	mov	r1, lr
 800011c:	0849      	lsrs	r1, r1, #1
 800011e:	0049      	lsls	r1, r1, #1
 8000120:	5c09      	ldrb	r1, [r1, r0]
 8000122:	0049      	lsls	r1, r1, #1
 8000124:	448e      	add	lr, r1
 8000126:	bc02      	pop	{r1}
 8000128:	4770      	bx	lr
 800012a:	46c0      	nop			; (mov r8, r8)

0800012c <__udivsi3>:
 800012c:	2200      	movs	r2, #0
 800012e:	0843      	lsrs	r3, r0, #1
 8000130:	428b      	cmp	r3, r1
 8000132:	d374      	bcc.n	800021e <__udivsi3+0xf2>
 8000134:	0903      	lsrs	r3, r0, #4
 8000136:	428b      	cmp	r3, r1
 8000138:	d35f      	bcc.n	80001fa <__udivsi3+0xce>
 800013a:	0a03      	lsrs	r3, r0, #8
 800013c:	428b      	cmp	r3, r1
 800013e:	d344      	bcc.n	80001ca <__udivsi3+0x9e>
 8000140:	0b03      	lsrs	r3, r0, #12
 8000142:	428b      	cmp	r3, r1
 8000144:	d328      	bcc.n	8000198 <__udivsi3+0x6c>
 8000146:	0c03      	lsrs	r3, r0, #16
 8000148:	428b      	cmp	r3, r1
 800014a:	d30d      	bcc.n	8000168 <__udivsi3+0x3c>
 800014c:	22ff      	movs	r2, #255	; 0xff
 800014e:	0209      	lsls	r1, r1, #8
 8000150:	ba12      	rev	r2, r2
 8000152:	0c03      	lsrs	r3, r0, #16
 8000154:	428b      	cmp	r3, r1
 8000156:	d302      	bcc.n	800015e <__udivsi3+0x32>
 8000158:	1212      	asrs	r2, r2, #8
 800015a:	0209      	lsls	r1, r1, #8
 800015c:	d065      	beq.n	800022a <__udivsi3+0xfe>
 800015e:	0b03      	lsrs	r3, r0, #12
 8000160:	428b      	cmp	r3, r1
 8000162:	d319      	bcc.n	8000198 <__udivsi3+0x6c>
 8000164:	e000      	b.n	8000168 <__udivsi3+0x3c>
 8000166:	0a09      	lsrs	r1, r1, #8
 8000168:	0bc3      	lsrs	r3, r0, #15
 800016a:	428b      	cmp	r3, r1
 800016c:	d301      	bcc.n	8000172 <__udivsi3+0x46>
 800016e:	03cb      	lsls	r3, r1, #15
 8000170:	1ac0      	subs	r0, r0, r3
 8000172:	4152      	adcs	r2, r2
 8000174:	0b83      	lsrs	r3, r0, #14
 8000176:	428b      	cmp	r3, r1
 8000178:	d301      	bcc.n	800017e <__udivsi3+0x52>
 800017a:	038b      	lsls	r3, r1, #14
 800017c:	1ac0      	subs	r0, r0, r3
 800017e:	4152      	adcs	r2, r2
 8000180:	0b43      	lsrs	r3, r0, #13
 8000182:	428b      	cmp	r3, r1
 8000184:	d301      	bcc.n	800018a <__udivsi3+0x5e>
 8000186:	034b      	lsls	r3, r1, #13
 8000188:	1ac0      	subs	r0, r0, r3
 800018a:	4152      	adcs	r2, r2
 800018c:	0b03      	lsrs	r3, r0, #12
 800018e:	428b      	cmp	r3, r1
 8000190:	d301      	bcc.n	8000196 <__udivsi3+0x6a>
 8000192:	030b      	lsls	r3, r1, #12
 8000194:	1ac0      	subs	r0, r0, r3
 8000196:	4152      	adcs	r2, r2
 8000198:	0ac3      	lsrs	r3, r0, #11
 800019a:	428b      	cmp	r3, r1
 800019c:	d301      	bcc.n	80001a2 <__udivsi3+0x76>
 800019e:	02cb      	lsls	r3, r1, #11
 80001a0:	1ac0      	subs	r0, r0, r3
 80001a2:	4152      	adcs	r2, r2
 80001a4:	0a83      	lsrs	r3, r0, #10
 80001a6:	428b      	cmp	r3, r1
 80001a8:	d301      	bcc.n	80001ae <__udivsi3+0x82>
 80001aa:	028b      	lsls	r3, r1, #10
 80001ac:	1ac0      	subs	r0, r0, r3
 80001ae:	4152      	adcs	r2, r2
 80001b0:	0a43      	lsrs	r3, r0, #9
 80001b2:	428b      	cmp	r3, r1
 80001b4:	d301      	bcc.n	80001ba <__udivsi3+0x8e>
 80001b6:	024b      	lsls	r3, r1, #9
 80001b8:	1ac0      	subs	r0, r0, r3
 80001ba:	4152      	adcs	r2, r2
 80001bc:	0a03      	lsrs	r3, r0, #8
 80001be:	428b      	cmp	r3, r1
 80001c0:	d301      	bcc.n	80001c6 <__udivsi3+0x9a>
 80001c2:	020b      	lsls	r3, r1, #8
 80001c4:	1ac0      	subs	r0, r0, r3
 80001c6:	4152      	adcs	r2, r2
 80001c8:	d2cd      	bcs.n	8000166 <__udivsi3+0x3a>
 80001ca:	09c3      	lsrs	r3, r0, #7
 80001cc:	428b      	cmp	r3, r1
 80001ce:	d301      	bcc.n	80001d4 <__udivsi3+0xa8>
 80001d0:	01cb      	lsls	r3, r1, #7
 80001d2:	1ac0      	subs	r0, r0, r3
 80001d4:	4152      	adcs	r2, r2
 80001d6:	0983      	lsrs	r3, r0, #6
 80001d8:	428b      	cmp	r3, r1
 80001da:	d301      	bcc.n	80001e0 <__udivsi3+0xb4>
 80001dc:	018b      	lsls	r3, r1, #6
 80001de:	1ac0      	subs	r0, r0, r3
 80001e0:	4152      	adcs	r2, r2
 80001e2:	0943      	lsrs	r3, r0, #5
 80001e4:	428b      	cmp	r3, r1
 80001e6:	d301      	bcc.n	80001ec <__udivsi3+0xc0>
 80001e8:	014b      	lsls	r3, r1, #5
 80001ea:	1ac0      	subs	r0, r0, r3
 80001ec:	4152      	adcs	r2, r2
 80001ee:	0903      	lsrs	r3, r0, #4
 80001f0:	428b      	cmp	r3, r1
 80001f2:	d301      	bcc.n	80001f8 <__udivsi3+0xcc>
 80001f4:	010b      	lsls	r3, r1, #4
 80001f6:	1ac0      	subs	r0, r0, r3
 80001f8:	4152      	adcs	r2, r2
 80001fa:	08c3      	lsrs	r3, r0, #3
 80001fc:	428b      	cmp	r3, r1
 80001fe:	d301      	bcc.n	8000204 <__udivsi3+0xd8>
 8000200:	00cb      	lsls	r3, r1, #3
 8000202:	1ac0      	subs	r0, r0, r3
 8000204:	4152      	adcs	r2, r2
 8000206:	0883      	lsrs	r3, r0, #2
 8000208:	428b      	cmp	r3, r1
 800020a:	d301      	bcc.n	8000210 <__udivsi3+0xe4>
 800020c:	008b      	lsls	r3, r1, #2
 800020e:	1ac0      	subs	r0, r0, r3
 8000210:	4152      	adcs	r2, r2
 8000212:	0843      	lsrs	r3, r0, #1
 8000214:	428b      	cmp	r3, r1
 8000216:	d301      	bcc.n	800021c <__udivsi3+0xf0>
 8000218:	004b      	lsls	r3, r1, #1
 800021a:	1ac0      	subs	r0, r0, r3
 800021c:	4152      	adcs	r2, r2
 800021e:	1a41      	subs	r1, r0, r1
 8000220:	d200      	bcs.n	8000224 <__udivsi3+0xf8>
 8000222:	4601      	mov	r1, r0
 8000224:	4152      	adcs	r2, r2
 8000226:	4610      	mov	r0, r2
 8000228:	4770      	bx	lr
 800022a:	e7ff      	b.n	800022c <__udivsi3+0x100>
 800022c:	b501      	push	{r0, lr}
 800022e:	2000      	movs	r0, #0
 8000230:	f000 f8f0 	bl	8000414 <__aeabi_idiv0>
 8000234:	bd02      	pop	{r1, pc}
 8000236:	46c0      	nop			; (mov r8, r8)

08000238 <__aeabi_uidivmod>:
 8000238:	2900      	cmp	r1, #0
 800023a:	d0f7      	beq.n	800022c <__udivsi3+0x100>
 800023c:	e776      	b.n	800012c <__udivsi3>
 800023e:	4770      	bx	lr

08000240 <__divsi3>:
 8000240:	4603      	mov	r3, r0
 8000242:	430b      	orrs	r3, r1
 8000244:	d47f      	bmi.n	8000346 <__divsi3+0x106>
 8000246:	2200      	movs	r2, #0
 8000248:	0843      	lsrs	r3, r0, #1
 800024a:	428b      	cmp	r3, r1
 800024c:	d374      	bcc.n	8000338 <__divsi3+0xf8>
 800024e:	0903      	lsrs	r3, r0, #4
 8000250:	428b      	cmp	r3, r1
 8000252:	d35f      	bcc.n	8000314 <__divsi3+0xd4>
 8000254:	0a03      	lsrs	r3, r0, #8
 8000256:	428b      	cmp	r3, r1
 8000258:	d344      	bcc.n	80002e4 <__divsi3+0xa4>
 800025a:	0b03      	lsrs	r3, r0, #12
 800025c:	428b      	cmp	r3, r1
 800025e:	d328      	bcc.n	80002b2 <__divsi3+0x72>
 8000260:	0c03      	lsrs	r3, r0, #16
 8000262:	428b      	cmp	r3, r1
 8000264:	d30d      	bcc.n	8000282 <__divsi3+0x42>
 8000266:	22ff      	movs	r2, #255	; 0xff
 8000268:	0209      	lsls	r1, r1, #8
 800026a:	ba12      	rev	r2, r2
 800026c:	0c03      	lsrs	r3, r0, #16
 800026e:	428b      	cmp	r3, r1
 8000270:	d302      	bcc.n	8000278 <__divsi3+0x38>
 8000272:	1212      	asrs	r2, r2, #8
 8000274:	0209      	lsls	r1, r1, #8
 8000276:	d065      	beq.n	8000344 <__divsi3+0x104>
 8000278:	0b03      	lsrs	r3, r0, #12
 800027a:	428b      	cmp	r3, r1
 800027c:	d319      	bcc.n	80002b2 <__divsi3+0x72>
 800027e:	e000      	b.n	8000282 <__divsi3+0x42>
 8000280:	0a09      	lsrs	r1, r1, #8
 8000282:	0bc3      	lsrs	r3, r0, #15
 8000284:	428b      	cmp	r3, r1
 8000286:	d301      	bcc.n	800028c <__divsi3+0x4c>
 8000288:	03cb      	lsls	r3, r1, #15
 800028a:	1ac0      	subs	r0, r0, r3
 800028c:	4152      	adcs	r2, r2
 800028e:	0b83      	lsrs	r3, r0, #14
 8000290:	428b      	cmp	r3, r1
 8000292:	d301      	bcc.n	8000298 <__divsi3+0x58>
 8000294:	038b      	lsls	r3, r1, #14
 8000296:	1ac0      	subs	r0, r0, r3
 8000298:	4152      	adcs	r2, r2
 800029a:	0b43      	lsrs	r3, r0, #13
 800029c:	428b      	cmp	r3, r1
 800029e:	d301      	bcc.n	80002a4 <__divsi3+0x64>
 80002a0:	034b      	lsls	r3, r1, #13
 80002a2:	1ac0      	subs	r0, r0, r3
 80002a4:	4152      	adcs	r2, r2
 80002a6:	0b03      	lsrs	r3, r0, #12
 80002a8:	428b      	cmp	r3, r1
 80002aa:	d301      	bcc.n	80002b0 <__divsi3+0x70>
 80002ac:	030b      	lsls	r3, r1, #12
 80002ae:	1ac0      	subs	r0, r0, r3
 80002b0:	4152      	adcs	r2, r2
 80002b2:	0ac3      	lsrs	r3, r0, #11
 80002b4:	428b      	cmp	r3, r1
 80002b6:	d301      	bcc.n	80002bc <__divsi3+0x7c>
 80002b8:	02cb      	lsls	r3, r1, #11
 80002ba:	1ac0      	subs	r0, r0, r3
 80002bc:	4152      	adcs	r2, r2
 80002be:	0a83      	lsrs	r3, r0, #10
 80002c0:	428b      	cmp	r3, r1
 80002c2:	d301      	bcc.n	80002c8 <__divsi3+0x88>
 80002c4:	028b      	lsls	r3, r1, #10
 80002c6:	1ac0      	subs	r0, r0, r3
 80002c8:	4152      	adcs	r2, r2
 80002ca:	0a43      	lsrs	r3, r0, #9
 80002cc:	428b      	cmp	r3, r1
 80002ce:	d301      	bcc.n	80002d4 <__divsi3+0x94>
 80002d0:	024b      	lsls	r3, r1, #9
 80002d2:	1ac0      	subs	r0, r0, r3
 80002d4:	4152      	adcs	r2, r2
 80002d6:	0a03      	lsrs	r3, r0, #8
 80002d8:	428b      	cmp	r3, r1
 80002da:	d301      	bcc.n	80002e0 <__divsi3+0xa0>
 80002dc:	020b      	lsls	r3, r1, #8
 80002de:	1ac0      	subs	r0, r0, r3
 80002e0:	4152      	adcs	r2, r2
 80002e2:	d2cd      	bcs.n	8000280 <__divsi3+0x40>
 80002e4:	09c3      	lsrs	r3, r0, #7
 80002e6:	428b      	cmp	r3, r1
 80002e8:	d301      	bcc.n	80002ee <__divsi3+0xae>
 80002ea:	01cb      	lsls	r3, r1, #7
 80002ec:	1ac0      	subs	r0, r0, r3
 80002ee:	4152      	adcs	r2, r2
 80002f0:	0983      	lsrs	r3, r0, #6
 80002f2:	428b      	cmp	r3, r1
 80002f4:	d301      	bcc.n	80002fa <__divsi3+0xba>
 80002f6:	018b      	lsls	r3, r1, #6
 80002f8:	1ac0      	subs	r0, r0, r3
 80002fa:	4152      	adcs	r2, r2
 80002fc:	0943      	lsrs	r3, r0, #5
 80002fe:	428b      	cmp	r3, r1
 8000300:	d301      	bcc.n	8000306 <__divsi3+0xc6>
 8000302:	014b      	lsls	r3, r1, #5
 8000304:	1ac0      	subs	r0, r0, r3
 8000306:	4152      	adcs	r2, r2
 8000308:	0903      	lsrs	r3, r0, #4
 800030a:	428b      	cmp	r3, r1
 800030c:	d301      	bcc.n	8000312 <__divsi3+0xd2>
 800030e:	010b      	lsls	r3, r1, #4
 8000310:	1ac0      	subs	r0, r0, r3
 8000312:	4152      	adcs	r2, r2
 8000314:	08c3      	lsrs	r3, r0, #3
 8000316:	428b      	cmp	r3, r1
 8000318:	d301      	bcc.n	800031e <__divsi3+0xde>
 800031a:	00cb      	lsls	r3, r1, #3
 800031c:	1ac0      	subs	r0, r0, r3
 800031e:	4152      	adcs	r2, r2
 8000320:	0883      	lsrs	r3, r0, #2
 8000322:	428b      	cmp	r3, r1
 8000324:	d301      	bcc.n	800032a <__divsi3+0xea>
 8000326:	008b      	lsls	r3, r1, #2
 8000328:	1ac0      	subs	r0, r0, r3
 800032a:	4152      	adcs	r2, r2
 800032c:	0843      	lsrs	r3, r0, #1
 800032e:	428b      	cmp	r3, r1
 8000330:	d301      	bcc.n	8000336 <__divsi3+0xf6>
 8000332:	004b      	lsls	r3, r1, #1
 8000334:	1ac0      	subs	r0, r0, r3
 8000336:	4152      	adcs	r2, r2
 8000338:	1a41      	subs	r1, r0, r1
 800033a:	d200      	bcs.n	800033e <__divsi3+0xfe>
 800033c:	4601      	mov	r1, r0
 800033e:	4152      	adcs	r2, r2
 8000340:	4610      	mov	r0, r2
 8000342:	4770      	bx	lr
 8000344:	e05d      	b.n	8000402 <__divsi3+0x1c2>
 8000346:	0fca      	lsrs	r2, r1, #31
 8000348:	d000      	beq.n	800034c <__divsi3+0x10c>
 800034a:	4249      	negs	r1, r1
 800034c:	1003      	asrs	r3, r0, #32
 800034e:	d300      	bcc.n	8000352 <__divsi3+0x112>
 8000350:	4240      	negs	r0, r0
 8000352:	4053      	eors	r3, r2
 8000354:	2200      	movs	r2, #0
 8000356:	469c      	mov	ip, r3
 8000358:	0903      	lsrs	r3, r0, #4
 800035a:	428b      	cmp	r3, r1
 800035c:	d32d      	bcc.n	80003ba <__divsi3+0x17a>
 800035e:	0a03      	lsrs	r3, r0, #8
 8000360:	428b      	cmp	r3, r1
 8000362:	d312      	bcc.n	800038a <__divsi3+0x14a>
 8000364:	22fc      	movs	r2, #252	; 0xfc
 8000366:	0189      	lsls	r1, r1, #6
 8000368:	ba12      	rev	r2, r2
 800036a:	0a03      	lsrs	r3, r0, #8
 800036c:	428b      	cmp	r3, r1
 800036e:	d30c      	bcc.n	800038a <__divsi3+0x14a>
 8000370:	0189      	lsls	r1, r1, #6
 8000372:	1192      	asrs	r2, r2, #6
 8000374:	428b      	cmp	r3, r1
 8000376:	d308      	bcc.n	800038a <__divsi3+0x14a>
 8000378:	0189      	lsls	r1, r1, #6
 800037a:	1192      	asrs	r2, r2, #6
 800037c:	428b      	cmp	r3, r1
 800037e:	d304      	bcc.n	800038a <__divsi3+0x14a>
 8000380:	0189      	lsls	r1, r1, #6
 8000382:	d03a      	beq.n	80003fa <__divsi3+0x1ba>
 8000384:	1192      	asrs	r2, r2, #6
 8000386:	e000      	b.n	800038a <__divsi3+0x14a>
 8000388:	0989      	lsrs	r1, r1, #6
 800038a:	09c3      	lsrs	r3, r0, #7
 800038c:	428b      	cmp	r3, r1
 800038e:	d301      	bcc.n	8000394 <__divsi3+0x154>
 8000390:	01cb      	lsls	r3, r1, #7
 8000392:	1ac0      	subs	r0, r0, r3
 8000394:	4152      	adcs	r2, r2
 8000396:	0983      	lsrs	r3, r0, #6
 8000398:	428b      	cmp	r3, r1
 800039a:	d301      	bcc.n	80003a0 <__divsi3+0x160>
 800039c:	018b      	lsls	r3, r1, #6
 800039e:	1ac0      	subs	r0, r0, r3
 80003a0:	4152      	adcs	r2, r2
 80003a2:	0943      	lsrs	r3, r0, #5
 80003a4:	428b      	cmp	r3, r1
 80003a6:	d301      	bcc.n	80003ac <__divsi3+0x16c>
 80003a8:	014b      	lsls	r3, r1, #5
 80003aa:	1ac0      	subs	r0, r0, r3
 80003ac:	4152      	adcs	r2, r2
 80003ae:	0903      	lsrs	r3, r0, #4
 80003b0:	428b      	cmp	r3, r1
 80003b2:	d301      	bcc.n	80003b8 <__divsi3+0x178>
 80003b4:	010b      	lsls	r3, r1, #4
 80003b6:	1ac0      	subs	r0, r0, r3
 80003b8:	4152      	adcs	r2, r2
 80003ba:	08c3      	lsrs	r3, r0, #3
 80003bc:	428b      	cmp	r3, r1
 80003be:	d301      	bcc.n	80003c4 <__divsi3+0x184>
 80003c0:	00cb      	lsls	r3, r1, #3
 80003c2:	1ac0      	subs	r0, r0, r3
 80003c4:	4152      	adcs	r2, r2
 80003c6:	0883      	lsrs	r3, r0, #2
 80003c8:	428b      	cmp	r3, r1
 80003ca:	d301      	bcc.n	80003d0 <__divsi3+0x190>
 80003cc:	008b      	lsls	r3, r1, #2
 80003ce:	1ac0      	subs	r0, r0, r3
 80003d0:	4152      	adcs	r2, r2
 80003d2:	d2d9      	bcs.n	8000388 <__divsi3+0x148>
 80003d4:	0843      	lsrs	r3, r0, #1
 80003d6:	428b      	cmp	r3, r1
 80003d8:	d301      	bcc.n	80003de <__divsi3+0x19e>
 80003da:	004b      	lsls	r3, r1, #1
 80003dc:	1ac0      	subs	r0, r0, r3
 80003de:	4152      	adcs	r2, r2
 80003e0:	1a41      	subs	r1, r0, r1
 80003e2:	d200      	bcs.n	80003e6 <__divsi3+0x1a6>
 80003e4:	4601      	mov	r1, r0
 80003e6:	4663      	mov	r3, ip
 80003e8:	4152      	adcs	r2, r2
 80003ea:	105b      	asrs	r3, r3, #1
 80003ec:	4610      	mov	r0, r2
 80003ee:	d301      	bcc.n	80003f4 <__divsi3+0x1b4>
 80003f0:	4240      	negs	r0, r0
 80003f2:	2b00      	cmp	r3, #0
 80003f4:	d500      	bpl.n	80003f8 <__divsi3+0x1b8>
 80003f6:	4249      	negs	r1, r1
 80003f8:	4770      	bx	lr
 80003fa:	4663      	mov	r3, ip
 80003fc:	105b      	asrs	r3, r3, #1
 80003fe:	d300      	bcc.n	8000402 <__divsi3+0x1c2>
 8000400:	4240      	negs	r0, r0
 8000402:	b501      	push	{r0, lr}
 8000404:	2000      	movs	r0, #0
 8000406:	f000 f805 	bl	8000414 <__aeabi_idiv0>
 800040a:	bd02      	pop	{r1, pc}

0800040c <__aeabi_idivmod>:
 800040c:	2900      	cmp	r1, #0
 800040e:	d0f8      	beq.n	8000402 <__divsi3+0x1c2>
 8000410:	e716      	b.n	8000240 <__divsi3>
 8000412:	4770      	bx	lr

08000414 <__aeabi_idiv0>:
 8000414:	4770      	bx	lr
 8000416:	46c0      	nop			; (mov r8, r8)

08000418 <__aeabi_cdrcmple>:
 8000418:	4684      	mov	ip, r0
 800041a:	1c10      	adds	r0, r2, #0
 800041c:	4662      	mov	r2, ip
 800041e:	468c      	mov	ip, r1
 8000420:	1c19      	adds	r1, r3, #0
 8000422:	4663      	mov	r3, ip
 8000424:	e000      	b.n	8000428 <__aeabi_cdcmpeq>
 8000426:	46c0      	nop			; (mov r8, r8)

08000428 <__aeabi_cdcmpeq>:
 8000428:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 800042a:	f001 f83b 	bl	80014a4 <__ledf2>
 800042e:	2800      	cmp	r0, #0
 8000430:	d401      	bmi.n	8000436 <__aeabi_cdcmpeq+0xe>
 8000432:	2100      	movs	r1, #0
 8000434:	42c8      	cmn	r0, r1
 8000436:	bd1f      	pop	{r0, r1, r2, r3, r4, pc}

08000438 <__aeabi_dcmpeq>:
 8000438:	b510      	push	{r4, lr}
 800043a:	f000 ff93 	bl	8001364 <__eqdf2>
 800043e:	4240      	negs	r0, r0
 8000440:	3001      	adds	r0, #1
 8000442:	bd10      	pop	{r4, pc}

08000444 <__aeabi_dcmplt>:
 8000444:	b510      	push	{r4, lr}
 8000446:	f001 f82d 	bl	80014a4 <__ledf2>
 800044a:	2800      	cmp	r0, #0
 800044c:	db01      	blt.n	8000452 <__aeabi_dcmplt+0xe>
 800044e:	2000      	movs	r0, #0
 8000450:	bd10      	pop	{r4, pc}
 8000452:	2001      	movs	r0, #1
 8000454:	bd10      	pop	{r4, pc}
 8000456:	46c0      	nop			; (mov r8, r8)

08000458 <__aeabi_dcmple>:
 8000458:	b510      	push	{r4, lr}
 800045a:	f001 f823 	bl	80014a4 <__ledf2>
 800045e:	2800      	cmp	r0, #0
 8000460:	dd01      	ble.n	8000466 <__aeabi_dcmple+0xe>
 8000462:	2000      	movs	r0, #0
 8000464:	bd10      	pop	{r4, pc}
 8000466:	2001      	movs	r0, #1
 8000468:	bd10      	pop	{r4, pc}
 800046a:	46c0      	nop			; (mov r8, r8)

0800046c <__aeabi_dcmpgt>:
 800046c:	b510      	push	{r4, lr}
 800046e:	f000 ffb5 	bl	80013dc <__gedf2>
 8000472:	2800      	cmp	r0, #0
 8000474:	dc01      	bgt.n	800047a <__aeabi_dcmpgt+0xe>
 8000476:	2000      	movs	r0, #0
 8000478:	bd10      	pop	{r4, pc}
 800047a:	2001      	movs	r0, #1
 800047c:	bd10      	pop	{r4, pc}
 800047e:	46c0      	nop			; (mov r8, r8)

08000480 <__aeabi_dcmpge>:
 8000480:	b510      	push	{r4, lr}
 8000482:	f000 ffab 	bl	80013dc <__gedf2>
 8000486:	2800      	cmp	r0, #0
 8000488:	da01      	bge.n	800048e <__aeabi_dcmpge+0xe>
 800048a:	2000      	movs	r0, #0
 800048c:	bd10      	pop	{r4, pc}
 800048e:	2001      	movs	r0, #1
 8000490:	bd10      	pop	{r4, pc}
 8000492:	46c0      	nop			; (mov r8, r8)

08000494 <__aeabi_uldivmod>:
 8000494:	2b00      	cmp	r3, #0
 8000496:	d111      	bne.n	80004bc <__aeabi_uldivmod+0x28>
 8000498:	2a00      	cmp	r2, #0
 800049a:	d10f      	bne.n	80004bc <__aeabi_uldivmod+0x28>
 800049c:	2900      	cmp	r1, #0
 800049e:	d100      	bne.n	80004a2 <__aeabi_uldivmod+0xe>
 80004a0:	2800      	cmp	r0, #0
 80004a2:	d002      	beq.n	80004aa <__aeabi_uldivmod+0x16>
 80004a4:	2100      	movs	r1, #0
 80004a6:	43c9      	mvns	r1, r1
 80004a8:	1c08      	adds	r0, r1, #0
 80004aa:	b407      	push	{r0, r1, r2}
 80004ac:	4802      	ldr	r0, [pc, #8]	; (80004b8 <__aeabi_uldivmod+0x24>)
 80004ae:	a102      	add	r1, pc, #8	; (adr r1, 80004b8 <__aeabi_uldivmod+0x24>)
 80004b0:	1840      	adds	r0, r0, r1
 80004b2:	9002      	str	r0, [sp, #8]
 80004b4:	bd03      	pop	{r0, r1, pc}
 80004b6:	46c0      	nop			; (mov r8, r8)
 80004b8:	ffffff5d 	.word	0xffffff5d
 80004bc:	b403      	push	{r0, r1}
 80004be:	4668      	mov	r0, sp
 80004c0:	b501      	push	{r0, lr}
 80004c2:	9802      	ldr	r0, [sp, #8]
 80004c4:	f000 f824 	bl	8000510 <__udivmoddi4>
 80004c8:	9b01      	ldr	r3, [sp, #4]
 80004ca:	469e      	mov	lr, r3
 80004cc:	b002      	add	sp, #8
 80004ce:	bc0c      	pop	{r2, r3}
 80004d0:	4770      	bx	lr
 80004d2:	46c0      	nop			; (mov r8, r8)

080004d4 <__aeabi_d2uiz>:
 80004d4:	b570      	push	{r4, r5, r6, lr}
 80004d6:	2200      	movs	r2, #0
 80004d8:	4b0c      	ldr	r3, [pc, #48]	; (800050c <__aeabi_d2uiz+0x38>)
 80004da:	0004      	movs	r4, r0
 80004dc:	000d      	movs	r5, r1
 80004de:	f7ff ffcf 	bl	8000480 <__aeabi_dcmpge>
 80004e2:	2800      	cmp	r0, #0
 80004e4:	d104      	bne.n	80004f0 <__aeabi_d2uiz+0x1c>
 80004e6:	0020      	movs	r0, r4
 80004e8:	0029      	movs	r1, r5
 80004ea:	f001 fe19 	bl	8002120 <__aeabi_d2iz>
 80004ee:	bd70      	pop	{r4, r5, r6, pc}
 80004f0:	4b06      	ldr	r3, [pc, #24]	; (800050c <__aeabi_d2uiz+0x38>)
 80004f2:	2200      	movs	r2, #0
 80004f4:	0020      	movs	r0, r4
 80004f6:	0029      	movs	r1, r5
 80004f8:	f001 faae 	bl	8001a58 <__aeabi_dsub>
 80004fc:	f001 fe10 	bl	8002120 <__aeabi_d2iz>
 8000500:	2380      	movs	r3, #128	; 0x80
 8000502:	061b      	lsls	r3, r3, #24
 8000504:	469c      	mov	ip, r3
 8000506:	4460      	add	r0, ip
 8000508:	e7f1      	b.n	80004ee <__aeabi_d2uiz+0x1a>
 800050a:	46c0      	nop			; (mov r8, r8)
 800050c:	41e00000 	.word	0x41e00000

08000510 <__udivmoddi4>:
 8000510:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000512:	464f      	mov	r7, r9
 8000514:	4646      	mov	r6, r8
 8000516:	46d6      	mov	lr, sl
 8000518:	b5c0      	push	{r6, r7, lr}
 800051a:	0004      	movs	r4, r0
 800051c:	b082      	sub	sp, #8
 800051e:	000d      	movs	r5, r1
 8000520:	4691      	mov	r9, r2
 8000522:	4698      	mov	r8, r3
 8000524:	428b      	cmp	r3, r1
 8000526:	d82f      	bhi.n	8000588 <__udivmoddi4+0x78>
 8000528:	d02c      	beq.n	8000584 <__udivmoddi4+0x74>
 800052a:	4641      	mov	r1, r8
 800052c:	4648      	mov	r0, r9
 800052e:	f001 ff8d 	bl	800244c <__clzdi2>
 8000532:	0029      	movs	r1, r5
 8000534:	0006      	movs	r6, r0
 8000536:	0020      	movs	r0, r4
 8000538:	f001 ff88 	bl	800244c <__clzdi2>
 800053c:	1a33      	subs	r3, r6, r0
 800053e:	469c      	mov	ip, r3
 8000540:	3b20      	subs	r3, #32
 8000542:	469a      	mov	sl, r3
 8000544:	d500      	bpl.n	8000548 <__udivmoddi4+0x38>
 8000546:	e076      	b.n	8000636 <__udivmoddi4+0x126>
 8000548:	464b      	mov	r3, r9
 800054a:	4652      	mov	r2, sl
 800054c:	4093      	lsls	r3, r2
 800054e:	001f      	movs	r7, r3
 8000550:	464b      	mov	r3, r9
 8000552:	4662      	mov	r2, ip
 8000554:	4093      	lsls	r3, r2
 8000556:	001e      	movs	r6, r3
 8000558:	42af      	cmp	r7, r5
 800055a:	d828      	bhi.n	80005ae <__udivmoddi4+0x9e>
 800055c:	d025      	beq.n	80005aa <__udivmoddi4+0x9a>
 800055e:	4653      	mov	r3, sl
 8000560:	1ba4      	subs	r4, r4, r6
 8000562:	41bd      	sbcs	r5, r7
 8000564:	2b00      	cmp	r3, #0
 8000566:	da00      	bge.n	800056a <__udivmoddi4+0x5a>
 8000568:	e07b      	b.n	8000662 <__udivmoddi4+0x152>
 800056a:	2200      	movs	r2, #0
 800056c:	2300      	movs	r3, #0
 800056e:	9200      	str	r2, [sp, #0]
 8000570:	9301      	str	r3, [sp, #4]
 8000572:	2301      	movs	r3, #1
 8000574:	4652      	mov	r2, sl
 8000576:	4093      	lsls	r3, r2
 8000578:	9301      	str	r3, [sp, #4]
 800057a:	2301      	movs	r3, #1
 800057c:	4662      	mov	r2, ip
 800057e:	4093      	lsls	r3, r2
 8000580:	9300      	str	r3, [sp, #0]
 8000582:	e018      	b.n	80005b6 <__udivmoddi4+0xa6>
 8000584:	4282      	cmp	r2, r0
 8000586:	d9d0      	bls.n	800052a <__udivmoddi4+0x1a>
 8000588:	2200      	movs	r2, #0
 800058a:	2300      	movs	r3, #0
 800058c:	9200      	str	r2, [sp, #0]
 800058e:	9301      	str	r3, [sp, #4]
 8000590:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8000592:	2b00      	cmp	r3, #0
 8000594:	d001      	beq.n	800059a <__udivmoddi4+0x8a>
 8000596:	601c      	str	r4, [r3, #0]
 8000598:	605d      	str	r5, [r3, #4]
 800059a:	9800      	ldr	r0, [sp, #0]
 800059c:	9901      	ldr	r1, [sp, #4]
 800059e:	b002      	add	sp, #8
 80005a0:	bc1c      	pop	{r2, r3, r4}
 80005a2:	4690      	mov	r8, r2
 80005a4:	4699      	mov	r9, r3
 80005a6:	46a2      	mov	sl, r4
 80005a8:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80005aa:	42a3      	cmp	r3, r4
 80005ac:	d9d7      	bls.n	800055e <__udivmoddi4+0x4e>
 80005ae:	2200      	movs	r2, #0
 80005b0:	2300      	movs	r3, #0
 80005b2:	9200      	str	r2, [sp, #0]
 80005b4:	9301      	str	r3, [sp, #4]
 80005b6:	4663      	mov	r3, ip
 80005b8:	2b00      	cmp	r3, #0
 80005ba:	d0e9      	beq.n	8000590 <__udivmoddi4+0x80>
 80005bc:	07fb      	lsls	r3, r7, #31
 80005be:	4698      	mov	r8, r3
 80005c0:	4641      	mov	r1, r8
 80005c2:	0872      	lsrs	r2, r6, #1
 80005c4:	430a      	orrs	r2, r1
 80005c6:	087b      	lsrs	r3, r7, #1
 80005c8:	4666      	mov	r6, ip
 80005ca:	e00e      	b.n	80005ea <__udivmoddi4+0xda>
 80005cc:	42ab      	cmp	r3, r5
 80005ce:	d101      	bne.n	80005d4 <__udivmoddi4+0xc4>
 80005d0:	42a2      	cmp	r2, r4
 80005d2:	d80c      	bhi.n	80005ee <__udivmoddi4+0xde>
 80005d4:	1aa4      	subs	r4, r4, r2
 80005d6:	419d      	sbcs	r5, r3
 80005d8:	2001      	movs	r0, #1
 80005da:	1924      	adds	r4, r4, r4
 80005dc:	416d      	adcs	r5, r5
 80005de:	2100      	movs	r1, #0
 80005e0:	3e01      	subs	r6, #1
 80005e2:	1824      	adds	r4, r4, r0
 80005e4:	414d      	adcs	r5, r1
 80005e6:	2e00      	cmp	r6, #0
 80005e8:	d006      	beq.n	80005f8 <__udivmoddi4+0xe8>
 80005ea:	42ab      	cmp	r3, r5
 80005ec:	d9ee      	bls.n	80005cc <__udivmoddi4+0xbc>
 80005ee:	3e01      	subs	r6, #1
 80005f0:	1924      	adds	r4, r4, r4
 80005f2:	416d      	adcs	r5, r5
 80005f4:	2e00      	cmp	r6, #0
 80005f6:	d1f8      	bne.n	80005ea <__udivmoddi4+0xda>
 80005f8:	9800      	ldr	r0, [sp, #0]
 80005fa:	9901      	ldr	r1, [sp, #4]
 80005fc:	4653      	mov	r3, sl
 80005fe:	1900      	adds	r0, r0, r4
 8000600:	4169      	adcs	r1, r5
 8000602:	2b00      	cmp	r3, #0
 8000604:	db23      	blt.n	800064e <__udivmoddi4+0x13e>
 8000606:	002b      	movs	r3, r5
 8000608:	4652      	mov	r2, sl
 800060a:	40d3      	lsrs	r3, r2
 800060c:	002a      	movs	r2, r5
 800060e:	4664      	mov	r4, ip
 8000610:	40e2      	lsrs	r2, r4
 8000612:	001c      	movs	r4, r3
 8000614:	4653      	mov	r3, sl
 8000616:	0015      	movs	r5, r2
 8000618:	2b00      	cmp	r3, #0
 800061a:	db2d      	blt.n	8000678 <__udivmoddi4+0x168>
 800061c:	0026      	movs	r6, r4
 800061e:	4657      	mov	r7, sl
 8000620:	40be      	lsls	r6, r7
 8000622:	0033      	movs	r3, r6
 8000624:	0026      	movs	r6, r4
 8000626:	4667      	mov	r7, ip
 8000628:	40be      	lsls	r6, r7
 800062a:	0032      	movs	r2, r6
 800062c:	1a80      	subs	r0, r0, r2
 800062e:	4199      	sbcs	r1, r3
 8000630:	9000      	str	r0, [sp, #0]
 8000632:	9101      	str	r1, [sp, #4]
 8000634:	e7ac      	b.n	8000590 <__udivmoddi4+0x80>
 8000636:	4662      	mov	r2, ip
 8000638:	2320      	movs	r3, #32
 800063a:	1a9b      	subs	r3, r3, r2
 800063c:	464a      	mov	r2, r9
 800063e:	40da      	lsrs	r2, r3
 8000640:	4661      	mov	r1, ip
 8000642:	0013      	movs	r3, r2
 8000644:	4642      	mov	r2, r8
 8000646:	408a      	lsls	r2, r1
 8000648:	0017      	movs	r7, r2
 800064a:	431f      	orrs	r7, r3
 800064c:	e780      	b.n	8000550 <__udivmoddi4+0x40>
 800064e:	4662      	mov	r2, ip
 8000650:	2320      	movs	r3, #32
 8000652:	1a9b      	subs	r3, r3, r2
 8000654:	002a      	movs	r2, r5
 8000656:	4666      	mov	r6, ip
 8000658:	409a      	lsls	r2, r3
 800065a:	0023      	movs	r3, r4
 800065c:	40f3      	lsrs	r3, r6
 800065e:	4313      	orrs	r3, r2
 8000660:	e7d4      	b.n	800060c <__udivmoddi4+0xfc>
 8000662:	4662      	mov	r2, ip
 8000664:	2320      	movs	r3, #32
 8000666:	2100      	movs	r1, #0
 8000668:	1a9b      	subs	r3, r3, r2
 800066a:	2200      	movs	r2, #0
 800066c:	9100      	str	r1, [sp, #0]
 800066e:	9201      	str	r2, [sp, #4]
 8000670:	2201      	movs	r2, #1
 8000672:	40da      	lsrs	r2, r3
 8000674:	9201      	str	r2, [sp, #4]
 8000676:	e780      	b.n	800057a <__udivmoddi4+0x6a>
 8000678:	2320      	movs	r3, #32
 800067a:	4662      	mov	r2, ip
 800067c:	0026      	movs	r6, r4
 800067e:	1a9b      	subs	r3, r3, r2
 8000680:	40de      	lsrs	r6, r3
 8000682:	002f      	movs	r7, r5
 8000684:	46b0      	mov	r8, r6
 8000686:	4666      	mov	r6, ip
 8000688:	40b7      	lsls	r7, r6
 800068a:	4646      	mov	r6, r8
 800068c:	003b      	movs	r3, r7
 800068e:	4333      	orrs	r3, r6
 8000690:	e7c8      	b.n	8000624 <__udivmoddi4+0x114>
 8000692:	46c0      	nop			; (mov r8, r8)

08000694 <__aeabi_i2f>:
 8000694:	b570      	push	{r4, r5, r6, lr}
 8000696:	2800      	cmp	r0, #0
 8000698:	d03d      	beq.n	8000716 <__aeabi_i2f+0x82>
 800069a:	17c3      	asrs	r3, r0, #31
 800069c:	18c5      	adds	r5, r0, r3
 800069e:	405d      	eors	r5, r3
 80006a0:	0fc4      	lsrs	r4, r0, #31
 80006a2:	0028      	movs	r0, r5
 80006a4:	f001 feb4 	bl	8002410 <__clzsi2>
 80006a8:	229e      	movs	r2, #158	; 0x9e
 80006aa:	1a12      	subs	r2, r2, r0
 80006ac:	2a96      	cmp	r2, #150	; 0x96
 80006ae:	dc07      	bgt.n	80006c0 <__aeabi_i2f+0x2c>
 80006b0:	b2d2      	uxtb	r2, r2
 80006b2:	2808      	cmp	r0, #8
 80006b4:	dd33      	ble.n	800071e <__aeabi_i2f+0x8a>
 80006b6:	3808      	subs	r0, #8
 80006b8:	4085      	lsls	r5, r0
 80006ba:	0268      	lsls	r0, r5, #9
 80006bc:	0a40      	lsrs	r0, r0, #9
 80006be:	e023      	b.n	8000708 <__aeabi_i2f+0x74>
 80006c0:	2a99      	cmp	r2, #153	; 0x99
 80006c2:	dd0b      	ble.n	80006dc <__aeabi_i2f+0x48>
 80006c4:	2305      	movs	r3, #5
 80006c6:	0029      	movs	r1, r5
 80006c8:	1a1b      	subs	r3, r3, r0
 80006ca:	40d9      	lsrs	r1, r3
 80006cc:	0003      	movs	r3, r0
 80006ce:	331b      	adds	r3, #27
 80006d0:	409d      	lsls	r5, r3
 80006d2:	002b      	movs	r3, r5
 80006d4:	1e5d      	subs	r5, r3, #1
 80006d6:	41ab      	sbcs	r3, r5
 80006d8:	4319      	orrs	r1, r3
 80006da:	000d      	movs	r5, r1
 80006dc:	2805      	cmp	r0, #5
 80006de:	dd01      	ble.n	80006e4 <__aeabi_i2f+0x50>
 80006e0:	1f43      	subs	r3, r0, #5
 80006e2:	409d      	lsls	r5, r3
 80006e4:	002b      	movs	r3, r5
 80006e6:	490f      	ldr	r1, [pc, #60]	; (8000724 <__aeabi_i2f+0x90>)
 80006e8:	400b      	ands	r3, r1
 80006ea:	076e      	lsls	r6, r5, #29
 80006ec:	d009      	beq.n	8000702 <__aeabi_i2f+0x6e>
 80006ee:	260f      	movs	r6, #15
 80006f0:	4035      	ands	r5, r6
 80006f2:	2d04      	cmp	r5, #4
 80006f4:	d005      	beq.n	8000702 <__aeabi_i2f+0x6e>
 80006f6:	3304      	adds	r3, #4
 80006f8:	015d      	lsls	r5, r3, #5
 80006fa:	d502      	bpl.n	8000702 <__aeabi_i2f+0x6e>
 80006fc:	229f      	movs	r2, #159	; 0x9f
 80006fe:	400b      	ands	r3, r1
 8000700:	1a12      	subs	r2, r2, r0
 8000702:	019b      	lsls	r3, r3, #6
 8000704:	0a58      	lsrs	r0, r3, #9
 8000706:	b2d2      	uxtb	r2, r2
 8000708:	0240      	lsls	r0, r0, #9
 800070a:	05d2      	lsls	r2, r2, #23
 800070c:	0a40      	lsrs	r0, r0, #9
 800070e:	07e4      	lsls	r4, r4, #31
 8000710:	4310      	orrs	r0, r2
 8000712:	4320      	orrs	r0, r4
 8000714:	bd70      	pop	{r4, r5, r6, pc}
 8000716:	2400      	movs	r4, #0
 8000718:	2200      	movs	r2, #0
 800071a:	2000      	movs	r0, #0
 800071c:	e7f4      	b.n	8000708 <__aeabi_i2f+0x74>
 800071e:	0268      	lsls	r0, r5, #9
 8000720:	0a40      	lsrs	r0, r0, #9
 8000722:	e7f1      	b.n	8000708 <__aeabi_i2f+0x74>
 8000724:	fbffffff 	.word	0xfbffffff

08000728 <__aeabi_dadd>:
 8000728:	b5f0      	push	{r4, r5, r6, r7, lr}
 800072a:	464f      	mov	r7, r9
 800072c:	4646      	mov	r6, r8
 800072e:	46d6      	mov	lr, sl
 8000730:	000c      	movs	r4, r1
 8000732:	0309      	lsls	r1, r1, #12
 8000734:	b5c0      	push	{r6, r7, lr}
 8000736:	0a49      	lsrs	r1, r1, #9
 8000738:	0f47      	lsrs	r7, r0, #29
 800073a:	005e      	lsls	r6, r3, #1
 800073c:	4339      	orrs	r1, r7
 800073e:	031f      	lsls	r7, r3, #12
 8000740:	0fdb      	lsrs	r3, r3, #31
 8000742:	469c      	mov	ip, r3
 8000744:	0065      	lsls	r5, r4, #1
 8000746:	0a7b      	lsrs	r3, r7, #9
 8000748:	0f57      	lsrs	r7, r2, #29
 800074a:	431f      	orrs	r7, r3
 800074c:	0d6d      	lsrs	r5, r5, #21
 800074e:	0fe4      	lsrs	r4, r4, #31
 8000750:	0d76      	lsrs	r6, r6, #21
 8000752:	46a1      	mov	r9, r4
 8000754:	00c0      	lsls	r0, r0, #3
 8000756:	46b8      	mov	r8, r7
 8000758:	00d2      	lsls	r2, r2, #3
 800075a:	1bab      	subs	r3, r5, r6
 800075c:	4564      	cmp	r4, ip
 800075e:	d07b      	beq.n	8000858 <__aeabi_dadd+0x130>
 8000760:	2b00      	cmp	r3, #0
 8000762:	dd5f      	ble.n	8000824 <__aeabi_dadd+0xfc>
 8000764:	2e00      	cmp	r6, #0
 8000766:	d000      	beq.n	800076a <__aeabi_dadd+0x42>
 8000768:	e0a4      	b.n	80008b4 <__aeabi_dadd+0x18c>
 800076a:	003e      	movs	r6, r7
 800076c:	4316      	orrs	r6, r2
 800076e:	d100      	bne.n	8000772 <__aeabi_dadd+0x4a>
 8000770:	e112      	b.n	8000998 <__aeabi_dadd+0x270>
 8000772:	1e5e      	subs	r6, r3, #1
 8000774:	2e00      	cmp	r6, #0
 8000776:	d000      	beq.n	800077a <__aeabi_dadd+0x52>
 8000778:	e19e      	b.n	8000ab8 <__aeabi_dadd+0x390>
 800077a:	1a87      	subs	r7, r0, r2
 800077c:	4643      	mov	r3, r8
 800077e:	42b8      	cmp	r0, r7
 8000780:	4180      	sbcs	r0, r0
 8000782:	2501      	movs	r5, #1
 8000784:	1ac9      	subs	r1, r1, r3
 8000786:	4240      	negs	r0, r0
 8000788:	1a09      	subs	r1, r1, r0
 800078a:	020b      	lsls	r3, r1, #8
 800078c:	d400      	bmi.n	8000790 <__aeabi_dadd+0x68>
 800078e:	e131      	b.n	80009f4 <__aeabi_dadd+0x2cc>
 8000790:	0249      	lsls	r1, r1, #9
 8000792:	0a4e      	lsrs	r6, r1, #9
 8000794:	2e00      	cmp	r6, #0
 8000796:	d100      	bne.n	800079a <__aeabi_dadd+0x72>
 8000798:	e16e      	b.n	8000a78 <__aeabi_dadd+0x350>
 800079a:	0030      	movs	r0, r6
 800079c:	f001 fe38 	bl	8002410 <__clzsi2>
 80007a0:	0003      	movs	r3, r0
 80007a2:	3b08      	subs	r3, #8
 80007a4:	2b1f      	cmp	r3, #31
 80007a6:	dd00      	ble.n	80007aa <__aeabi_dadd+0x82>
 80007a8:	e161      	b.n	8000a6e <__aeabi_dadd+0x346>
 80007aa:	2220      	movs	r2, #32
 80007ac:	0039      	movs	r1, r7
 80007ae:	1ad2      	subs	r2, r2, r3
 80007b0:	409e      	lsls	r6, r3
 80007b2:	40d1      	lsrs	r1, r2
 80007b4:	409f      	lsls	r7, r3
 80007b6:	430e      	orrs	r6, r1
 80007b8:	429d      	cmp	r5, r3
 80007ba:	dd00      	ble.n	80007be <__aeabi_dadd+0x96>
 80007bc:	e151      	b.n	8000a62 <__aeabi_dadd+0x33a>
 80007be:	1b5d      	subs	r5, r3, r5
 80007c0:	1c6b      	adds	r3, r5, #1
 80007c2:	2b1f      	cmp	r3, #31
 80007c4:	dd00      	ble.n	80007c8 <__aeabi_dadd+0xa0>
 80007c6:	e17c      	b.n	8000ac2 <__aeabi_dadd+0x39a>
 80007c8:	2120      	movs	r1, #32
 80007ca:	1ac9      	subs	r1, r1, r3
 80007cc:	003d      	movs	r5, r7
 80007ce:	0030      	movs	r0, r6
 80007d0:	408f      	lsls	r7, r1
 80007d2:	4088      	lsls	r0, r1
 80007d4:	40dd      	lsrs	r5, r3
 80007d6:	1e79      	subs	r1, r7, #1
 80007d8:	418f      	sbcs	r7, r1
 80007da:	0031      	movs	r1, r6
 80007dc:	2207      	movs	r2, #7
 80007de:	4328      	orrs	r0, r5
 80007e0:	40d9      	lsrs	r1, r3
 80007e2:	2500      	movs	r5, #0
 80007e4:	4307      	orrs	r7, r0
 80007e6:	403a      	ands	r2, r7
 80007e8:	2a00      	cmp	r2, #0
 80007ea:	d009      	beq.n	8000800 <__aeabi_dadd+0xd8>
 80007ec:	230f      	movs	r3, #15
 80007ee:	403b      	ands	r3, r7
 80007f0:	2b04      	cmp	r3, #4
 80007f2:	d005      	beq.n	8000800 <__aeabi_dadd+0xd8>
 80007f4:	1d3b      	adds	r3, r7, #4
 80007f6:	42bb      	cmp	r3, r7
 80007f8:	41bf      	sbcs	r7, r7
 80007fa:	427f      	negs	r7, r7
 80007fc:	19c9      	adds	r1, r1, r7
 80007fe:	001f      	movs	r7, r3
 8000800:	020b      	lsls	r3, r1, #8
 8000802:	d400      	bmi.n	8000806 <__aeabi_dadd+0xde>
 8000804:	e226      	b.n	8000c54 <__aeabi_dadd+0x52c>
 8000806:	1c6a      	adds	r2, r5, #1
 8000808:	4bc6      	ldr	r3, [pc, #792]	; (8000b24 <__aeabi_dadd+0x3fc>)
 800080a:	0555      	lsls	r5, r2, #21
 800080c:	0d6d      	lsrs	r5, r5, #21
 800080e:	429a      	cmp	r2, r3
 8000810:	d100      	bne.n	8000814 <__aeabi_dadd+0xec>
 8000812:	e106      	b.n	8000a22 <__aeabi_dadd+0x2fa>
 8000814:	4ac4      	ldr	r2, [pc, #784]	; (8000b28 <__aeabi_dadd+0x400>)
 8000816:	08ff      	lsrs	r7, r7, #3
 8000818:	400a      	ands	r2, r1
 800081a:	0753      	lsls	r3, r2, #29
 800081c:	0252      	lsls	r2, r2, #9
 800081e:	433b      	orrs	r3, r7
 8000820:	0b12      	lsrs	r2, r2, #12
 8000822:	e08e      	b.n	8000942 <__aeabi_dadd+0x21a>
 8000824:	2b00      	cmp	r3, #0
 8000826:	d000      	beq.n	800082a <__aeabi_dadd+0x102>
 8000828:	e0b8      	b.n	800099c <__aeabi_dadd+0x274>
 800082a:	1c6b      	adds	r3, r5, #1
 800082c:	055b      	lsls	r3, r3, #21
 800082e:	0d5b      	lsrs	r3, r3, #21
 8000830:	2b01      	cmp	r3, #1
 8000832:	dc00      	bgt.n	8000836 <__aeabi_dadd+0x10e>
 8000834:	e130      	b.n	8000a98 <__aeabi_dadd+0x370>
 8000836:	1a87      	subs	r7, r0, r2
 8000838:	4643      	mov	r3, r8
 800083a:	42b8      	cmp	r0, r7
 800083c:	41b6      	sbcs	r6, r6
 800083e:	1acb      	subs	r3, r1, r3
 8000840:	4276      	negs	r6, r6
 8000842:	1b9e      	subs	r6, r3, r6
 8000844:	0233      	lsls	r3, r6, #8
 8000846:	d500      	bpl.n	800084a <__aeabi_dadd+0x122>
 8000848:	e14c      	b.n	8000ae4 <__aeabi_dadd+0x3bc>
 800084a:	003b      	movs	r3, r7
 800084c:	4333      	orrs	r3, r6
 800084e:	d1a1      	bne.n	8000794 <__aeabi_dadd+0x6c>
 8000850:	2200      	movs	r2, #0
 8000852:	2400      	movs	r4, #0
 8000854:	2500      	movs	r5, #0
 8000856:	e070      	b.n	800093a <__aeabi_dadd+0x212>
 8000858:	2b00      	cmp	r3, #0
 800085a:	dc00      	bgt.n	800085e <__aeabi_dadd+0x136>
 800085c:	e0e5      	b.n	8000a2a <__aeabi_dadd+0x302>
 800085e:	2e00      	cmp	r6, #0
 8000860:	d100      	bne.n	8000864 <__aeabi_dadd+0x13c>
 8000862:	e083      	b.n	800096c <__aeabi_dadd+0x244>
 8000864:	4eaf      	ldr	r6, [pc, #700]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000866:	42b5      	cmp	r5, r6
 8000868:	d060      	beq.n	800092c <__aeabi_dadd+0x204>
 800086a:	2680      	movs	r6, #128	; 0x80
 800086c:	0436      	lsls	r6, r6, #16
 800086e:	4337      	orrs	r7, r6
 8000870:	46b8      	mov	r8, r7
 8000872:	2b38      	cmp	r3, #56	; 0x38
 8000874:	dc00      	bgt.n	8000878 <__aeabi_dadd+0x150>
 8000876:	e13e      	b.n	8000af6 <__aeabi_dadd+0x3ce>
 8000878:	4643      	mov	r3, r8
 800087a:	4313      	orrs	r3, r2
 800087c:	001f      	movs	r7, r3
 800087e:	1e7a      	subs	r2, r7, #1
 8000880:	4197      	sbcs	r7, r2
 8000882:	183f      	adds	r7, r7, r0
 8000884:	4287      	cmp	r7, r0
 8000886:	4180      	sbcs	r0, r0
 8000888:	4240      	negs	r0, r0
 800088a:	1809      	adds	r1, r1, r0
 800088c:	020b      	lsls	r3, r1, #8
 800088e:	d400      	bmi.n	8000892 <__aeabi_dadd+0x16a>
 8000890:	e0b0      	b.n	80009f4 <__aeabi_dadd+0x2cc>
 8000892:	4ba4      	ldr	r3, [pc, #656]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000894:	3501      	adds	r5, #1
 8000896:	429d      	cmp	r5, r3
 8000898:	d100      	bne.n	800089c <__aeabi_dadd+0x174>
 800089a:	e0c3      	b.n	8000a24 <__aeabi_dadd+0x2fc>
 800089c:	4aa2      	ldr	r2, [pc, #648]	; (8000b28 <__aeabi_dadd+0x400>)
 800089e:	087b      	lsrs	r3, r7, #1
 80008a0:	400a      	ands	r2, r1
 80008a2:	2101      	movs	r1, #1
 80008a4:	400f      	ands	r7, r1
 80008a6:	431f      	orrs	r7, r3
 80008a8:	0851      	lsrs	r1, r2, #1
 80008aa:	07d3      	lsls	r3, r2, #31
 80008ac:	2207      	movs	r2, #7
 80008ae:	431f      	orrs	r7, r3
 80008b0:	403a      	ands	r2, r7
 80008b2:	e799      	b.n	80007e8 <__aeabi_dadd+0xc0>
 80008b4:	4e9b      	ldr	r6, [pc, #620]	; (8000b24 <__aeabi_dadd+0x3fc>)
 80008b6:	42b5      	cmp	r5, r6
 80008b8:	d038      	beq.n	800092c <__aeabi_dadd+0x204>
 80008ba:	2680      	movs	r6, #128	; 0x80
 80008bc:	0436      	lsls	r6, r6, #16
 80008be:	4337      	orrs	r7, r6
 80008c0:	46b8      	mov	r8, r7
 80008c2:	2b38      	cmp	r3, #56	; 0x38
 80008c4:	dd00      	ble.n	80008c8 <__aeabi_dadd+0x1a0>
 80008c6:	e0dc      	b.n	8000a82 <__aeabi_dadd+0x35a>
 80008c8:	2b1f      	cmp	r3, #31
 80008ca:	dc00      	bgt.n	80008ce <__aeabi_dadd+0x1a6>
 80008cc:	e130      	b.n	8000b30 <__aeabi_dadd+0x408>
 80008ce:	001e      	movs	r6, r3
 80008d0:	4647      	mov	r7, r8
 80008d2:	3e20      	subs	r6, #32
 80008d4:	40f7      	lsrs	r7, r6
 80008d6:	46bc      	mov	ip, r7
 80008d8:	2b20      	cmp	r3, #32
 80008da:	d004      	beq.n	80008e6 <__aeabi_dadd+0x1be>
 80008dc:	2640      	movs	r6, #64	; 0x40
 80008de:	1af3      	subs	r3, r6, r3
 80008e0:	4646      	mov	r6, r8
 80008e2:	409e      	lsls	r6, r3
 80008e4:	4332      	orrs	r2, r6
 80008e6:	0017      	movs	r7, r2
 80008e8:	4663      	mov	r3, ip
 80008ea:	1e7a      	subs	r2, r7, #1
 80008ec:	4197      	sbcs	r7, r2
 80008ee:	431f      	orrs	r7, r3
 80008f0:	e0cc      	b.n	8000a8c <__aeabi_dadd+0x364>
 80008f2:	2b00      	cmp	r3, #0
 80008f4:	d100      	bne.n	80008f8 <__aeabi_dadd+0x1d0>
 80008f6:	e204      	b.n	8000d02 <__aeabi_dadd+0x5da>
 80008f8:	4643      	mov	r3, r8
 80008fa:	4313      	orrs	r3, r2
 80008fc:	d100      	bne.n	8000900 <__aeabi_dadd+0x1d8>
 80008fe:	e159      	b.n	8000bb4 <__aeabi_dadd+0x48c>
 8000900:	074b      	lsls	r3, r1, #29
 8000902:	08c0      	lsrs	r0, r0, #3
 8000904:	4318      	orrs	r0, r3
 8000906:	2380      	movs	r3, #128	; 0x80
 8000908:	08c9      	lsrs	r1, r1, #3
 800090a:	031b      	lsls	r3, r3, #12
 800090c:	4219      	tst	r1, r3
 800090e:	d008      	beq.n	8000922 <__aeabi_dadd+0x1fa>
 8000910:	4645      	mov	r5, r8
 8000912:	08ed      	lsrs	r5, r5, #3
 8000914:	421d      	tst	r5, r3
 8000916:	d104      	bne.n	8000922 <__aeabi_dadd+0x1fa>
 8000918:	4643      	mov	r3, r8
 800091a:	08d0      	lsrs	r0, r2, #3
 800091c:	0759      	lsls	r1, r3, #29
 800091e:	4308      	orrs	r0, r1
 8000920:	0029      	movs	r1, r5
 8000922:	0f42      	lsrs	r2, r0, #29
 8000924:	00c9      	lsls	r1, r1, #3
 8000926:	4d7f      	ldr	r5, [pc, #508]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000928:	4311      	orrs	r1, r2
 800092a:	00c0      	lsls	r0, r0, #3
 800092c:	074b      	lsls	r3, r1, #29
 800092e:	08ca      	lsrs	r2, r1, #3
 8000930:	497c      	ldr	r1, [pc, #496]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000932:	08c0      	lsrs	r0, r0, #3
 8000934:	4303      	orrs	r3, r0
 8000936:	428d      	cmp	r5, r1
 8000938:	d068      	beq.n	8000a0c <__aeabi_dadd+0x2e4>
 800093a:	0312      	lsls	r2, r2, #12
 800093c:	056d      	lsls	r5, r5, #21
 800093e:	0b12      	lsrs	r2, r2, #12
 8000940:	0d6d      	lsrs	r5, r5, #21
 8000942:	2100      	movs	r1, #0
 8000944:	0312      	lsls	r2, r2, #12
 8000946:	0018      	movs	r0, r3
 8000948:	0b13      	lsrs	r3, r2, #12
 800094a:	0d0a      	lsrs	r2, r1, #20
 800094c:	0512      	lsls	r2, r2, #20
 800094e:	431a      	orrs	r2, r3
 8000950:	4b76      	ldr	r3, [pc, #472]	; (8000b2c <__aeabi_dadd+0x404>)
 8000952:	052d      	lsls	r5, r5, #20
 8000954:	4013      	ands	r3, r2
 8000956:	432b      	orrs	r3, r5
 8000958:	005b      	lsls	r3, r3, #1
 800095a:	07e4      	lsls	r4, r4, #31
 800095c:	085b      	lsrs	r3, r3, #1
 800095e:	4323      	orrs	r3, r4
 8000960:	0019      	movs	r1, r3
 8000962:	bc1c      	pop	{r2, r3, r4}
 8000964:	4690      	mov	r8, r2
 8000966:	4699      	mov	r9, r3
 8000968:	46a2      	mov	sl, r4
 800096a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800096c:	003e      	movs	r6, r7
 800096e:	4316      	orrs	r6, r2
 8000970:	d012      	beq.n	8000998 <__aeabi_dadd+0x270>
 8000972:	1e5e      	subs	r6, r3, #1
 8000974:	2e00      	cmp	r6, #0
 8000976:	d000      	beq.n	800097a <__aeabi_dadd+0x252>
 8000978:	e100      	b.n	8000b7c <__aeabi_dadd+0x454>
 800097a:	1887      	adds	r7, r0, r2
 800097c:	4287      	cmp	r7, r0
 800097e:	4180      	sbcs	r0, r0
 8000980:	4441      	add	r1, r8
 8000982:	4240      	negs	r0, r0
 8000984:	1809      	adds	r1, r1, r0
 8000986:	2501      	movs	r5, #1
 8000988:	020b      	lsls	r3, r1, #8
 800098a:	d533      	bpl.n	80009f4 <__aeabi_dadd+0x2cc>
 800098c:	2502      	movs	r5, #2
 800098e:	e785      	b.n	800089c <__aeabi_dadd+0x174>
 8000990:	4664      	mov	r4, ip
 8000992:	0033      	movs	r3, r6
 8000994:	4641      	mov	r1, r8
 8000996:	0010      	movs	r0, r2
 8000998:	001d      	movs	r5, r3
 800099a:	e7c7      	b.n	800092c <__aeabi_dadd+0x204>
 800099c:	2d00      	cmp	r5, #0
 800099e:	d000      	beq.n	80009a2 <__aeabi_dadd+0x27a>
 80009a0:	e0da      	b.n	8000b58 <__aeabi_dadd+0x430>
 80009a2:	000c      	movs	r4, r1
 80009a4:	4304      	orrs	r4, r0
 80009a6:	d0f3      	beq.n	8000990 <__aeabi_dadd+0x268>
 80009a8:	1c5c      	adds	r4, r3, #1
 80009aa:	d100      	bne.n	80009ae <__aeabi_dadd+0x286>
 80009ac:	e19f      	b.n	8000cee <__aeabi_dadd+0x5c6>
 80009ae:	4c5d      	ldr	r4, [pc, #372]	; (8000b24 <__aeabi_dadd+0x3fc>)
 80009b0:	42a6      	cmp	r6, r4
 80009b2:	d100      	bne.n	80009b6 <__aeabi_dadd+0x28e>
 80009b4:	e12f      	b.n	8000c16 <__aeabi_dadd+0x4ee>
 80009b6:	43db      	mvns	r3, r3
 80009b8:	2b38      	cmp	r3, #56	; 0x38
 80009ba:	dd00      	ble.n	80009be <__aeabi_dadd+0x296>
 80009bc:	e166      	b.n	8000c8c <__aeabi_dadd+0x564>
 80009be:	2b1f      	cmp	r3, #31
 80009c0:	dd00      	ble.n	80009c4 <__aeabi_dadd+0x29c>
 80009c2:	e183      	b.n	8000ccc <__aeabi_dadd+0x5a4>
 80009c4:	2420      	movs	r4, #32
 80009c6:	0005      	movs	r5, r0
 80009c8:	1ae4      	subs	r4, r4, r3
 80009ca:	000f      	movs	r7, r1
 80009cc:	40dd      	lsrs	r5, r3
 80009ce:	40d9      	lsrs	r1, r3
 80009d0:	40a0      	lsls	r0, r4
 80009d2:	4643      	mov	r3, r8
 80009d4:	40a7      	lsls	r7, r4
 80009d6:	1a5b      	subs	r3, r3, r1
 80009d8:	1e44      	subs	r4, r0, #1
 80009da:	41a0      	sbcs	r0, r4
 80009dc:	4698      	mov	r8, r3
 80009de:	432f      	orrs	r7, r5
 80009e0:	4338      	orrs	r0, r7
 80009e2:	1a17      	subs	r7, r2, r0
 80009e4:	42ba      	cmp	r2, r7
 80009e6:	4192      	sbcs	r2, r2
 80009e8:	4643      	mov	r3, r8
 80009ea:	4252      	negs	r2, r2
 80009ec:	1a99      	subs	r1, r3, r2
 80009ee:	4664      	mov	r4, ip
 80009f0:	0035      	movs	r5, r6
 80009f2:	e6ca      	b.n	800078a <__aeabi_dadd+0x62>
 80009f4:	2207      	movs	r2, #7
 80009f6:	403a      	ands	r2, r7
 80009f8:	2a00      	cmp	r2, #0
 80009fa:	d000      	beq.n	80009fe <__aeabi_dadd+0x2d6>
 80009fc:	e6f6      	b.n	80007ec <__aeabi_dadd+0xc4>
 80009fe:	074b      	lsls	r3, r1, #29
 8000a00:	08ca      	lsrs	r2, r1, #3
 8000a02:	4948      	ldr	r1, [pc, #288]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000a04:	08ff      	lsrs	r7, r7, #3
 8000a06:	433b      	orrs	r3, r7
 8000a08:	428d      	cmp	r5, r1
 8000a0a:	d196      	bne.n	800093a <__aeabi_dadd+0x212>
 8000a0c:	0019      	movs	r1, r3
 8000a0e:	4311      	orrs	r1, r2
 8000a10:	d100      	bne.n	8000a14 <__aeabi_dadd+0x2ec>
 8000a12:	e19e      	b.n	8000d52 <__aeabi_dadd+0x62a>
 8000a14:	2180      	movs	r1, #128	; 0x80
 8000a16:	0309      	lsls	r1, r1, #12
 8000a18:	430a      	orrs	r2, r1
 8000a1a:	0312      	lsls	r2, r2, #12
 8000a1c:	0b12      	lsrs	r2, r2, #12
 8000a1e:	4d41      	ldr	r5, [pc, #260]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000a20:	e78f      	b.n	8000942 <__aeabi_dadd+0x21a>
 8000a22:	0015      	movs	r5, r2
 8000a24:	2200      	movs	r2, #0
 8000a26:	2300      	movs	r3, #0
 8000a28:	e78b      	b.n	8000942 <__aeabi_dadd+0x21a>
 8000a2a:	2b00      	cmp	r3, #0
 8000a2c:	d000      	beq.n	8000a30 <__aeabi_dadd+0x308>
 8000a2e:	e0c7      	b.n	8000bc0 <__aeabi_dadd+0x498>
 8000a30:	1c6b      	adds	r3, r5, #1
 8000a32:	055f      	lsls	r7, r3, #21
 8000a34:	0d7f      	lsrs	r7, r7, #21
 8000a36:	2f01      	cmp	r7, #1
 8000a38:	dc00      	bgt.n	8000a3c <__aeabi_dadd+0x314>
 8000a3a:	e0f1      	b.n	8000c20 <__aeabi_dadd+0x4f8>
 8000a3c:	4d39      	ldr	r5, [pc, #228]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000a3e:	42ab      	cmp	r3, r5
 8000a40:	d100      	bne.n	8000a44 <__aeabi_dadd+0x31c>
 8000a42:	e0b9      	b.n	8000bb8 <__aeabi_dadd+0x490>
 8000a44:	1885      	adds	r5, r0, r2
 8000a46:	000a      	movs	r2, r1
 8000a48:	4285      	cmp	r5, r0
 8000a4a:	4189      	sbcs	r1, r1
 8000a4c:	4442      	add	r2, r8
 8000a4e:	4249      	negs	r1, r1
 8000a50:	1851      	adds	r1, r2, r1
 8000a52:	2207      	movs	r2, #7
 8000a54:	07cf      	lsls	r7, r1, #31
 8000a56:	086d      	lsrs	r5, r5, #1
 8000a58:	432f      	orrs	r7, r5
 8000a5a:	0849      	lsrs	r1, r1, #1
 8000a5c:	403a      	ands	r2, r7
 8000a5e:	001d      	movs	r5, r3
 8000a60:	e6c2      	b.n	80007e8 <__aeabi_dadd+0xc0>
 8000a62:	2207      	movs	r2, #7
 8000a64:	4930      	ldr	r1, [pc, #192]	; (8000b28 <__aeabi_dadd+0x400>)
 8000a66:	1aed      	subs	r5, r5, r3
 8000a68:	4031      	ands	r1, r6
 8000a6a:	403a      	ands	r2, r7
 8000a6c:	e6bc      	b.n	80007e8 <__aeabi_dadd+0xc0>
 8000a6e:	003e      	movs	r6, r7
 8000a70:	3828      	subs	r0, #40	; 0x28
 8000a72:	4086      	lsls	r6, r0
 8000a74:	2700      	movs	r7, #0
 8000a76:	e69f      	b.n	80007b8 <__aeabi_dadd+0x90>
 8000a78:	0038      	movs	r0, r7
 8000a7a:	f001 fcc9 	bl	8002410 <__clzsi2>
 8000a7e:	3020      	adds	r0, #32
 8000a80:	e68e      	b.n	80007a0 <__aeabi_dadd+0x78>
 8000a82:	4643      	mov	r3, r8
 8000a84:	4313      	orrs	r3, r2
 8000a86:	001f      	movs	r7, r3
 8000a88:	1e7a      	subs	r2, r7, #1
 8000a8a:	4197      	sbcs	r7, r2
 8000a8c:	1bc7      	subs	r7, r0, r7
 8000a8e:	42b8      	cmp	r0, r7
 8000a90:	4180      	sbcs	r0, r0
 8000a92:	4240      	negs	r0, r0
 8000a94:	1a09      	subs	r1, r1, r0
 8000a96:	e678      	b.n	800078a <__aeabi_dadd+0x62>
 8000a98:	000e      	movs	r6, r1
 8000a9a:	003b      	movs	r3, r7
 8000a9c:	4306      	orrs	r6, r0
 8000a9e:	4313      	orrs	r3, r2
 8000aa0:	2d00      	cmp	r5, #0
 8000aa2:	d161      	bne.n	8000b68 <__aeabi_dadd+0x440>
 8000aa4:	2e00      	cmp	r6, #0
 8000aa6:	d000      	beq.n	8000aaa <__aeabi_dadd+0x382>
 8000aa8:	e0f4      	b.n	8000c94 <__aeabi_dadd+0x56c>
 8000aaa:	2b00      	cmp	r3, #0
 8000aac:	d100      	bne.n	8000ab0 <__aeabi_dadd+0x388>
 8000aae:	e11b      	b.n	8000ce8 <__aeabi_dadd+0x5c0>
 8000ab0:	4664      	mov	r4, ip
 8000ab2:	0039      	movs	r1, r7
 8000ab4:	0010      	movs	r0, r2
 8000ab6:	e739      	b.n	800092c <__aeabi_dadd+0x204>
 8000ab8:	4f1a      	ldr	r7, [pc, #104]	; (8000b24 <__aeabi_dadd+0x3fc>)
 8000aba:	42bb      	cmp	r3, r7
 8000abc:	d07a      	beq.n	8000bb4 <__aeabi_dadd+0x48c>
 8000abe:	0033      	movs	r3, r6
 8000ac0:	e6ff      	b.n	80008c2 <__aeabi_dadd+0x19a>
 8000ac2:	0030      	movs	r0, r6
 8000ac4:	3d1f      	subs	r5, #31
 8000ac6:	40e8      	lsrs	r0, r5
 8000ac8:	2b20      	cmp	r3, #32
 8000aca:	d003      	beq.n	8000ad4 <__aeabi_dadd+0x3ac>
 8000acc:	2140      	movs	r1, #64	; 0x40
 8000ace:	1acb      	subs	r3, r1, r3
 8000ad0:	409e      	lsls	r6, r3
 8000ad2:	4337      	orrs	r7, r6
 8000ad4:	1e7b      	subs	r3, r7, #1
 8000ad6:	419f      	sbcs	r7, r3
 8000ad8:	2207      	movs	r2, #7
 8000ada:	4307      	orrs	r7, r0
 8000adc:	403a      	ands	r2, r7
 8000ade:	2100      	movs	r1, #0
 8000ae0:	2500      	movs	r5, #0
 8000ae2:	e789      	b.n	80009f8 <__aeabi_dadd+0x2d0>
 8000ae4:	1a17      	subs	r7, r2, r0
 8000ae6:	4643      	mov	r3, r8
 8000ae8:	42ba      	cmp	r2, r7
 8000aea:	41b6      	sbcs	r6, r6
 8000aec:	1a59      	subs	r1, r3, r1
 8000aee:	4276      	negs	r6, r6
 8000af0:	1b8e      	subs	r6, r1, r6
 8000af2:	4664      	mov	r4, ip
 8000af4:	e64e      	b.n	8000794 <__aeabi_dadd+0x6c>
 8000af6:	2b1f      	cmp	r3, #31
 8000af8:	dd00      	ble.n	8000afc <__aeabi_dadd+0x3d4>
 8000afa:	e0ad      	b.n	8000c58 <__aeabi_dadd+0x530>
 8000afc:	2620      	movs	r6, #32
 8000afe:	4647      	mov	r7, r8
 8000b00:	1af6      	subs	r6, r6, r3
 8000b02:	40b7      	lsls	r7, r6
 8000b04:	46b9      	mov	r9, r7
 8000b06:	0017      	movs	r7, r2
 8000b08:	46b2      	mov	sl, r6
 8000b0a:	40df      	lsrs	r7, r3
 8000b0c:	464e      	mov	r6, r9
 8000b0e:	433e      	orrs	r6, r7
 8000b10:	0037      	movs	r7, r6
 8000b12:	4656      	mov	r6, sl
 8000b14:	40b2      	lsls	r2, r6
 8000b16:	1e56      	subs	r6, r2, #1
 8000b18:	41b2      	sbcs	r2, r6
 8000b1a:	4317      	orrs	r7, r2
 8000b1c:	4642      	mov	r2, r8
 8000b1e:	40da      	lsrs	r2, r3
 8000b20:	1889      	adds	r1, r1, r2
 8000b22:	e6ae      	b.n	8000882 <__aeabi_dadd+0x15a>
 8000b24:	000007ff 	.word	0x000007ff
 8000b28:	ff7fffff 	.word	0xff7fffff
 8000b2c:	800fffff 	.word	0x800fffff
 8000b30:	2620      	movs	r6, #32
 8000b32:	4647      	mov	r7, r8
 8000b34:	1af6      	subs	r6, r6, r3
 8000b36:	40b7      	lsls	r7, r6
 8000b38:	46b9      	mov	r9, r7
 8000b3a:	0017      	movs	r7, r2
 8000b3c:	46b2      	mov	sl, r6
 8000b3e:	40df      	lsrs	r7, r3
 8000b40:	464e      	mov	r6, r9
 8000b42:	433e      	orrs	r6, r7
 8000b44:	0037      	movs	r7, r6
 8000b46:	4656      	mov	r6, sl
 8000b48:	40b2      	lsls	r2, r6
 8000b4a:	1e56      	subs	r6, r2, #1
 8000b4c:	41b2      	sbcs	r2, r6
 8000b4e:	4317      	orrs	r7, r2
 8000b50:	4642      	mov	r2, r8
 8000b52:	40da      	lsrs	r2, r3
 8000b54:	1a89      	subs	r1, r1, r2
 8000b56:	e799      	b.n	8000a8c <__aeabi_dadd+0x364>
 8000b58:	4c7f      	ldr	r4, [pc, #508]	; (8000d58 <__aeabi_dadd+0x630>)
 8000b5a:	42a6      	cmp	r6, r4
 8000b5c:	d05b      	beq.n	8000c16 <__aeabi_dadd+0x4ee>
 8000b5e:	2480      	movs	r4, #128	; 0x80
 8000b60:	0424      	lsls	r4, r4, #16
 8000b62:	425b      	negs	r3, r3
 8000b64:	4321      	orrs	r1, r4
 8000b66:	e727      	b.n	80009b8 <__aeabi_dadd+0x290>
 8000b68:	2e00      	cmp	r6, #0
 8000b6a:	d10c      	bne.n	8000b86 <__aeabi_dadd+0x45e>
 8000b6c:	2b00      	cmp	r3, #0
 8000b6e:	d100      	bne.n	8000b72 <__aeabi_dadd+0x44a>
 8000b70:	e0cb      	b.n	8000d0a <__aeabi_dadd+0x5e2>
 8000b72:	4664      	mov	r4, ip
 8000b74:	0039      	movs	r1, r7
 8000b76:	0010      	movs	r0, r2
 8000b78:	4d77      	ldr	r5, [pc, #476]	; (8000d58 <__aeabi_dadd+0x630>)
 8000b7a:	e6d7      	b.n	800092c <__aeabi_dadd+0x204>
 8000b7c:	4f76      	ldr	r7, [pc, #472]	; (8000d58 <__aeabi_dadd+0x630>)
 8000b7e:	42bb      	cmp	r3, r7
 8000b80:	d018      	beq.n	8000bb4 <__aeabi_dadd+0x48c>
 8000b82:	0033      	movs	r3, r6
 8000b84:	e675      	b.n	8000872 <__aeabi_dadd+0x14a>
 8000b86:	2b00      	cmp	r3, #0
 8000b88:	d014      	beq.n	8000bb4 <__aeabi_dadd+0x48c>
 8000b8a:	074b      	lsls	r3, r1, #29
 8000b8c:	08c0      	lsrs	r0, r0, #3
 8000b8e:	4318      	orrs	r0, r3
 8000b90:	2380      	movs	r3, #128	; 0x80
 8000b92:	08c9      	lsrs	r1, r1, #3
 8000b94:	031b      	lsls	r3, r3, #12
 8000b96:	4219      	tst	r1, r3
 8000b98:	d007      	beq.n	8000baa <__aeabi_dadd+0x482>
 8000b9a:	08fc      	lsrs	r4, r7, #3
 8000b9c:	421c      	tst	r4, r3
 8000b9e:	d104      	bne.n	8000baa <__aeabi_dadd+0x482>
 8000ba0:	0779      	lsls	r1, r7, #29
 8000ba2:	08d0      	lsrs	r0, r2, #3
 8000ba4:	4308      	orrs	r0, r1
 8000ba6:	46e1      	mov	r9, ip
 8000ba8:	0021      	movs	r1, r4
 8000baa:	464c      	mov	r4, r9
 8000bac:	0f42      	lsrs	r2, r0, #29
 8000bae:	00c9      	lsls	r1, r1, #3
 8000bb0:	4311      	orrs	r1, r2
 8000bb2:	00c0      	lsls	r0, r0, #3
 8000bb4:	4d68      	ldr	r5, [pc, #416]	; (8000d58 <__aeabi_dadd+0x630>)
 8000bb6:	e6b9      	b.n	800092c <__aeabi_dadd+0x204>
 8000bb8:	001d      	movs	r5, r3
 8000bba:	2200      	movs	r2, #0
 8000bbc:	2300      	movs	r3, #0
 8000bbe:	e6c0      	b.n	8000942 <__aeabi_dadd+0x21a>
 8000bc0:	2d00      	cmp	r5, #0
 8000bc2:	d15b      	bne.n	8000c7c <__aeabi_dadd+0x554>
 8000bc4:	000d      	movs	r5, r1
 8000bc6:	4305      	orrs	r5, r0
 8000bc8:	d100      	bne.n	8000bcc <__aeabi_dadd+0x4a4>
 8000bca:	e6e2      	b.n	8000992 <__aeabi_dadd+0x26a>
 8000bcc:	1c5d      	adds	r5, r3, #1
 8000bce:	d100      	bne.n	8000bd2 <__aeabi_dadd+0x4aa>
 8000bd0:	e0b0      	b.n	8000d34 <__aeabi_dadd+0x60c>
 8000bd2:	4d61      	ldr	r5, [pc, #388]	; (8000d58 <__aeabi_dadd+0x630>)
 8000bd4:	42ae      	cmp	r6, r5
 8000bd6:	d01f      	beq.n	8000c18 <__aeabi_dadd+0x4f0>
 8000bd8:	43db      	mvns	r3, r3
 8000bda:	2b38      	cmp	r3, #56	; 0x38
 8000bdc:	dc71      	bgt.n	8000cc2 <__aeabi_dadd+0x59a>
 8000bde:	2b1f      	cmp	r3, #31
 8000be0:	dd00      	ble.n	8000be4 <__aeabi_dadd+0x4bc>
 8000be2:	e096      	b.n	8000d12 <__aeabi_dadd+0x5ea>
 8000be4:	2520      	movs	r5, #32
 8000be6:	000f      	movs	r7, r1
 8000be8:	1aed      	subs	r5, r5, r3
 8000bea:	40af      	lsls	r7, r5
 8000bec:	46b9      	mov	r9, r7
 8000bee:	0007      	movs	r7, r0
 8000bf0:	46aa      	mov	sl, r5
 8000bf2:	40df      	lsrs	r7, r3
 8000bf4:	464d      	mov	r5, r9
 8000bf6:	433d      	orrs	r5, r7
 8000bf8:	002f      	movs	r7, r5
 8000bfa:	4655      	mov	r5, sl
 8000bfc:	40a8      	lsls	r0, r5
 8000bfe:	40d9      	lsrs	r1, r3
 8000c00:	1e45      	subs	r5, r0, #1
 8000c02:	41a8      	sbcs	r0, r5
 8000c04:	4488      	add	r8, r1
 8000c06:	4307      	orrs	r7, r0
 8000c08:	18bf      	adds	r7, r7, r2
 8000c0a:	4297      	cmp	r7, r2
 8000c0c:	4192      	sbcs	r2, r2
 8000c0e:	4251      	negs	r1, r2
 8000c10:	4441      	add	r1, r8
 8000c12:	0035      	movs	r5, r6
 8000c14:	e63a      	b.n	800088c <__aeabi_dadd+0x164>
 8000c16:	4664      	mov	r4, ip
 8000c18:	0035      	movs	r5, r6
 8000c1a:	4641      	mov	r1, r8
 8000c1c:	0010      	movs	r0, r2
 8000c1e:	e685      	b.n	800092c <__aeabi_dadd+0x204>
 8000c20:	000b      	movs	r3, r1
 8000c22:	4303      	orrs	r3, r0
 8000c24:	2d00      	cmp	r5, #0
 8000c26:	d000      	beq.n	8000c2a <__aeabi_dadd+0x502>
 8000c28:	e663      	b.n	80008f2 <__aeabi_dadd+0x1ca>
 8000c2a:	2b00      	cmp	r3, #0
 8000c2c:	d0f5      	beq.n	8000c1a <__aeabi_dadd+0x4f2>
 8000c2e:	4643      	mov	r3, r8
 8000c30:	4313      	orrs	r3, r2
 8000c32:	d100      	bne.n	8000c36 <__aeabi_dadd+0x50e>
 8000c34:	e67a      	b.n	800092c <__aeabi_dadd+0x204>
 8000c36:	1887      	adds	r7, r0, r2
 8000c38:	4287      	cmp	r7, r0
 8000c3a:	4180      	sbcs	r0, r0
 8000c3c:	2207      	movs	r2, #7
 8000c3e:	4441      	add	r1, r8
 8000c40:	4240      	negs	r0, r0
 8000c42:	1809      	adds	r1, r1, r0
 8000c44:	403a      	ands	r2, r7
 8000c46:	020b      	lsls	r3, r1, #8
 8000c48:	d400      	bmi.n	8000c4c <__aeabi_dadd+0x524>
 8000c4a:	e6d5      	b.n	80009f8 <__aeabi_dadd+0x2d0>
 8000c4c:	4b43      	ldr	r3, [pc, #268]	; (8000d5c <__aeabi_dadd+0x634>)
 8000c4e:	3501      	adds	r5, #1
 8000c50:	4019      	ands	r1, r3
 8000c52:	e5c9      	b.n	80007e8 <__aeabi_dadd+0xc0>
 8000c54:	0038      	movs	r0, r7
 8000c56:	e669      	b.n	800092c <__aeabi_dadd+0x204>
 8000c58:	001e      	movs	r6, r3
 8000c5a:	4647      	mov	r7, r8
 8000c5c:	3e20      	subs	r6, #32
 8000c5e:	40f7      	lsrs	r7, r6
 8000c60:	46bc      	mov	ip, r7
 8000c62:	2b20      	cmp	r3, #32
 8000c64:	d004      	beq.n	8000c70 <__aeabi_dadd+0x548>
 8000c66:	2640      	movs	r6, #64	; 0x40
 8000c68:	1af3      	subs	r3, r6, r3
 8000c6a:	4646      	mov	r6, r8
 8000c6c:	409e      	lsls	r6, r3
 8000c6e:	4332      	orrs	r2, r6
 8000c70:	0017      	movs	r7, r2
 8000c72:	4663      	mov	r3, ip
 8000c74:	1e7a      	subs	r2, r7, #1
 8000c76:	4197      	sbcs	r7, r2
 8000c78:	431f      	orrs	r7, r3
 8000c7a:	e602      	b.n	8000882 <__aeabi_dadd+0x15a>
 8000c7c:	4d36      	ldr	r5, [pc, #216]	; (8000d58 <__aeabi_dadd+0x630>)
 8000c7e:	42ae      	cmp	r6, r5
 8000c80:	d0ca      	beq.n	8000c18 <__aeabi_dadd+0x4f0>
 8000c82:	2580      	movs	r5, #128	; 0x80
 8000c84:	042d      	lsls	r5, r5, #16
 8000c86:	425b      	negs	r3, r3
 8000c88:	4329      	orrs	r1, r5
 8000c8a:	e7a6      	b.n	8000bda <__aeabi_dadd+0x4b2>
 8000c8c:	4308      	orrs	r0, r1
 8000c8e:	1e41      	subs	r1, r0, #1
 8000c90:	4188      	sbcs	r0, r1
 8000c92:	e6a6      	b.n	80009e2 <__aeabi_dadd+0x2ba>
 8000c94:	2b00      	cmp	r3, #0
 8000c96:	d100      	bne.n	8000c9a <__aeabi_dadd+0x572>
 8000c98:	e648      	b.n	800092c <__aeabi_dadd+0x204>
 8000c9a:	1a87      	subs	r7, r0, r2
 8000c9c:	4643      	mov	r3, r8
 8000c9e:	42b8      	cmp	r0, r7
 8000ca0:	41b6      	sbcs	r6, r6
 8000ca2:	1acb      	subs	r3, r1, r3
 8000ca4:	4276      	negs	r6, r6
 8000ca6:	1b9e      	subs	r6, r3, r6
 8000ca8:	0233      	lsls	r3, r6, #8
 8000caa:	d54b      	bpl.n	8000d44 <__aeabi_dadd+0x61c>
 8000cac:	1a17      	subs	r7, r2, r0
 8000cae:	4643      	mov	r3, r8
 8000cb0:	42ba      	cmp	r2, r7
 8000cb2:	4192      	sbcs	r2, r2
 8000cb4:	1a59      	subs	r1, r3, r1
 8000cb6:	4252      	negs	r2, r2
 8000cb8:	1a89      	subs	r1, r1, r2
 8000cba:	2207      	movs	r2, #7
 8000cbc:	4664      	mov	r4, ip
 8000cbe:	403a      	ands	r2, r7
 8000cc0:	e592      	b.n	80007e8 <__aeabi_dadd+0xc0>
 8000cc2:	4301      	orrs	r1, r0
 8000cc4:	000f      	movs	r7, r1
 8000cc6:	1e79      	subs	r1, r7, #1
 8000cc8:	418f      	sbcs	r7, r1
 8000cca:	e79d      	b.n	8000c08 <__aeabi_dadd+0x4e0>
 8000ccc:	001c      	movs	r4, r3
 8000cce:	000f      	movs	r7, r1
 8000cd0:	3c20      	subs	r4, #32
 8000cd2:	40e7      	lsrs	r7, r4
 8000cd4:	2b20      	cmp	r3, #32
 8000cd6:	d003      	beq.n	8000ce0 <__aeabi_dadd+0x5b8>
 8000cd8:	2440      	movs	r4, #64	; 0x40
 8000cda:	1ae3      	subs	r3, r4, r3
 8000cdc:	4099      	lsls	r1, r3
 8000cde:	4308      	orrs	r0, r1
 8000ce0:	1e41      	subs	r1, r0, #1
 8000ce2:	4188      	sbcs	r0, r1
 8000ce4:	4338      	orrs	r0, r7
 8000ce6:	e67c      	b.n	80009e2 <__aeabi_dadd+0x2ba>
 8000ce8:	2200      	movs	r2, #0
 8000cea:	2400      	movs	r4, #0
 8000cec:	e625      	b.n	800093a <__aeabi_dadd+0x212>
 8000cee:	1a17      	subs	r7, r2, r0
 8000cf0:	4643      	mov	r3, r8
 8000cf2:	42ba      	cmp	r2, r7
 8000cf4:	4192      	sbcs	r2, r2
 8000cf6:	1a59      	subs	r1, r3, r1
 8000cf8:	4252      	negs	r2, r2
 8000cfa:	1a89      	subs	r1, r1, r2
 8000cfc:	4664      	mov	r4, ip
 8000cfe:	0035      	movs	r5, r6
 8000d00:	e543      	b.n	800078a <__aeabi_dadd+0x62>
 8000d02:	4641      	mov	r1, r8
 8000d04:	0010      	movs	r0, r2
 8000d06:	4d14      	ldr	r5, [pc, #80]	; (8000d58 <__aeabi_dadd+0x630>)
 8000d08:	e610      	b.n	800092c <__aeabi_dadd+0x204>
 8000d0a:	2280      	movs	r2, #128	; 0x80
 8000d0c:	2400      	movs	r4, #0
 8000d0e:	0312      	lsls	r2, r2, #12
 8000d10:	e680      	b.n	8000a14 <__aeabi_dadd+0x2ec>
 8000d12:	001d      	movs	r5, r3
 8000d14:	000f      	movs	r7, r1
 8000d16:	3d20      	subs	r5, #32
 8000d18:	40ef      	lsrs	r7, r5
 8000d1a:	46bc      	mov	ip, r7
 8000d1c:	2b20      	cmp	r3, #32
 8000d1e:	d003      	beq.n	8000d28 <__aeabi_dadd+0x600>
 8000d20:	2540      	movs	r5, #64	; 0x40
 8000d22:	1aeb      	subs	r3, r5, r3
 8000d24:	4099      	lsls	r1, r3
 8000d26:	4308      	orrs	r0, r1
 8000d28:	0007      	movs	r7, r0
 8000d2a:	4663      	mov	r3, ip
 8000d2c:	1e78      	subs	r0, r7, #1
 8000d2e:	4187      	sbcs	r7, r0
 8000d30:	431f      	orrs	r7, r3
 8000d32:	e769      	b.n	8000c08 <__aeabi_dadd+0x4e0>
 8000d34:	1887      	adds	r7, r0, r2
 8000d36:	4297      	cmp	r7, r2
 8000d38:	419b      	sbcs	r3, r3
 8000d3a:	4441      	add	r1, r8
 8000d3c:	425b      	negs	r3, r3
 8000d3e:	18c9      	adds	r1, r1, r3
 8000d40:	0035      	movs	r5, r6
 8000d42:	e5a3      	b.n	800088c <__aeabi_dadd+0x164>
 8000d44:	003b      	movs	r3, r7
 8000d46:	4333      	orrs	r3, r6
 8000d48:	d0ce      	beq.n	8000ce8 <__aeabi_dadd+0x5c0>
 8000d4a:	2207      	movs	r2, #7
 8000d4c:	0031      	movs	r1, r6
 8000d4e:	403a      	ands	r2, r7
 8000d50:	e652      	b.n	80009f8 <__aeabi_dadd+0x2d0>
 8000d52:	2300      	movs	r3, #0
 8000d54:	001a      	movs	r2, r3
 8000d56:	e5f4      	b.n	8000942 <__aeabi_dadd+0x21a>
 8000d58:	000007ff 	.word	0x000007ff
 8000d5c:	ff7fffff 	.word	0xff7fffff

08000d60 <__aeabi_ddiv>:
 8000d60:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000d62:	4657      	mov	r7, sl
 8000d64:	46de      	mov	lr, fp
 8000d66:	464e      	mov	r6, r9
 8000d68:	4645      	mov	r5, r8
 8000d6a:	b5e0      	push	{r5, r6, r7, lr}
 8000d6c:	4683      	mov	fp, r0
 8000d6e:	0007      	movs	r7, r0
 8000d70:	030e      	lsls	r6, r1, #12
 8000d72:	0048      	lsls	r0, r1, #1
 8000d74:	b085      	sub	sp, #20
 8000d76:	4692      	mov	sl, r2
 8000d78:	001c      	movs	r4, r3
 8000d7a:	0b36      	lsrs	r6, r6, #12
 8000d7c:	0d40      	lsrs	r0, r0, #21
 8000d7e:	0fcd      	lsrs	r5, r1, #31
 8000d80:	2800      	cmp	r0, #0
 8000d82:	d100      	bne.n	8000d86 <__aeabi_ddiv+0x26>
 8000d84:	e09d      	b.n	8000ec2 <__aeabi_ddiv+0x162>
 8000d86:	4b95      	ldr	r3, [pc, #596]	; (8000fdc <__aeabi_ddiv+0x27c>)
 8000d88:	4298      	cmp	r0, r3
 8000d8a:	d039      	beq.n	8000e00 <__aeabi_ddiv+0xa0>
 8000d8c:	2380      	movs	r3, #128	; 0x80
 8000d8e:	00f6      	lsls	r6, r6, #3
 8000d90:	041b      	lsls	r3, r3, #16
 8000d92:	431e      	orrs	r6, r3
 8000d94:	4a92      	ldr	r2, [pc, #584]	; (8000fe0 <__aeabi_ddiv+0x280>)
 8000d96:	0f7b      	lsrs	r3, r7, #29
 8000d98:	4333      	orrs	r3, r6
 8000d9a:	4699      	mov	r9, r3
 8000d9c:	4694      	mov	ip, r2
 8000d9e:	0003      	movs	r3, r0
 8000da0:	4463      	add	r3, ip
 8000da2:	9300      	str	r3, [sp, #0]
 8000da4:	2300      	movs	r3, #0
 8000da6:	2600      	movs	r6, #0
 8000da8:	00ff      	lsls	r7, r7, #3
 8000daa:	9302      	str	r3, [sp, #8]
 8000dac:	0323      	lsls	r3, r4, #12
 8000dae:	0b1b      	lsrs	r3, r3, #12
 8000db0:	4698      	mov	r8, r3
 8000db2:	0063      	lsls	r3, r4, #1
 8000db4:	0fe4      	lsrs	r4, r4, #31
 8000db6:	4652      	mov	r2, sl
 8000db8:	0d5b      	lsrs	r3, r3, #21
 8000dba:	9401      	str	r4, [sp, #4]
 8000dbc:	d100      	bne.n	8000dc0 <__aeabi_ddiv+0x60>
 8000dbe:	e0b3      	b.n	8000f28 <__aeabi_ddiv+0x1c8>
 8000dc0:	4986      	ldr	r1, [pc, #536]	; (8000fdc <__aeabi_ddiv+0x27c>)
 8000dc2:	428b      	cmp	r3, r1
 8000dc4:	d100      	bne.n	8000dc8 <__aeabi_ddiv+0x68>
 8000dc6:	e09e      	b.n	8000f06 <__aeabi_ddiv+0x1a6>
 8000dc8:	4642      	mov	r2, r8
 8000dca:	00d1      	lsls	r1, r2, #3
 8000dcc:	2280      	movs	r2, #128	; 0x80
 8000dce:	0412      	lsls	r2, r2, #16
 8000dd0:	430a      	orrs	r2, r1
 8000dd2:	4651      	mov	r1, sl
 8000dd4:	0f49      	lsrs	r1, r1, #29
 8000dd6:	4311      	orrs	r1, r2
 8000dd8:	468b      	mov	fp, r1
 8000dda:	4981      	ldr	r1, [pc, #516]	; (8000fe0 <__aeabi_ddiv+0x280>)
 8000ddc:	4652      	mov	r2, sl
 8000dde:	468c      	mov	ip, r1
 8000de0:	9900      	ldr	r1, [sp, #0]
 8000de2:	4463      	add	r3, ip
 8000de4:	1acb      	subs	r3, r1, r3
 8000de6:	2100      	movs	r1, #0
 8000de8:	00d2      	lsls	r2, r2, #3
 8000dea:	9300      	str	r3, [sp, #0]
 8000dec:	002b      	movs	r3, r5
 8000dee:	4063      	eors	r3, r4
 8000df0:	469a      	mov	sl, r3
 8000df2:	2e0f      	cmp	r6, #15
 8000df4:	d900      	bls.n	8000df8 <__aeabi_ddiv+0x98>
 8000df6:	e105      	b.n	8001004 <__aeabi_ddiv+0x2a4>
 8000df8:	4b7a      	ldr	r3, [pc, #488]	; (8000fe4 <__aeabi_ddiv+0x284>)
 8000dfa:	00b6      	lsls	r6, r6, #2
 8000dfc:	599b      	ldr	r3, [r3, r6]
 8000dfe:	469f      	mov	pc, r3
 8000e00:	465b      	mov	r3, fp
 8000e02:	4333      	orrs	r3, r6
 8000e04:	4699      	mov	r9, r3
 8000e06:	d000      	beq.n	8000e0a <__aeabi_ddiv+0xaa>
 8000e08:	e0b8      	b.n	8000f7c <__aeabi_ddiv+0x21c>
 8000e0a:	2302      	movs	r3, #2
 8000e0c:	2608      	movs	r6, #8
 8000e0e:	2700      	movs	r7, #0
 8000e10:	9000      	str	r0, [sp, #0]
 8000e12:	9302      	str	r3, [sp, #8]
 8000e14:	e7ca      	b.n	8000dac <__aeabi_ddiv+0x4c>
 8000e16:	46cb      	mov	fp, r9
 8000e18:	003a      	movs	r2, r7
 8000e1a:	9902      	ldr	r1, [sp, #8]
 8000e1c:	9501      	str	r5, [sp, #4]
 8000e1e:	9b01      	ldr	r3, [sp, #4]
 8000e20:	469a      	mov	sl, r3
 8000e22:	2902      	cmp	r1, #2
 8000e24:	d027      	beq.n	8000e76 <__aeabi_ddiv+0x116>
 8000e26:	2903      	cmp	r1, #3
 8000e28:	d100      	bne.n	8000e2c <__aeabi_ddiv+0xcc>
 8000e2a:	e280      	b.n	800132e <__aeabi_ddiv+0x5ce>
 8000e2c:	2901      	cmp	r1, #1
 8000e2e:	d044      	beq.n	8000eba <__aeabi_ddiv+0x15a>
 8000e30:	496d      	ldr	r1, [pc, #436]	; (8000fe8 <__aeabi_ddiv+0x288>)
 8000e32:	9b00      	ldr	r3, [sp, #0]
 8000e34:	468c      	mov	ip, r1
 8000e36:	4463      	add	r3, ip
 8000e38:	001c      	movs	r4, r3
 8000e3a:	2c00      	cmp	r4, #0
 8000e3c:	dd38      	ble.n	8000eb0 <__aeabi_ddiv+0x150>
 8000e3e:	0753      	lsls	r3, r2, #29
 8000e40:	d000      	beq.n	8000e44 <__aeabi_ddiv+0xe4>
 8000e42:	e213      	b.n	800126c <__aeabi_ddiv+0x50c>
 8000e44:	08d2      	lsrs	r2, r2, #3
 8000e46:	465b      	mov	r3, fp
 8000e48:	01db      	lsls	r3, r3, #7
 8000e4a:	d509      	bpl.n	8000e60 <__aeabi_ddiv+0x100>
 8000e4c:	4659      	mov	r1, fp
 8000e4e:	4b67      	ldr	r3, [pc, #412]	; (8000fec <__aeabi_ddiv+0x28c>)
 8000e50:	4019      	ands	r1, r3
 8000e52:	468b      	mov	fp, r1
 8000e54:	2180      	movs	r1, #128	; 0x80
 8000e56:	00c9      	lsls	r1, r1, #3
 8000e58:	468c      	mov	ip, r1
 8000e5a:	9b00      	ldr	r3, [sp, #0]
 8000e5c:	4463      	add	r3, ip
 8000e5e:	001c      	movs	r4, r3
 8000e60:	4b63      	ldr	r3, [pc, #396]	; (8000ff0 <__aeabi_ddiv+0x290>)
 8000e62:	429c      	cmp	r4, r3
 8000e64:	dc07      	bgt.n	8000e76 <__aeabi_ddiv+0x116>
 8000e66:	465b      	mov	r3, fp
 8000e68:	0564      	lsls	r4, r4, #21
 8000e6a:	075f      	lsls	r7, r3, #29
 8000e6c:	025b      	lsls	r3, r3, #9
 8000e6e:	4317      	orrs	r7, r2
 8000e70:	0b1b      	lsrs	r3, r3, #12
 8000e72:	0d62      	lsrs	r2, r4, #21
 8000e74:	e002      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 8000e76:	2300      	movs	r3, #0
 8000e78:	2700      	movs	r7, #0
 8000e7a:	4a58      	ldr	r2, [pc, #352]	; (8000fdc <__aeabi_ddiv+0x27c>)
 8000e7c:	2100      	movs	r1, #0
 8000e7e:	031b      	lsls	r3, r3, #12
 8000e80:	0b1c      	lsrs	r4, r3, #12
 8000e82:	0d0b      	lsrs	r3, r1, #20
 8000e84:	051b      	lsls	r3, r3, #20
 8000e86:	4323      	orrs	r3, r4
 8000e88:	0514      	lsls	r4, r2, #20
 8000e8a:	4a5a      	ldr	r2, [pc, #360]	; (8000ff4 <__aeabi_ddiv+0x294>)
 8000e8c:	0038      	movs	r0, r7
 8000e8e:	4013      	ands	r3, r2
 8000e90:	431c      	orrs	r4, r3
 8000e92:	4653      	mov	r3, sl
 8000e94:	0064      	lsls	r4, r4, #1
 8000e96:	07db      	lsls	r3, r3, #31
 8000e98:	0864      	lsrs	r4, r4, #1
 8000e9a:	431c      	orrs	r4, r3
 8000e9c:	0021      	movs	r1, r4
 8000e9e:	b005      	add	sp, #20
 8000ea0:	bc3c      	pop	{r2, r3, r4, r5}
 8000ea2:	4690      	mov	r8, r2
 8000ea4:	4699      	mov	r9, r3
 8000ea6:	46a2      	mov	sl, r4
 8000ea8:	46ab      	mov	fp, r5
 8000eaa:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8000eac:	2201      	movs	r2, #1
 8000eae:	4252      	negs	r2, r2
 8000eb0:	2301      	movs	r3, #1
 8000eb2:	1b1b      	subs	r3, r3, r4
 8000eb4:	2b38      	cmp	r3, #56	; 0x38
 8000eb6:	dc00      	bgt.n	8000eba <__aeabi_ddiv+0x15a>
 8000eb8:	e1ad      	b.n	8001216 <__aeabi_ddiv+0x4b6>
 8000eba:	2200      	movs	r2, #0
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	2700      	movs	r7, #0
 8000ec0:	e7dc      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 8000ec2:	465b      	mov	r3, fp
 8000ec4:	4333      	orrs	r3, r6
 8000ec6:	4699      	mov	r9, r3
 8000ec8:	d05e      	beq.n	8000f88 <__aeabi_ddiv+0x228>
 8000eca:	2e00      	cmp	r6, #0
 8000ecc:	d100      	bne.n	8000ed0 <__aeabi_ddiv+0x170>
 8000ece:	e18a      	b.n	80011e6 <__aeabi_ddiv+0x486>
 8000ed0:	0030      	movs	r0, r6
 8000ed2:	f001 fa9d 	bl	8002410 <__clzsi2>
 8000ed6:	0003      	movs	r3, r0
 8000ed8:	3b0b      	subs	r3, #11
 8000eda:	2b1c      	cmp	r3, #28
 8000edc:	dd00      	ble.n	8000ee0 <__aeabi_ddiv+0x180>
 8000ede:	e17b      	b.n	80011d8 <__aeabi_ddiv+0x478>
 8000ee0:	221d      	movs	r2, #29
 8000ee2:	1ad3      	subs	r3, r2, r3
 8000ee4:	465a      	mov	r2, fp
 8000ee6:	0001      	movs	r1, r0
 8000ee8:	40da      	lsrs	r2, r3
 8000eea:	3908      	subs	r1, #8
 8000eec:	408e      	lsls	r6, r1
 8000eee:	0013      	movs	r3, r2
 8000ef0:	465f      	mov	r7, fp
 8000ef2:	4333      	orrs	r3, r6
 8000ef4:	4699      	mov	r9, r3
 8000ef6:	408f      	lsls	r7, r1
 8000ef8:	4b3f      	ldr	r3, [pc, #252]	; (8000ff8 <__aeabi_ddiv+0x298>)
 8000efa:	2600      	movs	r6, #0
 8000efc:	1a1b      	subs	r3, r3, r0
 8000efe:	9300      	str	r3, [sp, #0]
 8000f00:	2300      	movs	r3, #0
 8000f02:	9302      	str	r3, [sp, #8]
 8000f04:	e752      	b.n	8000dac <__aeabi_ddiv+0x4c>
 8000f06:	4641      	mov	r1, r8
 8000f08:	4653      	mov	r3, sl
 8000f0a:	430b      	orrs	r3, r1
 8000f0c:	493b      	ldr	r1, [pc, #236]	; (8000ffc <__aeabi_ddiv+0x29c>)
 8000f0e:	469b      	mov	fp, r3
 8000f10:	468c      	mov	ip, r1
 8000f12:	9b00      	ldr	r3, [sp, #0]
 8000f14:	4463      	add	r3, ip
 8000f16:	9300      	str	r3, [sp, #0]
 8000f18:	465b      	mov	r3, fp
 8000f1a:	2b00      	cmp	r3, #0
 8000f1c:	d13b      	bne.n	8000f96 <__aeabi_ddiv+0x236>
 8000f1e:	2302      	movs	r3, #2
 8000f20:	2200      	movs	r2, #0
 8000f22:	431e      	orrs	r6, r3
 8000f24:	2102      	movs	r1, #2
 8000f26:	e761      	b.n	8000dec <__aeabi_ddiv+0x8c>
 8000f28:	4643      	mov	r3, r8
 8000f2a:	4313      	orrs	r3, r2
 8000f2c:	469b      	mov	fp, r3
 8000f2e:	d037      	beq.n	8000fa0 <__aeabi_ddiv+0x240>
 8000f30:	4643      	mov	r3, r8
 8000f32:	2b00      	cmp	r3, #0
 8000f34:	d100      	bne.n	8000f38 <__aeabi_ddiv+0x1d8>
 8000f36:	e162      	b.n	80011fe <__aeabi_ddiv+0x49e>
 8000f38:	4640      	mov	r0, r8
 8000f3a:	f001 fa69 	bl	8002410 <__clzsi2>
 8000f3e:	0003      	movs	r3, r0
 8000f40:	3b0b      	subs	r3, #11
 8000f42:	2b1c      	cmp	r3, #28
 8000f44:	dd00      	ble.n	8000f48 <__aeabi_ddiv+0x1e8>
 8000f46:	e153      	b.n	80011f0 <__aeabi_ddiv+0x490>
 8000f48:	0002      	movs	r2, r0
 8000f4a:	4641      	mov	r1, r8
 8000f4c:	3a08      	subs	r2, #8
 8000f4e:	4091      	lsls	r1, r2
 8000f50:	4688      	mov	r8, r1
 8000f52:	211d      	movs	r1, #29
 8000f54:	1acb      	subs	r3, r1, r3
 8000f56:	4651      	mov	r1, sl
 8000f58:	40d9      	lsrs	r1, r3
 8000f5a:	000b      	movs	r3, r1
 8000f5c:	4641      	mov	r1, r8
 8000f5e:	430b      	orrs	r3, r1
 8000f60:	469b      	mov	fp, r3
 8000f62:	4653      	mov	r3, sl
 8000f64:	4093      	lsls	r3, r2
 8000f66:	001a      	movs	r2, r3
 8000f68:	9b00      	ldr	r3, [sp, #0]
 8000f6a:	4925      	ldr	r1, [pc, #148]	; (8001000 <__aeabi_ddiv+0x2a0>)
 8000f6c:	469c      	mov	ip, r3
 8000f6e:	4460      	add	r0, ip
 8000f70:	0003      	movs	r3, r0
 8000f72:	468c      	mov	ip, r1
 8000f74:	4463      	add	r3, ip
 8000f76:	9300      	str	r3, [sp, #0]
 8000f78:	2100      	movs	r1, #0
 8000f7a:	e737      	b.n	8000dec <__aeabi_ddiv+0x8c>
 8000f7c:	2303      	movs	r3, #3
 8000f7e:	46b1      	mov	r9, r6
 8000f80:	9000      	str	r0, [sp, #0]
 8000f82:	260c      	movs	r6, #12
 8000f84:	9302      	str	r3, [sp, #8]
 8000f86:	e711      	b.n	8000dac <__aeabi_ddiv+0x4c>
 8000f88:	2300      	movs	r3, #0
 8000f8a:	9300      	str	r3, [sp, #0]
 8000f8c:	3301      	adds	r3, #1
 8000f8e:	2604      	movs	r6, #4
 8000f90:	2700      	movs	r7, #0
 8000f92:	9302      	str	r3, [sp, #8]
 8000f94:	e70a      	b.n	8000dac <__aeabi_ddiv+0x4c>
 8000f96:	2303      	movs	r3, #3
 8000f98:	46c3      	mov	fp, r8
 8000f9a:	431e      	orrs	r6, r3
 8000f9c:	2103      	movs	r1, #3
 8000f9e:	e725      	b.n	8000dec <__aeabi_ddiv+0x8c>
 8000fa0:	3301      	adds	r3, #1
 8000fa2:	431e      	orrs	r6, r3
 8000fa4:	2200      	movs	r2, #0
 8000fa6:	2101      	movs	r1, #1
 8000fa8:	e720      	b.n	8000dec <__aeabi_ddiv+0x8c>
 8000faa:	2300      	movs	r3, #0
 8000fac:	469a      	mov	sl, r3
 8000fae:	2380      	movs	r3, #128	; 0x80
 8000fb0:	2700      	movs	r7, #0
 8000fb2:	031b      	lsls	r3, r3, #12
 8000fb4:	4a09      	ldr	r2, [pc, #36]	; (8000fdc <__aeabi_ddiv+0x27c>)
 8000fb6:	e761      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 8000fb8:	2380      	movs	r3, #128	; 0x80
 8000fba:	4649      	mov	r1, r9
 8000fbc:	031b      	lsls	r3, r3, #12
 8000fbe:	4219      	tst	r1, r3
 8000fc0:	d100      	bne.n	8000fc4 <__aeabi_ddiv+0x264>
 8000fc2:	e0e2      	b.n	800118a <__aeabi_ddiv+0x42a>
 8000fc4:	4659      	mov	r1, fp
 8000fc6:	4219      	tst	r1, r3
 8000fc8:	d000      	beq.n	8000fcc <__aeabi_ddiv+0x26c>
 8000fca:	e0de      	b.n	800118a <__aeabi_ddiv+0x42a>
 8000fcc:	430b      	orrs	r3, r1
 8000fce:	031b      	lsls	r3, r3, #12
 8000fd0:	0017      	movs	r7, r2
 8000fd2:	0b1b      	lsrs	r3, r3, #12
 8000fd4:	46a2      	mov	sl, r4
 8000fd6:	4a01      	ldr	r2, [pc, #4]	; (8000fdc <__aeabi_ddiv+0x27c>)
 8000fd8:	e750      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 8000fda:	46c0      	nop			; (mov r8, r8)
 8000fdc:	000007ff 	.word	0x000007ff
 8000fe0:	fffffc01 	.word	0xfffffc01
 8000fe4:	0800a280 	.word	0x0800a280
 8000fe8:	000003ff 	.word	0x000003ff
 8000fec:	feffffff 	.word	0xfeffffff
 8000ff0:	000007fe 	.word	0x000007fe
 8000ff4:	800fffff 	.word	0x800fffff
 8000ff8:	fffffc0d 	.word	0xfffffc0d
 8000ffc:	fffff801 	.word	0xfffff801
 8001000:	000003f3 	.word	0x000003f3
 8001004:	45d9      	cmp	r9, fp
 8001006:	d900      	bls.n	800100a <__aeabi_ddiv+0x2aa>
 8001008:	e0cb      	b.n	80011a2 <__aeabi_ddiv+0x442>
 800100a:	d100      	bne.n	800100e <__aeabi_ddiv+0x2ae>
 800100c:	e0c6      	b.n	800119c <__aeabi_ddiv+0x43c>
 800100e:	003c      	movs	r4, r7
 8001010:	4648      	mov	r0, r9
 8001012:	2700      	movs	r7, #0
 8001014:	9b00      	ldr	r3, [sp, #0]
 8001016:	3b01      	subs	r3, #1
 8001018:	9300      	str	r3, [sp, #0]
 800101a:	465b      	mov	r3, fp
 800101c:	0e16      	lsrs	r6, r2, #24
 800101e:	021b      	lsls	r3, r3, #8
 8001020:	431e      	orrs	r6, r3
 8001022:	0213      	lsls	r3, r2, #8
 8001024:	4698      	mov	r8, r3
 8001026:	0433      	lsls	r3, r6, #16
 8001028:	0c1b      	lsrs	r3, r3, #16
 800102a:	4699      	mov	r9, r3
 800102c:	0c31      	lsrs	r1, r6, #16
 800102e:	9101      	str	r1, [sp, #4]
 8001030:	f7ff f902 	bl	8000238 <__aeabi_uidivmod>
 8001034:	464a      	mov	r2, r9
 8001036:	4342      	muls	r2, r0
 8001038:	040b      	lsls	r3, r1, #16
 800103a:	0c21      	lsrs	r1, r4, #16
 800103c:	0005      	movs	r5, r0
 800103e:	4319      	orrs	r1, r3
 8001040:	428a      	cmp	r2, r1
 8001042:	d907      	bls.n	8001054 <__aeabi_ddiv+0x2f4>
 8001044:	1989      	adds	r1, r1, r6
 8001046:	3d01      	subs	r5, #1
 8001048:	428e      	cmp	r6, r1
 800104a:	d803      	bhi.n	8001054 <__aeabi_ddiv+0x2f4>
 800104c:	428a      	cmp	r2, r1
 800104e:	d901      	bls.n	8001054 <__aeabi_ddiv+0x2f4>
 8001050:	1e85      	subs	r5, r0, #2
 8001052:	1989      	adds	r1, r1, r6
 8001054:	1a88      	subs	r0, r1, r2
 8001056:	9901      	ldr	r1, [sp, #4]
 8001058:	f7ff f8ee 	bl	8000238 <__aeabi_uidivmod>
 800105c:	0409      	lsls	r1, r1, #16
 800105e:	468c      	mov	ip, r1
 8001060:	464a      	mov	r2, r9
 8001062:	0421      	lsls	r1, r4, #16
 8001064:	4664      	mov	r4, ip
 8001066:	4342      	muls	r2, r0
 8001068:	0c09      	lsrs	r1, r1, #16
 800106a:	0003      	movs	r3, r0
 800106c:	4321      	orrs	r1, r4
 800106e:	428a      	cmp	r2, r1
 8001070:	d904      	bls.n	800107c <__aeabi_ddiv+0x31c>
 8001072:	1989      	adds	r1, r1, r6
 8001074:	3b01      	subs	r3, #1
 8001076:	428e      	cmp	r6, r1
 8001078:	d800      	bhi.n	800107c <__aeabi_ddiv+0x31c>
 800107a:	e0f1      	b.n	8001260 <__aeabi_ddiv+0x500>
 800107c:	042d      	lsls	r5, r5, #16
 800107e:	431d      	orrs	r5, r3
 8001080:	46ab      	mov	fp, r5
 8001082:	4643      	mov	r3, r8
 8001084:	1a89      	subs	r1, r1, r2
 8001086:	4642      	mov	r2, r8
 8001088:	0c28      	lsrs	r0, r5, #16
 800108a:	0412      	lsls	r2, r2, #16
 800108c:	0c1d      	lsrs	r5, r3, #16
 800108e:	465b      	mov	r3, fp
 8001090:	0c14      	lsrs	r4, r2, #16
 8001092:	0022      	movs	r2, r4
 8001094:	041b      	lsls	r3, r3, #16
 8001096:	0c1b      	lsrs	r3, r3, #16
 8001098:	435a      	muls	r2, r3
 800109a:	9403      	str	r4, [sp, #12]
 800109c:	436b      	muls	r3, r5
 800109e:	4344      	muls	r4, r0
 80010a0:	9502      	str	r5, [sp, #8]
 80010a2:	4368      	muls	r0, r5
 80010a4:	191b      	adds	r3, r3, r4
 80010a6:	0c15      	lsrs	r5, r2, #16
 80010a8:	18eb      	adds	r3, r5, r3
 80010aa:	429c      	cmp	r4, r3
 80010ac:	d903      	bls.n	80010b6 <__aeabi_ddiv+0x356>
 80010ae:	2480      	movs	r4, #128	; 0x80
 80010b0:	0264      	lsls	r4, r4, #9
 80010b2:	46a4      	mov	ip, r4
 80010b4:	4460      	add	r0, ip
 80010b6:	0c1c      	lsrs	r4, r3, #16
 80010b8:	0415      	lsls	r5, r2, #16
 80010ba:	041b      	lsls	r3, r3, #16
 80010bc:	0c2d      	lsrs	r5, r5, #16
 80010be:	1820      	adds	r0, r4, r0
 80010c0:	195d      	adds	r5, r3, r5
 80010c2:	4281      	cmp	r1, r0
 80010c4:	d377      	bcc.n	80011b6 <__aeabi_ddiv+0x456>
 80010c6:	d073      	beq.n	80011b0 <__aeabi_ddiv+0x450>
 80010c8:	1a0c      	subs	r4, r1, r0
 80010ca:	4aa2      	ldr	r2, [pc, #648]	; (8001354 <__aeabi_ddiv+0x5f4>)
 80010cc:	1b7d      	subs	r5, r7, r5
 80010ce:	42af      	cmp	r7, r5
 80010d0:	41bf      	sbcs	r7, r7
 80010d2:	4694      	mov	ip, r2
 80010d4:	9b00      	ldr	r3, [sp, #0]
 80010d6:	427f      	negs	r7, r7
 80010d8:	4463      	add	r3, ip
 80010da:	1be0      	subs	r0, r4, r7
 80010dc:	001c      	movs	r4, r3
 80010de:	4286      	cmp	r6, r0
 80010e0:	d100      	bne.n	80010e4 <__aeabi_ddiv+0x384>
 80010e2:	e0db      	b.n	800129c <__aeabi_ddiv+0x53c>
 80010e4:	9901      	ldr	r1, [sp, #4]
 80010e6:	f7ff f8a7 	bl	8000238 <__aeabi_uidivmod>
 80010ea:	464a      	mov	r2, r9
 80010ec:	4342      	muls	r2, r0
 80010ee:	040b      	lsls	r3, r1, #16
 80010f0:	0c29      	lsrs	r1, r5, #16
 80010f2:	0007      	movs	r7, r0
 80010f4:	4319      	orrs	r1, r3
 80010f6:	428a      	cmp	r2, r1
 80010f8:	d907      	bls.n	800110a <__aeabi_ddiv+0x3aa>
 80010fa:	1989      	adds	r1, r1, r6
 80010fc:	3f01      	subs	r7, #1
 80010fe:	428e      	cmp	r6, r1
 8001100:	d803      	bhi.n	800110a <__aeabi_ddiv+0x3aa>
 8001102:	428a      	cmp	r2, r1
 8001104:	d901      	bls.n	800110a <__aeabi_ddiv+0x3aa>
 8001106:	1e87      	subs	r7, r0, #2
 8001108:	1989      	adds	r1, r1, r6
 800110a:	1a88      	subs	r0, r1, r2
 800110c:	9901      	ldr	r1, [sp, #4]
 800110e:	f7ff f893 	bl	8000238 <__aeabi_uidivmod>
 8001112:	0409      	lsls	r1, r1, #16
 8001114:	464a      	mov	r2, r9
 8001116:	4689      	mov	r9, r1
 8001118:	0429      	lsls	r1, r5, #16
 800111a:	464d      	mov	r5, r9
 800111c:	4342      	muls	r2, r0
 800111e:	0c09      	lsrs	r1, r1, #16
 8001120:	0003      	movs	r3, r0
 8001122:	4329      	orrs	r1, r5
 8001124:	428a      	cmp	r2, r1
 8001126:	d907      	bls.n	8001138 <__aeabi_ddiv+0x3d8>
 8001128:	1989      	adds	r1, r1, r6
 800112a:	3b01      	subs	r3, #1
 800112c:	428e      	cmp	r6, r1
 800112e:	d803      	bhi.n	8001138 <__aeabi_ddiv+0x3d8>
 8001130:	428a      	cmp	r2, r1
 8001132:	d901      	bls.n	8001138 <__aeabi_ddiv+0x3d8>
 8001134:	1e83      	subs	r3, r0, #2
 8001136:	1989      	adds	r1, r1, r6
 8001138:	043f      	lsls	r7, r7, #16
 800113a:	1a89      	subs	r1, r1, r2
 800113c:	003a      	movs	r2, r7
 800113e:	9f03      	ldr	r7, [sp, #12]
 8001140:	431a      	orrs	r2, r3
 8001142:	0038      	movs	r0, r7
 8001144:	0413      	lsls	r3, r2, #16
 8001146:	0c1b      	lsrs	r3, r3, #16
 8001148:	4358      	muls	r0, r3
 800114a:	4681      	mov	r9, r0
 800114c:	9802      	ldr	r0, [sp, #8]
 800114e:	0c15      	lsrs	r5, r2, #16
 8001150:	436f      	muls	r7, r5
 8001152:	4343      	muls	r3, r0
 8001154:	4345      	muls	r5, r0
 8001156:	4648      	mov	r0, r9
 8001158:	0c00      	lsrs	r0, r0, #16
 800115a:	4684      	mov	ip, r0
 800115c:	19db      	adds	r3, r3, r7
 800115e:	4463      	add	r3, ip
 8001160:	429f      	cmp	r7, r3
 8001162:	d903      	bls.n	800116c <__aeabi_ddiv+0x40c>
 8001164:	2080      	movs	r0, #128	; 0x80
 8001166:	0240      	lsls	r0, r0, #9
 8001168:	4684      	mov	ip, r0
 800116a:	4465      	add	r5, ip
 800116c:	4648      	mov	r0, r9
 800116e:	0c1f      	lsrs	r7, r3, #16
 8001170:	0400      	lsls	r0, r0, #16
 8001172:	041b      	lsls	r3, r3, #16
 8001174:	0c00      	lsrs	r0, r0, #16
 8001176:	197d      	adds	r5, r7, r5
 8001178:	1818      	adds	r0, r3, r0
 800117a:	42a9      	cmp	r1, r5
 800117c:	d200      	bcs.n	8001180 <__aeabi_ddiv+0x420>
 800117e:	e084      	b.n	800128a <__aeabi_ddiv+0x52a>
 8001180:	d100      	bne.n	8001184 <__aeabi_ddiv+0x424>
 8001182:	e07f      	b.n	8001284 <__aeabi_ddiv+0x524>
 8001184:	2301      	movs	r3, #1
 8001186:	431a      	orrs	r2, r3
 8001188:	e657      	b.n	8000e3a <__aeabi_ddiv+0xda>
 800118a:	2380      	movs	r3, #128	; 0x80
 800118c:	464a      	mov	r2, r9
 800118e:	031b      	lsls	r3, r3, #12
 8001190:	4313      	orrs	r3, r2
 8001192:	031b      	lsls	r3, r3, #12
 8001194:	0b1b      	lsrs	r3, r3, #12
 8001196:	46aa      	mov	sl, r5
 8001198:	4a6f      	ldr	r2, [pc, #444]	; (8001358 <__aeabi_ddiv+0x5f8>)
 800119a:	e66f      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 800119c:	42ba      	cmp	r2, r7
 800119e:	d900      	bls.n	80011a2 <__aeabi_ddiv+0x442>
 80011a0:	e735      	b.n	800100e <__aeabi_ddiv+0x2ae>
 80011a2:	464b      	mov	r3, r9
 80011a4:	07dc      	lsls	r4, r3, #31
 80011a6:	0858      	lsrs	r0, r3, #1
 80011a8:	087b      	lsrs	r3, r7, #1
 80011aa:	431c      	orrs	r4, r3
 80011ac:	07ff      	lsls	r7, r7, #31
 80011ae:	e734      	b.n	800101a <__aeabi_ddiv+0x2ba>
 80011b0:	2400      	movs	r4, #0
 80011b2:	42af      	cmp	r7, r5
 80011b4:	d289      	bcs.n	80010ca <__aeabi_ddiv+0x36a>
 80011b6:	4447      	add	r7, r8
 80011b8:	4547      	cmp	r7, r8
 80011ba:	41a4      	sbcs	r4, r4
 80011bc:	465b      	mov	r3, fp
 80011be:	4264      	negs	r4, r4
 80011c0:	19a4      	adds	r4, r4, r6
 80011c2:	1864      	adds	r4, r4, r1
 80011c4:	3b01      	subs	r3, #1
 80011c6:	42a6      	cmp	r6, r4
 80011c8:	d21e      	bcs.n	8001208 <__aeabi_ddiv+0x4a8>
 80011ca:	42a0      	cmp	r0, r4
 80011cc:	d86d      	bhi.n	80012aa <__aeabi_ddiv+0x54a>
 80011ce:	d100      	bne.n	80011d2 <__aeabi_ddiv+0x472>
 80011d0:	e0b6      	b.n	8001340 <__aeabi_ddiv+0x5e0>
 80011d2:	1a24      	subs	r4, r4, r0
 80011d4:	469b      	mov	fp, r3
 80011d6:	e778      	b.n	80010ca <__aeabi_ddiv+0x36a>
 80011d8:	0003      	movs	r3, r0
 80011da:	465a      	mov	r2, fp
 80011dc:	3b28      	subs	r3, #40	; 0x28
 80011de:	409a      	lsls	r2, r3
 80011e0:	2700      	movs	r7, #0
 80011e2:	4691      	mov	r9, r2
 80011e4:	e688      	b.n	8000ef8 <__aeabi_ddiv+0x198>
 80011e6:	4658      	mov	r0, fp
 80011e8:	f001 f912 	bl	8002410 <__clzsi2>
 80011ec:	3020      	adds	r0, #32
 80011ee:	e672      	b.n	8000ed6 <__aeabi_ddiv+0x176>
 80011f0:	0003      	movs	r3, r0
 80011f2:	4652      	mov	r2, sl
 80011f4:	3b28      	subs	r3, #40	; 0x28
 80011f6:	409a      	lsls	r2, r3
 80011f8:	4693      	mov	fp, r2
 80011fa:	2200      	movs	r2, #0
 80011fc:	e6b4      	b.n	8000f68 <__aeabi_ddiv+0x208>
 80011fe:	4650      	mov	r0, sl
 8001200:	f001 f906 	bl	8002410 <__clzsi2>
 8001204:	3020      	adds	r0, #32
 8001206:	e69a      	b.n	8000f3e <__aeabi_ddiv+0x1de>
 8001208:	42a6      	cmp	r6, r4
 800120a:	d1e2      	bne.n	80011d2 <__aeabi_ddiv+0x472>
 800120c:	45b8      	cmp	r8, r7
 800120e:	d9dc      	bls.n	80011ca <__aeabi_ddiv+0x46a>
 8001210:	1a34      	subs	r4, r6, r0
 8001212:	469b      	mov	fp, r3
 8001214:	e759      	b.n	80010ca <__aeabi_ddiv+0x36a>
 8001216:	2b1f      	cmp	r3, #31
 8001218:	dc65      	bgt.n	80012e6 <__aeabi_ddiv+0x586>
 800121a:	4c50      	ldr	r4, [pc, #320]	; (800135c <__aeabi_ddiv+0x5fc>)
 800121c:	9900      	ldr	r1, [sp, #0]
 800121e:	46a4      	mov	ip, r4
 8001220:	465c      	mov	r4, fp
 8001222:	4461      	add	r1, ip
 8001224:	0008      	movs	r0, r1
 8001226:	408c      	lsls	r4, r1
 8001228:	0011      	movs	r1, r2
 800122a:	4082      	lsls	r2, r0
 800122c:	40d9      	lsrs	r1, r3
 800122e:	1e50      	subs	r0, r2, #1
 8001230:	4182      	sbcs	r2, r0
 8001232:	430c      	orrs	r4, r1
 8001234:	4314      	orrs	r4, r2
 8001236:	465a      	mov	r2, fp
 8001238:	40da      	lsrs	r2, r3
 800123a:	0013      	movs	r3, r2
 800123c:	0762      	lsls	r2, r4, #29
 800123e:	d009      	beq.n	8001254 <__aeabi_ddiv+0x4f4>
 8001240:	220f      	movs	r2, #15
 8001242:	4022      	ands	r2, r4
 8001244:	2a04      	cmp	r2, #4
 8001246:	d005      	beq.n	8001254 <__aeabi_ddiv+0x4f4>
 8001248:	0022      	movs	r2, r4
 800124a:	1d14      	adds	r4, r2, #4
 800124c:	4294      	cmp	r4, r2
 800124e:	4189      	sbcs	r1, r1
 8001250:	4249      	negs	r1, r1
 8001252:	185b      	adds	r3, r3, r1
 8001254:	021a      	lsls	r2, r3, #8
 8001256:	d562      	bpl.n	800131e <__aeabi_ddiv+0x5be>
 8001258:	2201      	movs	r2, #1
 800125a:	2300      	movs	r3, #0
 800125c:	2700      	movs	r7, #0
 800125e:	e60d      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 8001260:	428a      	cmp	r2, r1
 8001262:	d800      	bhi.n	8001266 <__aeabi_ddiv+0x506>
 8001264:	e70a      	b.n	800107c <__aeabi_ddiv+0x31c>
 8001266:	1e83      	subs	r3, r0, #2
 8001268:	1989      	adds	r1, r1, r6
 800126a:	e707      	b.n	800107c <__aeabi_ddiv+0x31c>
 800126c:	230f      	movs	r3, #15
 800126e:	4013      	ands	r3, r2
 8001270:	2b04      	cmp	r3, #4
 8001272:	d100      	bne.n	8001276 <__aeabi_ddiv+0x516>
 8001274:	e5e6      	b.n	8000e44 <__aeabi_ddiv+0xe4>
 8001276:	1d17      	adds	r7, r2, #4
 8001278:	4297      	cmp	r7, r2
 800127a:	4192      	sbcs	r2, r2
 800127c:	4253      	negs	r3, r2
 800127e:	449b      	add	fp, r3
 8001280:	08fa      	lsrs	r2, r7, #3
 8001282:	e5e0      	b.n	8000e46 <__aeabi_ddiv+0xe6>
 8001284:	2800      	cmp	r0, #0
 8001286:	d100      	bne.n	800128a <__aeabi_ddiv+0x52a>
 8001288:	e5d7      	b.n	8000e3a <__aeabi_ddiv+0xda>
 800128a:	1871      	adds	r1, r6, r1
 800128c:	1e53      	subs	r3, r2, #1
 800128e:	42b1      	cmp	r1, r6
 8001290:	d327      	bcc.n	80012e2 <__aeabi_ddiv+0x582>
 8001292:	42a9      	cmp	r1, r5
 8001294:	d315      	bcc.n	80012c2 <__aeabi_ddiv+0x562>
 8001296:	d058      	beq.n	800134a <__aeabi_ddiv+0x5ea>
 8001298:	001a      	movs	r2, r3
 800129a:	e773      	b.n	8001184 <__aeabi_ddiv+0x424>
 800129c:	2b00      	cmp	r3, #0
 800129e:	dc00      	bgt.n	80012a2 <__aeabi_ddiv+0x542>
 80012a0:	e604      	b.n	8000eac <__aeabi_ddiv+0x14c>
 80012a2:	2301      	movs	r3, #1
 80012a4:	2200      	movs	r2, #0
 80012a6:	449b      	add	fp, r3
 80012a8:	e5cd      	b.n	8000e46 <__aeabi_ddiv+0xe6>
 80012aa:	2302      	movs	r3, #2
 80012ac:	4447      	add	r7, r8
 80012ae:	4547      	cmp	r7, r8
 80012b0:	4189      	sbcs	r1, r1
 80012b2:	425b      	negs	r3, r3
 80012b4:	469c      	mov	ip, r3
 80012b6:	4249      	negs	r1, r1
 80012b8:	1989      	adds	r1, r1, r6
 80012ba:	190c      	adds	r4, r1, r4
 80012bc:	44e3      	add	fp, ip
 80012be:	1a24      	subs	r4, r4, r0
 80012c0:	e703      	b.n	80010ca <__aeabi_ddiv+0x36a>
 80012c2:	4643      	mov	r3, r8
 80012c4:	005f      	lsls	r7, r3, #1
 80012c6:	4547      	cmp	r7, r8
 80012c8:	419b      	sbcs	r3, r3
 80012ca:	46b8      	mov	r8, r7
 80012cc:	425b      	negs	r3, r3
 80012ce:	199e      	adds	r6, r3, r6
 80012d0:	3a02      	subs	r2, #2
 80012d2:	1989      	adds	r1, r1, r6
 80012d4:	42a9      	cmp	r1, r5
 80012d6:	d000      	beq.n	80012da <__aeabi_ddiv+0x57a>
 80012d8:	e754      	b.n	8001184 <__aeabi_ddiv+0x424>
 80012da:	4540      	cmp	r0, r8
 80012dc:	d000      	beq.n	80012e0 <__aeabi_ddiv+0x580>
 80012de:	e751      	b.n	8001184 <__aeabi_ddiv+0x424>
 80012e0:	e5ab      	b.n	8000e3a <__aeabi_ddiv+0xda>
 80012e2:	001a      	movs	r2, r3
 80012e4:	e7f6      	b.n	80012d4 <__aeabi_ddiv+0x574>
 80012e6:	211f      	movs	r1, #31
 80012e8:	465f      	mov	r7, fp
 80012ea:	4249      	negs	r1, r1
 80012ec:	1b0c      	subs	r4, r1, r4
 80012ee:	40e7      	lsrs	r7, r4
 80012f0:	2b20      	cmp	r3, #32
 80012f2:	d007      	beq.n	8001304 <__aeabi_ddiv+0x5a4>
 80012f4:	491a      	ldr	r1, [pc, #104]	; (8001360 <__aeabi_ddiv+0x600>)
 80012f6:	9b00      	ldr	r3, [sp, #0]
 80012f8:	468c      	mov	ip, r1
 80012fa:	4463      	add	r3, ip
 80012fc:	0018      	movs	r0, r3
 80012fe:	465b      	mov	r3, fp
 8001300:	4083      	lsls	r3, r0
 8001302:	431a      	orrs	r2, r3
 8001304:	1e50      	subs	r0, r2, #1
 8001306:	4182      	sbcs	r2, r0
 8001308:	433a      	orrs	r2, r7
 800130a:	2707      	movs	r7, #7
 800130c:	2300      	movs	r3, #0
 800130e:	4017      	ands	r7, r2
 8001310:	d009      	beq.n	8001326 <__aeabi_ddiv+0x5c6>
 8001312:	210f      	movs	r1, #15
 8001314:	2300      	movs	r3, #0
 8001316:	4011      	ands	r1, r2
 8001318:	0014      	movs	r4, r2
 800131a:	2904      	cmp	r1, #4
 800131c:	d195      	bne.n	800124a <__aeabi_ddiv+0x4ea>
 800131e:	0022      	movs	r2, r4
 8001320:	075f      	lsls	r7, r3, #29
 8001322:	025b      	lsls	r3, r3, #9
 8001324:	0b1b      	lsrs	r3, r3, #12
 8001326:	08d2      	lsrs	r2, r2, #3
 8001328:	4317      	orrs	r7, r2
 800132a:	2200      	movs	r2, #0
 800132c:	e5a6      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 800132e:	2380      	movs	r3, #128	; 0x80
 8001330:	4659      	mov	r1, fp
 8001332:	031b      	lsls	r3, r3, #12
 8001334:	430b      	orrs	r3, r1
 8001336:	031b      	lsls	r3, r3, #12
 8001338:	0017      	movs	r7, r2
 800133a:	0b1b      	lsrs	r3, r3, #12
 800133c:	4a06      	ldr	r2, [pc, #24]	; (8001358 <__aeabi_ddiv+0x5f8>)
 800133e:	e59d      	b.n	8000e7c <__aeabi_ddiv+0x11c>
 8001340:	42bd      	cmp	r5, r7
 8001342:	d8b2      	bhi.n	80012aa <__aeabi_ddiv+0x54a>
 8001344:	469b      	mov	fp, r3
 8001346:	2400      	movs	r4, #0
 8001348:	e6bf      	b.n	80010ca <__aeabi_ddiv+0x36a>
 800134a:	4580      	cmp	r8, r0
 800134c:	d3b9      	bcc.n	80012c2 <__aeabi_ddiv+0x562>
 800134e:	001a      	movs	r2, r3
 8001350:	e7c3      	b.n	80012da <__aeabi_ddiv+0x57a>
 8001352:	46c0      	nop			; (mov r8, r8)
 8001354:	000003ff 	.word	0x000003ff
 8001358:	000007ff 	.word	0x000007ff
 800135c:	0000041e 	.word	0x0000041e
 8001360:	0000043e 	.word	0x0000043e

08001364 <__eqdf2>:
 8001364:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001366:	464f      	mov	r7, r9
 8001368:	4646      	mov	r6, r8
 800136a:	46d6      	mov	lr, sl
 800136c:	4684      	mov	ip, r0
 800136e:	b5c0      	push	{r6, r7, lr}
 8001370:	4680      	mov	r8, r0
 8001372:	4e19      	ldr	r6, [pc, #100]	; (80013d8 <__eqdf2+0x74>)
 8001374:	0318      	lsls	r0, r3, #12
 8001376:	030f      	lsls	r7, r1, #12
 8001378:	004d      	lsls	r5, r1, #1
 800137a:	0b00      	lsrs	r0, r0, #12
 800137c:	005c      	lsls	r4, r3, #1
 800137e:	4682      	mov	sl, r0
 8001380:	0b3f      	lsrs	r7, r7, #12
 8001382:	0d6d      	lsrs	r5, r5, #21
 8001384:	0fc9      	lsrs	r1, r1, #31
 8001386:	4691      	mov	r9, r2
 8001388:	0d64      	lsrs	r4, r4, #21
 800138a:	0fdb      	lsrs	r3, r3, #31
 800138c:	2001      	movs	r0, #1
 800138e:	42b5      	cmp	r5, r6
 8001390:	d00a      	beq.n	80013a8 <__eqdf2+0x44>
 8001392:	42b4      	cmp	r4, r6
 8001394:	d003      	beq.n	800139e <__eqdf2+0x3a>
 8001396:	42a5      	cmp	r5, r4
 8001398:	d101      	bne.n	800139e <__eqdf2+0x3a>
 800139a:	4557      	cmp	r7, sl
 800139c:	d00c      	beq.n	80013b8 <__eqdf2+0x54>
 800139e:	bc1c      	pop	{r2, r3, r4}
 80013a0:	4690      	mov	r8, r2
 80013a2:	4699      	mov	r9, r3
 80013a4:	46a2      	mov	sl, r4
 80013a6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80013a8:	4666      	mov	r6, ip
 80013aa:	433e      	orrs	r6, r7
 80013ac:	d1f7      	bne.n	800139e <__eqdf2+0x3a>
 80013ae:	42ac      	cmp	r4, r5
 80013b0:	d1f5      	bne.n	800139e <__eqdf2+0x3a>
 80013b2:	4654      	mov	r4, sl
 80013b4:	4314      	orrs	r4, r2
 80013b6:	d1f2      	bne.n	800139e <__eqdf2+0x3a>
 80013b8:	2001      	movs	r0, #1
 80013ba:	45c8      	cmp	r8, r9
 80013bc:	d1ef      	bne.n	800139e <__eqdf2+0x3a>
 80013be:	4299      	cmp	r1, r3
 80013c0:	d007      	beq.n	80013d2 <__eqdf2+0x6e>
 80013c2:	2d00      	cmp	r5, #0
 80013c4:	d1eb      	bne.n	800139e <__eqdf2+0x3a>
 80013c6:	4663      	mov	r3, ip
 80013c8:	431f      	orrs	r7, r3
 80013ca:	0038      	movs	r0, r7
 80013cc:	1e47      	subs	r7, r0, #1
 80013ce:	41b8      	sbcs	r0, r7
 80013d0:	e7e5      	b.n	800139e <__eqdf2+0x3a>
 80013d2:	2000      	movs	r0, #0
 80013d4:	e7e3      	b.n	800139e <__eqdf2+0x3a>
 80013d6:	46c0      	nop			; (mov r8, r8)
 80013d8:	000007ff 	.word	0x000007ff

080013dc <__gedf2>:
 80013dc:	b5f0      	push	{r4, r5, r6, r7, lr}
 80013de:	464f      	mov	r7, r9
 80013e0:	4646      	mov	r6, r8
 80013e2:	46d6      	mov	lr, sl
 80013e4:	004d      	lsls	r5, r1, #1
 80013e6:	b5c0      	push	{r6, r7, lr}
 80013e8:	030e      	lsls	r6, r1, #12
 80013ea:	0fc9      	lsrs	r1, r1, #31
 80013ec:	468a      	mov	sl, r1
 80013ee:	492c      	ldr	r1, [pc, #176]	; (80014a0 <__gedf2+0xc4>)
 80013f0:	031f      	lsls	r7, r3, #12
 80013f2:	005c      	lsls	r4, r3, #1
 80013f4:	4680      	mov	r8, r0
 80013f6:	0b36      	lsrs	r6, r6, #12
 80013f8:	0d6d      	lsrs	r5, r5, #21
 80013fa:	4691      	mov	r9, r2
 80013fc:	0b3f      	lsrs	r7, r7, #12
 80013fe:	0d64      	lsrs	r4, r4, #21
 8001400:	0fdb      	lsrs	r3, r3, #31
 8001402:	428d      	cmp	r5, r1
 8001404:	d01e      	beq.n	8001444 <__gedf2+0x68>
 8001406:	428c      	cmp	r4, r1
 8001408:	d016      	beq.n	8001438 <__gedf2+0x5c>
 800140a:	2d00      	cmp	r5, #0
 800140c:	d11e      	bne.n	800144c <__gedf2+0x70>
 800140e:	4330      	orrs	r0, r6
 8001410:	4684      	mov	ip, r0
 8001412:	2c00      	cmp	r4, #0
 8001414:	d101      	bne.n	800141a <__gedf2+0x3e>
 8001416:	433a      	orrs	r2, r7
 8001418:	d023      	beq.n	8001462 <__gedf2+0x86>
 800141a:	4662      	mov	r2, ip
 800141c:	2a00      	cmp	r2, #0
 800141e:	d01a      	beq.n	8001456 <__gedf2+0x7a>
 8001420:	459a      	cmp	sl, r3
 8001422:	d029      	beq.n	8001478 <__gedf2+0x9c>
 8001424:	4651      	mov	r1, sl
 8001426:	2002      	movs	r0, #2
 8001428:	3901      	subs	r1, #1
 800142a:	4008      	ands	r0, r1
 800142c:	3801      	subs	r0, #1
 800142e:	bc1c      	pop	{r2, r3, r4}
 8001430:	4690      	mov	r8, r2
 8001432:	4699      	mov	r9, r3
 8001434:	46a2      	mov	sl, r4
 8001436:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001438:	0039      	movs	r1, r7
 800143a:	4311      	orrs	r1, r2
 800143c:	d0e5      	beq.n	800140a <__gedf2+0x2e>
 800143e:	2002      	movs	r0, #2
 8001440:	4240      	negs	r0, r0
 8001442:	e7f4      	b.n	800142e <__gedf2+0x52>
 8001444:	4330      	orrs	r0, r6
 8001446:	d1fa      	bne.n	800143e <__gedf2+0x62>
 8001448:	42ac      	cmp	r4, r5
 800144a:	d00f      	beq.n	800146c <__gedf2+0x90>
 800144c:	2c00      	cmp	r4, #0
 800144e:	d10f      	bne.n	8001470 <__gedf2+0x94>
 8001450:	433a      	orrs	r2, r7
 8001452:	d0e7      	beq.n	8001424 <__gedf2+0x48>
 8001454:	e00c      	b.n	8001470 <__gedf2+0x94>
 8001456:	2201      	movs	r2, #1
 8001458:	3b01      	subs	r3, #1
 800145a:	4393      	bics	r3, r2
 800145c:	0018      	movs	r0, r3
 800145e:	3001      	adds	r0, #1
 8001460:	e7e5      	b.n	800142e <__gedf2+0x52>
 8001462:	4663      	mov	r3, ip
 8001464:	2000      	movs	r0, #0
 8001466:	2b00      	cmp	r3, #0
 8001468:	d0e1      	beq.n	800142e <__gedf2+0x52>
 800146a:	e7db      	b.n	8001424 <__gedf2+0x48>
 800146c:	433a      	orrs	r2, r7
 800146e:	d1e6      	bne.n	800143e <__gedf2+0x62>
 8001470:	459a      	cmp	sl, r3
 8001472:	d1d7      	bne.n	8001424 <__gedf2+0x48>
 8001474:	42a5      	cmp	r5, r4
 8001476:	dcd5      	bgt.n	8001424 <__gedf2+0x48>
 8001478:	42a5      	cmp	r5, r4
 800147a:	db05      	blt.n	8001488 <__gedf2+0xac>
 800147c:	42be      	cmp	r6, r7
 800147e:	d8d1      	bhi.n	8001424 <__gedf2+0x48>
 8001480:	d008      	beq.n	8001494 <__gedf2+0xb8>
 8001482:	2000      	movs	r0, #0
 8001484:	42be      	cmp	r6, r7
 8001486:	d2d2      	bcs.n	800142e <__gedf2+0x52>
 8001488:	4650      	mov	r0, sl
 800148a:	2301      	movs	r3, #1
 800148c:	3801      	subs	r0, #1
 800148e:	4398      	bics	r0, r3
 8001490:	3001      	adds	r0, #1
 8001492:	e7cc      	b.n	800142e <__gedf2+0x52>
 8001494:	45c8      	cmp	r8, r9
 8001496:	d8c5      	bhi.n	8001424 <__gedf2+0x48>
 8001498:	2000      	movs	r0, #0
 800149a:	45c8      	cmp	r8, r9
 800149c:	d3f4      	bcc.n	8001488 <__gedf2+0xac>
 800149e:	e7c6      	b.n	800142e <__gedf2+0x52>
 80014a0:	000007ff 	.word	0x000007ff

080014a4 <__ledf2>:
 80014a4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80014a6:	464f      	mov	r7, r9
 80014a8:	4646      	mov	r6, r8
 80014aa:	46d6      	mov	lr, sl
 80014ac:	004d      	lsls	r5, r1, #1
 80014ae:	b5c0      	push	{r6, r7, lr}
 80014b0:	030e      	lsls	r6, r1, #12
 80014b2:	0fc9      	lsrs	r1, r1, #31
 80014b4:	468a      	mov	sl, r1
 80014b6:	492e      	ldr	r1, [pc, #184]	; (8001570 <__ledf2+0xcc>)
 80014b8:	031f      	lsls	r7, r3, #12
 80014ba:	005c      	lsls	r4, r3, #1
 80014bc:	4680      	mov	r8, r0
 80014be:	0b36      	lsrs	r6, r6, #12
 80014c0:	0d6d      	lsrs	r5, r5, #21
 80014c2:	4691      	mov	r9, r2
 80014c4:	0b3f      	lsrs	r7, r7, #12
 80014c6:	0d64      	lsrs	r4, r4, #21
 80014c8:	0fdb      	lsrs	r3, r3, #31
 80014ca:	428d      	cmp	r5, r1
 80014cc:	d018      	beq.n	8001500 <__ledf2+0x5c>
 80014ce:	428c      	cmp	r4, r1
 80014d0:	d011      	beq.n	80014f6 <__ledf2+0x52>
 80014d2:	2d00      	cmp	r5, #0
 80014d4:	d118      	bne.n	8001508 <__ledf2+0x64>
 80014d6:	4330      	orrs	r0, r6
 80014d8:	4684      	mov	ip, r0
 80014da:	2c00      	cmp	r4, #0
 80014dc:	d11e      	bne.n	800151c <__ledf2+0x78>
 80014de:	433a      	orrs	r2, r7
 80014e0:	d11c      	bne.n	800151c <__ledf2+0x78>
 80014e2:	4663      	mov	r3, ip
 80014e4:	2000      	movs	r0, #0
 80014e6:	2b00      	cmp	r3, #0
 80014e8:	d030      	beq.n	800154c <__ledf2+0xa8>
 80014ea:	4651      	mov	r1, sl
 80014ec:	2002      	movs	r0, #2
 80014ee:	3901      	subs	r1, #1
 80014f0:	4008      	ands	r0, r1
 80014f2:	3801      	subs	r0, #1
 80014f4:	e02a      	b.n	800154c <__ledf2+0xa8>
 80014f6:	0039      	movs	r1, r7
 80014f8:	4311      	orrs	r1, r2
 80014fa:	d0ea      	beq.n	80014d2 <__ledf2+0x2e>
 80014fc:	2002      	movs	r0, #2
 80014fe:	e025      	b.n	800154c <__ledf2+0xa8>
 8001500:	4330      	orrs	r0, r6
 8001502:	d1fb      	bne.n	80014fc <__ledf2+0x58>
 8001504:	42ac      	cmp	r4, r5
 8001506:	d026      	beq.n	8001556 <__ledf2+0xb2>
 8001508:	2c00      	cmp	r4, #0
 800150a:	d126      	bne.n	800155a <__ledf2+0xb6>
 800150c:	433a      	orrs	r2, r7
 800150e:	d124      	bne.n	800155a <__ledf2+0xb6>
 8001510:	4651      	mov	r1, sl
 8001512:	2002      	movs	r0, #2
 8001514:	3901      	subs	r1, #1
 8001516:	4008      	ands	r0, r1
 8001518:	3801      	subs	r0, #1
 800151a:	e017      	b.n	800154c <__ledf2+0xa8>
 800151c:	4662      	mov	r2, ip
 800151e:	2a00      	cmp	r2, #0
 8001520:	d00f      	beq.n	8001542 <__ledf2+0x9e>
 8001522:	459a      	cmp	sl, r3
 8001524:	d1e1      	bne.n	80014ea <__ledf2+0x46>
 8001526:	42a5      	cmp	r5, r4
 8001528:	db05      	blt.n	8001536 <__ledf2+0x92>
 800152a:	42be      	cmp	r6, r7
 800152c:	d8dd      	bhi.n	80014ea <__ledf2+0x46>
 800152e:	d019      	beq.n	8001564 <__ledf2+0xc0>
 8001530:	2000      	movs	r0, #0
 8001532:	42be      	cmp	r6, r7
 8001534:	d20a      	bcs.n	800154c <__ledf2+0xa8>
 8001536:	4650      	mov	r0, sl
 8001538:	2301      	movs	r3, #1
 800153a:	3801      	subs	r0, #1
 800153c:	4398      	bics	r0, r3
 800153e:	3001      	adds	r0, #1
 8001540:	e004      	b.n	800154c <__ledf2+0xa8>
 8001542:	2201      	movs	r2, #1
 8001544:	3b01      	subs	r3, #1
 8001546:	4393      	bics	r3, r2
 8001548:	0018      	movs	r0, r3
 800154a:	3001      	adds	r0, #1
 800154c:	bc1c      	pop	{r2, r3, r4}
 800154e:	4690      	mov	r8, r2
 8001550:	4699      	mov	r9, r3
 8001552:	46a2      	mov	sl, r4
 8001554:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8001556:	433a      	orrs	r2, r7
 8001558:	d1d0      	bne.n	80014fc <__ledf2+0x58>
 800155a:	459a      	cmp	sl, r3
 800155c:	d1c5      	bne.n	80014ea <__ledf2+0x46>
 800155e:	42a5      	cmp	r5, r4
 8001560:	dcc3      	bgt.n	80014ea <__ledf2+0x46>
 8001562:	e7e0      	b.n	8001526 <__ledf2+0x82>
 8001564:	45c8      	cmp	r8, r9
 8001566:	d8c0      	bhi.n	80014ea <__ledf2+0x46>
 8001568:	2000      	movs	r0, #0
 800156a:	45c8      	cmp	r8, r9
 800156c:	d3e3      	bcc.n	8001536 <__ledf2+0x92>
 800156e:	e7ed      	b.n	800154c <__ledf2+0xa8>
 8001570:	000007ff 	.word	0x000007ff

08001574 <__aeabi_dmul>:
 8001574:	b5f0      	push	{r4, r5, r6, r7, lr}
 8001576:	4657      	mov	r7, sl
 8001578:	46de      	mov	lr, fp
 800157a:	464e      	mov	r6, r9
 800157c:	4645      	mov	r5, r8
 800157e:	b5e0      	push	{r5, r6, r7, lr}
 8001580:	4683      	mov	fp, r0
 8001582:	0006      	movs	r6, r0
 8001584:	030f      	lsls	r7, r1, #12
 8001586:	0048      	lsls	r0, r1, #1
 8001588:	b087      	sub	sp, #28
 800158a:	4692      	mov	sl, r2
 800158c:	001d      	movs	r5, r3
 800158e:	0b3f      	lsrs	r7, r7, #12
 8001590:	0d40      	lsrs	r0, r0, #21
 8001592:	0fcc      	lsrs	r4, r1, #31
 8001594:	2800      	cmp	r0, #0
 8001596:	d100      	bne.n	800159a <__aeabi_dmul+0x26>
 8001598:	e06f      	b.n	800167a <__aeabi_dmul+0x106>
 800159a:	4bde      	ldr	r3, [pc, #888]	; (8001914 <__aeabi_dmul+0x3a0>)
 800159c:	4298      	cmp	r0, r3
 800159e:	d038      	beq.n	8001612 <__aeabi_dmul+0x9e>
 80015a0:	2380      	movs	r3, #128	; 0x80
 80015a2:	00ff      	lsls	r7, r7, #3
 80015a4:	041b      	lsls	r3, r3, #16
 80015a6:	431f      	orrs	r7, r3
 80015a8:	0f73      	lsrs	r3, r6, #29
 80015aa:	433b      	orrs	r3, r7
 80015ac:	9301      	str	r3, [sp, #4]
 80015ae:	4bda      	ldr	r3, [pc, #872]	; (8001918 <__aeabi_dmul+0x3a4>)
 80015b0:	2700      	movs	r7, #0
 80015b2:	4699      	mov	r9, r3
 80015b4:	2300      	movs	r3, #0
 80015b6:	469b      	mov	fp, r3
 80015b8:	00f6      	lsls	r6, r6, #3
 80015ba:	4481      	add	r9, r0
 80015bc:	032b      	lsls	r3, r5, #12
 80015be:	0069      	lsls	r1, r5, #1
 80015c0:	0b1b      	lsrs	r3, r3, #12
 80015c2:	4652      	mov	r2, sl
 80015c4:	4698      	mov	r8, r3
 80015c6:	0d49      	lsrs	r1, r1, #21
 80015c8:	0fed      	lsrs	r5, r5, #31
 80015ca:	2900      	cmp	r1, #0
 80015cc:	d100      	bne.n	80015d0 <__aeabi_dmul+0x5c>
 80015ce:	e085      	b.n	80016dc <__aeabi_dmul+0x168>
 80015d0:	4bd0      	ldr	r3, [pc, #832]	; (8001914 <__aeabi_dmul+0x3a0>)
 80015d2:	4299      	cmp	r1, r3
 80015d4:	d100      	bne.n	80015d8 <__aeabi_dmul+0x64>
 80015d6:	e073      	b.n	80016c0 <__aeabi_dmul+0x14c>
 80015d8:	4643      	mov	r3, r8
 80015da:	00da      	lsls	r2, r3, #3
 80015dc:	2380      	movs	r3, #128	; 0x80
 80015de:	041b      	lsls	r3, r3, #16
 80015e0:	4313      	orrs	r3, r2
 80015e2:	4652      	mov	r2, sl
 80015e4:	48cc      	ldr	r0, [pc, #816]	; (8001918 <__aeabi_dmul+0x3a4>)
 80015e6:	0f52      	lsrs	r2, r2, #29
 80015e8:	4684      	mov	ip, r0
 80015ea:	4313      	orrs	r3, r2
 80015ec:	4652      	mov	r2, sl
 80015ee:	2000      	movs	r0, #0
 80015f0:	4461      	add	r1, ip
 80015f2:	00d2      	lsls	r2, r2, #3
 80015f4:	4489      	add	r9, r1
 80015f6:	0021      	movs	r1, r4
 80015f8:	4069      	eors	r1, r5
 80015fa:	9100      	str	r1, [sp, #0]
 80015fc:	468c      	mov	ip, r1
 80015fe:	2101      	movs	r1, #1
 8001600:	4449      	add	r1, r9
 8001602:	468a      	mov	sl, r1
 8001604:	2f0f      	cmp	r7, #15
 8001606:	d900      	bls.n	800160a <__aeabi_dmul+0x96>
 8001608:	e090      	b.n	800172c <__aeabi_dmul+0x1b8>
 800160a:	49c4      	ldr	r1, [pc, #784]	; (800191c <__aeabi_dmul+0x3a8>)
 800160c:	00bf      	lsls	r7, r7, #2
 800160e:	59cf      	ldr	r7, [r1, r7]
 8001610:	46bf      	mov	pc, r7
 8001612:	465b      	mov	r3, fp
 8001614:	433b      	orrs	r3, r7
 8001616:	9301      	str	r3, [sp, #4]
 8001618:	d000      	beq.n	800161c <__aeabi_dmul+0xa8>
 800161a:	e16a      	b.n	80018f2 <__aeabi_dmul+0x37e>
 800161c:	2302      	movs	r3, #2
 800161e:	2708      	movs	r7, #8
 8001620:	2600      	movs	r6, #0
 8001622:	4681      	mov	r9, r0
 8001624:	469b      	mov	fp, r3
 8001626:	e7c9      	b.n	80015bc <__aeabi_dmul+0x48>
 8001628:	0032      	movs	r2, r6
 800162a:	4658      	mov	r0, fp
 800162c:	9b01      	ldr	r3, [sp, #4]
 800162e:	4661      	mov	r1, ip
 8001630:	9100      	str	r1, [sp, #0]
 8001632:	2802      	cmp	r0, #2
 8001634:	d100      	bne.n	8001638 <__aeabi_dmul+0xc4>
 8001636:	e075      	b.n	8001724 <__aeabi_dmul+0x1b0>
 8001638:	2803      	cmp	r0, #3
 800163a:	d100      	bne.n	800163e <__aeabi_dmul+0xca>
 800163c:	e1fe      	b.n	8001a3c <__aeabi_dmul+0x4c8>
 800163e:	2801      	cmp	r0, #1
 8001640:	d000      	beq.n	8001644 <__aeabi_dmul+0xd0>
 8001642:	e12c      	b.n	800189e <__aeabi_dmul+0x32a>
 8001644:	2300      	movs	r3, #0
 8001646:	2700      	movs	r7, #0
 8001648:	2600      	movs	r6, #0
 800164a:	2500      	movs	r5, #0
 800164c:	033f      	lsls	r7, r7, #12
 800164e:	0d2a      	lsrs	r2, r5, #20
 8001650:	0b3f      	lsrs	r7, r7, #12
 8001652:	48b3      	ldr	r0, [pc, #716]	; (8001920 <__aeabi_dmul+0x3ac>)
 8001654:	0512      	lsls	r2, r2, #20
 8001656:	433a      	orrs	r2, r7
 8001658:	4002      	ands	r2, r0
 800165a:	051b      	lsls	r3, r3, #20
 800165c:	4313      	orrs	r3, r2
 800165e:	9a00      	ldr	r2, [sp, #0]
 8001660:	005b      	lsls	r3, r3, #1
 8001662:	07d1      	lsls	r1, r2, #31
 8001664:	085b      	lsrs	r3, r3, #1
 8001666:	430b      	orrs	r3, r1
 8001668:	0030      	movs	r0, r6
 800166a:	0019      	movs	r1, r3
 800166c:	b007      	add	sp, #28
 800166e:	bc3c      	pop	{r2, r3, r4, r5}
 8001670:	4690      	mov	r8, r2
 8001672:	4699      	mov	r9, r3
 8001674:	46a2      	mov	sl, r4
 8001676:	46ab      	mov	fp, r5
 8001678:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800167a:	465b      	mov	r3, fp
 800167c:	433b      	orrs	r3, r7
 800167e:	9301      	str	r3, [sp, #4]
 8001680:	d100      	bne.n	8001684 <__aeabi_dmul+0x110>
 8001682:	e12f      	b.n	80018e4 <__aeabi_dmul+0x370>
 8001684:	2f00      	cmp	r7, #0
 8001686:	d100      	bne.n	800168a <__aeabi_dmul+0x116>
 8001688:	e1a5      	b.n	80019d6 <__aeabi_dmul+0x462>
 800168a:	0038      	movs	r0, r7
 800168c:	f000 fec0 	bl	8002410 <__clzsi2>
 8001690:	0003      	movs	r3, r0
 8001692:	3b0b      	subs	r3, #11
 8001694:	2b1c      	cmp	r3, #28
 8001696:	dd00      	ble.n	800169a <__aeabi_dmul+0x126>
 8001698:	e196      	b.n	80019c8 <__aeabi_dmul+0x454>
 800169a:	221d      	movs	r2, #29
 800169c:	1ad3      	subs	r3, r2, r3
 800169e:	465a      	mov	r2, fp
 80016a0:	0001      	movs	r1, r0
 80016a2:	40da      	lsrs	r2, r3
 80016a4:	465e      	mov	r6, fp
 80016a6:	3908      	subs	r1, #8
 80016a8:	408f      	lsls	r7, r1
 80016aa:	0013      	movs	r3, r2
 80016ac:	408e      	lsls	r6, r1
 80016ae:	433b      	orrs	r3, r7
 80016b0:	9301      	str	r3, [sp, #4]
 80016b2:	4b9c      	ldr	r3, [pc, #624]	; (8001924 <__aeabi_dmul+0x3b0>)
 80016b4:	2700      	movs	r7, #0
 80016b6:	1a1b      	subs	r3, r3, r0
 80016b8:	4699      	mov	r9, r3
 80016ba:	2300      	movs	r3, #0
 80016bc:	469b      	mov	fp, r3
 80016be:	e77d      	b.n	80015bc <__aeabi_dmul+0x48>
 80016c0:	4641      	mov	r1, r8
 80016c2:	4653      	mov	r3, sl
 80016c4:	430b      	orrs	r3, r1
 80016c6:	4993      	ldr	r1, [pc, #588]	; (8001914 <__aeabi_dmul+0x3a0>)
 80016c8:	468c      	mov	ip, r1
 80016ca:	44e1      	add	r9, ip
 80016cc:	2b00      	cmp	r3, #0
 80016ce:	d000      	beq.n	80016d2 <__aeabi_dmul+0x15e>
 80016d0:	e11a      	b.n	8001908 <__aeabi_dmul+0x394>
 80016d2:	2202      	movs	r2, #2
 80016d4:	2002      	movs	r0, #2
 80016d6:	4317      	orrs	r7, r2
 80016d8:	2200      	movs	r2, #0
 80016da:	e78c      	b.n	80015f6 <__aeabi_dmul+0x82>
 80016dc:	4313      	orrs	r3, r2
 80016de:	d100      	bne.n	80016e2 <__aeabi_dmul+0x16e>
 80016e0:	e10d      	b.n	80018fe <__aeabi_dmul+0x38a>
 80016e2:	4643      	mov	r3, r8
 80016e4:	2b00      	cmp	r3, #0
 80016e6:	d100      	bne.n	80016ea <__aeabi_dmul+0x176>
 80016e8:	e181      	b.n	80019ee <__aeabi_dmul+0x47a>
 80016ea:	4640      	mov	r0, r8
 80016ec:	f000 fe90 	bl	8002410 <__clzsi2>
 80016f0:	0002      	movs	r2, r0
 80016f2:	3a0b      	subs	r2, #11
 80016f4:	2a1c      	cmp	r2, #28
 80016f6:	dd00      	ble.n	80016fa <__aeabi_dmul+0x186>
 80016f8:	e172      	b.n	80019e0 <__aeabi_dmul+0x46c>
 80016fa:	0001      	movs	r1, r0
 80016fc:	4643      	mov	r3, r8
 80016fe:	3908      	subs	r1, #8
 8001700:	408b      	lsls	r3, r1
 8001702:	4698      	mov	r8, r3
 8001704:	231d      	movs	r3, #29
 8001706:	1a9a      	subs	r2, r3, r2
 8001708:	4653      	mov	r3, sl
 800170a:	40d3      	lsrs	r3, r2
 800170c:	001a      	movs	r2, r3
 800170e:	4643      	mov	r3, r8
 8001710:	4313      	orrs	r3, r2
 8001712:	4652      	mov	r2, sl
 8001714:	408a      	lsls	r2, r1
 8001716:	4649      	mov	r1, r9
 8001718:	1a08      	subs	r0, r1, r0
 800171a:	4982      	ldr	r1, [pc, #520]	; (8001924 <__aeabi_dmul+0x3b0>)
 800171c:	4689      	mov	r9, r1
 800171e:	4481      	add	r9, r0
 8001720:	2000      	movs	r0, #0
 8001722:	e768      	b.n	80015f6 <__aeabi_dmul+0x82>
 8001724:	4b7b      	ldr	r3, [pc, #492]	; (8001914 <__aeabi_dmul+0x3a0>)
 8001726:	2700      	movs	r7, #0
 8001728:	2600      	movs	r6, #0
 800172a:	e78e      	b.n	800164a <__aeabi_dmul+0xd6>
 800172c:	0c14      	lsrs	r4, r2, #16
 800172e:	0412      	lsls	r2, r2, #16
 8001730:	0c12      	lsrs	r2, r2, #16
 8001732:	0011      	movs	r1, r2
 8001734:	0c37      	lsrs	r7, r6, #16
 8001736:	0436      	lsls	r6, r6, #16
 8001738:	0c35      	lsrs	r5, r6, #16
 800173a:	4379      	muls	r1, r7
 800173c:	0028      	movs	r0, r5
 800173e:	468c      	mov	ip, r1
 8001740:	002e      	movs	r6, r5
 8001742:	4360      	muls	r0, r4
 8001744:	4460      	add	r0, ip
 8001746:	4683      	mov	fp, r0
 8001748:	4356      	muls	r6, r2
 800174a:	0021      	movs	r1, r4
 800174c:	0c30      	lsrs	r0, r6, #16
 800174e:	4680      	mov	r8, r0
 8001750:	4658      	mov	r0, fp
 8001752:	4379      	muls	r1, r7
 8001754:	4440      	add	r0, r8
 8001756:	9102      	str	r1, [sp, #8]
 8001758:	4584      	cmp	ip, r0
 800175a:	d906      	bls.n	800176a <__aeabi_dmul+0x1f6>
 800175c:	4688      	mov	r8, r1
 800175e:	2180      	movs	r1, #128	; 0x80
 8001760:	0249      	lsls	r1, r1, #9
 8001762:	468c      	mov	ip, r1
 8001764:	44e0      	add	r8, ip
 8001766:	4641      	mov	r1, r8
 8001768:	9102      	str	r1, [sp, #8]
 800176a:	0436      	lsls	r6, r6, #16
 800176c:	0c01      	lsrs	r1, r0, #16
 800176e:	0c36      	lsrs	r6, r6, #16
 8001770:	0400      	lsls	r0, r0, #16
 8001772:	468b      	mov	fp, r1
 8001774:	1981      	adds	r1, r0, r6
 8001776:	0c1e      	lsrs	r6, r3, #16
 8001778:	041b      	lsls	r3, r3, #16
 800177a:	0c1b      	lsrs	r3, r3, #16
 800177c:	9103      	str	r1, [sp, #12]
 800177e:	0019      	movs	r1, r3
 8001780:	4379      	muls	r1, r7
 8001782:	468c      	mov	ip, r1
 8001784:	0028      	movs	r0, r5
 8001786:	4375      	muls	r5, r6
 8001788:	4465      	add	r5, ip
 800178a:	46a8      	mov	r8, r5
 800178c:	4358      	muls	r0, r3
 800178e:	0c05      	lsrs	r5, r0, #16
 8001790:	4445      	add	r5, r8
 8001792:	4377      	muls	r7, r6
 8001794:	42a9      	cmp	r1, r5
 8001796:	d903      	bls.n	80017a0 <__aeabi_dmul+0x22c>
 8001798:	2180      	movs	r1, #128	; 0x80
 800179a:	0249      	lsls	r1, r1, #9
 800179c:	468c      	mov	ip, r1
 800179e:	4467      	add	r7, ip
 80017a0:	0c29      	lsrs	r1, r5, #16
 80017a2:	468c      	mov	ip, r1
 80017a4:	0039      	movs	r1, r7
 80017a6:	0400      	lsls	r0, r0, #16
 80017a8:	0c00      	lsrs	r0, r0, #16
 80017aa:	042d      	lsls	r5, r5, #16
 80017ac:	182d      	adds	r5, r5, r0
 80017ae:	4461      	add	r1, ip
 80017b0:	44ab      	add	fp, r5
 80017b2:	9105      	str	r1, [sp, #20]
 80017b4:	4659      	mov	r1, fp
 80017b6:	9104      	str	r1, [sp, #16]
 80017b8:	9901      	ldr	r1, [sp, #4]
 80017ba:	040f      	lsls	r7, r1, #16
 80017bc:	0c3f      	lsrs	r7, r7, #16
 80017be:	0c08      	lsrs	r0, r1, #16
 80017c0:	0039      	movs	r1, r7
 80017c2:	4351      	muls	r1, r2
 80017c4:	4342      	muls	r2, r0
 80017c6:	4690      	mov	r8, r2
 80017c8:	0002      	movs	r2, r0
 80017ca:	468c      	mov	ip, r1
 80017cc:	0c09      	lsrs	r1, r1, #16
 80017ce:	468b      	mov	fp, r1
 80017d0:	4362      	muls	r2, r4
 80017d2:	437c      	muls	r4, r7
 80017d4:	4444      	add	r4, r8
 80017d6:	445c      	add	r4, fp
 80017d8:	45a0      	cmp	r8, r4
 80017da:	d903      	bls.n	80017e4 <__aeabi_dmul+0x270>
 80017dc:	2180      	movs	r1, #128	; 0x80
 80017de:	0249      	lsls	r1, r1, #9
 80017e0:	4688      	mov	r8, r1
 80017e2:	4442      	add	r2, r8
 80017e4:	0c21      	lsrs	r1, r4, #16
 80017e6:	4688      	mov	r8, r1
 80017e8:	4661      	mov	r1, ip
 80017ea:	0409      	lsls	r1, r1, #16
 80017ec:	0c09      	lsrs	r1, r1, #16
 80017ee:	468c      	mov	ip, r1
 80017f0:	0039      	movs	r1, r7
 80017f2:	4359      	muls	r1, r3
 80017f4:	4343      	muls	r3, r0
 80017f6:	4370      	muls	r0, r6
 80017f8:	437e      	muls	r6, r7
 80017fa:	0c0f      	lsrs	r7, r1, #16
 80017fc:	18f6      	adds	r6, r6, r3
 80017fe:	0424      	lsls	r4, r4, #16
 8001800:	19be      	adds	r6, r7, r6
 8001802:	4464      	add	r4, ip
 8001804:	4442      	add	r2, r8
 8001806:	468c      	mov	ip, r1
 8001808:	42b3      	cmp	r3, r6
 800180a:	d903      	bls.n	8001814 <__aeabi_dmul+0x2a0>
 800180c:	2380      	movs	r3, #128	; 0x80
 800180e:	025b      	lsls	r3, r3, #9
 8001810:	4698      	mov	r8, r3
 8001812:	4440      	add	r0, r8
 8001814:	9b02      	ldr	r3, [sp, #8]
 8001816:	4661      	mov	r1, ip
 8001818:	4698      	mov	r8, r3
 800181a:	9b04      	ldr	r3, [sp, #16]
 800181c:	0437      	lsls	r7, r6, #16
 800181e:	4443      	add	r3, r8
 8001820:	469b      	mov	fp, r3
 8001822:	45ab      	cmp	fp, r5
 8001824:	41ad      	sbcs	r5, r5
 8001826:	426b      	negs	r3, r5
 8001828:	040d      	lsls	r5, r1, #16
 800182a:	9905      	ldr	r1, [sp, #20]
 800182c:	0c2d      	lsrs	r5, r5, #16
 800182e:	468c      	mov	ip, r1
 8001830:	197f      	adds	r7, r7, r5
 8001832:	4467      	add	r7, ip
 8001834:	18fd      	adds	r5, r7, r3
 8001836:	46a8      	mov	r8, r5
 8001838:	465d      	mov	r5, fp
 800183a:	192d      	adds	r5, r5, r4
 800183c:	42a5      	cmp	r5, r4
 800183e:	41a4      	sbcs	r4, r4
 8001840:	4693      	mov	fp, r2
 8001842:	4264      	negs	r4, r4
 8001844:	46a4      	mov	ip, r4
 8001846:	44c3      	add	fp, r8
 8001848:	44dc      	add	ip, fp
 800184a:	428f      	cmp	r7, r1
 800184c:	41bf      	sbcs	r7, r7
 800184e:	4598      	cmp	r8, r3
 8001850:	419b      	sbcs	r3, r3
 8001852:	4593      	cmp	fp, r2
 8001854:	4192      	sbcs	r2, r2
 8001856:	45a4      	cmp	ip, r4
 8001858:	41a4      	sbcs	r4, r4
 800185a:	425b      	negs	r3, r3
 800185c:	427f      	negs	r7, r7
 800185e:	431f      	orrs	r7, r3
 8001860:	0c36      	lsrs	r6, r6, #16
 8001862:	4252      	negs	r2, r2
 8001864:	4264      	negs	r4, r4
 8001866:	19bf      	adds	r7, r7, r6
 8001868:	4322      	orrs	r2, r4
 800186a:	18bf      	adds	r7, r7, r2
 800186c:	4662      	mov	r2, ip
 800186e:	1838      	adds	r0, r7, r0
 8001870:	0243      	lsls	r3, r0, #9
 8001872:	0dd2      	lsrs	r2, r2, #23
 8001874:	9903      	ldr	r1, [sp, #12]
 8001876:	4313      	orrs	r3, r2
 8001878:	026a      	lsls	r2, r5, #9
 800187a:	430a      	orrs	r2, r1
 800187c:	1e50      	subs	r0, r2, #1
 800187e:	4182      	sbcs	r2, r0
 8001880:	4661      	mov	r1, ip
 8001882:	0ded      	lsrs	r5, r5, #23
 8001884:	432a      	orrs	r2, r5
 8001886:	024e      	lsls	r6, r1, #9
 8001888:	4332      	orrs	r2, r6
 800188a:	01d9      	lsls	r1, r3, #7
 800188c:	d400      	bmi.n	8001890 <__aeabi_dmul+0x31c>
 800188e:	e0b3      	b.n	80019f8 <__aeabi_dmul+0x484>
 8001890:	2601      	movs	r6, #1
 8001892:	0850      	lsrs	r0, r2, #1
 8001894:	4032      	ands	r2, r6
 8001896:	4302      	orrs	r2, r0
 8001898:	07de      	lsls	r6, r3, #31
 800189a:	4332      	orrs	r2, r6
 800189c:	085b      	lsrs	r3, r3, #1
 800189e:	4c22      	ldr	r4, [pc, #136]	; (8001928 <__aeabi_dmul+0x3b4>)
 80018a0:	4454      	add	r4, sl
 80018a2:	2c00      	cmp	r4, #0
 80018a4:	dd62      	ble.n	800196c <__aeabi_dmul+0x3f8>
 80018a6:	0751      	lsls	r1, r2, #29
 80018a8:	d009      	beq.n	80018be <__aeabi_dmul+0x34a>
 80018aa:	200f      	movs	r0, #15
 80018ac:	4010      	ands	r0, r2
 80018ae:	2804      	cmp	r0, #4
 80018b0:	d005      	beq.n	80018be <__aeabi_dmul+0x34a>
 80018b2:	1d10      	adds	r0, r2, #4
 80018b4:	4290      	cmp	r0, r2
 80018b6:	4192      	sbcs	r2, r2
 80018b8:	4252      	negs	r2, r2
 80018ba:	189b      	adds	r3, r3, r2
 80018bc:	0002      	movs	r2, r0
 80018be:	01d9      	lsls	r1, r3, #7
 80018c0:	d504      	bpl.n	80018cc <__aeabi_dmul+0x358>
 80018c2:	2480      	movs	r4, #128	; 0x80
 80018c4:	4819      	ldr	r0, [pc, #100]	; (800192c <__aeabi_dmul+0x3b8>)
 80018c6:	00e4      	lsls	r4, r4, #3
 80018c8:	4003      	ands	r3, r0
 80018ca:	4454      	add	r4, sl
 80018cc:	4818      	ldr	r0, [pc, #96]	; (8001930 <__aeabi_dmul+0x3bc>)
 80018ce:	4284      	cmp	r4, r0
 80018d0:	dd00      	ble.n	80018d4 <__aeabi_dmul+0x360>
 80018d2:	e727      	b.n	8001724 <__aeabi_dmul+0x1b0>
 80018d4:	075e      	lsls	r6, r3, #29
 80018d6:	025b      	lsls	r3, r3, #9
 80018d8:	08d2      	lsrs	r2, r2, #3
 80018da:	0b1f      	lsrs	r7, r3, #12
 80018dc:	0563      	lsls	r3, r4, #21
 80018de:	4316      	orrs	r6, r2
 80018e0:	0d5b      	lsrs	r3, r3, #21
 80018e2:	e6b2      	b.n	800164a <__aeabi_dmul+0xd6>
 80018e4:	2300      	movs	r3, #0
 80018e6:	4699      	mov	r9, r3
 80018e8:	3301      	adds	r3, #1
 80018ea:	2704      	movs	r7, #4
 80018ec:	2600      	movs	r6, #0
 80018ee:	469b      	mov	fp, r3
 80018f0:	e664      	b.n	80015bc <__aeabi_dmul+0x48>
 80018f2:	2303      	movs	r3, #3
 80018f4:	9701      	str	r7, [sp, #4]
 80018f6:	4681      	mov	r9, r0
 80018f8:	270c      	movs	r7, #12
 80018fa:	469b      	mov	fp, r3
 80018fc:	e65e      	b.n	80015bc <__aeabi_dmul+0x48>
 80018fe:	2201      	movs	r2, #1
 8001900:	2001      	movs	r0, #1
 8001902:	4317      	orrs	r7, r2
 8001904:	2200      	movs	r2, #0
 8001906:	e676      	b.n	80015f6 <__aeabi_dmul+0x82>
 8001908:	2303      	movs	r3, #3
 800190a:	2003      	movs	r0, #3
 800190c:	431f      	orrs	r7, r3
 800190e:	4643      	mov	r3, r8
 8001910:	e671      	b.n	80015f6 <__aeabi_dmul+0x82>
 8001912:	46c0      	nop			; (mov r8, r8)
 8001914:	000007ff 	.word	0x000007ff
 8001918:	fffffc01 	.word	0xfffffc01
 800191c:	0800a2c0 	.word	0x0800a2c0
 8001920:	800fffff 	.word	0x800fffff
 8001924:	fffffc0d 	.word	0xfffffc0d
 8001928:	000003ff 	.word	0x000003ff
 800192c:	feffffff 	.word	0xfeffffff
 8001930:	000007fe 	.word	0x000007fe
 8001934:	2300      	movs	r3, #0
 8001936:	2780      	movs	r7, #128	; 0x80
 8001938:	9300      	str	r3, [sp, #0]
 800193a:	033f      	lsls	r7, r7, #12
 800193c:	2600      	movs	r6, #0
 800193e:	4b43      	ldr	r3, [pc, #268]	; (8001a4c <__aeabi_dmul+0x4d8>)
 8001940:	e683      	b.n	800164a <__aeabi_dmul+0xd6>
 8001942:	9b01      	ldr	r3, [sp, #4]
 8001944:	0032      	movs	r2, r6
 8001946:	46a4      	mov	ip, r4
 8001948:	4658      	mov	r0, fp
 800194a:	e670      	b.n	800162e <__aeabi_dmul+0xba>
 800194c:	46ac      	mov	ip, r5
 800194e:	e66e      	b.n	800162e <__aeabi_dmul+0xba>
 8001950:	2780      	movs	r7, #128	; 0x80
 8001952:	9901      	ldr	r1, [sp, #4]
 8001954:	033f      	lsls	r7, r7, #12
 8001956:	4239      	tst	r1, r7
 8001958:	d02d      	beq.n	80019b6 <__aeabi_dmul+0x442>
 800195a:	423b      	tst	r3, r7
 800195c:	d12b      	bne.n	80019b6 <__aeabi_dmul+0x442>
 800195e:	431f      	orrs	r7, r3
 8001960:	033f      	lsls	r7, r7, #12
 8001962:	0b3f      	lsrs	r7, r7, #12
 8001964:	9500      	str	r5, [sp, #0]
 8001966:	0016      	movs	r6, r2
 8001968:	4b38      	ldr	r3, [pc, #224]	; (8001a4c <__aeabi_dmul+0x4d8>)
 800196a:	e66e      	b.n	800164a <__aeabi_dmul+0xd6>
 800196c:	2501      	movs	r5, #1
 800196e:	1b2d      	subs	r5, r5, r4
 8001970:	2d38      	cmp	r5, #56	; 0x38
 8001972:	dd00      	ble.n	8001976 <__aeabi_dmul+0x402>
 8001974:	e666      	b.n	8001644 <__aeabi_dmul+0xd0>
 8001976:	2d1f      	cmp	r5, #31
 8001978:	dc40      	bgt.n	80019fc <__aeabi_dmul+0x488>
 800197a:	4835      	ldr	r0, [pc, #212]	; (8001a50 <__aeabi_dmul+0x4dc>)
 800197c:	001c      	movs	r4, r3
 800197e:	4450      	add	r0, sl
 8001980:	0016      	movs	r6, r2
 8001982:	4082      	lsls	r2, r0
 8001984:	4084      	lsls	r4, r0
 8001986:	40ee      	lsrs	r6, r5
 8001988:	1e50      	subs	r0, r2, #1
 800198a:	4182      	sbcs	r2, r0
 800198c:	4334      	orrs	r4, r6
 800198e:	4314      	orrs	r4, r2
 8001990:	40eb      	lsrs	r3, r5
 8001992:	0762      	lsls	r2, r4, #29
 8001994:	d009      	beq.n	80019aa <__aeabi_dmul+0x436>
 8001996:	220f      	movs	r2, #15
 8001998:	4022      	ands	r2, r4
 800199a:	2a04      	cmp	r2, #4
 800199c:	d005      	beq.n	80019aa <__aeabi_dmul+0x436>
 800199e:	0022      	movs	r2, r4
 80019a0:	1d14      	adds	r4, r2, #4
 80019a2:	4294      	cmp	r4, r2
 80019a4:	4180      	sbcs	r0, r0
 80019a6:	4240      	negs	r0, r0
 80019a8:	181b      	adds	r3, r3, r0
 80019aa:	021a      	lsls	r2, r3, #8
 80019ac:	d53e      	bpl.n	8001a2c <__aeabi_dmul+0x4b8>
 80019ae:	2301      	movs	r3, #1
 80019b0:	2700      	movs	r7, #0
 80019b2:	2600      	movs	r6, #0
 80019b4:	e649      	b.n	800164a <__aeabi_dmul+0xd6>
 80019b6:	2780      	movs	r7, #128	; 0x80
 80019b8:	9b01      	ldr	r3, [sp, #4]
 80019ba:	033f      	lsls	r7, r7, #12
 80019bc:	431f      	orrs	r7, r3
 80019be:	033f      	lsls	r7, r7, #12
 80019c0:	0b3f      	lsrs	r7, r7, #12
 80019c2:	9400      	str	r4, [sp, #0]
 80019c4:	4b21      	ldr	r3, [pc, #132]	; (8001a4c <__aeabi_dmul+0x4d8>)
 80019c6:	e640      	b.n	800164a <__aeabi_dmul+0xd6>
 80019c8:	0003      	movs	r3, r0
 80019ca:	465a      	mov	r2, fp
 80019cc:	3b28      	subs	r3, #40	; 0x28
 80019ce:	409a      	lsls	r2, r3
 80019d0:	2600      	movs	r6, #0
 80019d2:	9201      	str	r2, [sp, #4]
 80019d4:	e66d      	b.n	80016b2 <__aeabi_dmul+0x13e>
 80019d6:	4658      	mov	r0, fp
 80019d8:	f000 fd1a 	bl	8002410 <__clzsi2>
 80019dc:	3020      	adds	r0, #32
 80019de:	e657      	b.n	8001690 <__aeabi_dmul+0x11c>
 80019e0:	0003      	movs	r3, r0
 80019e2:	4652      	mov	r2, sl
 80019e4:	3b28      	subs	r3, #40	; 0x28
 80019e6:	409a      	lsls	r2, r3
 80019e8:	0013      	movs	r3, r2
 80019ea:	2200      	movs	r2, #0
 80019ec:	e693      	b.n	8001716 <__aeabi_dmul+0x1a2>
 80019ee:	4650      	mov	r0, sl
 80019f0:	f000 fd0e 	bl	8002410 <__clzsi2>
 80019f4:	3020      	adds	r0, #32
 80019f6:	e67b      	b.n	80016f0 <__aeabi_dmul+0x17c>
 80019f8:	46ca      	mov	sl, r9
 80019fa:	e750      	b.n	800189e <__aeabi_dmul+0x32a>
 80019fc:	201f      	movs	r0, #31
 80019fe:	001e      	movs	r6, r3
 8001a00:	4240      	negs	r0, r0
 8001a02:	1b04      	subs	r4, r0, r4
 8001a04:	40e6      	lsrs	r6, r4
 8001a06:	2d20      	cmp	r5, #32
 8001a08:	d003      	beq.n	8001a12 <__aeabi_dmul+0x49e>
 8001a0a:	4c12      	ldr	r4, [pc, #72]	; (8001a54 <__aeabi_dmul+0x4e0>)
 8001a0c:	4454      	add	r4, sl
 8001a0e:	40a3      	lsls	r3, r4
 8001a10:	431a      	orrs	r2, r3
 8001a12:	1e50      	subs	r0, r2, #1
 8001a14:	4182      	sbcs	r2, r0
 8001a16:	4332      	orrs	r2, r6
 8001a18:	2607      	movs	r6, #7
 8001a1a:	2700      	movs	r7, #0
 8001a1c:	4016      	ands	r6, r2
 8001a1e:	d009      	beq.n	8001a34 <__aeabi_dmul+0x4c0>
 8001a20:	200f      	movs	r0, #15
 8001a22:	2300      	movs	r3, #0
 8001a24:	4010      	ands	r0, r2
 8001a26:	0014      	movs	r4, r2
 8001a28:	2804      	cmp	r0, #4
 8001a2a:	d1b9      	bne.n	80019a0 <__aeabi_dmul+0x42c>
 8001a2c:	0022      	movs	r2, r4
 8001a2e:	075e      	lsls	r6, r3, #29
 8001a30:	025b      	lsls	r3, r3, #9
 8001a32:	0b1f      	lsrs	r7, r3, #12
 8001a34:	08d2      	lsrs	r2, r2, #3
 8001a36:	4316      	orrs	r6, r2
 8001a38:	2300      	movs	r3, #0
 8001a3a:	e606      	b.n	800164a <__aeabi_dmul+0xd6>
 8001a3c:	2780      	movs	r7, #128	; 0x80
 8001a3e:	033f      	lsls	r7, r7, #12
 8001a40:	431f      	orrs	r7, r3
 8001a42:	033f      	lsls	r7, r7, #12
 8001a44:	0b3f      	lsrs	r7, r7, #12
 8001a46:	0016      	movs	r6, r2
 8001a48:	4b00      	ldr	r3, [pc, #0]	; (8001a4c <__aeabi_dmul+0x4d8>)
 8001a4a:	e5fe      	b.n	800164a <__aeabi_dmul+0xd6>
 8001a4c:	000007ff 	.word	0x000007ff
 8001a50:	0000041e 	.word	0x0000041e
 8001a54:	0000043e 	.word	0x0000043e

08001a58 <__aeabi_dsub>:
 8001a58:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8001a5a:	4657      	mov	r7, sl
 8001a5c:	464e      	mov	r6, r9
 8001a5e:	4645      	mov	r5, r8
 8001a60:	46de      	mov	lr, fp
 8001a62:	000c      	movs	r4, r1
 8001a64:	0309      	lsls	r1, r1, #12
 8001a66:	b5e0      	push	{r5, r6, r7, lr}
 8001a68:	0a49      	lsrs	r1, r1, #9
 8001a6a:	0f46      	lsrs	r6, r0, #29
 8001a6c:	005f      	lsls	r7, r3, #1
 8001a6e:	4331      	orrs	r1, r6
 8001a70:	031e      	lsls	r6, r3, #12
 8001a72:	0fdb      	lsrs	r3, r3, #31
 8001a74:	0a76      	lsrs	r6, r6, #9
 8001a76:	469b      	mov	fp, r3
 8001a78:	0f53      	lsrs	r3, r2, #29
 8001a7a:	4333      	orrs	r3, r6
 8001a7c:	4ec8      	ldr	r6, [pc, #800]	; (8001da0 <__aeabi_dsub+0x348>)
 8001a7e:	0065      	lsls	r5, r4, #1
 8001a80:	00c0      	lsls	r0, r0, #3
 8001a82:	0fe4      	lsrs	r4, r4, #31
 8001a84:	00d2      	lsls	r2, r2, #3
 8001a86:	0d6d      	lsrs	r5, r5, #21
 8001a88:	46a2      	mov	sl, r4
 8001a8a:	4681      	mov	r9, r0
 8001a8c:	0d7f      	lsrs	r7, r7, #21
 8001a8e:	469c      	mov	ip, r3
 8001a90:	4690      	mov	r8, r2
 8001a92:	42b7      	cmp	r7, r6
 8001a94:	d100      	bne.n	8001a98 <__aeabi_dsub+0x40>
 8001a96:	e0b9      	b.n	8001c0c <__aeabi_dsub+0x1b4>
 8001a98:	465b      	mov	r3, fp
 8001a9a:	2601      	movs	r6, #1
 8001a9c:	4073      	eors	r3, r6
 8001a9e:	469b      	mov	fp, r3
 8001aa0:	1bee      	subs	r6, r5, r7
 8001aa2:	45a3      	cmp	fp, r4
 8001aa4:	d100      	bne.n	8001aa8 <__aeabi_dsub+0x50>
 8001aa6:	e083      	b.n	8001bb0 <__aeabi_dsub+0x158>
 8001aa8:	2e00      	cmp	r6, #0
 8001aaa:	dd63      	ble.n	8001b74 <__aeabi_dsub+0x11c>
 8001aac:	2f00      	cmp	r7, #0
 8001aae:	d000      	beq.n	8001ab2 <__aeabi_dsub+0x5a>
 8001ab0:	e0b1      	b.n	8001c16 <__aeabi_dsub+0x1be>
 8001ab2:	4663      	mov	r3, ip
 8001ab4:	4313      	orrs	r3, r2
 8001ab6:	d100      	bne.n	8001aba <__aeabi_dsub+0x62>
 8001ab8:	e123      	b.n	8001d02 <__aeabi_dsub+0x2aa>
 8001aba:	1e73      	subs	r3, r6, #1
 8001abc:	2b00      	cmp	r3, #0
 8001abe:	d000      	beq.n	8001ac2 <__aeabi_dsub+0x6a>
 8001ac0:	e1ba      	b.n	8001e38 <__aeabi_dsub+0x3e0>
 8001ac2:	1a86      	subs	r6, r0, r2
 8001ac4:	4663      	mov	r3, ip
 8001ac6:	42b0      	cmp	r0, r6
 8001ac8:	4180      	sbcs	r0, r0
 8001aca:	2501      	movs	r5, #1
 8001acc:	1ac9      	subs	r1, r1, r3
 8001ace:	4240      	negs	r0, r0
 8001ad0:	1a09      	subs	r1, r1, r0
 8001ad2:	020b      	lsls	r3, r1, #8
 8001ad4:	d400      	bmi.n	8001ad8 <__aeabi_dsub+0x80>
 8001ad6:	e147      	b.n	8001d68 <__aeabi_dsub+0x310>
 8001ad8:	0249      	lsls	r1, r1, #9
 8001ada:	0a4b      	lsrs	r3, r1, #9
 8001adc:	4698      	mov	r8, r3
 8001ade:	4643      	mov	r3, r8
 8001ae0:	2b00      	cmp	r3, #0
 8001ae2:	d100      	bne.n	8001ae6 <__aeabi_dsub+0x8e>
 8001ae4:	e189      	b.n	8001dfa <__aeabi_dsub+0x3a2>
 8001ae6:	4640      	mov	r0, r8
 8001ae8:	f000 fc92 	bl	8002410 <__clzsi2>
 8001aec:	0003      	movs	r3, r0
 8001aee:	3b08      	subs	r3, #8
 8001af0:	2b1f      	cmp	r3, #31
 8001af2:	dd00      	ble.n	8001af6 <__aeabi_dsub+0x9e>
 8001af4:	e17c      	b.n	8001df0 <__aeabi_dsub+0x398>
 8001af6:	2220      	movs	r2, #32
 8001af8:	0030      	movs	r0, r6
 8001afa:	1ad2      	subs	r2, r2, r3
 8001afc:	4641      	mov	r1, r8
 8001afe:	40d0      	lsrs	r0, r2
 8001b00:	4099      	lsls	r1, r3
 8001b02:	0002      	movs	r2, r0
 8001b04:	409e      	lsls	r6, r3
 8001b06:	430a      	orrs	r2, r1
 8001b08:	429d      	cmp	r5, r3
 8001b0a:	dd00      	ble.n	8001b0e <__aeabi_dsub+0xb6>
 8001b0c:	e16a      	b.n	8001de4 <__aeabi_dsub+0x38c>
 8001b0e:	1b5d      	subs	r5, r3, r5
 8001b10:	1c6b      	adds	r3, r5, #1
 8001b12:	2b1f      	cmp	r3, #31
 8001b14:	dd00      	ble.n	8001b18 <__aeabi_dsub+0xc0>
 8001b16:	e194      	b.n	8001e42 <__aeabi_dsub+0x3ea>
 8001b18:	2120      	movs	r1, #32
 8001b1a:	0010      	movs	r0, r2
 8001b1c:	0035      	movs	r5, r6
 8001b1e:	1ac9      	subs	r1, r1, r3
 8001b20:	408e      	lsls	r6, r1
 8001b22:	40da      	lsrs	r2, r3
 8001b24:	4088      	lsls	r0, r1
 8001b26:	40dd      	lsrs	r5, r3
 8001b28:	1e71      	subs	r1, r6, #1
 8001b2a:	418e      	sbcs	r6, r1
 8001b2c:	0011      	movs	r1, r2
 8001b2e:	2207      	movs	r2, #7
 8001b30:	4328      	orrs	r0, r5
 8001b32:	2500      	movs	r5, #0
 8001b34:	4306      	orrs	r6, r0
 8001b36:	4032      	ands	r2, r6
 8001b38:	2a00      	cmp	r2, #0
 8001b3a:	d009      	beq.n	8001b50 <__aeabi_dsub+0xf8>
 8001b3c:	230f      	movs	r3, #15
 8001b3e:	4033      	ands	r3, r6
 8001b40:	2b04      	cmp	r3, #4
 8001b42:	d005      	beq.n	8001b50 <__aeabi_dsub+0xf8>
 8001b44:	1d33      	adds	r3, r6, #4
 8001b46:	42b3      	cmp	r3, r6
 8001b48:	41b6      	sbcs	r6, r6
 8001b4a:	4276      	negs	r6, r6
 8001b4c:	1989      	adds	r1, r1, r6
 8001b4e:	001e      	movs	r6, r3
 8001b50:	020b      	lsls	r3, r1, #8
 8001b52:	d400      	bmi.n	8001b56 <__aeabi_dsub+0xfe>
 8001b54:	e23d      	b.n	8001fd2 <__aeabi_dsub+0x57a>
 8001b56:	1c6a      	adds	r2, r5, #1
 8001b58:	4b91      	ldr	r3, [pc, #580]	; (8001da0 <__aeabi_dsub+0x348>)
 8001b5a:	0555      	lsls	r5, r2, #21
 8001b5c:	0d6d      	lsrs	r5, r5, #21
 8001b5e:	429a      	cmp	r2, r3
 8001b60:	d100      	bne.n	8001b64 <__aeabi_dsub+0x10c>
 8001b62:	e119      	b.n	8001d98 <__aeabi_dsub+0x340>
 8001b64:	4a8f      	ldr	r2, [pc, #572]	; (8001da4 <__aeabi_dsub+0x34c>)
 8001b66:	08f6      	lsrs	r6, r6, #3
 8001b68:	400a      	ands	r2, r1
 8001b6a:	0757      	lsls	r7, r2, #29
 8001b6c:	0252      	lsls	r2, r2, #9
 8001b6e:	4337      	orrs	r7, r6
 8001b70:	0b12      	lsrs	r2, r2, #12
 8001b72:	e09b      	b.n	8001cac <__aeabi_dsub+0x254>
 8001b74:	2e00      	cmp	r6, #0
 8001b76:	d000      	beq.n	8001b7a <__aeabi_dsub+0x122>
 8001b78:	e0c5      	b.n	8001d06 <__aeabi_dsub+0x2ae>
 8001b7a:	1c6e      	adds	r6, r5, #1
 8001b7c:	0576      	lsls	r6, r6, #21
 8001b7e:	0d76      	lsrs	r6, r6, #21
 8001b80:	2e01      	cmp	r6, #1
 8001b82:	dc00      	bgt.n	8001b86 <__aeabi_dsub+0x12e>
 8001b84:	e148      	b.n	8001e18 <__aeabi_dsub+0x3c0>
 8001b86:	4667      	mov	r7, ip
 8001b88:	1a86      	subs	r6, r0, r2
 8001b8a:	1bcb      	subs	r3, r1, r7
 8001b8c:	42b0      	cmp	r0, r6
 8001b8e:	41bf      	sbcs	r7, r7
 8001b90:	427f      	negs	r7, r7
 8001b92:	46b8      	mov	r8, r7
 8001b94:	001f      	movs	r7, r3
 8001b96:	4643      	mov	r3, r8
 8001b98:	1aff      	subs	r7, r7, r3
 8001b9a:	003b      	movs	r3, r7
 8001b9c:	46b8      	mov	r8, r7
 8001b9e:	021b      	lsls	r3, r3, #8
 8001ba0:	d500      	bpl.n	8001ba4 <__aeabi_dsub+0x14c>
 8001ba2:	e15f      	b.n	8001e64 <__aeabi_dsub+0x40c>
 8001ba4:	4337      	orrs	r7, r6
 8001ba6:	d19a      	bne.n	8001ade <__aeabi_dsub+0x86>
 8001ba8:	2200      	movs	r2, #0
 8001baa:	2400      	movs	r4, #0
 8001bac:	2500      	movs	r5, #0
 8001bae:	e079      	b.n	8001ca4 <__aeabi_dsub+0x24c>
 8001bb0:	2e00      	cmp	r6, #0
 8001bb2:	dc00      	bgt.n	8001bb6 <__aeabi_dsub+0x15e>
 8001bb4:	e0fa      	b.n	8001dac <__aeabi_dsub+0x354>
 8001bb6:	2f00      	cmp	r7, #0
 8001bb8:	d100      	bne.n	8001bbc <__aeabi_dsub+0x164>
 8001bba:	e08d      	b.n	8001cd8 <__aeabi_dsub+0x280>
 8001bbc:	4b78      	ldr	r3, [pc, #480]	; (8001da0 <__aeabi_dsub+0x348>)
 8001bbe:	429d      	cmp	r5, r3
 8001bc0:	d067      	beq.n	8001c92 <__aeabi_dsub+0x23a>
 8001bc2:	2380      	movs	r3, #128	; 0x80
 8001bc4:	4667      	mov	r7, ip
 8001bc6:	041b      	lsls	r3, r3, #16
 8001bc8:	431f      	orrs	r7, r3
 8001bca:	46bc      	mov	ip, r7
 8001bcc:	2e38      	cmp	r6, #56	; 0x38
 8001bce:	dc00      	bgt.n	8001bd2 <__aeabi_dsub+0x17a>
 8001bd0:	e152      	b.n	8001e78 <__aeabi_dsub+0x420>
 8001bd2:	4663      	mov	r3, ip
 8001bd4:	4313      	orrs	r3, r2
 8001bd6:	1e5a      	subs	r2, r3, #1
 8001bd8:	4193      	sbcs	r3, r2
 8001bda:	181e      	adds	r6, r3, r0
 8001bdc:	4286      	cmp	r6, r0
 8001bde:	4180      	sbcs	r0, r0
 8001be0:	4240      	negs	r0, r0
 8001be2:	1809      	adds	r1, r1, r0
 8001be4:	020b      	lsls	r3, r1, #8
 8001be6:	d400      	bmi.n	8001bea <__aeabi_dsub+0x192>
 8001be8:	e0be      	b.n	8001d68 <__aeabi_dsub+0x310>
 8001bea:	4b6d      	ldr	r3, [pc, #436]	; (8001da0 <__aeabi_dsub+0x348>)
 8001bec:	3501      	adds	r5, #1
 8001bee:	429d      	cmp	r5, r3
 8001bf0:	d100      	bne.n	8001bf4 <__aeabi_dsub+0x19c>
 8001bf2:	e0d2      	b.n	8001d9a <__aeabi_dsub+0x342>
 8001bf4:	4a6b      	ldr	r2, [pc, #428]	; (8001da4 <__aeabi_dsub+0x34c>)
 8001bf6:	0873      	lsrs	r3, r6, #1
 8001bf8:	400a      	ands	r2, r1
 8001bfa:	2101      	movs	r1, #1
 8001bfc:	400e      	ands	r6, r1
 8001bfe:	431e      	orrs	r6, r3
 8001c00:	0851      	lsrs	r1, r2, #1
 8001c02:	07d3      	lsls	r3, r2, #31
 8001c04:	2207      	movs	r2, #7
 8001c06:	431e      	orrs	r6, r3
 8001c08:	4032      	ands	r2, r6
 8001c0a:	e795      	b.n	8001b38 <__aeabi_dsub+0xe0>
 8001c0c:	001e      	movs	r6, r3
 8001c0e:	4316      	orrs	r6, r2
 8001c10:	d000      	beq.n	8001c14 <__aeabi_dsub+0x1bc>
 8001c12:	e745      	b.n	8001aa0 <__aeabi_dsub+0x48>
 8001c14:	e740      	b.n	8001a98 <__aeabi_dsub+0x40>
 8001c16:	4b62      	ldr	r3, [pc, #392]	; (8001da0 <__aeabi_dsub+0x348>)
 8001c18:	429d      	cmp	r5, r3
 8001c1a:	d03a      	beq.n	8001c92 <__aeabi_dsub+0x23a>
 8001c1c:	2380      	movs	r3, #128	; 0x80
 8001c1e:	4667      	mov	r7, ip
 8001c20:	041b      	lsls	r3, r3, #16
 8001c22:	431f      	orrs	r7, r3
 8001c24:	46bc      	mov	ip, r7
 8001c26:	2e38      	cmp	r6, #56	; 0x38
 8001c28:	dd00      	ble.n	8001c2c <__aeabi_dsub+0x1d4>
 8001c2a:	e0eb      	b.n	8001e04 <__aeabi_dsub+0x3ac>
 8001c2c:	2e1f      	cmp	r6, #31
 8001c2e:	dc00      	bgt.n	8001c32 <__aeabi_dsub+0x1da>
 8001c30:	e13a      	b.n	8001ea8 <__aeabi_dsub+0x450>
 8001c32:	0033      	movs	r3, r6
 8001c34:	4667      	mov	r7, ip
 8001c36:	3b20      	subs	r3, #32
 8001c38:	40df      	lsrs	r7, r3
 8001c3a:	003b      	movs	r3, r7
 8001c3c:	2e20      	cmp	r6, #32
 8001c3e:	d005      	beq.n	8001c4c <__aeabi_dsub+0x1f4>
 8001c40:	2740      	movs	r7, #64	; 0x40
 8001c42:	1bbf      	subs	r7, r7, r6
 8001c44:	4666      	mov	r6, ip
 8001c46:	40be      	lsls	r6, r7
 8001c48:	4332      	orrs	r2, r6
 8001c4a:	4690      	mov	r8, r2
 8001c4c:	4646      	mov	r6, r8
 8001c4e:	1e72      	subs	r2, r6, #1
 8001c50:	4196      	sbcs	r6, r2
 8001c52:	4333      	orrs	r3, r6
 8001c54:	e0da      	b.n	8001e0c <__aeabi_dsub+0x3b4>
 8001c56:	2b00      	cmp	r3, #0
 8001c58:	d100      	bne.n	8001c5c <__aeabi_dsub+0x204>
 8001c5a:	e214      	b.n	8002086 <__aeabi_dsub+0x62e>
 8001c5c:	4663      	mov	r3, ip
 8001c5e:	4313      	orrs	r3, r2
 8001c60:	d100      	bne.n	8001c64 <__aeabi_dsub+0x20c>
 8001c62:	e168      	b.n	8001f36 <__aeabi_dsub+0x4de>
 8001c64:	2380      	movs	r3, #128	; 0x80
 8001c66:	074e      	lsls	r6, r1, #29
 8001c68:	08c0      	lsrs	r0, r0, #3
 8001c6a:	08c9      	lsrs	r1, r1, #3
 8001c6c:	031b      	lsls	r3, r3, #12
 8001c6e:	4306      	orrs	r6, r0
 8001c70:	4219      	tst	r1, r3
 8001c72:	d008      	beq.n	8001c86 <__aeabi_dsub+0x22e>
 8001c74:	4660      	mov	r0, ip
 8001c76:	08c0      	lsrs	r0, r0, #3
 8001c78:	4218      	tst	r0, r3
 8001c7a:	d104      	bne.n	8001c86 <__aeabi_dsub+0x22e>
 8001c7c:	4663      	mov	r3, ip
 8001c7e:	0001      	movs	r1, r0
 8001c80:	08d2      	lsrs	r2, r2, #3
 8001c82:	075e      	lsls	r6, r3, #29
 8001c84:	4316      	orrs	r6, r2
 8001c86:	00f3      	lsls	r3, r6, #3
 8001c88:	4699      	mov	r9, r3
 8001c8a:	00c9      	lsls	r1, r1, #3
 8001c8c:	0f72      	lsrs	r2, r6, #29
 8001c8e:	4d44      	ldr	r5, [pc, #272]	; (8001da0 <__aeabi_dsub+0x348>)
 8001c90:	4311      	orrs	r1, r2
 8001c92:	464b      	mov	r3, r9
 8001c94:	08de      	lsrs	r6, r3, #3
 8001c96:	4b42      	ldr	r3, [pc, #264]	; (8001da0 <__aeabi_dsub+0x348>)
 8001c98:	074f      	lsls	r7, r1, #29
 8001c9a:	4337      	orrs	r7, r6
 8001c9c:	08ca      	lsrs	r2, r1, #3
 8001c9e:	429d      	cmp	r5, r3
 8001ca0:	d100      	bne.n	8001ca4 <__aeabi_dsub+0x24c>
 8001ca2:	e06e      	b.n	8001d82 <__aeabi_dsub+0x32a>
 8001ca4:	0312      	lsls	r2, r2, #12
 8001ca6:	056d      	lsls	r5, r5, #21
 8001ca8:	0b12      	lsrs	r2, r2, #12
 8001caa:	0d6d      	lsrs	r5, r5, #21
 8001cac:	2100      	movs	r1, #0
 8001cae:	0312      	lsls	r2, r2, #12
 8001cb0:	0b13      	lsrs	r3, r2, #12
 8001cb2:	0d0a      	lsrs	r2, r1, #20
 8001cb4:	0512      	lsls	r2, r2, #20
 8001cb6:	431a      	orrs	r2, r3
 8001cb8:	4b3b      	ldr	r3, [pc, #236]	; (8001da8 <__aeabi_dsub+0x350>)
 8001cba:	052d      	lsls	r5, r5, #20
 8001cbc:	4013      	ands	r3, r2
 8001cbe:	432b      	orrs	r3, r5
 8001cc0:	005b      	lsls	r3, r3, #1
 8001cc2:	07e4      	lsls	r4, r4, #31
 8001cc4:	085b      	lsrs	r3, r3, #1
 8001cc6:	4323      	orrs	r3, r4
 8001cc8:	0038      	movs	r0, r7
 8001cca:	0019      	movs	r1, r3
 8001ccc:	bc3c      	pop	{r2, r3, r4, r5}
 8001cce:	4690      	mov	r8, r2
 8001cd0:	4699      	mov	r9, r3
 8001cd2:	46a2      	mov	sl, r4
 8001cd4:	46ab      	mov	fp, r5
 8001cd6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8001cd8:	4663      	mov	r3, ip
 8001cda:	4313      	orrs	r3, r2
 8001cdc:	d011      	beq.n	8001d02 <__aeabi_dsub+0x2aa>
 8001cde:	1e73      	subs	r3, r6, #1
 8001ce0:	2b00      	cmp	r3, #0
 8001ce2:	d000      	beq.n	8001ce6 <__aeabi_dsub+0x28e>
 8001ce4:	e107      	b.n	8001ef6 <__aeabi_dsub+0x49e>
 8001ce6:	1886      	adds	r6, r0, r2
 8001ce8:	4286      	cmp	r6, r0
 8001cea:	4180      	sbcs	r0, r0
 8001cec:	4461      	add	r1, ip
 8001cee:	4240      	negs	r0, r0
 8001cf0:	1809      	adds	r1, r1, r0
 8001cf2:	2501      	movs	r5, #1
 8001cf4:	020b      	lsls	r3, r1, #8
 8001cf6:	d537      	bpl.n	8001d68 <__aeabi_dsub+0x310>
 8001cf8:	2502      	movs	r5, #2
 8001cfa:	e77b      	b.n	8001bf4 <__aeabi_dsub+0x19c>
 8001cfc:	003e      	movs	r6, r7
 8001cfe:	4661      	mov	r1, ip
 8001d00:	4691      	mov	r9, r2
 8001d02:	0035      	movs	r5, r6
 8001d04:	e7c5      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8001d06:	465c      	mov	r4, fp
 8001d08:	2d00      	cmp	r5, #0
 8001d0a:	d000      	beq.n	8001d0e <__aeabi_dsub+0x2b6>
 8001d0c:	e0e1      	b.n	8001ed2 <__aeabi_dsub+0x47a>
 8001d0e:	000b      	movs	r3, r1
 8001d10:	4303      	orrs	r3, r0
 8001d12:	d0f3      	beq.n	8001cfc <__aeabi_dsub+0x2a4>
 8001d14:	1c73      	adds	r3, r6, #1
 8001d16:	d100      	bne.n	8001d1a <__aeabi_dsub+0x2c2>
 8001d18:	e1ac      	b.n	8002074 <__aeabi_dsub+0x61c>
 8001d1a:	4b21      	ldr	r3, [pc, #132]	; (8001da0 <__aeabi_dsub+0x348>)
 8001d1c:	429f      	cmp	r7, r3
 8001d1e:	d100      	bne.n	8001d22 <__aeabi_dsub+0x2ca>
 8001d20:	e13a      	b.n	8001f98 <__aeabi_dsub+0x540>
 8001d22:	43f3      	mvns	r3, r6
 8001d24:	2b38      	cmp	r3, #56	; 0x38
 8001d26:	dd00      	ble.n	8001d2a <__aeabi_dsub+0x2d2>
 8001d28:	e16f      	b.n	800200a <__aeabi_dsub+0x5b2>
 8001d2a:	2b1f      	cmp	r3, #31
 8001d2c:	dd00      	ble.n	8001d30 <__aeabi_dsub+0x2d8>
 8001d2e:	e18c      	b.n	800204a <__aeabi_dsub+0x5f2>
 8001d30:	2520      	movs	r5, #32
 8001d32:	000e      	movs	r6, r1
 8001d34:	1aed      	subs	r5, r5, r3
 8001d36:	40ae      	lsls	r6, r5
 8001d38:	46b0      	mov	r8, r6
 8001d3a:	0006      	movs	r6, r0
 8001d3c:	46aa      	mov	sl, r5
 8001d3e:	40de      	lsrs	r6, r3
 8001d40:	4645      	mov	r5, r8
 8001d42:	4335      	orrs	r5, r6
 8001d44:	002e      	movs	r6, r5
 8001d46:	4655      	mov	r5, sl
 8001d48:	40d9      	lsrs	r1, r3
 8001d4a:	40a8      	lsls	r0, r5
 8001d4c:	4663      	mov	r3, ip
 8001d4e:	1e45      	subs	r5, r0, #1
 8001d50:	41a8      	sbcs	r0, r5
 8001d52:	1a5b      	subs	r3, r3, r1
 8001d54:	469c      	mov	ip, r3
 8001d56:	4330      	orrs	r0, r6
 8001d58:	1a16      	subs	r6, r2, r0
 8001d5a:	42b2      	cmp	r2, r6
 8001d5c:	4192      	sbcs	r2, r2
 8001d5e:	4663      	mov	r3, ip
 8001d60:	4252      	negs	r2, r2
 8001d62:	1a99      	subs	r1, r3, r2
 8001d64:	003d      	movs	r5, r7
 8001d66:	e6b4      	b.n	8001ad2 <__aeabi_dsub+0x7a>
 8001d68:	2207      	movs	r2, #7
 8001d6a:	4032      	ands	r2, r6
 8001d6c:	2a00      	cmp	r2, #0
 8001d6e:	d000      	beq.n	8001d72 <__aeabi_dsub+0x31a>
 8001d70:	e6e4      	b.n	8001b3c <__aeabi_dsub+0xe4>
 8001d72:	4b0b      	ldr	r3, [pc, #44]	; (8001da0 <__aeabi_dsub+0x348>)
 8001d74:	08f6      	lsrs	r6, r6, #3
 8001d76:	074f      	lsls	r7, r1, #29
 8001d78:	4337      	orrs	r7, r6
 8001d7a:	08ca      	lsrs	r2, r1, #3
 8001d7c:	429d      	cmp	r5, r3
 8001d7e:	d000      	beq.n	8001d82 <__aeabi_dsub+0x32a>
 8001d80:	e790      	b.n	8001ca4 <__aeabi_dsub+0x24c>
 8001d82:	003b      	movs	r3, r7
 8001d84:	4313      	orrs	r3, r2
 8001d86:	d100      	bne.n	8001d8a <__aeabi_dsub+0x332>
 8001d88:	e1a6      	b.n	80020d8 <__aeabi_dsub+0x680>
 8001d8a:	2380      	movs	r3, #128	; 0x80
 8001d8c:	031b      	lsls	r3, r3, #12
 8001d8e:	431a      	orrs	r2, r3
 8001d90:	0312      	lsls	r2, r2, #12
 8001d92:	0b12      	lsrs	r2, r2, #12
 8001d94:	4d02      	ldr	r5, [pc, #8]	; (8001da0 <__aeabi_dsub+0x348>)
 8001d96:	e789      	b.n	8001cac <__aeabi_dsub+0x254>
 8001d98:	0015      	movs	r5, r2
 8001d9a:	2200      	movs	r2, #0
 8001d9c:	2700      	movs	r7, #0
 8001d9e:	e785      	b.n	8001cac <__aeabi_dsub+0x254>
 8001da0:	000007ff 	.word	0x000007ff
 8001da4:	ff7fffff 	.word	0xff7fffff
 8001da8:	800fffff 	.word	0x800fffff
 8001dac:	2e00      	cmp	r6, #0
 8001dae:	d000      	beq.n	8001db2 <__aeabi_dsub+0x35a>
 8001db0:	e0c7      	b.n	8001f42 <__aeabi_dsub+0x4ea>
 8001db2:	1c6b      	adds	r3, r5, #1
 8001db4:	055e      	lsls	r6, r3, #21
 8001db6:	0d76      	lsrs	r6, r6, #21
 8001db8:	2e01      	cmp	r6, #1
 8001dba:	dc00      	bgt.n	8001dbe <__aeabi_dsub+0x366>
 8001dbc:	e0f0      	b.n	8001fa0 <__aeabi_dsub+0x548>
 8001dbe:	4dc8      	ldr	r5, [pc, #800]	; (80020e0 <__aeabi_dsub+0x688>)
 8001dc0:	42ab      	cmp	r3, r5
 8001dc2:	d100      	bne.n	8001dc6 <__aeabi_dsub+0x36e>
 8001dc4:	e0b9      	b.n	8001f3a <__aeabi_dsub+0x4e2>
 8001dc6:	1885      	adds	r5, r0, r2
 8001dc8:	000a      	movs	r2, r1
 8001dca:	4285      	cmp	r5, r0
 8001dcc:	4189      	sbcs	r1, r1
 8001dce:	4462      	add	r2, ip
 8001dd0:	4249      	negs	r1, r1
 8001dd2:	1851      	adds	r1, r2, r1
 8001dd4:	2207      	movs	r2, #7
 8001dd6:	07ce      	lsls	r6, r1, #31
 8001dd8:	086d      	lsrs	r5, r5, #1
 8001dda:	432e      	orrs	r6, r5
 8001ddc:	0849      	lsrs	r1, r1, #1
 8001dde:	4032      	ands	r2, r6
 8001de0:	001d      	movs	r5, r3
 8001de2:	e6a9      	b.n	8001b38 <__aeabi_dsub+0xe0>
 8001de4:	49bf      	ldr	r1, [pc, #764]	; (80020e4 <__aeabi_dsub+0x68c>)
 8001de6:	1aed      	subs	r5, r5, r3
 8001de8:	4011      	ands	r1, r2
 8001dea:	2207      	movs	r2, #7
 8001dec:	4032      	ands	r2, r6
 8001dee:	e6a3      	b.n	8001b38 <__aeabi_dsub+0xe0>
 8001df0:	0032      	movs	r2, r6
 8001df2:	3828      	subs	r0, #40	; 0x28
 8001df4:	4082      	lsls	r2, r0
 8001df6:	2600      	movs	r6, #0
 8001df8:	e686      	b.n	8001b08 <__aeabi_dsub+0xb0>
 8001dfa:	0030      	movs	r0, r6
 8001dfc:	f000 fb08 	bl	8002410 <__clzsi2>
 8001e00:	3020      	adds	r0, #32
 8001e02:	e673      	b.n	8001aec <__aeabi_dsub+0x94>
 8001e04:	4663      	mov	r3, ip
 8001e06:	4313      	orrs	r3, r2
 8001e08:	1e5a      	subs	r2, r3, #1
 8001e0a:	4193      	sbcs	r3, r2
 8001e0c:	1ac6      	subs	r6, r0, r3
 8001e0e:	42b0      	cmp	r0, r6
 8001e10:	4180      	sbcs	r0, r0
 8001e12:	4240      	negs	r0, r0
 8001e14:	1a09      	subs	r1, r1, r0
 8001e16:	e65c      	b.n	8001ad2 <__aeabi_dsub+0x7a>
 8001e18:	000e      	movs	r6, r1
 8001e1a:	4667      	mov	r7, ip
 8001e1c:	4306      	orrs	r6, r0
 8001e1e:	4317      	orrs	r7, r2
 8001e20:	2d00      	cmp	r5, #0
 8001e22:	d15e      	bne.n	8001ee2 <__aeabi_dsub+0x48a>
 8001e24:	2e00      	cmp	r6, #0
 8001e26:	d000      	beq.n	8001e2a <__aeabi_dsub+0x3d2>
 8001e28:	e0f3      	b.n	8002012 <__aeabi_dsub+0x5ba>
 8001e2a:	2f00      	cmp	r7, #0
 8001e2c:	d100      	bne.n	8001e30 <__aeabi_dsub+0x3d8>
 8001e2e:	e11e      	b.n	800206e <__aeabi_dsub+0x616>
 8001e30:	465c      	mov	r4, fp
 8001e32:	4661      	mov	r1, ip
 8001e34:	4691      	mov	r9, r2
 8001e36:	e72c      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8001e38:	4fa9      	ldr	r7, [pc, #676]	; (80020e0 <__aeabi_dsub+0x688>)
 8001e3a:	42be      	cmp	r6, r7
 8001e3c:	d07b      	beq.n	8001f36 <__aeabi_dsub+0x4de>
 8001e3e:	001e      	movs	r6, r3
 8001e40:	e6f1      	b.n	8001c26 <__aeabi_dsub+0x1ce>
 8001e42:	0010      	movs	r0, r2
 8001e44:	3d1f      	subs	r5, #31
 8001e46:	40e8      	lsrs	r0, r5
 8001e48:	2b20      	cmp	r3, #32
 8001e4a:	d003      	beq.n	8001e54 <__aeabi_dsub+0x3fc>
 8001e4c:	2140      	movs	r1, #64	; 0x40
 8001e4e:	1acb      	subs	r3, r1, r3
 8001e50:	409a      	lsls	r2, r3
 8001e52:	4316      	orrs	r6, r2
 8001e54:	1e73      	subs	r3, r6, #1
 8001e56:	419e      	sbcs	r6, r3
 8001e58:	2207      	movs	r2, #7
 8001e5a:	4306      	orrs	r6, r0
 8001e5c:	4032      	ands	r2, r6
 8001e5e:	2100      	movs	r1, #0
 8001e60:	2500      	movs	r5, #0
 8001e62:	e783      	b.n	8001d6c <__aeabi_dsub+0x314>
 8001e64:	1a16      	subs	r6, r2, r0
 8001e66:	4663      	mov	r3, ip
 8001e68:	42b2      	cmp	r2, r6
 8001e6a:	4180      	sbcs	r0, r0
 8001e6c:	1a59      	subs	r1, r3, r1
 8001e6e:	4240      	negs	r0, r0
 8001e70:	1a0b      	subs	r3, r1, r0
 8001e72:	4698      	mov	r8, r3
 8001e74:	465c      	mov	r4, fp
 8001e76:	e632      	b.n	8001ade <__aeabi_dsub+0x86>
 8001e78:	2e1f      	cmp	r6, #31
 8001e7a:	dd00      	ble.n	8001e7e <__aeabi_dsub+0x426>
 8001e7c:	e0ab      	b.n	8001fd6 <__aeabi_dsub+0x57e>
 8001e7e:	2720      	movs	r7, #32
 8001e80:	1bbb      	subs	r3, r7, r6
 8001e82:	469a      	mov	sl, r3
 8001e84:	4663      	mov	r3, ip
 8001e86:	4657      	mov	r7, sl
 8001e88:	40bb      	lsls	r3, r7
 8001e8a:	4699      	mov	r9, r3
 8001e8c:	0013      	movs	r3, r2
 8001e8e:	464f      	mov	r7, r9
 8001e90:	40f3      	lsrs	r3, r6
 8001e92:	431f      	orrs	r7, r3
 8001e94:	003b      	movs	r3, r7
 8001e96:	4657      	mov	r7, sl
 8001e98:	40ba      	lsls	r2, r7
 8001e9a:	1e57      	subs	r7, r2, #1
 8001e9c:	41ba      	sbcs	r2, r7
 8001e9e:	4313      	orrs	r3, r2
 8001ea0:	4662      	mov	r2, ip
 8001ea2:	40f2      	lsrs	r2, r6
 8001ea4:	1889      	adds	r1, r1, r2
 8001ea6:	e698      	b.n	8001bda <__aeabi_dsub+0x182>
 8001ea8:	2720      	movs	r7, #32
 8001eaa:	1bbb      	subs	r3, r7, r6
 8001eac:	469a      	mov	sl, r3
 8001eae:	4663      	mov	r3, ip
 8001eb0:	4657      	mov	r7, sl
 8001eb2:	40bb      	lsls	r3, r7
 8001eb4:	4699      	mov	r9, r3
 8001eb6:	0013      	movs	r3, r2
 8001eb8:	464f      	mov	r7, r9
 8001eba:	40f3      	lsrs	r3, r6
 8001ebc:	431f      	orrs	r7, r3
 8001ebe:	003b      	movs	r3, r7
 8001ec0:	4657      	mov	r7, sl
 8001ec2:	40ba      	lsls	r2, r7
 8001ec4:	1e57      	subs	r7, r2, #1
 8001ec6:	41ba      	sbcs	r2, r7
 8001ec8:	4313      	orrs	r3, r2
 8001eca:	4662      	mov	r2, ip
 8001ecc:	40f2      	lsrs	r2, r6
 8001ece:	1a89      	subs	r1, r1, r2
 8001ed0:	e79c      	b.n	8001e0c <__aeabi_dsub+0x3b4>
 8001ed2:	4b83      	ldr	r3, [pc, #524]	; (80020e0 <__aeabi_dsub+0x688>)
 8001ed4:	429f      	cmp	r7, r3
 8001ed6:	d05f      	beq.n	8001f98 <__aeabi_dsub+0x540>
 8001ed8:	2580      	movs	r5, #128	; 0x80
 8001eda:	042d      	lsls	r5, r5, #16
 8001edc:	4273      	negs	r3, r6
 8001ede:	4329      	orrs	r1, r5
 8001ee0:	e720      	b.n	8001d24 <__aeabi_dsub+0x2cc>
 8001ee2:	2e00      	cmp	r6, #0
 8001ee4:	d10c      	bne.n	8001f00 <__aeabi_dsub+0x4a8>
 8001ee6:	2f00      	cmp	r7, #0
 8001ee8:	d100      	bne.n	8001eec <__aeabi_dsub+0x494>
 8001eea:	e0d0      	b.n	800208e <__aeabi_dsub+0x636>
 8001eec:	465c      	mov	r4, fp
 8001eee:	4661      	mov	r1, ip
 8001ef0:	4691      	mov	r9, r2
 8001ef2:	4d7b      	ldr	r5, [pc, #492]	; (80020e0 <__aeabi_dsub+0x688>)
 8001ef4:	e6cd      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8001ef6:	4f7a      	ldr	r7, [pc, #488]	; (80020e0 <__aeabi_dsub+0x688>)
 8001ef8:	42be      	cmp	r6, r7
 8001efa:	d01c      	beq.n	8001f36 <__aeabi_dsub+0x4de>
 8001efc:	001e      	movs	r6, r3
 8001efe:	e665      	b.n	8001bcc <__aeabi_dsub+0x174>
 8001f00:	2f00      	cmp	r7, #0
 8001f02:	d018      	beq.n	8001f36 <__aeabi_dsub+0x4de>
 8001f04:	08c0      	lsrs	r0, r0, #3
 8001f06:	074e      	lsls	r6, r1, #29
 8001f08:	4306      	orrs	r6, r0
 8001f0a:	2080      	movs	r0, #128	; 0x80
 8001f0c:	08c9      	lsrs	r1, r1, #3
 8001f0e:	0300      	lsls	r0, r0, #12
 8001f10:	4201      	tst	r1, r0
 8001f12:	d008      	beq.n	8001f26 <__aeabi_dsub+0x4ce>
 8001f14:	4663      	mov	r3, ip
 8001f16:	08dc      	lsrs	r4, r3, #3
 8001f18:	4204      	tst	r4, r0
 8001f1a:	d104      	bne.n	8001f26 <__aeabi_dsub+0x4ce>
 8001f1c:	0021      	movs	r1, r4
 8001f1e:	46da      	mov	sl, fp
 8001f20:	08d2      	lsrs	r2, r2, #3
 8001f22:	075e      	lsls	r6, r3, #29
 8001f24:	4316      	orrs	r6, r2
 8001f26:	00f3      	lsls	r3, r6, #3
 8001f28:	4699      	mov	r9, r3
 8001f2a:	2401      	movs	r4, #1
 8001f2c:	4653      	mov	r3, sl
 8001f2e:	00c9      	lsls	r1, r1, #3
 8001f30:	0f72      	lsrs	r2, r6, #29
 8001f32:	4311      	orrs	r1, r2
 8001f34:	401c      	ands	r4, r3
 8001f36:	4d6a      	ldr	r5, [pc, #424]	; (80020e0 <__aeabi_dsub+0x688>)
 8001f38:	e6ab      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8001f3a:	001d      	movs	r5, r3
 8001f3c:	2200      	movs	r2, #0
 8001f3e:	2700      	movs	r7, #0
 8001f40:	e6b4      	b.n	8001cac <__aeabi_dsub+0x254>
 8001f42:	2d00      	cmp	r5, #0
 8001f44:	d159      	bne.n	8001ffa <__aeabi_dsub+0x5a2>
 8001f46:	000b      	movs	r3, r1
 8001f48:	4303      	orrs	r3, r0
 8001f4a:	d100      	bne.n	8001f4e <__aeabi_dsub+0x4f6>
 8001f4c:	e6d6      	b.n	8001cfc <__aeabi_dsub+0x2a4>
 8001f4e:	1c73      	adds	r3, r6, #1
 8001f50:	d100      	bne.n	8001f54 <__aeabi_dsub+0x4fc>
 8001f52:	e0b2      	b.n	80020ba <__aeabi_dsub+0x662>
 8001f54:	4b62      	ldr	r3, [pc, #392]	; (80020e0 <__aeabi_dsub+0x688>)
 8001f56:	429f      	cmp	r7, r3
 8001f58:	d01e      	beq.n	8001f98 <__aeabi_dsub+0x540>
 8001f5a:	43f3      	mvns	r3, r6
 8001f5c:	2b38      	cmp	r3, #56	; 0x38
 8001f5e:	dc6f      	bgt.n	8002040 <__aeabi_dsub+0x5e8>
 8001f60:	2b1f      	cmp	r3, #31
 8001f62:	dd00      	ble.n	8001f66 <__aeabi_dsub+0x50e>
 8001f64:	e097      	b.n	8002096 <__aeabi_dsub+0x63e>
 8001f66:	2520      	movs	r5, #32
 8001f68:	000e      	movs	r6, r1
 8001f6a:	1aed      	subs	r5, r5, r3
 8001f6c:	40ae      	lsls	r6, r5
 8001f6e:	46b0      	mov	r8, r6
 8001f70:	0006      	movs	r6, r0
 8001f72:	46aa      	mov	sl, r5
 8001f74:	40de      	lsrs	r6, r3
 8001f76:	4645      	mov	r5, r8
 8001f78:	4335      	orrs	r5, r6
 8001f7a:	002e      	movs	r6, r5
 8001f7c:	4655      	mov	r5, sl
 8001f7e:	40a8      	lsls	r0, r5
 8001f80:	40d9      	lsrs	r1, r3
 8001f82:	1e45      	subs	r5, r0, #1
 8001f84:	41a8      	sbcs	r0, r5
 8001f86:	448c      	add	ip, r1
 8001f88:	4306      	orrs	r6, r0
 8001f8a:	18b6      	adds	r6, r6, r2
 8001f8c:	4296      	cmp	r6, r2
 8001f8e:	4192      	sbcs	r2, r2
 8001f90:	4251      	negs	r1, r2
 8001f92:	4461      	add	r1, ip
 8001f94:	003d      	movs	r5, r7
 8001f96:	e625      	b.n	8001be4 <__aeabi_dsub+0x18c>
 8001f98:	003d      	movs	r5, r7
 8001f9a:	4661      	mov	r1, ip
 8001f9c:	4691      	mov	r9, r2
 8001f9e:	e678      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8001fa0:	000b      	movs	r3, r1
 8001fa2:	4303      	orrs	r3, r0
 8001fa4:	2d00      	cmp	r5, #0
 8001fa6:	d000      	beq.n	8001faa <__aeabi_dsub+0x552>
 8001fa8:	e655      	b.n	8001c56 <__aeabi_dsub+0x1fe>
 8001faa:	2b00      	cmp	r3, #0
 8001fac:	d0f5      	beq.n	8001f9a <__aeabi_dsub+0x542>
 8001fae:	4663      	mov	r3, ip
 8001fb0:	4313      	orrs	r3, r2
 8001fb2:	d100      	bne.n	8001fb6 <__aeabi_dsub+0x55e>
 8001fb4:	e66d      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8001fb6:	1886      	adds	r6, r0, r2
 8001fb8:	4286      	cmp	r6, r0
 8001fba:	4180      	sbcs	r0, r0
 8001fbc:	4461      	add	r1, ip
 8001fbe:	4240      	negs	r0, r0
 8001fc0:	1809      	adds	r1, r1, r0
 8001fc2:	2200      	movs	r2, #0
 8001fc4:	020b      	lsls	r3, r1, #8
 8001fc6:	d400      	bmi.n	8001fca <__aeabi_dsub+0x572>
 8001fc8:	e6d0      	b.n	8001d6c <__aeabi_dsub+0x314>
 8001fca:	4b46      	ldr	r3, [pc, #280]	; (80020e4 <__aeabi_dsub+0x68c>)
 8001fcc:	3501      	adds	r5, #1
 8001fce:	4019      	ands	r1, r3
 8001fd0:	e5b2      	b.n	8001b38 <__aeabi_dsub+0xe0>
 8001fd2:	46b1      	mov	r9, r6
 8001fd4:	e65d      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8001fd6:	0033      	movs	r3, r6
 8001fd8:	4667      	mov	r7, ip
 8001fda:	3b20      	subs	r3, #32
 8001fdc:	40df      	lsrs	r7, r3
 8001fde:	003b      	movs	r3, r7
 8001fe0:	2e20      	cmp	r6, #32
 8001fe2:	d005      	beq.n	8001ff0 <__aeabi_dsub+0x598>
 8001fe4:	2740      	movs	r7, #64	; 0x40
 8001fe6:	1bbf      	subs	r7, r7, r6
 8001fe8:	4666      	mov	r6, ip
 8001fea:	40be      	lsls	r6, r7
 8001fec:	4332      	orrs	r2, r6
 8001fee:	4690      	mov	r8, r2
 8001ff0:	4646      	mov	r6, r8
 8001ff2:	1e72      	subs	r2, r6, #1
 8001ff4:	4196      	sbcs	r6, r2
 8001ff6:	4333      	orrs	r3, r6
 8001ff8:	e5ef      	b.n	8001bda <__aeabi_dsub+0x182>
 8001ffa:	4b39      	ldr	r3, [pc, #228]	; (80020e0 <__aeabi_dsub+0x688>)
 8001ffc:	429f      	cmp	r7, r3
 8001ffe:	d0cb      	beq.n	8001f98 <__aeabi_dsub+0x540>
 8002000:	2580      	movs	r5, #128	; 0x80
 8002002:	042d      	lsls	r5, r5, #16
 8002004:	4273      	negs	r3, r6
 8002006:	4329      	orrs	r1, r5
 8002008:	e7a8      	b.n	8001f5c <__aeabi_dsub+0x504>
 800200a:	4308      	orrs	r0, r1
 800200c:	1e41      	subs	r1, r0, #1
 800200e:	4188      	sbcs	r0, r1
 8002010:	e6a2      	b.n	8001d58 <__aeabi_dsub+0x300>
 8002012:	2f00      	cmp	r7, #0
 8002014:	d100      	bne.n	8002018 <__aeabi_dsub+0x5c0>
 8002016:	e63c      	b.n	8001c92 <__aeabi_dsub+0x23a>
 8002018:	4663      	mov	r3, ip
 800201a:	1a86      	subs	r6, r0, r2
 800201c:	1acf      	subs	r7, r1, r3
 800201e:	42b0      	cmp	r0, r6
 8002020:	419b      	sbcs	r3, r3
 8002022:	425b      	negs	r3, r3
 8002024:	1afb      	subs	r3, r7, r3
 8002026:	4698      	mov	r8, r3
 8002028:	021b      	lsls	r3, r3, #8
 800202a:	d54e      	bpl.n	80020ca <__aeabi_dsub+0x672>
 800202c:	1a16      	subs	r6, r2, r0
 800202e:	4663      	mov	r3, ip
 8002030:	42b2      	cmp	r2, r6
 8002032:	4192      	sbcs	r2, r2
 8002034:	1a59      	subs	r1, r3, r1
 8002036:	4252      	negs	r2, r2
 8002038:	1a89      	subs	r1, r1, r2
 800203a:	465c      	mov	r4, fp
 800203c:	2200      	movs	r2, #0
 800203e:	e57b      	b.n	8001b38 <__aeabi_dsub+0xe0>
 8002040:	4301      	orrs	r1, r0
 8002042:	000e      	movs	r6, r1
 8002044:	1e71      	subs	r1, r6, #1
 8002046:	418e      	sbcs	r6, r1
 8002048:	e79f      	b.n	8001f8a <__aeabi_dsub+0x532>
 800204a:	001d      	movs	r5, r3
 800204c:	000e      	movs	r6, r1
 800204e:	3d20      	subs	r5, #32
 8002050:	40ee      	lsrs	r6, r5
 8002052:	46b0      	mov	r8, r6
 8002054:	2b20      	cmp	r3, #32
 8002056:	d004      	beq.n	8002062 <__aeabi_dsub+0x60a>
 8002058:	2540      	movs	r5, #64	; 0x40
 800205a:	1aeb      	subs	r3, r5, r3
 800205c:	4099      	lsls	r1, r3
 800205e:	4308      	orrs	r0, r1
 8002060:	4681      	mov	r9, r0
 8002062:	4648      	mov	r0, r9
 8002064:	4643      	mov	r3, r8
 8002066:	1e41      	subs	r1, r0, #1
 8002068:	4188      	sbcs	r0, r1
 800206a:	4318      	orrs	r0, r3
 800206c:	e674      	b.n	8001d58 <__aeabi_dsub+0x300>
 800206e:	2200      	movs	r2, #0
 8002070:	2400      	movs	r4, #0
 8002072:	e617      	b.n	8001ca4 <__aeabi_dsub+0x24c>
 8002074:	1a16      	subs	r6, r2, r0
 8002076:	4663      	mov	r3, ip
 8002078:	42b2      	cmp	r2, r6
 800207a:	4192      	sbcs	r2, r2
 800207c:	1a59      	subs	r1, r3, r1
 800207e:	4252      	negs	r2, r2
 8002080:	1a89      	subs	r1, r1, r2
 8002082:	003d      	movs	r5, r7
 8002084:	e525      	b.n	8001ad2 <__aeabi_dsub+0x7a>
 8002086:	4661      	mov	r1, ip
 8002088:	4691      	mov	r9, r2
 800208a:	4d15      	ldr	r5, [pc, #84]	; (80020e0 <__aeabi_dsub+0x688>)
 800208c:	e601      	b.n	8001c92 <__aeabi_dsub+0x23a>
 800208e:	2280      	movs	r2, #128	; 0x80
 8002090:	2400      	movs	r4, #0
 8002092:	0312      	lsls	r2, r2, #12
 8002094:	e679      	b.n	8001d8a <__aeabi_dsub+0x332>
 8002096:	001d      	movs	r5, r3
 8002098:	000e      	movs	r6, r1
 800209a:	3d20      	subs	r5, #32
 800209c:	40ee      	lsrs	r6, r5
 800209e:	46b0      	mov	r8, r6
 80020a0:	2b20      	cmp	r3, #32
 80020a2:	d004      	beq.n	80020ae <__aeabi_dsub+0x656>
 80020a4:	2540      	movs	r5, #64	; 0x40
 80020a6:	1aeb      	subs	r3, r5, r3
 80020a8:	4099      	lsls	r1, r3
 80020aa:	4308      	orrs	r0, r1
 80020ac:	4681      	mov	r9, r0
 80020ae:	464e      	mov	r6, r9
 80020b0:	4643      	mov	r3, r8
 80020b2:	1e71      	subs	r1, r6, #1
 80020b4:	418e      	sbcs	r6, r1
 80020b6:	431e      	orrs	r6, r3
 80020b8:	e767      	b.n	8001f8a <__aeabi_dsub+0x532>
 80020ba:	1886      	adds	r6, r0, r2
 80020bc:	4296      	cmp	r6, r2
 80020be:	419b      	sbcs	r3, r3
 80020c0:	4461      	add	r1, ip
 80020c2:	425b      	negs	r3, r3
 80020c4:	18c9      	adds	r1, r1, r3
 80020c6:	003d      	movs	r5, r7
 80020c8:	e58c      	b.n	8001be4 <__aeabi_dsub+0x18c>
 80020ca:	4647      	mov	r7, r8
 80020cc:	4337      	orrs	r7, r6
 80020ce:	d0ce      	beq.n	800206e <__aeabi_dsub+0x616>
 80020d0:	2207      	movs	r2, #7
 80020d2:	4641      	mov	r1, r8
 80020d4:	4032      	ands	r2, r6
 80020d6:	e649      	b.n	8001d6c <__aeabi_dsub+0x314>
 80020d8:	2700      	movs	r7, #0
 80020da:	003a      	movs	r2, r7
 80020dc:	e5e6      	b.n	8001cac <__aeabi_dsub+0x254>
 80020de:	46c0      	nop			; (mov r8, r8)
 80020e0:	000007ff 	.word	0x000007ff
 80020e4:	ff7fffff 	.word	0xff7fffff

080020e8 <__aeabi_dcmpun>:
 80020e8:	b570      	push	{r4, r5, r6, lr}
 80020ea:	4e0c      	ldr	r6, [pc, #48]	; (800211c <__aeabi_dcmpun+0x34>)
 80020ec:	030d      	lsls	r5, r1, #12
 80020ee:	031c      	lsls	r4, r3, #12
 80020f0:	0049      	lsls	r1, r1, #1
 80020f2:	005b      	lsls	r3, r3, #1
 80020f4:	0b2d      	lsrs	r5, r5, #12
 80020f6:	0d49      	lsrs	r1, r1, #21
 80020f8:	0b24      	lsrs	r4, r4, #12
 80020fa:	0d5b      	lsrs	r3, r3, #21
 80020fc:	42b1      	cmp	r1, r6
 80020fe:	d008      	beq.n	8002112 <__aeabi_dcmpun+0x2a>
 8002100:	4906      	ldr	r1, [pc, #24]	; (800211c <__aeabi_dcmpun+0x34>)
 8002102:	2000      	movs	r0, #0
 8002104:	428b      	cmp	r3, r1
 8002106:	d103      	bne.n	8002110 <__aeabi_dcmpun+0x28>
 8002108:	4314      	orrs	r4, r2
 800210a:	0020      	movs	r0, r4
 800210c:	1e44      	subs	r4, r0, #1
 800210e:	41a0      	sbcs	r0, r4
 8002110:	bd70      	pop	{r4, r5, r6, pc}
 8002112:	4305      	orrs	r5, r0
 8002114:	2001      	movs	r0, #1
 8002116:	2d00      	cmp	r5, #0
 8002118:	d1fa      	bne.n	8002110 <__aeabi_dcmpun+0x28>
 800211a:	e7f1      	b.n	8002100 <__aeabi_dcmpun+0x18>
 800211c:	000007ff 	.word	0x000007ff

08002120 <__aeabi_d2iz>:
 8002120:	b530      	push	{r4, r5, lr}
 8002122:	4d14      	ldr	r5, [pc, #80]	; (8002174 <__aeabi_d2iz+0x54>)
 8002124:	030a      	lsls	r2, r1, #12
 8002126:	004b      	lsls	r3, r1, #1
 8002128:	0b12      	lsrs	r2, r2, #12
 800212a:	0d5b      	lsrs	r3, r3, #21
 800212c:	0fc9      	lsrs	r1, r1, #31
 800212e:	2400      	movs	r4, #0
 8002130:	42ab      	cmp	r3, r5
 8002132:	dd11      	ble.n	8002158 <__aeabi_d2iz+0x38>
 8002134:	4c10      	ldr	r4, [pc, #64]	; (8002178 <__aeabi_d2iz+0x58>)
 8002136:	42a3      	cmp	r3, r4
 8002138:	dc10      	bgt.n	800215c <__aeabi_d2iz+0x3c>
 800213a:	2480      	movs	r4, #128	; 0x80
 800213c:	0364      	lsls	r4, r4, #13
 800213e:	4322      	orrs	r2, r4
 8002140:	4c0e      	ldr	r4, [pc, #56]	; (800217c <__aeabi_d2iz+0x5c>)
 8002142:	1ae4      	subs	r4, r4, r3
 8002144:	2c1f      	cmp	r4, #31
 8002146:	dd0c      	ble.n	8002162 <__aeabi_d2iz+0x42>
 8002148:	480d      	ldr	r0, [pc, #52]	; (8002180 <__aeabi_d2iz+0x60>)
 800214a:	1ac3      	subs	r3, r0, r3
 800214c:	40da      	lsrs	r2, r3
 800214e:	0013      	movs	r3, r2
 8002150:	425c      	negs	r4, r3
 8002152:	2900      	cmp	r1, #0
 8002154:	d100      	bne.n	8002158 <__aeabi_d2iz+0x38>
 8002156:	001c      	movs	r4, r3
 8002158:	0020      	movs	r0, r4
 800215a:	bd30      	pop	{r4, r5, pc}
 800215c:	4b09      	ldr	r3, [pc, #36]	; (8002184 <__aeabi_d2iz+0x64>)
 800215e:	18cc      	adds	r4, r1, r3
 8002160:	e7fa      	b.n	8002158 <__aeabi_d2iz+0x38>
 8002162:	4d09      	ldr	r5, [pc, #36]	; (8002188 <__aeabi_d2iz+0x68>)
 8002164:	40e0      	lsrs	r0, r4
 8002166:	46ac      	mov	ip, r5
 8002168:	4463      	add	r3, ip
 800216a:	409a      	lsls	r2, r3
 800216c:	0013      	movs	r3, r2
 800216e:	4303      	orrs	r3, r0
 8002170:	e7ee      	b.n	8002150 <__aeabi_d2iz+0x30>
 8002172:	46c0      	nop			; (mov r8, r8)
 8002174:	000003fe 	.word	0x000003fe
 8002178:	0000041d 	.word	0x0000041d
 800217c:	00000433 	.word	0x00000433
 8002180:	00000413 	.word	0x00000413
 8002184:	7fffffff 	.word	0x7fffffff
 8002188:	fffffbed 	.word	0xfffffbed

0800218c <__aeabi_i2d>:
 800218c:	b570      	push	{r4, r5, r6, lr}
 800218e:	2800      	cmp	r0, #0
 8002190:	d02d      	beq.n	80021ee <__aeabi_i2d+0x62>
 8002192:	17c3      	asrs	r3, r0, #31
 8002194:	18c5      	adds	r5, r0, r3
 8002196:	405d      	eors	r5, r3
 8002198:	0fc4      	lsrs	r4, r0, #31
 800219a:	0028      	movs	r0, r5
 800219c:	f000 f938 	bl	8002410 <__clzsi2>
 80021a0:	4b15      	ldr	r3, [pc, #84]	; (80021f8 <__aeabi_i2d+0x6c>)
 80021a2:	1a1b      	subs	r3, r3, r0
 80021a4:	055b      	lsls	r3, r3, #21
 80021a6:	0d5b      	lsrs	r3, r3, #21
 80021a8:	280a      	cmp	r0, #10
 80021aa:	dd15      	ble.n	80021d8 <__aeabi_i2d+0x4c>
 80021ac:	380b      	subs	r0, #11
 80021ae:	4085      	lsls	r5, r0
 80021b0:	2200      	movs	r2, #0
 80021b2:	032d      	lsls	r5, r5, #12
 80021b4:	0b2d      	lsrs	r5, r5, #12
 80021b6:	2100      	movs	r1, #0
 80021b8:	0010      	movs	r0, r2
 80021ba:	032d      	lsls	r5, r5, #12
 80021bc:	0d0a      	lsrs	r2, r1, #20
 80021be:	0b2d      	lsrs	r5, r5, #12
 80021c0:	0512      	lsls	r2, r2, #20
 80021c2:	432a      	orrs	r2, r5
 80021c4:	4d0d      	ldr	r5, [pc, #52]	; (80021fc <__aeabi_i2d+0x70>)
 80021c6:	051b      	lsls	r3, r3, #20
 80021c8:	402a      	ands	r2, r5
 80021ca:	4313      	orrs	r3, r2
 80021cc:	005b      	lsls	r3, r3, #1
 80021ce:	07e4      	lsls	r4, r4, #31
 80021d0:	085b      	lsrs	r3, r3, #1
 80021d2:	4323      	orrs	r3, r4
 80021d4:	0019      	movs	r1, r3
 80021d6:	bd70      	pop	{r4, r5, r6, pc}
 80021d8:	0002      	movs	r2, r0
 80021da:	0029      	movs	r1, r5
 80021dc:	3215      	adds	r2, #21
 80021de:	4091      	lsls	r1, r2
 80021e0:	000a      	movs	r2, r1
 80021e2:	210b      	movs	r1, #11
 80021e4:	1a08      	subs	r0, r1, r0
 80021e6:	40c5      	lsrs	r5, r0
 80021e8:	032d      	lsls	r5, r5, #12
 80021ea:	0b2d      	lsrs	r5, r5, #12
 80021ec:	e7e3      	b.n	80021b6 <__aeabi_i2d+0x2a>
 80021ee:	2400      	movs	r4, #0
 80021f0:	2300      	movs	r3, #0
 80021f2:	2500      	movs	r5, #0
 80021f4:	2200      	movs	r2, #0
 80021f6:	e7de      	b.n	80021b6 <__aeabi_i2d+0x2a>
 80021f8:	0000041e 	.word	0x0000041e
 80021fc:	800fffff 	.word	0x800fffff

08002200 <__aeabi_ui2d>:
 8002200:	b510      	push	{r4, lr}
 8002202:	1e04      	subs	r4, r0, #0
 8002204:	d025      	beq.n	8002252 <__aeabi_ui2d+0x52>
 8002206:	f000 f903 	bl	8002410 <__clzsi2>
 800220a:	4b14      	ldr	r3, [pc, #80]	; (800225c <__aeabi_ui2d+0x5c>)
 800220c:	1a1b      	subs	r3, r3, r0
 800220e:	055b      	lsls	r3, r3, #21
 8002210:	0d5b      	lsrs	r3, r3, #21
 8002212:	280a      	cmp	r0, #10
 8002214:	dd12      	ble.n	800223c <__aeabi_ui2d+0x3c>
 8002216:	380b      	subs	r0, #11
 8002218:	4084      	lsls	r4, r0
 800221a:	2200      	movs	r2, #0
 800221c:	0324      	lsls	r4, r4, #12
 800221e:	0b24      	lsrs	r4, r4, #12
 8002220:	2100      	movs	r1, #0
 8002222:	0010      	movs	r0, r2
 8002224:	0324      	lsls	r4, r4, #12
 8002226:	0d0a      	lsrs	r2, r1, #20
 8002228:	0b24      	lsrs	r4, r4, #12
 800222a:	0512      	lsls	r2, r2, #20
 800222c:	4322      	orrs	r2, r4
 800222e:	4c0c      	ldr	r4, [pc, #48]	; (8002260 <__aeabi_ui2d+0x60>)
 8002230:	051b      	lsls	r3, r3, #20
 8002232:	4022      	ands	r2, r4
 8002234:	4313      	orrs	r3, r2
 8002236:	005b      	lsls	r3, r3, #1
 8002238:	0859      	lsrs	r1, r3, #1
 800223a:	bd10      	pop	{r4, pc}
 800223c:	0002      	movs	r2, r0
 800223e:	0021      	movs	r1, r4
 8002240:	3215      	adds	r2, #21
 8002242:	4091      	lsls	r1, r2
 8002244:	000a      	movs	r2, r1
 8002246:	210b      	movs	r1, #11
 8002248:	1a08      	subs	r0, r1, r0
 800224a:	40c4      	lsrs	r4, r0
 800224c:	0324      	lsls	r4, r4, #12
 800224e:	0b24      	lsrs	r4, r4, #12
 8002250:	e7e6      	b.n	8002220 <__aeabi_ui2d+0x20>
 8002252:	2300      	movs	r3, #0
 8002254:	2400      	movs	r4, #0
 8002256:	2200      	movs	r2, #0
 8002258:	e7e2      	b.n	8002220 <__aeabi_ui2d+0x20>
 800225a:	46c0      	nop			; (mov r8, r8)
 800225c:	0000041e 	.word	0x0000041e
 8002260:	800fffff 	.word	0x800fffff

08002264 <__aeabi_f2d>:
 8002264:	0041      	lsls	r1, r0, #1
 8002266:	0e09      	lsrs	r1, r1, #24
 8002268:	1c4b      	adds	r3, r1, #1
 800226a:	b570      	push	{r4, r5, r6, lr}
 800226c:	b2db      	uxtb	r3, r3
 800226e:	0246      	lsls	r6, r0, #9
 8002270:	0a75      	lsrs	r5, r6, #9
 8002272:	0fc4      	lsrs	r4, r0, #31
 8002274:	2b01      	cmp	r3, #1
 8002276:	dd14      	ble.n	80022a2 <__aeabi_f2d+0x3e>
 8002278:	23e0      	movs	r3, #224	; 0xe0
 800227a:	009b      	lsls	r3, r3, #2
 800227c:	076d      	lsls	r5, r5, #29
 800227e:	0b36      	lsrs	r6, r6, #12
 8002280:	18cb      	adds	r3, r1, r3
 8002282:	2100      	movs	r1, #0
 8002284:	0d0a      	lsrs	r2, r1, #20
 8002286:	0028      	movs	r0, r5
 8002288:	0512      	lsls	r2, r2, #20
 800228a:	4d1c      	ldr	r5, [pc, #112]	; (80022fc <__aeabi_f2d+0x98>)
 800228c:	4332      	orrs	r2, r6
 800228e:	055b      	lsls	r3, r3, #21
 8002290:	402a      	ands	r2, r5
 8002292:	085b      	lsrs	r3, r3, #1
 8002294:	4313      	orrs	r3, r2
 8002296:	005b      	lsls	r3, r3, #1
 8002298:	07e4      	lsls	r4, r4, #31
 800229a:	085b      	lsrs	r3, r3, #1
 800229c:	4323      	orrs	r3, r4
 800229e:	0019      	movs	r1, r3
 80022a0:	bd70      	pop	{r4, r5, r6, pc}
 80022a2:	2900      	cmp	r1, #0
 80022a4:	d114      	bne.n	80022d0 <__aeabi_f2d+0x6c>
 80022a6:	2d00      	cmp	r5, #0
 80022a8:	d01e      	beq.n	80022e8 <__aeabi_f2d+0x84>
 80022aa:	0028      	movs	r0, r5
 80022ac:	f000 f8b0 	bl	8002410 <__clzsi2>
 80022b0:	280a      	cmp	r0, #10
 80022b2:	dc1c      	bgt.n	80022ee <__aeabi_f2d+0x8a>
 80022b4:	230b      	movs	r3, #11
 80022b6:	002a      	movs	r2, r5
 80022b8:	1a1b      	subs	r3, r3, r0
 80022ba:	40da      	lsrs	r2, r3
 80022bc:	0003      	movs	r3, r0
 80022be:	3315      	adds	r3, #21
 80022c0:	409d      	lsls	r5, r3
 80022c2:	4b0f      	ldr	r3, [pc, #60]	; (8002300 <__aeabi_f2d+0x9c>)
 80022c4:	0312      	lsls	r2, r2, #12
 80022c6:	1a1b      	subs	r3, r3, r0
 80022c8:	055b      	lsls	r3, r3, #21
 80022ca:	0b16      	lsrs	r6, r2, #12
 80022cc:	0d5b      	lsrs	r3, r3, #21
 80022ce:	e7d8      	b.n	8002282 <__aeabi_f2d+0x1e>
 80022d0:	2d00      	cmp	r5, #0
 80022d2:	d006      	beq.n	80022e2 <__aeabi_f2d+0x7e>
 80022d4:	0b32      	lsrs	r2, r6, #12
 80022d6:	2680      	movs	r6, #128	; 0x80
 80022d8:	0336      	lsls	r6, r6, #12
 80022da:	076d      	lsls	r5, r5, #29
 80022dc:	4316      	orrs	r6, r2
 80022de:	4b09      	ldr	r3, [pc, #36]	; (8002304 <__aeabi_f2d+0xa0>)
 80022e0:	e7cf      	b.n	8002282 <__aeabi_f2d+0x1e>
 80022e2:	4b08      	ldr	r3, [pc, #32]	; (8002304 <__aeabi_f2d+0xa0>)
 80022e4:	2600      	movs	r6, #0
 80022e6:	e7cc      	b.n	8002282 <__aeabi_f2d+0x1e>
 80022e8:	2300      	movs	r3, #0
 80022ea:	2600      	movs	r6, #0
 80022ec:	e7c9      	b.n	8002282 <__aeabi_f2d+0x1e>
 80022ee:	0003      	movs	r3, r0
 80022f0:	002a      	movs	r2, r5
 80022f2:	3b0b      	subs	r3, #11
 80022f4:	409a      	lsls	r2, r3
 80022f6:	2500      	movs	r5, #0
 80022f8:	e7e3      	b.n	80022c2 <__aeabi_f2d+0x5e>
 80022fa:	46c0      	nop			; (mov r8, r8)
 80022fc:	800fffff 	.word	0x800fffff
 8002300:	00000389 	.word	0x00000389
 8002304:	000007ff 	.word	0x000007ff

08002308 <__aeabi_d2f>:
 8002308:	b5f0      	push	{r4, r5, r6, r7, lr}
 800230a:	004c      	lsls	r4, r1, #1
 800230c:	0d64      	lsrs	r4, r4, #21
 800230e:	030b      	lsls	r3, r1, #12
 8002310:	1c62      	adds	r2, r4, #1
 8002312:	0a5b      	lsrs	r3, r3, #9
 8002314:	0f46      	lsrs	r6, r0, #29
 8002316:	0552      	lsls	r2, r2, #21
 8002318:	0fc9      	lsrs	r1, r1, #31
 800231a:	431e      	orrs	r6, r3
 800231c:	00c5      	lsls	r5, r0, #3
 800231e:	0d52      	lsrs	r2, r2, #21
 8002320:	2a01      	cmp	r2, #1
 8002322:	dd29      	ble.n	8002378 <__aeabi_d2f+0x70>
 8002324:	4b37      	ldr	r3, [pc, #220]	; (8002404 <__aeabi_d2f+0xfc>)
 8002326:	18e7      	adds	r7, r4, r3
 8002328:	2ffe      	cmp	r7, #254	; 0xfe
 800232a:	dc1c      	bgt.n	8002366 <__aeabi_d2f+0x5e>
 800232c:	2f00      	cmp	r7, #0
 800232e:	dd3b      	ble.n	80023a8 <__aeabi_d2f+0xa0>
 8002330:	0180      	lsls	r0, r0, #6
 8002332:	1e43      	subs	r3, r0, #1
 8002334:	4198      	sbcs	r0, r3
 8002336:	2207      	movs	r2, #7
 8002338:	00f3      	lsls	r3, r6, #3
 800233a:	0f6d      	lsrs	r5, r5, #29
 800233c:	4303      	orrs	r3, r0
 800233e:	432b      	orrs	r3, r5
 8002340:	401a      	ands	r2, r3
 8002342:	2a00      	cmp	r2, #0
 8002344:	d004      	beq.n	8002350 <__aeabi_d2f+0x48>
 8002346:	220f      	movs	r2, #15
 8002348:	401a      	ands	r2, r3
 800234a:	2a04      	cmp	r2, #4
 800234c:	d000      	beq.n	8002350 <__aeabi_d2f+0x48>
 800234e:	3304      	adds	r3, #4
 8002350:	2280      	movs	r2, #128	; 0x80
 8002352:	04d2      	lsls	r2, r2, #19
 8002354:	401a      	ands	r2, r3
 8002356:	d024      	beq.n	80023a2 <__aeabi_d2f+0x9a>
 8002358:	3701      	adds	r7, #1
 800235a:	b2fa      	uxtb	r2, r7
 800235c:	2fff      	cmp	r7, #255	; 0xff
 800235e:	d002      	beq.n	8002366 <__aeabi_d2f+0x5e>
 8002360:	019b      	lsls	r3, r3, #6
 8002362:	0a58      	lsrs	r0, r3, #9
 8002364:	e001      	b.n	800236a <__aeabi_d2f+0x62>
 8002366:	22ff      	movs	r2, #255	; 0xff
 8002368:	2000      	movs	r0, #0
 800236a:	0240      	lsls	r0, r0, #9
 800236c:	05d2      	lsls	r2, r2, #23
 800236e:	0a40      	lsrs	r0, r0, #9
 8002370:	07c9      	lsls	r1, r1, #31
 8002372:	4310      	orrs	r0, r2
 8002374:	4308      	orrs	r0, r1
 8002376:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8002378:	4335      	orrs	r5, r6
 800237a:	2c00      	cmp	r4, #0
 800237c:	d104      	bne.n	8002388 <__aeabi_d2f+0x80>
 800237e:	2d00      	cmp	r5, #0
 8002380:	d10a      	bne.n	8002398 <__aeabi_d2f+0x90>
 8002382:	2200      	movs	r2, #0
 8002384:	2000      	movs	r0, #0
 8002386:	e7f0      	b.n	800236a <__aeabi_d2f+0x62>
 8002388:	2d00      	cmp	r5, #0
 800238a:	d0ec      	beq.n	8002366 <__aeabi_d2f+0x5e>
 800238c:	2080      	movs	r0, #128	; 0x80
 800238e:	03c0      	lsls	r0, r0, #15
 8002390:	4330      	orrs	r0, r6
 8002392:	22ff      	movs	r2, #255	; 0xff
 8002394:	e7e9      	b.n	800236a <__aeabi_d2f+0x62>
 8002396:	2400      	movs	r4, #0
 8002398:	2300      	movs	r3, #0
 800239a:	025b      	lsls	r3, r3, #9
 800239c:	0a58      	lsrs	r0, r3, #9
 800239e:	b2e2      	uxtb	r2, r4
 80023a0:	e7e3      	b.n	800236a <__aeabi_d2f+0x62>
 80023a2:	08db      	lsrs	r3, r3, #3
 80023a4:	003c      	movs	r4, r7
 80023a6:	e7f8      	b.n	800239a <__aeabi_d2f+0x92>
 80023a8:	003b      	movs	r3, r7
 80023aa:	3317      	adds	r3, #23
 80023ac:	dbf3      	blt.n	8002396 <__aeabi_d2f+0x8e>
 80023ae:	2380      	movs	r3, #128	; 0x80
 80023b0:	041b      	lsls	r3, r3, #16
 80023b2:	4333      	orrs	r3, r6
 80023b4:	261e      	movs	r6, #30
 80023b6:	1bf6      	subs	r6, r6, r7
 80023b8:	2e1f      	cmp	r6, #31
 80023ba:	dd14      	ble.n	80023e6 <__aeabi_d2f+0xde>
 80023bc:	2202      	movs	r2, #2
 80023be:	4252      	negs	r2, r2
 80023c0:	1bd7      	subs	r7, r2, r7
 80023c2:	001a      	movs	r2, r3
 80023c4:	40fa      	lsrs	r2, r7
 80023c6:	0017      	movs	r7, r2
 80023c8:	2e20      	cmp	r6, #32
 80023ca:	d004      	beq.n	80023d6 <__aeabi_d2f+0xce>
 80023cc:	4a0e      	ldr	r2, [pc, #56]	; (8002408 <__aeabi_d2f+0x100>)
 80023ce:	4694      	mov	ip, r2
 80023d0:	4464      	add	r4, ip
 80023d2:	40a3      	lsls	r3, r4
 80023d4:	431d      	orrs	r5, r3
 80023d6:	002b      	movs	r3, r5
 80023d8:	1e5d      	subs	r5, r3, #1
 80023da:	41ab      	sbcs	r3, r5
 80023dc:	2207      	movs	r2, #7
 80023de:	433b      	orrs	r3, r7
 80023e0:	401a      	ands	r2, r3
 80023e2:	2700      	movs	r7, #0
 80023e4:	e7ad      	b.n	8002342 <__aeabi_d2f+0x3a>
 80023e6:	4a09      	ldr	r2, [pc, #36]	; (800240c <__aeabi_d2f+0x104>)
 80023e8:	0028      	movs	r0, r5
 80023ea:	18a2      	adds	r2, r4, r2
 80023ec:	4095      	lsls	r5, r2
 80023ee:	4093      	lsls	r3, r2
 80023f0:	1e6c      	subs	r4, r5, #1
 80023f2:	41a5      	sbcs	r5, r4
 80023f4:	40f0      	lsrs	r0, r6
 80023f6:	2207      	movs	r2, #7
 80023f8:	432b      	orrs	r3, r5
 80023fa:	4303      	orrs	r3, r0
 80023fc:	401a      	ands	r2, r3
 80023fe:	2700      	movs	r7, #0
 8002400:	e79f      	b.n	8002342 <__aeabi_d2f+0x3a>
 8002402:	46c0      	nop			; (mov r8, r8)
 8002404:	fffffc80 	.word	0xfffffc80
 8002408:	fffffca2 	.word	0xfffffca2
 800240c:	fffffc82 	.word	0xfffffc82

08002410 <__clzsi2>:
 8002410:	211c      	movs	r1, #28
 8002412:	2301      	movs	r3, #1
 8002414:	041b      	lsls	r3, r3, #16
 8002416:	4298      	cmp	r0, r3
 8002418:	d301      	bcc.n	800241e <__clzsi2+0xe>
 800241a:	0c00      	lsrs	r0, r0, #16
 800241c:	3910      	subs	r1, #16
 800241e:	0a1b      	lsrs	r3, r3, #8
 8002420:	4298      	cmp	r0, r3
 8002422:	d301      	bcc.n	8002428 <__clzsi2+0x18>
 8002424:	0a00      	lsrs	r0, r0, #8
 8002426:	3908      	subs	r1, #8
 8002428:	091b      	lsrs	r3, r3, #4
 800242a:	4298      	cmp	r0, r3
 800242c:	d301      	bcc.n	8002432 <__clzsi2+0x22>
 800242e:	0900      	lsrs	r0, r0, #4
 8002430:	3904      	subs	r1, #4
 8002432:	a202      	add	r2, pc, #8	; (adr r2, 800243c <__clzsi2+0x2c>)
 8002434:	5c10      	ldrb	r0, [r2, r0]
 8002436:	1840      	adds	r0, r0, r1
 8002438:	4770      	bx	lr
 800243a:	46c0      	nop			; (mov r8, r8)
 800243c:	02020304 	.word	0x02020304
 8002440:	01010101 	.word	0x01010101
	...

0800244c <__clzdi2>:
 800244c:	b510      	push	{r4, lr}
 800244e:	2900      	cmp	r1, #0
 8002450:	d103      	bne.n	800245a <__clzdi2+0xe>
 8002452:	f7ff ffdd 	bl	8002410 <__clzsi2>
 8002456:	3020      	adds	r0, #32
 8002458:	e002      	b.n	8002460 <__clzdi2+0x14>
 800245a:	1c08      	adds	r0, r1, #0
 800245c:	f7ff ffd8 	bl	8002410 <__clzsi2>
 8002460:	bd10      	pop	{r4, pc}
 8002462:	46c0      	nop			; (mov r8, r8)

08002464 <_ZN10DigitalOutC1Eci>:
class DigitalOut
{
	public:
		uint16_t PIN;
		GPIO_TypeDef* PORT;
		DigitalOut(char a,int p)
 8002464:	b590      	push	{r4, r7, lr}
 8002466:	b085      	sub	sp, #20
 8002468:	af00      	add	r7, sp, #0
 800246a:	60f8      	str	r0, [r7, #12]
 800246c:	607a      	str	r2, [r7, #4]
 800246e:	200b      	movs	r0, #11
 8002470:	183b      	adds	r3, r7, r0
 8002472:	1c0a      	adds	r2, r1, #0
 8002474:	701a      	strb	r2, [r3, #0]
		{
			switch(a)
 8002476:	183b      	adds	r3, r7, r0
 8002478:	781b      	ldrb	r3, [r3, #0]
 800247a:	2b42      	cmp	r3, #66	; 0x42
 800247c:	d00d      	beq.n	800249a <_ZN10DigitalOutC1Eci+0x36>
 800247e:	dc02      	bgt.n	8002486 <_ZN10DigitalOutC1Eci+0x22>
 8002480:	2b41      	cmp	r3, #65	; 0x41
 8002482:	d005      	beq.n	8002490 <_ZN10DigitalOutC1Eci+0x2c>
 8002484:	e015      	b.n	80024b2 <_ZN10DigitalOutC1Eci+0x4e>
 8002486:	2b43      	cmp	r3, #67	; 0x43
 8002488:	d00b      	beq.n	80024a2 <_ZN10DigitalOutC1Eci+0x3e>
 800248a:	2b48      	cmp	r3, #72	; 0x48
 800248c:	d00d      	beq.n	80024aa <_ZN10DigitalOutC1Eci+0x46>
 800248e:	e010      	b.n	80024b2 <_ZN10DigitalOutC1Eci+0x4e>
			{
				case 'A':PORT=GPIOA;break;
 8002490:	68fb      	ldr	r3, [r7, #12]
 8002492:	22a0      	movs	r2, #160	; 0xa0
 8002494:	05d2      	lsls	r2, r2, #23
 8002496:	605a      	str	r2, [r3, #4]
 8002498:	e00b      	b.n	80024b2 <_ZN10DigitalOutC1Eci+0x4e>
				case 'B':PORT=GPIOB;break;
 800249a:	68fb      	ldr	r3, [r7, #12]
 800249c:	4a0f      	ldr	r2, [pc, #60]	; (80024dc <_ZN10DigitalOutC1Eci+0x78>)
 800249e:	605a      	str	r2, [r3, #4]
 80024a0:	e007      	b.n	80024b2 <_ZN10DigitalOutC1Eci+0x4e>
				case 'C':PORT=GPIOC;break;
 80024a2:	68fb      	ldr	r3, [r7, #12]
 80024a4:	4a0e      	ldr	r2, [pc, #56]	; (80024e0 <_ZN10DigitalOutC1Eci+0x7c>)
 80024a6:	605a      	str	r2, [r3, #4]
 80024a8:	e003      	b.n	80024b2 <_ZN10DigitalOutC1Eci+0x4e>
				case 'H':PORT=GPIOH;break;
 80024aa:	68fb      	ldr	r3, [r7, #12]
 80024ac:	4a0d      	ldr	r2, [pc, #52]	; (80024e4 <_ZN10DigitalOutC1Eci+0x80>)
 80024ae:	605a      	str	r2, [r3, #4]
 80024b0:	46c0      	nop			; (mov r8, r8)
			}
			PIN=(uint16_t)pow(2,p);
 80024b2:	687b      	ldr	r3, [r7, #4]
 80024b4:	0019      	movs	r1, r3
 80024b6:	2002      	movs	r0, #2
 80024b8:	f000 fccf 	bl	8002e5a <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
 80024bc:	0003      	movs	r3, r0
 80024be:	000c      	movs	r4, r1
 80024c0:	0018      	movs	r0, r3
 80024c2:	0021      	movs	r1, r4
 80024c4:	f7fe f806 	bl	80004d4 <__aeabi_d2uiz>
 80024c8:	0003      	movs	r3, r0
 80024ca:	b29a      	uxth	r2, r3
 80024cc:	68fb      	ldr	r3, [r7, #12]
 80024ce:	801a      	strh	r2, [r3, #0]
		}
 80024d0:	68fb      	ldr	r3, [r7, #12]
 80024d2:	0018      	movs	r0, r3
 80024d4:	46bd      	mov	sp, r7
 80024d6:	b005      	add	sp, #20
 80024d8:	bd90      	pop	{r4, r7, pc}
 80024da:	46c0      	nop			; (mov r8, r8)
 80024dc:	50000400 	.word	0x50000400
 80024e0:	50000800 	.word	0x50000800
 80024e4:	50001c00 	.word	0x50001c00

080024e8 <_ZN10DigitalOut6toggleEv>:
		void toggle()
 80024e8:	b580      	push	{r7, lr}
 80024ea:	b082      	sub	sp, #8
 80024ec:	af00      	add	r7, sp, #0
 80024ee:	6078      	str	r0, [r7, #4]
		{
			HAL_GPIO_TogglePin(PORT,PIN);
 80024f0:	687b      	ldr	r3, [r7, #4]
 80024f2:	685a      	ldr	r2, [r3, #4]
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	881b      	ldrh	r3, [r3, #0]
 80024f8:	0019      	movs	r1, r3
 80024fa:	0010      	movs	r0, r2
 80024fc:	f001 f9b2 	bl	8003864 <HAL_GPIO_TogglePin>
		}
 8002500:	46c0      	nop			; (mov r8, r8)
 8002502:	46bd      	mov	sp, r7
 8002504:	b002      	add	sp, #8
 8002506:	bd80      	pop	{r7, pc}

08002508 <_ZN9DigitalInC1Eci>:
class DigitalIn
{
	public:
		uint16_t PIN;
		GPIO_TypeDef* PORT;
		DigitalIn(char a,int p)
 8002508:	b590      	push	{r4, r7, lr}
 800250a:	b085      	sub	sp, #20
 800250c:	af00      	add	r7, sp, #0
 800250e:	60f8      	str	r0, [r7, #12]
 8002510:	607a      	str	r2, [r7, #4]
 8002512:	200b      	movs	r0, #11
 8002514:	183b      	adds	r3, r7, r0
 8002516:	1c0a      	adds	r2, r1, #0
 8002518:	701a      	strb	r2, [r3, #0]
		{
			switch(a)
 800251a:	183b      	adds	r3, r7, r0
 800251c:	781b      	ldrb	r3, [r3, #0]
 800251e:	2b42      	cmp	r3, #66	; 0x42
 8002520:	d00d      	beq.n	800253e <_ZN9DigitalInC1Eci+0x36>
 8002522:	dc02      	bgt.n	800252a <_ZN9DigitalInC1Eci+0x22>
 8002524:	2b41      	cmp	r3, #65	; 0x41
 8002526:	d005      	beq.n	8002534 <_ZN9DigitalInC1Eci+0x2c>
 8002528:	e015      	b.n	8002556 <_ZN9DigitalInC1Eci+0x4e>
 800252a:	2b43      	cmp	r3, #67	; 0x43
 800252c:	d00b      	beq.n	8002546 <_ZN9DigitalInC1Eci+0x3e>
 800252e:	2b48      	cmp	r3, #72	; 0x48
 8002530:	d00d      	beq.n	800254e <_ZN9DigitalInC1Eci+0x46>
 8002532:	e010      	b.n	8002556 <_ZN9DigitalInC1Eci+0x4e>
			{
				case 'A':PORT=GPIOA;break;
 8002534:	68fb      	ldr	r3, [r7, #12]
 8002536:	22a0      	movs	r2, #160	; 0xa0
 8002538:	05d2      	lsls	r2, r2, #23
 800253a:	605a      	str	r2, [r3, #4]
 800253c:	e00b      	b.n	8002556 <_ZN9DigitalInC1Eci+0x4e>
				case 'B':PORT=GPIOB;break;
 800253e:	68fb      	ldr	r3, [r7, #12]
 8002540:	4a0f      	ldr	r2, [pc, #60]	; (8002580 <_ZN9DigitalInC1Eci+0x78>)
 8002542:	605a      	str	r2, [r3, #4]
 8002544:	e007      	b.n	8002556 <_ZN9DigitalInC1Eci+0x4e>
				case 'C':PORT=GPIOC;break;
 8002546:	68fb      	ldr	r3, [r7, #12]
 8002548:	4a0e      	ldr	r2, [pc, #56]	; (8002584 <_ZN9DigitalInC1Eci+0x7c>)
 800254a:	605a      	str	r2, [r3, #4]
 800254c:	e003      	b.n	8002556 <_ZN9DigitalInC1Eci+0x4e>
				case 'H':PORT=GPIOH;break;
 800254e:	68fb      	ldr	r3, [r7, #12]
 8002550:	4a0d      	ldr	r2, [pc, #52]	; (8002588 <_ZN9DigitalInC1Eci+0x80>)
 8002552:	605a      	str	r2, [r3, #4]
 8002554:	46c0      	nop			; (mov r8, r8)
			}
			PIN=(uint16_t)pow(2,p);
 8002556:	687b      	ldr	r3, [r7, #4]
 8002558:	0019      	movs	r1, r3
 800255a:	2002      	movs	r0, #2
 800255c:	f000 fc7d 	bl	8002e5a <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
 8002560:	0003      	movs	r3, r0
 8002562:	000c      	movs	r4, r1
 8002564:	0018      	movs	r0, r3
 8002566:	0021      	movs	r1, r4
 8002568:	f7fd ffb4 	bl	80004d4 <__aeabi_d2uiz>
 800256c:	0003      	movs	r3, r0
 800256e:	b29a      	uxth	r2, r3
 8002570:	68fb      	ldr	r3, [r7, #12]
 8002572:	801a      	strh	r2, [r3, #0]
		}
 8002574:	68fb      	ldr	r3, [r7, #12]
 8002576:	0018      	movs	r0, r3
 8002578:	46bd      	mov	sp, r7
 800257a:	b005      	add	sp, #20
 800257c:	bd90      	pop	{r4, r7, pc}
 800257e:	46c0      	nop			; (mov r8, r8)
 8002580:	50000400 	.word	0x50000400
 8002584:	50000800 	.word	0x50000800
 8002588:	50001c00 	.word	0x50001c00

0800258c <_ZN12DigitalInOutC1Eci>:
class DigitalInOut
{
	public:
		uint16_t PIN;
		GPIO_TypeDef* PORT;
		DigitalInOut(char a,int p)
 800258c:	b590      	push	{r4, r7, lr}
 800258e:	b085      	sub	sp, #20
 8002590:	af00      	add	r7, sp, #0
 8002592:	60f8      	str	r0, [r7, #12]
 8002594:	607a      	str	r2, [r7, #4]
 8002596:	200b      	movs	r0, #11
 8002598:	183b      	adds	r3, r7, r0
 800259a:	1c0a      	adds	r2, r1, #0
 800259c:	701a      	strb	r2, [r3, #0]
		{
			switch(a)
 800259e:	183b      	adds	r3, r7, r0
 80025a0:	781b      	ldrb	r3, [r3, #0]
 80025a2:	2b42      	cmp	r3, #66	; 0x42
 80025a4:	d00d      	beq.n	80025c2 <_ZN12DigitalInOutC1Eci+0x36>
 80025a6:	dc02      	bgt.n	80025ae <_ZN12DigitalInOutC1Eci+0x22>
 80025a8:	2b41      	cmp	r3, #65	; 0x41
 80025aa:	d005      	beq.n	80025b8 <_ZN12DigitalInOutC1Eci+0x2c>
 80025ac:	e015      	b.n	80025da <_ZN12DigitalInOutC1Eci+0x4e>
 80025ae:	2b43      	cmp	r3, #67	; 0x43
 80025b0:	d00b      	beq.n	80025ca <_ZN12DigitalInOutC1Eci+0x3e>
 80025b2:	2b48      	cmp	r3, #72	; 0x48
 80025b4:	d00d      	beq.n	80025d2 <_ZN12DigitalInOutC1Eci+0x46>
 80025b6:	e010      	b.n	80025da <_ZN12DigitalInOutC1Eci+0x4e>
			{
				case 'A':PORT=GPIOA;break;
 80025b8:	68fb      	ldr	r3, [r7, #12]
 80025ba:	22a0      	movs	r2, #160	; 0xa0
 80025bc:	05d2      	lsls	r2, r2, #23
 80025be:	605a      	str	r2, [r3, #4]
 80025c0:	e00b      	b.n	80025da <_ZN12DigitalInOutC1Eci+0x4e>
				case 'B':PORT=GPIOB;break;
 80025c2:	68fb      	ldr	r3, [r7, #12]
 80025c4:	4a0f      	ldr	r2, [pc, #60]	; (8002604 <_ZN12DigitalInOutC1Eci+0x78>)
 80025c6:	605a      	str	r2, [r3, #4]
 80025c8:	e007      	b.n	80025da <_ZN12DigitalInOutC1Eci+0x4e>
				case 'C':PORT=GPIOC;break;
 80025ca:	68fb      	ldr	r3, [r7, #12]
 80025cc:	4a0e      	ldr	r2, [pc, #56]	; (8002608 <_ZN12DigitalInOutC1Eci+0x7c>)
 80025ce:	605a      	str	r2, [r3, #4]
 80025d0:	e003      	b.n	80025da <_ZN12DigitalInOutC1Eci+0x4e>
				case 'H':PORT=GPIOH;break;
 80025d2:	68fb      	ldr	r3, [r7, #12]
 80025d4:	4a0d      	ldr	r2, [pc, #52]	; (800260c <_ZN12DigitalInOutC1Eci+0x80>)
 80025d6:	605a      	str	r2, [r3, #4]
 80025d8:	46c0      	nop			; (mov r8, r8)
			}
			PIN=(uint16_t)pow(2,p);
 80025da:	687b      	ldr	r3, [r7, #4]
 80025dc:	0019      	movs	r1, r3
 80025de:	2002      	movs	r0, #2
 80025e0:	f000 fc3b 	bl	8002e5a <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>
 80025e4:	0003      	movs	r3, r0
 80025e6:	000c      	movs	r4, r1
 80025e8:	0018      	movs	r0, r3
 80025ea:	0021      	movs	r1, r4
 80025ec:	f7fd ff72 	bl	80004d4 <__aeabi_d2uiz>
 80025f0:	0003      	movs	r3, r0
 80025f2:	b29a      	uxth	r2, r3
 80025f4:	68fb      	ldr	r3, [r7, #12]
 80025f6:	801a      	strh	r2, [r3, #0]
		}
 80025f8:	68fb      	ldr	r3, [r7, #12]
 80025fa:	0018      	movs	r0, r3
 80025fc:	46bd      	mov	sp, r7
 80025fe:	b005      	add	sp, #20
 8002600:	bd90      	pop	{r4, r7, pc}
 8002602:	46c0      	nop			; (mov r8, r8)
 8002604:	50000400 	.word	0x50000400
 8002608:	50000800 	.word	0x50000800
 800260c:	50001c00 	.word	0x50001c00

08002610 <_ZL24dht11_gpio_config_outputv>:
 */
#include "main.h"
#include "dht11.h"

static void dht11_gpio_config_output()
{
 8002610:	b580      	push	{r7, lr}
 8002612:	b086      	sub	sp, #24
 8002614:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef dht11PinDef = {0};
 8002616:	1d3b      	adds	r3, r7, #4
 8002618:	0018      	movs	r0, r3
 800261a:	2314      	movs	r3, #20
 800261c:	001a      	movs	r2, r3
 800261e:	2100      	movs	r1, #0
 8002620:	f004 f842 	bl	80066a8 <memset>

	__HAL_RCC_GPIOB_CLK_ENABLE();
 8002624:	4b10      	ldr	r3, [pc, #64]	; (8002668 <_ZL24dht11_gpio_config_outputv+0x58>)
 8002626:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002628:	4b0f      	ldr	r3, [pc, #60]	; (8002668 <_ZL24dht11_gpio_config_outputv+0x58>)
 800262a:	2102      	movs	r1, #2
 800262c:	430a      	orrs	r2, r1
 800262e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002630:	4b0d      	ldr	r3, [pc, #52]	; (8002668 <_ZL24dht11_gpio_config_outputv+0x58>)
 8002632:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002634:	2202      	movs	r2, #2
 8002636:	4013      	ands	r3, r2
 8002638:	603b      	str	r3, [r7, #0]
 800263a:	683b      	ldr	r3, [r7, #0]

	dht11PinDef.Pin = DHT11PIN;
 800263c:	1d3b      	adds	r3, r7, #4
 800263e:	2240      	movs	r2, #64	; 0x40
 8002640:	601a      	str	r2, [r3, #0]
	dht11PinDef.Mode = GPIO_MODE_OUTPUT_PP;
 8002642:	1d3b      	adds	r3, r7, #4
 8002644:	2201      	movs	r2, #1
 8002646:	605a      	str	r2, [r3, #4]
	dht11PinDef.Pull = GPIO_PULLUP;
 8002648:	1d3b      	adds	r3, r7, #4
 800264a:	2201      	movs	r2, #1
 800264c:	609a      	str	r2, [r3, #8]
	dht11PinDef.Speed = GPIO_SPEED_FREQ_LOW;
 800264e:	1d3b      	adds	r3, r7, #4
 8002650:	2200      	movs	r2, #0
 8002652:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(DHT11PORT, &dht11PinDef);
 8002654:	1d3b      	adds	r3, r7, #4
 8002656:	4a05      	ldr	r2, [pc, #20]	; (800266c <_ZL24dht11_gpio_config_outputv+0x5c>)
 8002658:	0019      	movs	r1, r3
 800265a:	0010      	movs	r0, r2
 800265c:	f000 ff4a 	bl	80034f4 <HAL_GPIO_Init>
}
 8002660:	46c0      	nop			; (mov r8, r8)
 8002662:	46bd      	mov	sp, r7
 8002664:	b006      	add	sp, #24
 8002666:	bd80      	pop	{r7, pc}
 8002668:	40021000 	.word	0x40021000
 800266c:	50000400 	.word	0x50000400

08002670 <_ZL23dht11_gpio_config_inputv>:

static void dht11_gpio_config_input()
{
 8002670:	b580      	push	{r7, lr}
 8002672:	b086      	sub	sp, #24
 8002674:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef dht11PinDef = {0};
 8002676:	1d3b      	adds	r3, r7, #4
 8002678:	0018      	movs	r0, r3
 800267a:	2314      	movs	r3, #20
 800267c:	001a      	movs	r2, r3
 800267e:	2100      	movs	r1, #0
 8002680:	f004 f812 	bl	80066a8 <memset>

	__HAL_RCC_GPIOB_CLK_ENABLE();
 8002684:	4b10      	ldr	r3, [pc, #64]	; (80026c8 <_ZL23dht11_gpio_config_inputv+0x58>)
 8002686:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002688:	4b0f      	ldr	r3, [pc, #60]	; (80026c8 <_ZL23dht11_gpio_config_inputv+0x58>)
 800268a:	2102      	movs	r1, #2
 800268c:	430a      	orrs	r2, r1
 800268e:	62da      	str	r2, [r3, #44]	; 0x2c
 8002690:	4b0d      	ldr	r3, [pc, #52]	; (80026c8 <_ZL23dht11_gpio_config_inputv+0x58>)
 8002692:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002694:	2202      	movs	r2, #2
 8002696:	4013      	ands	r3, r2
 8002698:	603b      	str	r3, [r7, #0]
 800269a:	683b      	ldr	r3, [r7, #0]

	dht11PinDef.Pin = DHT11PIN;
 800269c:	1d3b      	adds	r3, r7, #4
 800269e:	2240      	movs	r2, #64	; 0x40
 80026a0:	601a      	str	r2, [r3, #0]
	dht11PinDef.Mode = GPIO_MODE_INPUT;
 80026a2:	1d3b      	adds	r3, r7, #4
 80026a4:	2200      	movs	r2, #0
 80026a6:	605a      	str	r2, [r3, #4]
	dht11PinDef.Pull = GPIO_PULLUP;
 80026a8:	1d3b      	adds	r3, r7, #4
 80026aa:	2201      	movs	r2, #1
 80026ac:	609a      	str	r2, [r3, #8]
	dht11PinDef.Speed = GPIO_SPEED_FREQ_LOW;
 80026ae:	1d3b      	adds	r3, r7, #4
 80026b0:	2200      	movs	r2, #0
 80026b2:	60da      	str	r2, [r3, #12]
	HAL_GPIO_Init(DHT11PORT, &dht11PinDef);
 80026b4:	1d3b      	adds	r3, r7, #4
 80026b6:	4a05      	ldr	r2, [pc, #20]	; (80026cc <_ZL23dht11_gpio_config_inputv+0x5c>)
 80026b8:	0019      	movs	r1, r3
 80026ba:	0010      	movs	r0, r2
 80026bc:	f000 ff1a 	bl	80034f4 <HAL_GPIO_Init>
}
 80026c0:	46c0      	nop			; (mov r8, r8)
 80026c2:	46bd      	mov	sp, r7
 80026c4:	b006      	add	sp, #24
 80026c6:	bd80      	pop	{r7, pc}
 80026c8:	40021000 	.word	0x40021000
 80026cc:	50000400 	.word	0x50000400

080026d0 <_ZL21dht11_gpio_output_setv>:

static void dht11_gpio_output_set()
{
 80026d0:	b580      	push	{r7, lr}
 80026d2:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DHT11PORT, DHT11PIN, GPIO_PIN_SET);
 80026d4:	4b04      	ldr	r3, [pc, #16]	; (80026e8 <_ZL21dht11_gpio_output_setv+0x18>)
 80026d6:	2201      	movs	r2, #1
 80026d8:	2140      	movs	r1, #64	; 0x40
 80026da:	0018      	movs	r0, r3
 80026dc:	f001 f8a5 	bl	800382a <HAL_GPIO_WritePin>
}
 80026e0:	46c0      	nop			; (mov r8, r8)
 80026e2:	46bd      	mov	sp, r7
 80026e4:	bd80      	pop	{r7, pc}
 80026e6:	46c0      	nop			; (mov r8, r8)
 80026e8:	50000400 	.word	0x50000400

080026ec <_ZL23dht11_gpio_output_clearv>:

static void dht11_gpio_output_clear()
{
 80026ec:	b580      	push	{r7, lr}
 80026ee:	af00      	add	r7, sp, #0
	HAL_GPIO_WritePin(DHT11PORT, DHT11PIN, GPIO_PIN_RESET);
 80026f0:	4b04      	ldr	r3, [pc, #16]	; (8002704 <_ZL23dht11_gpio_output_clearv+0x18>)
 80026f2:	2200      	movs	r2, #0
 80026f4:	2140      	movs	r1, #64	; 0x40
 80026f6:	0018      	movs	r0, r3
 80026f8:	f001 f897 	bl	800382a <HAL_GPIO_WritePin>
}
 80026fc:	46c0      	nop			; (mov r8, r8)
 80026fe:	46bd      	mov	sp, r7
 8002700:	bd80      	pop	{r7, pc}
 8002702:	46c0      	nop			; (mov r8, r8)
 8002704:	50000400 	.word	0x50000400

08002708 <_ZL21dht11_gpio_input_readv>:

static int dht11_gpio_input_read()
{
 8002708:	b580      	push	{r7, lr}
 800270a:	af00      	add	r7, sp, #0
	return HAL_GPIO_ReadPin(DHT11PORT, DHT11PIN);
 800270c:	4b04      	ldr	r3, [pc, #16]	; (8002720 <_ZL21dht11_gpio_input_readv+0x18>)
 800270e:	2140      	movs	r1, #64	; 0x40
 8002710:	0018      	movs	r0, r3
 8002712:	f001 f86d 	bl	80037f0 <HAL_GPIO_ReadPin>
 8002716:	0003      	movs	r3, r0
}
 8002718:	0018      	movs	r0, r3
 800271a:	46bd      	mov	sp, r7
 800271c:	bd80      	pop	{r7, pc}
 800271e:	46c0      	nop			; (mov r8, r8)
 8002720:	50000400 	.word	0x50000400

08002724 <_ZL16dht11_delay_usect>:

extern TIM_HandleTypeDef htim6;

static void dht11_delay_usec(uint16_t delay)
{
 8002724:	b580      	push	{r7, lr}
 8002726:	b082      	sub	sp, #8
 8002728:	af00      	add	r7, sp, #0
 800272a:	0002      	movs	r2, r0
 800272c:	1dbb      	adds	r3, r7, #6
 800272e:	801a      	strh	r2, [r3, #0]
	__HAL_TIM_SET_COUNTER(&htim6, 0);
 8002730:	4b09      	ldr	r3, [pc, #36]	; (8002758 <_ZL16dht11_delay_usect+0x34>)
 8002732:	681b      	ldr	r3, [r3, #0]
 8002734:	2200      	movs	r2, #0
 8002736:	625a      	str	r2, [r3, #36]	; 0x24
	while ((__HAL_TIM_GET_COUNTER(&htim6))<delay);
 8002738:	4b07      	ldr	r3, [pc, #28]	; (8002758 <_ZL16dht11_delay_usect+0x34>)
 800273a:	681b      	ldr	r3, [r3, #0]
 800273c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800273e:	1dbb      	adds	r3, r7, #6
 8002740:	881b      	ldrh	r3, [r3, #0]
 8002742:	429a      	cmp	r2, r3
 8002744:	419b      	sbcs	r3, r3
 8002746:	425b      	negs	r3, r3
 8002748:	b2db      	uxtb	r3, r3
 800274a:	2b00      	cmp	r3, #0
 800274c:	d000      	beq.n	8002750 <_ZL16dht11_delay_usect+0x2c>
 800274e:	e7f3      	b.n	8002738 <_ZL16dht11_delay_usect+0x14>
}
 8002750:	46c0      	nop			; (mov r8, r8)
 8002752:	46bd      	mov	sp, r7
 8002754:	b002      	add	sp, #8
 8002756:	bd80      	pop	{r7, pc}
 8002758:	200001f8 	.word	0x200001f8

0800275c <_Z17read_dht11_sensorPtS_>:

dht11_status_t read_dht11_sensor (uint16_t *temp, uint16_t *humid)
{
 800275c:	b590      	push	{r4, r7, lr}
 800275e:	b087      	sub	sp, #28
 8002760:	af00      	add	r7, sp, #0
 8002762:	6078      	str	r0, [r7, #4]
 8002764:	6039      	str	r1, [r7, #0]
	int cntr;
	int bits = 40;
 8002766:	2328      	movs	r3, #40	; 0x28
 8002768:	613b      	str	r3, [r7, #16]
	uint8_t dht11_data[5];
	uint8_t data = 0;
 800276a:	230f      	movs	r3, #15
 800276c:	18fb      	adds	r3, r7, r3
 800276e:	2200      	movs	r2, #0
 8002770:	701a      	strb	r2, [r3, #0]
	uint8_t i = 0;
 8002772:	230e      	movs	r3, #14
 8002774:	18fb      	adds	r3, r7, r3
 8002776:	2200      	movs	r2, #0
 8002778:	701a      	strb	r2, [r3, #0]

	dht11_gpio_config_input();
 800277a:	f7ff ff79 	bl	8002670 <_ZL23dht11_gpio_config_inputv>
	dht11_delay_usec(50);
 800277e:	2032      	movs	r0, #50	; 0x32
 8002780:	f7ff ffd0 	bl	8002724 <_ZL16dht11_delay_usect>
	if(dht11_gpio_input_read() == 0) {
 8002784:	f7ff ffc0 	bl	8002708 <_ZL21dht11_gpio_input_readv>
 8002788:	0003      	movs	r3, r0
 800278a:	425a      	negs	r2, r3
 800278c:	4153      	adcs	r3, r2
 800278e:	b2db      	uxtb	r3, r3
 8002790:	2b00      	cmp	r3, #0
 8002792:	d001      	beq.n	8002798 <_Z17read_dht11_sensorPtS_+0x3c>
		return DHT11_PULLUP_ERR;
 8002794:	2301      	movs	r3, #1
 8002796:	e0e1      	b.n	800295c <_Z17read_dht11_sensorPtS_+0x200>
	}

	dht11_gpio_config_output();
 8002798:	f7ff ff3a 	bl	8002610 <_ZL24dht11_gpio_config_outputv>
	dht11_gpio_output_set();
 800279c:	f7ff ff98 	bl	80026d0 <_ZL21dht11_gpio_output_setv>
	dht11_gpio_output_clear();
 80027a0:	f7ff ffa4 	bl	80026ec <_ZL23dht11_gpio_output_clearv>
	/* Delay for 18 - 20 mSec */
	dht11_delay_usec(18500);
 80027a4:	4b6f      	ldr	r3, [pc, #444]	; (8002964 <_Z17read_dht11_sensorPtS_+0x208>)
 80027a6:	0018      	movs	r0, r3
 80027a8:	f7ff ffbc 	bl	8002724 <_ZL16dht11_delay_usect>
	//dht11_gpio_output_set();

	dht11_gpio_config_input();
 80027ac:	f7ff ff60 	bl	8002670 <_ZL23dht11_gpio_config_inputv>
	/*if(dht11_gpio_input_read() == 0) {
		return DHT11_PULLUP_ERR;
	}*/

	dht11_delay_usec(40);
 80027b0:	2028      	movs	r0, #40	; 0x28
 80027b2:	f7ff ffb7 	bl	8002724 <_ZL16dht11_delay_usect>
	if(dht11_gpio_input_read() != 0) {
 80027b6:	f7ff ffa7 	bl	8002708 <_ZL21dht11_gpio_input_readv>
 80027ba:	0003      	movs	r3, r0
 80027bc:	1e5a      	subs	r2, r3, #1
 80027be:	4193      	sbcs	r3, r2
 80027c0:	b2db      	uxtb	r3, r3
 80027c2:	2b00      	cmp	r3, #0
 80027c4:	d001      	beq.n	80027ca <_Z17read_dht11_sensorPtS_+0x6e>
		return DHT11_START_ERR;
 80027c6:	2302      	movs	r3, #2
 80027c8:	e0c8      	b.n	800295c <_Z17read_dht11_sensorPtS_+0x200>
	}

	cntr=18;
 80027ca:	2312      	movs	r3, #18
 80027cc:	617b      	str	r3, [r7, #20]
	while(dht11_gpio_input_read() == 0) {
 80027ce:	f7ff ff9b 	bl	8002708 <_ZL21dht11_gpio_input_readv>
 80027d2:	0003      	movs	r3, r0
 80027d4:	425a      	negs	r2, r3
 80027d6:	4153      	adcs	r3, r2
 80027d8:	b2db      	uxtb	r3, r3
 80027da:	2b00      	cmp	r3, #0
 80027dc:	d00d      	beq.n	80027fa <_Z17read_dht11_sensorPtS_+0x9e>
		dht11_delay_usec(5);
 80027de:	2005      	movs	r0, #5
 80027e0:	f7ff ffa0 	bl	8002724 <_ZL16dht11_delay_usect>
		if(--cntr == 0) {
 80027e4:	697b      	ldr	r3, [r7, #20]
 80027e6:	3b01      	subs	r3, #1
 80027e8:	617b      	str	r3, [r7, #20]
 80027ea:	697b      	ldr	r3, [r7, #20]
 80027ec:	425a      	negs	r2, r3
 80027ee:	4153      	adcs	r3, r2
 80027f0:	b2db      	uxtb	r3, r3
 80027f2:	2b00      	cmp	r3, #0
 80027f4:	d0eb      	beq.n	80027ce <_Z17read_dht11_sensorPtS_+0x72>
			return DHT11_START_ERR;
 80027f6:	2302      	movs	r3, #2
 80027f8:	e0b0      	b.n	800295c <_Z17read_dht11_sensorPtS_+0x200>
		}
	}

	cntr=18;
 80027fa:	2312      	movs	r3, #18
 80027fc:	617b      	str	r3, [r7, #20]
	while(dht11_gpio_input_read() != 0) {
 80027fe:	f7ff ff83 	bl	8002708 <_ZL21dht11_gpio_input_readv>
 8002802:	0003      	movs	r3, r0
 8002804:	1e5a      	subs	r2, r3, #1
 8002806:	4193      	sbcs	r3, r2
 8002808:	b2db      	uxtb	r3, r3
 800280a:	2b00      	cmp	r3, #0
 800280c:	d00d      	beq.n	800282a <_Z17read_dht11_sensorPtS_+0xce>
		dht11_delay_usec(5);
 800280e:	2005      	movs	r0, #5
 8002810:	f7ff ff88 	bl	8002724 <_ZL16dht11_delay_usect>
		if(--cntr == 0) {
 8002814:	697b      	ldr	r3, [r7, #20]
 8002816:	3b01      	subs	r3, #1
 8002818:	617b      	str	r3, [r7, #20]
 800281a:	697b      	ldr	r3, [r7, #20]
 800281c:	425a      	negs	r2, r3
 800281e:	4153      	adcs	r3, r2
 8002820:	b2db      	uxtb	r3, r3
 8002822:	2b00      	cmp	r3, #0
 8002824:	d0eb      	beq.n	80027fe <_Z17read_dht11_sensorPtS_+0xa2>
			return DHT11_START_ERR;
 8002826:	2302      	movs	r3, #2
 8002828:	e098      	b.n	800295c <_Z17read_dht11_sensorPtS_+0x200>
		}
	}

	do {
		cntr=11;
 800282a:	230b      	movs	r3, #11
 800282c:	617b      	str	r3, [r7, #20]
		while(dht11_gpio_input_read() == 0) {
 800282e:	f7ff ff6b 	bl	8002708 <_ZL21dht11_gpio_input_readv>
 8002832:	0003      	movs	r3, r0
 8002834:	425a      	negs	r2, r3
 8002836:	4153      	adcs	r3, r2
 8002838:	b2db      	uxtb	r3, r3
 800283a:	2b00      	cmp	r3, #0
 800283c:	d00d      	beq.n	800285a <_Z17read_dht11_sensorPtS_+0xfe>
			dht11_delay_usec(5);
 800283e:	2005      	movs	r0, #5
 8002840:	f7ff ff70 	bl	8002724 <_ZL16dht11_delay_usect>
			if(--cntr == 0) {
 8002844:	697b      	ldr	r3, [r7, #20]
 8002846:	3b01      	subs	r3, #1
 8002848:	617b      	str	r3, [r7, #20]
 800284a:	697b      	ldr	r3, [r7, #20]
 800284c:	425a      	negs	r2, r3
 800284e:	4153      	adcs	r3, r2
 8002850:	b2db      	uxtb	r3, r3
 8002852:	2b00      	cmp	r3, #0
 8002854:	d0eb      	beq.n	800282e <_Z17read_dht11_sensorPtS_+0xd2>
				return DHT11_DATA_ERR;
 8002856:	2303      	movs	r3, #3
 8002858:	e080      	b.n	800295c <_Z17read_dht11_sensorPtS_+0x200>
			}
		}

		cntr=15;
 800285a:	230f      	movs	r3, #15
 800285c:	617b      	str	r3, [r7, #20]
		while(dht11_gpio_input_read() != 0) {
 800285e:	f7ff ff53 	bl	8002708 <_ZL21dht11_gpio_input_readv>
 8002862:	0003      	movs	r3, r0
 8002864:	1e5a      	subs	r2, r3, #1
 8002866:	4193      	sbcs	r3, r2
 8002868:	b2db      	uxtb	r3, r3
 800286a:	2b00      	cmp	r3, #0
 800286c:	d00d      	beq.n	800288a <_Z17read_dht11_sensorPtS_+0x12e>
			dht11_delay_usec(5);
 800286e:	2005      	movs	r0, #5
 8002870:	f7ff ff58 	bl	8002724 <_ZL16dht11_delay_usect>
			if(--cntr == 0) {
 8002874:	697b      	ldr	r3, [r7, #20]
 8002876:	3b01      	subs	r3, #1
 8002878:	617b      	str	r3, [r7, #20]
 800287a:	697b      	ldr	r3, [r7, #20]
 800287c:	425a      	negs	r2, r3
 800287e:	4153      	adcs	r3, r2
 8002880:	b2db      	uxtb	r3, r3
 8002882:	2b00      	cmp	r3, #0
 8002884:	d0eb      	beq.n	800285e <_Z17read_dht11_sensorPtS_+0x102>
				return DHT11_DATA_ERR;
 8002886:	2303      	movs	r3, #3
 8002888:	e068      	b.n	800295c <_Z17read_dht11_sensorPtS_+0x200>
			}
		}
		data = data << 1;
 800288a:	230f      	movs	r3, #15
 800288c:	18fa      	adds	r2, r7, r3
 800288e:	18fb      	adds	r3, r7, r3
 8002890:	781b      	ldrb	r3, [r3, #0]
 8002892:	18db      	adds	r3, r3, r3
 8002894:	7013      	strb	r3, [r2, #0]

		if(cntr < 11) {
 8002896:	697b      	ldr	r3, [r7, #20]
 8002898:	2b0a      	cmp	r3, #10
 800289a:	dc06      	bgt.n	80028aa <_Z17read_dht11_sensorPtS_+0x14e>
			data = data | 0x01;
 800289c:	220f      	movs	r2, #15
 800289e:	18bb      	adds	r3, r7, r2
 80028a0:	18ba      	adds	r2, r7, r2
 80028a2:	7812      	ldrb	r2, [r2, #0]
 80028a4:	2101      	movs	r1, #1
 80028a6:	430a      	orrs	r2, r1
 80028a8:	701a      	strb	r2, [r3, #0]
		}
		if((bits & 0x07) == 1) {
 80028aa:	693b      	ldr	r3, [r7, #16]
 80028ac:	2207      	movs	r2, #7
 80028ae:	4013      	ands	r3, r2
 80028b0:	2b01      	cmp	r3, #1
 80028b2:	d110      	bne.n	80028d6 <_Z17read_dht11_sensorPtS_+0x17a>
			dht11_data[i] = data;
 80028b4:	200e      	movs	r0, #14
 80028b6:	183b      	adds	r3, r7, r0
 80028b8:	781b      	ldrb	r3, [r3, #0]
 80028ba:	2208      	movs	r2, #8
 80028bc:	18ba      	adds	r2, r7, r2
 80028be:	240f      	movs	r4, #15
 80028c0:	1939      	adds	r1, r7, r4
 80028c2:	7809      	ldrb	r1, [r1, #0]
 80028c4:	54d1      	strb	r1, [r2, r3]
			i++;
 80028c6:	183b      	adds	r3, r7, r0
 80028c8:	781a      	ldrb	r2, [r3, #0]
 80028ca:	183b      	adds	r3, r7, r0
 80028cc:	3201      	adds	r2, #1
 80028ce:	701a      	strb	r2, [r3, #0]
			data = 0;
 80028d0:	193b      	adds	r3, r7, r4
 80028d2:	2200      	movs	r2, #0
 80028d4:	701a      	strb	r2, [r3, #0]
		}
	} while(--bits != 0);
 80028d6:	693b      	ldr	r3, [r7, #16]
 80028d8:	3b01      	subs	r3, #1
 80028da:	613b      	str	r3, [r7, #16]
 80028dc:	693b      	ldr	r3, [r7, #16]
 80028de:	1e5a      	subs	r2, r3, #1
 80028e0:	4193      	sbcs	r3, r2
 80028e2:	b2db      	uxtb	r3, r3
 80028e4:	2b00      	cmp	r3, #0
 80028e6:	d000      	beq.n	80028ea <_Z17read_dht11_sensorPtS_+0x18e>
	do {
 80028e8:	e79f      	b.n	800282a <_Z17read_dht11_sensorPtS_+0xce>

	if ((dht11_data[0] + dht11_data[1] + dht11_data[2] + dht11_data[3]) != dht11_data[4]) {
 80028ea:	2108      	movs	r1, #8
 80028ec:	187b      	adds	r3, r7, r1
 80028ee:	781b      	ldrb	r3, [r3, #0]
 80028f0:	001a      	movs	r2, r3
 80028f2:	187b      	adds	r3, r7, r1
 80028f4:	785b      	ldrb	r3, [r3, #1]
 80028f6:	18d3      	adds	r3, r2, r3
 80028f8:	187a      	adds	r2, r7, r1
 80028fa:	7892      	ldrb	r2, [r2, #2]
 80028fc:	189b      	adds	r3, r3, r2
 80028fe:	187a      	adds	r2, r7, r1
 8002900:	78d2      	ldrb	r2, [r2, #3]
 8002902:	189b      	adds	r3, r3, r2
 8002904:	187a      	adds	r2, r7, r1
 8002906:	7912      	ldrb	r2, [r2, #4]
 8002908:	4293      	cmp	r3, r2
 800290a:	d001      	beq.n	8002910 <_Z17read_dht11_sensorPtS_+0x1b4>
		return DHT11_CHKSUM_ERR;
 800290c:	2304      	movs	r3, #4
 800290e:	e025      	b.n	800295c <_Z17read_dht11_sensorPtS_+0x200>
	}

	*humid = dht11_data[0] * 100 + dht11_data[1] * 10;
 8002910:	2008      	movs	r0, #8
 8002912:	183b      	adds	r3, r7, r0
 8002914:	781b      	ldrb	r3, [r3, #0]
 8002916:	b29b      	uxth	r3, r3
 8002918:	2264      	movs	r2, #100	; 0x64
 800291a:	4353      	muls	r3, r2
 800291c:	b29a      	uxth	r2, r3
 800291e:	183b      	adds	r3, r7, r0
 8002920:	785b      	ldrb	r3, [r3, #1]
 8002922:	b29b      	uxth	r3, r3
 8002924:	1c19      	adds	r1, r3, #0
 8002926:	0089      	lsls	r1, r1, #2
 8002928:	18cb      	adds	r3, r1, r3
 800292a:	18db      	adds	r3, r3, r3
 800292c:	b29b      	uxth	r3, r3
 800292e:	18d3      	adds	r3, r2, r3
 8002930:	b29a      	uxth	r2, r3
 8002932:	683b      	ldr	r3, [r7, #0]
 8002934:	801a      	strh	r2, [r3, #0]
	*temp = dht11_data[2] * 100 + dht11_data[3] * 10;
 8002936:	183b      	adds	r3, r7, r0
 8002938:	789b      	ldrb	r3, [r3, #2]
 800293a:	b29b      	uxth	r3, r3
 800293c:	2264      	movs	r2, #100	; 0x64
 800293e:	4353      	muls	r3, r2
 8002940:	b29a      	uxth	r2, r3
 8002942:	183b      	adds	r3, r7, r0
 8002944:	78db      	ldrb	r3, [r3, #3]
 8002946:	b29b      	uxth	r3, r3
 8002948:	1c19      	adds	r1, r3, #0
 800294a:	0089      	lsls	r1, r1, #2
 800294c:	18cb      	adds	r3, r1, r3
 800294e:	18db      	adds	r3, r3, r3
 8002950:	b29b      	uxth	r3, r3
 8002952:	18d3      	adds	r3, r2, r3
 8002954:	b29a      	uxth	r2, r3
 8002956:	687b      	ldr	r3, [r7, #4]
 8002958:	801a      	strh	r2, [r3, #0]

	return DHT11_OK;
 800295a:	2300      	movs	r3, #0
}
 800295c:	0018      	movs	r0, r3
 800295e:	46bd      	mov	sp, r7
 8002960:	b007      	add	sp, #28
 8002962:	bd90      	pop	{r4, r7, pc}
 8002964:	00004844 	.word	0x00004844

08002968 <main>:
DigitalIn  sw0('C',13), sw1('A',10), sw2('B',3), sw3('B',5), sw4('B',4);
DigitalInOut dht11('B',6);
/************************************************************************************/

int main(void)
{
 8002968:	b5f0      	push	{r4, r5, r6, r7, lr}
 800296a:	b093      	sub	sp, #76	; 0x4c
 800296c:	af02      	add	r7, sp, #8
	/*********Variable Declarations**************/
	char buff[50];
	int buff_len;
	uint16_t temp=0, humid=0;
 800296e:	1cbb      	adds	r3, r7, #2
 8002970:	2200      	movs	r2, #0
 8002972:	801a      	strh	r2, [r3, #0]
 8002974:	003b      	movs	r3, r7
 8002976:	2200      	movs	r2, #0
 8002978:	801a      	strh	r2, [r3, #0]
	dht11_status_t ret;
	/*******************************************/

	HAL_Init();
 800297a:	f000 fc4f 	bl	800321c <HAL_Init>
	SystemClock_Config();
 800297e:	f000 f8a5 	bl	8002acc <_Z18SystemClock_Configv>
	MX_GPIO_Init();
 8002982:	f000 f9a7 	bl	8002cd4 <_ZL12MX_GPIO_Initv>
	MX_TIM6_Init();
 8002986:	f000 f92d 	bl	8002be4 <_ZL12MX_TIM6_Initv>
	MX_USART2_UART_Init();
 800298a:	f000 f96f 	bl	8002c6c <_ZL19MX_USART2_UART_Initv>
	MX_NVIC_Init();
 800298e:	f000 f91b 	bl	8002bc8 <_ZL12MX_NVIC_Initv>

	while(1)
	{
	  ret = read_dht11_sensor(&temp, &humid);
 8002992:	253f      	movs	r5, #63	; 0x3f
 8002994:	197c      	adds	r4, r7, r5
 8002996:	003a      	movs	r2, r7
 8002998:	1cbb      	adds	r3, r7, #2
 800299a:	0011      	movs	r1, r2
 800299c:	0018      	movs	r0, r3
 800299e:	f7ff fedd 	bl	800275c <_Z17read_dht11_sensorPtS_>
 80029a2:	0003      	movs	r3, r0
 80029a4:	7023      	strb	r3, [r4, #0]
	  if(ret==DHT11_OK)
 80029a6:	197b      	adds	r3, r7, r5
 80029a8:	781b      	ldrb	r3, [r3, #0]
 80029aa:	2b00      	cmp	r3, #0
 80029ac:	d134      	bne.n	8002a18 <main+0xb0>
	  {
		  buff_len=sprintf(buff,"Success\r\nTemp : %.2fC  Humidity : %.2f%%\r\n",float(temp/100),float(humid/100));
 80029ae:	1cbb      	adds	r3, r7, #2
 80029b0:	881b      	ldrh	r3, [r3, #0]
 80029b2:	2164      	movs	r1, #100	; 0x64
 80029b4:	0018      	movs	r0, r3
 80029b6:	f7fd fbb9 	bl	800012c <__udivsi3>
 80029ba:	0003      	movs	r3, r0
 80029bc:	b29b      	uxth	r3, r3
 80029be:	0018      	movs	r0, r3
 80029c0:	f7fd fe68 	bl	8000694 <__aeabi_i2f>
 80029c4:	1c03      	adds	r3, r0, #0
 80029c6:	1c18      	adds	r0, r3, #0
 80029c8:	f7ff fc4c 	bl	8002264 <__aeabi_f2d>
 80029cc:	0005      	movs	r5, r0
 80029ce:	000e      	movs	r6, r1
 80029d0:	003b      	movs	r3, r7
 80029d2:	881b      	ldrh	r3, [r3, #0]
 80029d4:	2164      	movs	r1, #100	; 0x64
 80029d6:	0018      	movs	r0, r3
 80029d8:	f7fd fba8 	bl	800012c <__udivsi3>
 80029dc:	0003      	movs	r3, r0
 80029de:	b29b      	uxth	r3, r3
 80029e0:	0018      	movs	r0, r3
 80029e2:	f7fd fe57 	bl	8000694 <__aeabi_i2f>
 80029e6:	1c03      	adds	r3, r0, #0
 80029e8:	1c18      	adds	r0, r3, #0
 80029ea:	f7ff fc3b 	bl	8002264 <__aeabi_f2d>
 80029ee:	0003      	movs	r3, r0
 80029f0:	000c      	movs	r4, r1
 80029f2:	4916      	ldr	r1, [pc, #88]	; (8002a4c <main+0xe4>)
 80029f4:	1d38      	adds	r0, r7, #4
 80029f6:	9300      	str	r3, [sp, #0]
 80029f8:	9401      	str	r4, [sp, #4]
 80029fa:	002a      	movs	r2, r5
 80029fc:	0033      	movs	r3, r6
 80029fe:	f004 fcbb 	bl	8007378 <siprintf>
 8002a02:	0003      	movs	r3, r0
 8002a04:	63bb      	str	r3, [r7, #56]	; 0x38
		  HAL_UART_Transmit(&huart2,(uint8_t *)buff,buff_len,HAL_MAX_DELAY);
 8002a06:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002a08:	b29a      	uxth	r2, r3
 8002a0a:	2301      	movs	r3, #1
 8002a0c:	425b      	negs	r3, r3
 8002a0e:	1d39      	adds	r1, r7, #4
 8002a10:	480f      	ldr	r0, [pc, #60]	; (8002a50 <main+0xe8>)
 8002a12:	f002 f8b9 	bl	8004b88 <HAL_UART_Transmit>
 8002a16:	e013      	b.n	8002a40 <main+0xd8>
	  }
	  else
	  {
		  buff_len=sprintf(buff,"Transmission Error");
 8002a18:	1d3b      	adds	r3, r7, #4
 8002a1a:	4a0e      	ldr	r2, [pc, #56]	; (8002a54 <main+0xec>)
 8002a1c:	ca13      	ldmia	r2!, {r0, r1, r4}
 8002a1e:	c313      	stmia	r3!, {r0, r1, r4}
 8002a20:	6811      	ldr	r1, [r2, #0]
 8002a22:	6019      	str	r1, [r3, #0]
 8002a24:	8891      	ldrh	r1, [r2, #4]
 8002a26:	8099      	strh	r1, [r3, #4]
 8002a28:	7992      	ldrb	r2, [r2, #6]
 8002a2a:	719a      	strb	r2, [r3, #6]
 8002a2c:	2312      	movs	r3, #18
 8002a2e:	63bb      	str	r3, [r7, #56]	; 0x38
		  HAL_UART_Transmit(&huart2,(uint8_t *)buff,buff_len,HAL_MAX_DELAY);
 8002a30:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 8002a32:	b29a      	uxth	r2, r3
 8002a34:	2301      	movs	r3, #1
 8002a36:	425b      	negs	r3, r3
 8002a38:	1d39      	adds	r1, r7, #4
 8002a3a:	4805      	ldr	r0, [pc, #20]	; (8002a50 <main+0xe8>)
 8002a3c:	f002 f8a4 	bl	8004b88 <HAL_UART_Transmit>
	  }
	  HAL_Delay(2500);
 8002a40:	4b05      	ldr	r3, [pc, #20]	; (8002a58 <main+0xf0>)
 8002a42:	0018      	movs	r0, r3
 8002a44:	f000 fc5a 	bl	80032fc <HAL_Delay>
	  ret = read_dht11_sensor(&temp, &humid);
 8002a48:	e7a3      	b.n	8002992 <main+0x2a>
 8002a4a:	46c0      	nop			; (mov r8, r8)
 8002a4c:	0800a240 	.word	0x0800a240
 8002a50:	20000234 	.word	0x20000234
 8002a54:	0800a26c 	.word	0x0800a26c
 8002a58:	000009c4 	.word	0x000009c4

08002a5c <HAL_GPIO_EXTI_Callback>:
	}
}

void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin)
{
 8002a5c:	b580      	push	{r7, lr}
 8002a5e:	b082      	sub	sp, #8
 8002a60:	af00      	add	r7, sp, #0
 8002a62:	0002      	movs	r2, r0
 8002a64:	1dbb      	adds	r3, r7, #6
 8002a66:	801a      	strh	r2, [r3, #0]
	if(GPIO_Pin & GPIO_PIN_13)
 8002a68:	1dbb      	adds	r3, r7, #6
 8002a6a:	881a      	ldrh	r2, [r3, #0]
 8002a6c:	2380      	movs	r3, #128	; 0x80
 8002a6e:	019b      	lsls	r3, r3, #6
 8002a70:	4013      	ands	r3, r2
 8002a72:	d003      	beq.n	8002a7c <HAL_GPIO_EXTI_Callback+0x20>
		led0.toggle();
 8002a74:	4b11      	ldr	r3, [pc, #68]	; (8002abc <HAL_GPIO_EXTI_Callback+0x60>)
 8002a76:	0018      	movs	r0, r3
 8002a78:	f7ff fd36 	bl	80024e8 <_ZN10DigitalOut6toggleEv>
	if(GPIO_Pin & GPIO_PIN_10)
 8002a7c:	1dbb      	adds	r3, r7, #6
 8002a7e:	881a      	ldrh	r2, [r3, #0]
 8002a80:	2380      	movs	r3, #128	; 0x80
 8002a82:	00db      	lsls	r3, r3, #3
 8002a84:	4013      	ands	r3, r2
 8002a86:	d003      	beq.n	8002a90 <HAL_GPIO_EXTI_Callback+0x34>
		led1.toggle();
 8002a88:	4b0d      	ldr	r3, [pc, #52]	; (8002ac0 <HAL_GPIO_EXTI_Callback+0x64>)
 8002a8a:	0018      	movs	r0, r3
 8002a8c:	f7ff fd2c 	bl	80024e8 <_ZN10DigitalOut6toggleEv>
	if(GPIO_Pin & GPIO_PIN_5)
 8002a90:	1dbb      	adds	r3, r7, #6
 8002a92:	881b      	ldrh	r3, [r3, #0]
 8002a94:	2220      	movs	r2, #32
 8002a96:	4013      	ands	r3, r2
 8002a98:	d003      	beq.n	8002aa2 <HAL_GPIO_EXTI_Callback+0x46>
		led3.toggle();
 8002a9a:	4b0a      	ldr	r3, [pc, #40]	; (8002ac4 <HAL_GPIO_EXTI_Callback+0x68>)
 8002a9c:	0018      	movs	r0, r3
 8002a9e:	f7ff fd23 	bl	80024e8 <_ZN10DigitalOut6toggleEv>
	if(GPIO_Pin & GPIO_PIN_4)
 8002aa2:	1dbb      	adds	r3, r7, #6
 8002aa4:	881b      	ldrh	r3, [r3, #0]
 8002aa6:	2210      	movs	r2, #16
 8002aa8:	4013      	ands	r3, r2
 8002aaa:	d003      	beq.n	8002ab4 <HAL_GPIO_EXTI_Callback+0x58>
		led4.toggle();
 8002aac:	4b06      	ldr	r3, [pc, #24]	; (8002ac8 <HAL_GPIO_EXTI_Callback+0x6c>)
 8002aae:	0018      	movs	r0, r3
 8002ab0:	f7ff fd1a 	bl	80024e8 <_ZN10DigitalOut6toggleEv>
}
 8002ab4:	46c0      	nop			; (mov r8, r8)
 8002ab6:	46bd      	mov	sp, r7
 8002ab8:	b002      	add	sp, #8
 8002aba:	bd80      	pop	{r7, pc}
 8002abc:	200002b4 	.word	0x200002b4
 8002ac0:	200002bc 	.word	0x200002bc
 8002ac4:	200002cc 	.word	0x200002cc
 8002ac8:	200002d4 	.word	0x200002d4

08002acc <_Z18SystemClock_Configv>:

void SystemClock_Config(void)
{
 8002acc:	b590      	push	{r4, r7, lr}
 8002ace:	b09f      	sub	sp, #124	; 0x7c
 8002ad0:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8002ad2:	2440      	movs	r4, #64	; 0x40
 8002ad4:	193b      	adds	r3, r7, r4
 8002ad6:	0018      	movs	r0, r3
 8002ad8:	2338      	movs	r3, #56	; 0x38
 8002ada:	001a      	movs	r2, r3
 8002adc:	2100      	movs	r1, #0
 8002ade:	f003 fde3 	bl	80066a8 <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8002ae2:	232c      	movs	r3, #44	; 0x2c
 8002ae4:	18fb      	adds	r3, r7, r3
 8002ae6:	0018      	movs	r0, r3
 8002ae8:	2314      	movs	r3, #20
 8002aea:	001a      	movs	r2, r3
 8002aec:	2100      	movs	r1, #0
 8002aee:	f003 fddb 	bl	80066a8 <memset>
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8002af2:	1d3b      	adds	r3, r7, #4
 8002af4:	0018      	movs	r0, r3
 8002af6:	2328      	movs	r3, #40	; 0x28
 8002af8:	001a      	movs	r2, r3
 8002afa:	2100      	movs	r1, #0
 8002afc:	f003 fdd4 	bl	80066a8 <memset>

  /** Configure the main internal regulator output voltage
  */
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 8002b00:	4b2f      	ldr	r3, [pc, #188]	; (8002bc0 <_Z18SystemClock_Configv+0xf4>)
 8002b02:	681b      	ldr	r3, [r3, #0]
 8002b04:	4a2f      	ldr	r2, [pc, #188]	; (8002bc4 <_Z18SystemClock_Configv+0xf8>)
 8002b06:	401a      	ands	r2, r3
 8002b08:	4b2d      	ldr	r3, [pc, #180]	; (8002bc0 <_Z18SystemClock_Configv+0xf4>)
 8002b0a:	2180      	movs	r1, #128	; 0x80
 8002b0c:	0109      	lsls	r1, r1, #4
 8002b0e:	430a      	orrs	r2, r1
 8002b10:	601a      	str	r2, [r3, #0]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 8002b12:	0021      	movs	r1, r4
 8002b14:	187b      	adds	r3, r7, r1
 8002b16:	2202      	movs	r2, #2
 8002b18:	601a      	str	r2, [r3, #0]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 8002b1a:	187b      	adds	r3, r7, r1
 8002b1c:	2201      	movs	r2, #1
 8002b1e:	60da      	str	r2, [r3, #12]
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 8002b20:	187b      	adds	r3, r7, r1
 8002b22:	2210      	movs	r2, #16
 8002b24:	611a      	str	r2, [r3, #16]
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8002b26:	187b      	adds	r3, r7, r1
 8002b28:	2202      	movs	r2, #2
 8002b2a:	629a      	str	r2, [r3, #40]	; 0x28
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 8002b2c:	187b      	adds	r3, r7, r1
 8002b2e:	2200      	movs	r2, #0
 8002b30:	62da      	str	r2, [r3, #44]	; 0x2c
  RCC_OscInitStruct.PLL.PLLMUL = RCC_PLLMUL_4;
 8002b32:	187b      	adds	r3, r7, r1
 8002b34:	2280      	movs	r2, #128	; 0x80
 8002b36:	02d2      	lsls	r2, r2, #11
 8002b38:	631a      	str	r2, [r3, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLDIV = RCC_PLLDIV_2;
 8002b3a:	187b      	adds	r3, r7, r1
 8002b3c:	2280      	movs	r2, #128	; 0x80
 8002b3e:	03d2      	lsls	r2, r2, #15
 8002b40:	635a      	str	r2, [r3, #52]	; 0x34
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8002b42:	187b      	adds	r3, r7, r1
 8002b44:	0018      	movs	r0, r3
 8002b46:	f000 fec5 	bl	80038d4 <HAL_RCC_OscConfig>
 8002b4a:	0003      	movs	r3, r0
 8002b4c:	1e5a      	subs	r2, r3, #1
 8002b4e:	4193      	sbcs	r3, r2
 8002b50:	b2db      	uxtb	r3, r3
 8002b52:	2b00      	cmp	r3, #0
 8002b54:	d001      	beq.n	8002b5a <_Z18SystemClock_Configv+0x8e>
  {
    Error_Handler();
 8002b56:	f000 f97b 	bl	8002e50 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8002b5a:	212c      	movs	r1, #44	; 0x2c
 8002b5c:	187b      	adds	r3, r7, r1
 8002b5e:	220f      	movs	r2, #15
 8002b60:	601a      	str	r2, [r3, #0]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8002b62:	187b      	adds	r3, r7, r1
 8002b64:	2203      	movs	r2, #3
 8002b66:	605a      	str	r2, [r3, #4]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8002b68:	187b      	adds	r3, r7, r1
 8002b6a:	2200      	movs	r2, #0
 8002b6c:	609a      	str	r2, [r3, #8]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8002b6e:	187b      	adds	r3, r7, r1
 8002b70:	2200      	movs	r2, #0
 8002b72:	60da      	str	r2, [r3, #12]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8002b74:	187b      	adds	r3, r7, r1
 8002b76:	2200      	movs	r2, #0
 8002b78:	611a      	str	r2, [r3, #16]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_1) != HAL_OK)
 8002b7a:	187b      	adds	r3, r7, r1
 8002b7c:	2101      	movs	r1, #1
 8002b7e:	0018      	movs	r0, r3
 8002b80:	f001 fa78 	bl	8004074 <HAL_RCC_ClockConfig>
 8002b84:	0003      	movs	r3, r0
 8002b86:	1e5a      	subs	r2, r3, #1
 8002b88:	4193      	sbcs	r3, r2
 8002b8a:	b2db      	uxtb	r3, r3
 8002b8c:	2b00      	cmp	r3, #0
 8002b8e:	d001      	beq.n	8002b94 <_Z18SystemClock_Configv+0xc8>
  {
    Error_Handler();
 8002b90:	f000 f95e 	bl	8002e50 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART2;
 8002b94:	1d3b      	adds	r3, r7, #4
 8002b96:	2202      	movs	r2, #2
 8002b98:	601a      	str	r2, [r3, #0]
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8002b9a:	1d3b      	adds	r3, r7, #4
 8002b9c:	2200      	movs	r2, #0
 8002b9e:	611a      	str	r2, [r3, #16]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8002ba0:	1d3b      	adds	r3, r7, #4
 8002ba2:	0018      	movs	r0, r3
 8002ba4:	f001 fc4a 	bl	800443c <HAL_RCCEx_PeriphCLKConfig>
 8002ba8:	0003      	movs	r3, r0
 8002baa:	1e5a      	subs	r2, r3, #1
 8002bac:	4193      	sbcs	r3, r2
 8002bae:	b2db      	uxtb	r3, r3
 8002bb0:	2b00      	cmp	r3, #0
 8002bb2:	d001      	beq.n	8002bb8 <_Z18SystemClock_Configv+0xec>
  {
    Error_Handler();
 8002bb4:	f000 f94c 	bl	8002e50 <Error_Handler>
  }
}
 8002bb8:	46c0      	nop			; (mov r8, r8)
 8002bba:	46bd      	mov	sp, r7
 8002bbc:	b01f      	add	sp, #124	; 0x7c
 8002bbe:	bd90      	pop	{r4, r7, pc}
 8002bc0:	40007000 	.word	0x40007000
 8002bc4:	ffffe7ff 	.word	0xffffe7ff

08002bc8 <_ZL12MX_NVIC_Initv>:
/**
  * @brief NVIC Configuration.
  * @retval None
  */
static void MX_NVIC_Init(void)
{
 8002bc8:	b580      	push	{r7, lr}
 8002bca:	af00      	add	r7, sp, #0
  /* EXTI4_15_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(EXTI4_15_IRQn, 0, 0);
 8002bcc:	2200      	movs	r2, #0
 8002bce:	2100      	movs	r1, #0
 8002bd0:	2007      	movs	r0, #7
 8002bd2:	f000 fc5d 	bl	8003490 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI4_15_IRQn);
 8002bd6:	2007      	movs	r0, #7
 8002bd8:	f000 fc6f 	bl	80034ba <HAL_NVIC_EnableIRQ>
}
 8002bdc:	46c0      	nop			; (mov r8, r8)
 8002bde:	46bd      	mov	sp, r7
 8002be0:	bd80      	pop	{r7, pc}
	...

08002be4 <_ZL12MX_TIM6_Initv>:
  * @brief TIM6 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM6_Init(void)
{
 8002be4:	b580      	push	{r7, lr}
 8002be6:	b082      	sub	sp, #8
 8002be8:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM6_Init 0 */

  /* USER CODE END TIM6_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8002bea:	003b      	movs	r3, r7
 8002bec:	0018      	movs	r0, r3
 8002bee:	2308      	movs	r3, #8
 8002bf0:	001a      	movs	r2, r3
 8002bf2:	2100      	movs	r1, #0
 8002bf4:	f003 fd58 	bl	80066a8 <memset>

  /* USER CODE BEGIN TIM6_Init 1 */

  /* USER CODE END TIM6_Init 1 */
  htim6.Instance = TIM6;
 8002bf8:	4b19      	ldr	r3, [pc, #100]	; (8002c60 <_ZL12MX_TIM6_Initv+0x7c>)
 8002bfa:	4a1a      	ldr	r2, [pc, #104]	; (8002c64 <_ZL12MX_TIM6_Initv+0x80>)
 8002bfc:	601a      	str	r2, [r3, #0]
  htim6.Init.Prescaler = 32-1;
 8002bfe:	4b18      	ldr	r3, [pc, #96]	; (8002c60 <_ZL12MX_TIM6_Initv+0x7c>)
 8002c00:	221f      	movs	r2, #31
 8002c02:	605a      	str	r2, [r3, #4]
  htim6.Init.CounterMode = TIM_COUNTERMODE_UP;
 8002c04:	4b16      	ldr	r3, [pc, #88]	; (8002c60 <_ZL12MX_TIM6_Initv+0x7c>)
 8002c06:	2200      	movs	r2, #0
 8002c08:	609a      	str	r2, [r3, #8]
  htim6.Init.Period = 65535;
 8002c0a:	4b15      	ldr	r3, [pc, #84]	; (8002c60 <_ZL12MX_TIM6_Initv+0x7c>)
 8002c0c:	4a16      	ldr	r2, [pc, #88]	; (8002c68 <_ZL12MX_TIM6_Initv+0x84>)
 8002c0e:	60da      	str	r2, [r3, #12]
  htim6.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8002c10:	4b13      	ldr	r3, [pc, #76]	; (8002c60 <_ZL12MX_TIM6_Initv+0x7c>)
 8002c12:	2200      	movs	r2, #0
 8002c14:	615a      	str	r2, [r3, #20]
  if (HAL_TIM_Base_Init(&htim6) != HAL_OK)
 8002c16:	4b12      	ldr	r3, [pc, #72]	; (8002c60 <_ZL12MX_TIM6_Initv+0x7c>)
 8002c18:	0018      	movs	r0, r3
 8002c1a:	f001 fd83 	bl	8004724 <HAL_TIM_Base_Init>
 8002c1e:	0003      	movs	r3, r0
 8002c20:	1e5a      	subs	r2, r3, #1
 8002c22:	4193      	sbcs	r3, r2
 8002c24:	b2db      	uxtb	r3, r3
 8002c26:	2b00      	cmp	r3, #0
 8002c28:	d001      	beq.n	8002c2e <_ZL12MX_TIM6_Initv+0x4a>
  {
    Error_Handler();
 8002c2a:	f000 f911 	bl	8002e50 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8002c2e:	003b      	movs	r3, r7
 8002c30:	2200      	movs	r2, #0
 8002c32:	601a      	str	r2, [r3, #0]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8002c34:	003b      	movs	r3, r7
 8002c36:	2200      	movs	r2, #0
 8002c38:	605a      	str	r2, [r3, #4]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim6, &sMasterConfig) != HAL_OK)
 8002c3a:	003a      	movs	r2, r7
 8002c3c:	4b08      	ldr	r3, [pc, #32]	; (8002c60 <_ZL12MX_TIM6_Initv+0x7c>)
 8002c3e:	0011      	movs	r1, r2
 8002c40:	0018      	movs	r0, r3
 8002c42:	f001 ff09 	bl	8004a58 <HAL_TIMEx_MasterConfigSynchronization>
 8002c46:	0003      	movs	r3, r0
 8002c48:	1e5a      	subs	r2, r3, #1
 8002c4a:	4193      	sbcs	r3, r2
 8002c4c:	b2db      	uxtb	r3, r3
 8002c4e:	2b00      	cmp	r3, #0
 8002c50:	d001      	beq.n	8002c56 <_ZL12MX_TIM6_Initv+0x72>
  {
    Error_Handler();
 8002c52:	f000 f8fd 	bl	8002e50 <Error_Handler>
  }
  /* USER CODE BEGIN TIM6_Init 2 */

  /* USER CODE END TIM6_Init 2 */

}
 8002c56:	46c0      	nop			; (mov r8, r8)
 8002c58:	46bd      	mov	sp, r7
 8002c5a:	b002      	add	sp, #8
 8002c5c:	bd80      	pop	{r7, pc}
 8002c5e:	46c0      	nop			; (mov r8, r8)
 8002c60:	200001f8 	.word	0x200001f8
 8002c64:	40001000 	.word	0x40001000
 8002c68:	0000ffff 	.word	0x0000ffff

08002c6c <_ZL19MX_USART2_UART_Initv>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8002c6c:	b580      	push	{r7, lr}
 8002c6e:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8002c70:	4b16      	ldr	r3, [pc, #88]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c72:	4a17      	ldr	r2, [pc, #92]	; (8002cd0 <_ZL19MX_USART2_UART_Initv+0x64>)
 8002c74:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8002c76:	4b15      	ldr	r3, [pc, #84]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c78:	22e1      	movs	r2, #225	; 0xe1
 8002c7a:	0252      	lsls	r2, r2, #9
 8002c7c:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8002c7e:	4b13      	ldr	r3, [pc, #76]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c80:	2200      	movs	r2, #0
 8002c82:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8002c84:	4b11      	ldr	r3, [pc, #68]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c86:	2200      	movs	r2, #0
 8002c88:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8002c8a:	4b10      	ldr	r3, [pc, #64]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c8c:	2200      	movs	r2, #0
 8002c8e:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8002c90:	4b0e      	ldr	r3, [pc, #56]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c92:	220c      	movs	r2, #12
 8002c94:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8002c96:	4b0d      	ldr	r3, [pc, #52]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c98:	2200      	movs	r2, #0
 8002c9a:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8002c9c:	4b0b      	ldr	r3, [pc, #44]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002c9e:	2200      	movs	r2, #0
 8002ca0:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8002ca2:	4b0a      	ldr	r3, [pc, #40]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002ca4:	2200      	movs	r2, #0
 8002ca6:	621a      	str	r2, [r3, #32]
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8002ca8:	4b08      	ldr	r3, [pc, #32]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002caa:	2200      	movs	r2, #0
 8002cac:	625a      	str	r2, [r3, #36]	; 0x24
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8002cae:	4b07      	ldr	r3, [pc, #28]	; (8002ccc <_ZL19MX_USART2_UART_Initv+0x60>)
 8002cb0:	0018      	movs	r0, r3
 8002cb2:	f001 ff15 	bl	8004ae0 <HAL_UART_Init>
 8002cb6:	0003      	movs	r3, r0
 8002cb8:	1e5a      	subs	r2, r3, #1
 8002cba:	4193      	sbcs	r3, r2
 8002cbc:	b2db      	uxtb	r3, r3
 8002cbe:	2b00      	cmp	r3, #0
 8002cc0:	d001      	beq.n	8002cc6 <_ZL19MX_USART2_UART_Initv+0x5a>
  {
    Error_Handler();
 8002cc2:	f000 f8c5 	bl	8002e50 <Error_Handler>
  }
}
 8002cc6:	46c0      	nop			; (mov r8, r8)
 8002cc8:	46bd      	mov	sp, r7
 8002cca:	bd80      	pop	{r7, pc}
 8002ccc:	20000234 	.word	0x20000234
 8002cd0:	40004400 	.word	0x40004400

08002cd4 <_ZL12MX_GPIO_Initv>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 8002cd4:	b590      	push	{r4, r7, lr}
 8002cd6:	b089      	sub	sp, #36	; 0x24
 8002cd8:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002cda:	240c      	movs	r4, #12
 8002cdc:	193b      	adds	r3, r7, r4
 8002cde:	0018      	movs	r0, r3
 8002ce0:	2314      	movs	r3, #20
 8002ce2:	001a      	movs	r2, r3
 8002ce4:	2100      	movs	r1, #0
 8002ce6:	f003 fcdf 	bl	80066a8 <memset>

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8002cea:	4b55      	ldr	r3, [pc, #340]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002cec:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002cee:	4b54      	ldr	r3, [pc, #336]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002cf0:	2104      	movs	r1, #4
 8002cf2:	430a      	orrs	r2, r1
 8002cf4:	62da      	str	r2, [r3, #44]	; 0x2c
 8002cf6:	4b52      	ldr	r3, [pc, #328]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002cf8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002cfa:	2204      	movs	r2, #4
 8002cfc:	4013      	ands	r3, r2
 8002cfe:	60bb      	str	r3, [r7, #8]
 8002d00:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8002d02:	4b4f      	ldr	r3, [pc, #316]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002d04:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d06:	4b4e      	ldr	r3, [pc, #312]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002d08:	2101      	movs	r1, #1
 8002d0a:	430a      	orrs	r2, r1
 8002d0c:	62da      	str	r2, [r3, #44]	; 0x2c
 8002d0e:	4b4c      	ldr	r3, [pc, #304]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002d10:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d12:	2201      	movs	r2, #1
 8002d14:	4013      	ands	r3, r2
 8002d16:	607b      	str	r3, [r7, #4]
 8002d18:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 8002d1a:	4b49      	ldr	r3, [pc, #292]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002d1c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8002d1e:	4b48      	ldr	r3, [pc, #288]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002d20:	2102      	movs	r1, #2
 8002d22:	430a      	orrs	r2, r1
 8002d24:	62da      	str	r2, [r3, #44]	; 0x2c
 8002d26:	4b46      	ldr	r3, [pc, #280]	; (8002e40 <_ZL12MX_GPIO_Initv+0x16c>)
 8002d28:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8002d2a:	2202      	movs	r2, #2
 8002d2c:	4013      	ands	r3, r2
 8002d2e:	603b      	str	r3, [r7, #0]
 8002d30:	683b      	ldr	r3, [r7, #0]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 8002d32:	23c8      	movs	r3, #200	; 0xc8
 8002d34:	0099      	lsls	r1, r3, #2
 8002d36:	23a0      	movs	r3, #160	; 0xa0
 8002d38:	05db      	lsls	r3, r3, #23
 8002d3a:	2200      	movs	r2, #0
 8002d3c:	0018      	movs	r0, r3
 8002d3e:	f000 fd74 	bl	800382a <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10|GPIO_PIN_6, GPIO_PIN_RESET);
 8002d42:	2388      	movs	r3, #136	; 0x88
 8002d44:	00db      	lsls	r3, r3, #3
 8002d46:	483f      	ldr	r0, [pc, #252]	; (8002e44 <_ZL12MX_GPIO_Initv+0x170>)
 8002d48:	2200      	movs	r2, #0
 8002d4a:	0019      	movs	r1, r3
 8002d4c:	f000 fd6d 	bl	800382a <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 8002d50:	4b3d      	ldr	r3, [pc, #244]	; (8002e48 <_ZL12MX_GPIO_Initv+0x174>)
 8002d52:	2200      	movs	r2, #0
 8002d54:	2180      	movs	r1, #128	; 0x80
 8002d56:	0018      	movs	r0, r3
 8002d58:	f000 fd67 	bl	800382a <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PC13 */
  GPIO_InitStruct.Pin = GPIO_PIN_13;
 8002d5c:	193b      	adds	r3, r7, r4
 8002d5e:	2280      	movs	r2, #128	; 0x80
 8002d60:	0192      	lsls	r2, r2, #6
 8002d62:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002d64:	193b      	adds	r3, r7, r4
 8002d66:	4a39      	ldr	r2, [pc, #228]	; (8002e4c <_ZL12MX_GPIO_Initv+0x178>)
 8002d68:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d6a:	193b      	adds	r3, r7, r4
 8002d6c:	2200      	movs	r2, #0
 8002d6e:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002d70:	193b      	adds	r3, r7, r4
 8002d72:	4a35      	ldr	r2, [pc, #212]	; (8002e48 <_ZL12MX_GPIO_Initv+0x174>)
 8002d74:	0019      	movs	r1, r3
 8002d76:	0010      	movs	r0, r2
 8002d78:	f000 fbbc 	bl	80034f4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA5 PA8 PA9 */
  GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_8|GPIO_PIN_9;
 8002d7c:	0021      	movs	r1, r4
 8002d7e:	187b      	adds	r3, r7, r1
 8002d80:	22c8      	movs	r2, #200	; 0xc8
 8002d82:	0092      	lsls	r2, r2, #2
 8002d84:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002d86:	187b      	adds	r3, r7, r1
 8002d88:	2201      	movs	r2, #1
 8002d8a:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002d8c:	187b      	adds	r3, r7, r1
 8002d8e:	2200      	movs	r2, #0
 8002d90:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002d92:	187b      	adds	r3, r7, r1
 8002d94:	2200      	movs	r2, #0
 8002d96:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002d98:	000c      	movs	r4, r1
 8002d9a:	187a      	adds	r2, r7, r1
 8002d9c:	23a0      	movs	r3, #160	; 0xa0
 8002d9e:	05db      	lsls	r3, r3, #23
 8002da0:	0011      	movs	r1, r2
 8002da2:	0018      	movs	r0, r3
 8002da4:	f000 fba6 	bl	80034f4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB10 PB6 */
  GPIO_InitStruct.Pin = GPIO_PIN_10|GPIO_PIN_6;
 8002da8:	0021      	movs	r1, r4
 8002daa:	187b      	adds	r3, r7, r1
 8002dac:	2288      	movs	r2, #136	; 0x88
 8002dae:	00d2      	lsls	r2, r2, #3
 8002db0:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002db2:	000c      	movs	r4, r1
 8002db4:	193b      	adds	r3, r7, r4
 8002db6:	2201      	movs	r2, #1
 8002db8:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002dba:	193b      	adds	r3, r7, r4
 8002dbc:	2200      	movs	r2, #0
 8002dbe:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002dc0:	193b      	adds	r3, r7, r4
 8002dc2:	2200      	movs	r2, #0
 8002dc4:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002dc6:	193b      	adds	r3, r7, r4
 8002dc8:	4a1e      	ldr	r2, [pc, #120]	; (8002e44 <_ZL12MX_GPIO_Initv+0x170>)
 8002dca:	0019      	movs	r1, r3
 8002dcc:	0010      	movs	r0, r2
 8002dce:	f000 fb91 	bl	80034f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8002dd2:	193b      	adds	r3, r7, r4
 8002dd4:	2280      	movs	r2, #128	; 0x80
 8002dd6:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8002dd8:	193b      	adds	r3, r7, r4
 8002dda:	2201      	movs	r2, #1
 8002ddc:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002dde:	193b      	adds	r3, r7, r4
 8002de0:	2200      	movs	r2, #0
 8002de2:	609a      	str	r2, [r3, #8]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8002de4:	193b      	adds	r3, r7, r4
 8002de6:	2200      	movs	r2, #0
 8002de8:	60da      	str	r2, [r3, #12]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 8002dea:	193b      	adds	r3, r7, r4
 8002dec:	4a16      	ldr	r2, [pc, #88]	; (8002e48 <_ZL12MX_GPIO_Initv+0x174>)
 8002dee:	0019      	movs	r1, r3
 8002df0:	0010      	movs	r0, r2
 8002df2:	f000 fb7f 	bl	80034f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 8002df6:	193b      	adds	r3, r7, r4
 8002df8:	2280      	movs	r2, #128	; 0x80
 8002dfa:	00d2      	lsls	r2, r2, #3
 8002dfc:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002dfe:	193b      	adds	r3, r7, r4
 8002e00:	4a12      	ldr	r2, [pc, #72]	; (8002e4c <_ZL12MX_GPIO_Initv+0x178>)
 8002e02:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e04:	193b      	adds	r3, r7, r4
 8002e06:	2200      	movs	r2, #0
 8002e08:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8002e0a:	193a      	adds	r2, r7, r4
 8002e0c:	23a0      	movs	r3, #160	; 0xa0
 8002e0e:	05db      	lsls	r3, r3, #23
 8002e10:	0011      	movs	r1, r2
 8002e12:	0018      	movs	r0, r3
 8002e14:	f000 fb6e 	bl	80034f4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB3 PB4 PB5 */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 8002e18:	193b      	adds	r3, r7, r4
 8002e1a:	2238      	movs	r2, #56	; 0x38
 8002e1c:	601a      	str	r2, [r3, #0]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 8002e1e:	193b      	adds	r3, r7, r4
 8002e20:	4a0a      	ldr	r2, [pc, #40]	; (8002e4c <_ZL12MX_GPIO_Initv+0x178>)
 8002e22:	605a      	str	r2, [r3, #4]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8002e24:	193b      	adds	r3, r7, r4
 8002e26:	2200      	movs	r2, #0
 8002e28:	609a      	str	r2, [r3, #8]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8002e2a:	193b      	adds	r3, r7, r4
 8002e2c:	4a05      	ldr	r2, [pc, #20]	; (8002e44 <_ZL12MX_GPIO_Initv+0x170>)
 8002e2e:	0019      	movs	r1, r3
 8002e30:	0010      	movs	r0, r2
 8002e32:	f000 fb5f 	bl	80034f4 <HAL_GPIO_Init>

}
 8002e36:	46c0      	nop			; (mov r8, r8)
 8002e38:	46bd      	mov	sp, r7
 8002e3a:	b009      	add	sp, #36	; 0x24
 8002e3c:	bd90      	pop	{r4, r7, pc}
 8002e3e:	46c0      	nop			; (mov r8, r8)
 8002e40:	40021000 	.word	0x40021000
 8002e44:	50000400 	.word	0x50000400
 8002e48:	50000800 	.word	0x50000800
 8002e4c:	10210000 	.word	0x10210000

08002e50 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 8002e50:	b580      	push	{r7, lr}
 8002e52:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 8002e54:	46c0      	nop			; (mov r8, r8)
 8002e56:	46bd      	mov	sp, r7
 8002e58:	bd80      	pop	{r7, pc}

08002e5a <_ZSt3powIiiEN9__gnu_cxx11__promote_2IT_T0_NS0_9__promoteIS2_XsrSt12__is_integerIS2_E7__valueEE6__typeENS4_IS3_XsrS5_IS3_E7__valueEE6__typeEE6__typeES2_S3_>:
#endif

  template<typename _Tp, typename _Up>
    inline _GLIBCXX_CONSTEXPR
    typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
    pow(_Tp __x, _Up __y)
 8002e5a:	b5b0      	push	{r4, r5, r7, lr}
 8002e5c:	b082      	sub	sp, #8
 8002e5e:	af00      	add	r7, sp, #0
 8002e60:	6078      	str	r0, [r7, #4]
 8002e62:	6039      	str	r1, [r7, #0]
    {
      typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
      return pow(__type(__x), __type(__y));
 8002e64:	6878      	ldr	r0, [r7, #4]
 8002e66:	f7ff f991 	bl	800218c <__aeabi_i2d>
 8002e6a:	0004      	movs	r4, r0
 8002e6c:	000d      	movs	r5, r1
 8002e6e:	6838      	ldr	r0, [r7, #0]
 8002e70:	f7ff f98c 	bl	800218c <__aeabi_i2d>
 8002e74:	0002      	movs	r2, r0
 8002e76:	000b      	movs	r3, r1
 8002e78:	0020      	movs	r0, r4
 8002e7a:	0029      	movs	r1, r5
 8002e7c:	f002 fba4 	bl	80055c8 <pow>
 8002e80:	0003      	movs	r3, r0
 8002e82:	000c      	movs	r4, r1
    }
 8002e84:	0018      	movs	r0, r3
 8002e86:	0021      	movs	r1, r4
 8002e88:	46bd      	mov	sp, r7
 8002e8a:	b002      	add	sp, #8
 8002e8c:	bdb0      	pop	{r4, r5, r7, pc}
	...

08002e90 <_Z41__static_initialization_and_destruction_0ii>:
 8002e90:	b580      	push	{r7, lr}
 8002e92:	b082      	sub	sp, #8
 8002e94:	af00      	add	r7, sp, #0
 8002e96:	6078      	str	r0, [r7, #4]
 8002e98:	6039      	str	r1, [r7, #0]
 8002e9a:	687b      	ldr	r3, [r7, #4]
 8002e9c:	2b01      	cmp	r3, #1
 8002e9e:	d145      	bne.n	8002f2c <_Z41__static_initialization_and_destruction_0ii+0x9c>
 8002ea0:	683b      	ldr	r3, [r7, #0]
 8002ea2:	4a24      	ldr	r2, [pc, #144]	; (8002f34 <_Z41__static_initialization_and_destruction_0ii+0xa4>)
 8002ea4:	4293      	cmp	r3, r2
 8002ea6:	d141      	bne.n	8002f2c <_Z41__static_initialization_and_destruction_0ii+0x9c>
DigitalOut led0('A',5),led1('B',10),led2('A',8),led3('A',9),led4('C',7);
 8002ea8:	4b23      	ldr	r3, [pc, #140]	; (8002f38 <_Z41__static_initialization_and_destruction_0ii+0xa8>)
 8002eaa:	2205      	movs	r2, #5
 8002eac:	2141      	movs	r1, #65	; 0x41
 8002eae:	0018      	movs	r0, r3
 8002eb0:	f7ff fad8 	bl	8002464 <_ZN10DigitalOutC1Eci>
 8002eb4:	4b21      	ldr	r3, [pc, #132]	; (8002f3c <_Z41__static_initialization_and_destruction_0ii+0xac>)
 8002eb6:	220a      	movs	r2, #10
 8002eb8:	2142      	movs	r1, #66	; 0x42
 8002eba:	0018      	movs	r0, r3
 8002ebc:	f7ff fad2 	bl	8002464 <_ZN10DigitalOutC1Eci>
 8002ec0:	4b1f      	ldr	r3, [pc, #124]	; (8002f40 <_Z41__static_initialization_and_destruction_0ii+0xb0>)
 8002ec2:	2208      	movs	r2, #8
 8002ec4:	2141      	movs	r1, #65	; 0x41
 8002ec6:	0018      	movs	r0, r3
 8002ec8:	f7ff facc 	bl	8002464 <_ZN10DigitalOutC1Eci>
 8002ecc:	4b1d      	ldr	r3, [pc, #116]	; (8002f44 <_Z41__static_initialization_and_destruction_0ii+0xb4>)
 8002ece:	2209      	movs	r2, #9
 8002ed0:	2141      	movs	r1, #65	; 0x41
 8002ed2:	0018      	movs	r0, r3
 8002ed4:	f7ff fac6 	bl	8002464 <_ZN10DigitalOutC1Eci>
 8002ed8:	4b1b      	ldr	r3, [pc, #108]	; (8002f48 <_Z41__static_initialization_and_destruction_0ii+0xb8>)
 8002eda:	2207      	movs	r2, #7
 8002edc:	2143      	movs	r1, #67	; 0x43
 8002ede:	0018      	movs	r0, r3
 8002ee0:	f7ff fac0 	bl	8002464 <_ZN10DigitalOutC1Eci>
DigitalIn  sw0('C',13), sw1('A',10), sw2('B',3), sw3('B',5), sw4('B',4);
 8002ee4:	4b19      	ldr	r3, [pc, #100]	; (8002f4c <_Z41__static_initialization_and_destruction_0ii+0xbc>)
 8002ee6:	220d      	movs	r2, #13
 8002ee8:	2143      	movs	r1, #67	; 0x43
 8002eea:	0018      	movs	r0, r3
 8002eec:	f7ff fb0c 	bl	8002508 <_ZN9DigitalInC1Eci>
 8002ef0:	4b17      	ldr	r3, [pc, #92]	; (8002f50 <_Z41__static_initialization_and_destruction_0ii+0xc0>)
 8002ef2:	220a      	movs	r2, #10
 8002ef4:	2141      	movs	r1, #65	; 0x41
 8002ef6:	0018      	movs	r0, r3
 8002ef8:	f7ff fb06 	bl	8002508 <_ZN9DigitalInC1Eci>
 8002efc:	4b15      	ldr	r3, [pc, #84]	; (8002f54 <_Z41__static_initialization_and_destruction_0ii+0xc4>)
 8002efe:	2203      	movs	r2, #3
 8002f00:	2142      	movs	r1, #66	; 0x42
 8002f02:	0018      	movs	r0, r3
 8002f04:	f7ff fb00 	bl	8002508 <_ZN9DigitalInC1Eci>
 8002f08:	4b13      	ldr	r3, [pc, #76]	; (8002f58 <_Z41__static_initialization_and_destruction_0ii+0xc8>)
 8002f0a:	2205      	movs	r2, #5
 8002f0c:	2142      	movs	r1, #66	; 0x42
 8002f0e:	0018      	movs	r0, r3
 8002f10:	f7ff fafa 	bl	8002508 <_ZN9DigitalInC1Eci>
 8002f14:	4b11      	ldr	r3, [pc, #68]	; (8002f5c <_Z41__static_initialization_and_destruction_0ii+0xcc>)
 8002f16:	2204      	movs	r2, #4
 8002f18:	2142      	movs	r1, #66	; 0x42
 8002f1a:	0018      	movs	r0, r3
 8002f1c:	f7ff faf4 	bl	8002508 <_ZN9DigitalInC1Eci>
DigitalInOut dht11('B',6);
 8002f20:	4b0f      	ldr	r3, [pc, #60]	; (8002f60 <_Z41__static_initialization_and_destruction_0ii+0xd0>)
 8002f22:	2206      	movs	r2, #6
 8002f24:	2142      	movs	r1, #66	; 0x42
 8002f26:	0018      	movs	r0, r3
 8002f28:	f7ff fb30 	bl	800258c <_ZN12DigitalInOutC1Eci>
}
 8002f2c:	46c0      	nop			; (mov r8, r8)
 8002f2e:	46bd      	mov	sp, r7
 8002f30:	b002      	add	sp, #8
 8002f32:	bd80      	pop	{r7, pc}
 8002f34:	0000ffff 	.word	0x0000ffff
 8002f38:	200002b4 	.word	0x200002b4
 8002f3c:	200002bc 	.word	0x200002bc
 8002f40:	200002c4 	.word	0x200002c4
 8002f44:	200002cc 	.word	0x200002cc
 8002f48:	200002d4 	.word	0x200002d4
 8002f4c:	200002dc 	.word	0x200002dc
 8002f50:	200002e4 	.word	0x200002e4
 8002f54:	200002ec 	.word	0x200002ec
 8002f58:	200002f4 	.word	0x200002f4
 8002f5c:	200002fc 	.word	0x200002fc
 8002f60:	20000304 	.word	0x20000304

08002f64 <_GLOBAL__sub_I__Z17read_dht11_sensorPtS_>:
 8002f64:	b580      	push	{r7, lr}
 8002f66:	af00      	add	r7, sp, #0
 8002f68:	4b03      	ldr	r3, [pc, #12]	; (8002f78 <_GLOBAL__sub_I__Z17read_dht11_sensorPtS_+0x14>)
 8002f6a:	0019      	movs	r1, r3
 8002f6c:	2001      	movs	r0, #1
 8002f6e:	f7ff ff8f 	bl	8002e90 <_Z41__static_initialization_and_destruction_0ii>
 8002f72:	46bd      	mov	sp, r7
 8002f74:	bd80      	pop	{r7, pc}
 8002f76:	46c0      	nop			; (mov r8, r8)
 8002f78:	0000ffff 	.word	0x0000ffff

08002f7c <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 8002f7c:	b580      	push	{r7, lr}
 8002f7e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 8002f80:	4b07      	ldr	r3, [pc, #28]	; (8002fa0 <HAL_MspInit+0x24>)
 8002f82:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8002f84:	4b06      	ldr	r3, [pc, #24]	; (8002fa0 <HAL_MspInit+0x24>)
 8002f86:	2101      	movs	r1, #1
 8002f88:	430a      	orrs	r2, r1
 8002f8a:	635a      	str	r2, [r3, #52]	; 0x34
  __HAL_RCC_PWR_CLK_ENABLE();
 8002f8c:	4b04      	ldr	r3, [pc, #16]	; (8002fa0 <HAL_MspInit+0x24>)
 8002f8e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002f90:	4b03      	ldr	r3, [pc, #12]	; (8002fa0 <HAL_MspInit+0x24>)
 8002f92:	2180      	movs	r1, #128	; 0x80
 8002f94:	0549      	lsls	r1, r1, #21
 8002f96:	430a      	orrs	r2, r1
 8002f98:	639a      	str	r2, [r3, #56]	; 0x38
  /* System interrupt init*/

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8002f9a:	46c0      	nop			; (mov r8, r8)
 8002f9c:	46bd      	mov	sp, r7
 8002f9e:	bd80      	pop	{r7, pc}
 8002fa0:	40021000 	.word	0x40021000

08002fa4 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 8002fa4:	b580      	push	{r7, lr}
 8002fa6:	b082      	sub	sp, #8
 8002fa8:	af00      	add	r7, sp, #0
 8002faa:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM6)
 8002fac:	687b      	ldr	r3, [r7, #4]
 8002fae:	681b      	ldr	r3, [r3, #0]
 8002fb0:	4a0a      	ldr	r2, [pc, #40]	; (8002fdc <HAL_TIM_Base_MspInit+0x38>)
 8002fb2:	4293      	cmp	r3, r2
 8002fb4:	d10d      	bne.n	8002fd2 <HAL_TIM_Base_MspInit+0x2e>
  {
  /* USER CODE BEGIN TIM6_MspInit 0 */

  /* USER CODE END TIM6_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM6_CLK_ENABLE();
 8002fb6:	4b0a      	ldr	r3, [pc, #40]	; (8002fe0 <HAL_TIM_Base_MspInit+0x3c>)
 8002fb8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8002fba:	4b09      	ldr	r3, [pc, #36]	; (8002fe0 <HAL_TIM_Base_MspInit+0x3c>)
 8002fbc:	2110      	movs	r1, #16
 8002fbe:	430a      	orrs	r2, r1
 8002fc0:	639a      	str	r2, [r3, #56]	; 0x38
    /* TIM6 interrupt Init */
    HAL_NVIC_SetPriority(TIM6_DAC_IRQn, 0, 0);
 8002fc2:	2200      	movs	r2, #0
 8002fc4:	2100      	movs	r1, #0
 8002fc6:	2011      	movs	r0, #17
 8002fc8:	f000 fa62 	bl	8003490 <HAL_NVIC_SetPriority>
    HAL_NVIC_EnableIRQ(TIM6_DAC_IRQn);
 8002fcc:	2011      	movs	r0, #17
 8002fce:	f000 fa74 	bl	80034ba <HAL_NVIC_EnableIRQ>
  /* USER CODE BEGIN TIM6_MspInit 1 */

  /* USER CODE END TIM6_MspInit 1 */
  }

}
 8002fd2:	46c0      	nop			; (mov r8, r8)
 8002fd4:	46bd      	mov	sp, r7
 8002fd6:	b002      	add	sp, #8
 8002fd8:	bd80      	pop	{r7, pc}
 8002fda:	46c0      	nop			; (mov r8, r8)
 8002fdc:	40001000 	.word	0x40001000
 8002fe0:	40021000 	.word	0x40021000

08002fe4 <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 8002fe4:	b580      	push	{r7, lr}
 8002fe6:	b088      	sub	sp, #32
 8002fe8:	af00      	add	r7, sp, #0
 8002fea:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8002fec:	230c      	movs	r3, #12
 8002fee:	18fb      	adds	r3, r7, r3
 8002ff0:	0018      	movs	r0, r3
 8002ff2:	2314      	movs	r3, #20
 8002ff4:	001a      	movs	r2, r3
 8002ff6:	2100      	movs	r1, #0
 8002ff8:	f003 fb56 	bl	80066a8 <memset>
  if(huart->Instance==USART2)
 8002ffc:	687b      	ldr	r3, [r7, #4]
 8002ffe:	681b      	ldr	r3, [r3, #0]
 8003000:	4a18      	ldr	r2, [pc, #96]	; (8003064 <HAL_UART_MspInit+0x80>)
 8003002:	4293      	cmp	r3, r2
 8003004:	d129      	bne.n	800305a <HAL_UART_MspInit+0x76>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 8003006:	4b18      	ldr	r3, [pc, #96]	; (8003068 <HAL_UART_MspInit+0x84>)
 8003008:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800300a:	4b17      	ldr	r3, [pc, #92]	; (8003068 <HAL_UART_MspInit+0x84>)
 800300c:	2180      	movs	r1, #128	; 0x80
 800300e:	0289      	lsls	r1, r1, #10
 8003010:	430a      	orrs	r2, r1
 8003012:	639a      	str	r2, [r3, #56]	; 0x38

    __HAL_RCC_GPIOA_CLK_ENABLE();
 8003014:	4b14      	ldr	r3, [pc, #80]	; (8003068 <HAL_UART_MspInit+0x84>)
 8003016:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003018:	4b13      	ldr	r3, [pc, #76]	; (8003068 <HAL_UART_MspInit+0x84>)
 800301a:	2101      	movs	r1, #1
 800301c:	430a      	orrs	r2, r1
 800301e:	62da      	str	r2, [r3, #44]	; 0x2c
 8003020:	4b11      	ldr	r3, [pc, #68]	; (8003068 <HAL_UART_MspInit+0x84>)
 8003022:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8003024:	2201      	movs	r2, #1
 8003026:	4013      	ands	r3, r2
 8003028:	60bb      	str	r3, [r7, #8]
 800302a:	68bb      	ldr	r3, [r7, #8]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = GPIO_PIN_2|GPIO_PIN_3;
 800302c:	210c      	movs	r1, #12
 800302e:	187b      	adds	r3, r7, r1
 8003030:	220c      	movs	r2, #12
 8003032:	601a      	str	r2, [r3, #0]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8003034:	187b      	adds	r3, r7, r1
 8003036:	2202      	movs	r2, #2
 8003038:	605a      	str	r2, [r3, #4]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800303a:	187b      	adds	r3, r7, r1
 800303c:	2200      	movs	r2, #0
 800303e:	609a      	str	r2, [r3, #8]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8003040:	187b      	adds	r3, r7, r1
 8003042:	2203      	movs	r2, #3
 8003044:	60da      	str	r2, [r3, #12]
    GPIO_InitStruct.Alternate = GPIO_AF4_USART2;
 8003046:	187b      	adds	r3, r7, r1
 8003048:	2204      	movs	r2, #4
 800304a:	611a      	str	r2, [r3, #16]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 800304c:	187a      	adds	r2, r7, r1
 800304e:	23a0      	movs	r3, #160	; 0xa0
 8003050:	05db      	lsls	r3, r3, #23
 8003052:	0011      	movs	r1, r2
 8003054:	0018      	movs	r0, r3
 8003056:	f000 fa4d 	bl	80034f4 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }

}
 800305a:	46c0      	nop			; (mov r8, r8)
 800305c:	46bd      	mov	sp, r7
 800305e:	b008      	add	sp, #32
 8003060:	bd80      	pop	{r7, pc}
 8003062:	46c0      	nop			; (mov r8, r8)
 8003064:	40004400 	.word	0x40004400
 8003068:	40021000 	.word	0x40021000

0800306c <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable Interrupt.
  */
void NMI_Handler(void)
{
 800306c:	b580      	push	{r7, lr}
 800306e:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8003070:	46c0      	nop			; (mov r8, r8)
 8003072:	46bd      	mov	sp, r7
 8003074:	bd80      	pop	{r7, pc}

08003076 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8003076:	b580      	push	{r7, lr}
 8003078:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 800307a:	e7fe      	b.n	800307a <HardFault_Handler+0x4>

0800307c <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 800307c:	b580      	push	{r7, lr}
 800307e:	af00      	add	r7, sp, #0

  /* USER CODE END SVC_IRQn 0 */
  /* USER CODE BEGIN SVC_IRQn 1 */

  /* USER CODE END SVC_IRQn 1 */
}
 8003080:	46c0      	nop			; (mov r8, r8)
 8003082:	46bd      	mov	sp, r7
 8003084:	bd80      	pop	{r7, pc}

08003086 <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 8003086:	b580      	push	{r7, lr}
 8003088:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 800308a:	46c0      	nop			; (mov r8, r8)
 800308c:	46bd      	mov	sp, r7
 800308e:	bd80      	pop	{r7, pc}

08003090 <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 8003090:	b580      	push	{r7, lr}
 8003092:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 8003094:	f000 f916 	bl	80032c4 <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 8003098:	46c0      	nop			; (mov r8, r8)
 800309a:	46bd      	mov	sp, r7
 800309c:	bd80      	pop	{r7, pc}

0800309e <EXTI4_15_IRQHandler>:

/**
  * @brief This function handles EXTI line 4 to 15 interrupts.
  */
void EXTI4_15_IRQHandler(void)
{
 800309e:	b580      	push	{r7, lr}
 80030a0:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI4_15_IRQn 0 */

  /* USER CODE END EXTI4_15_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_4);
 80030a2:	2010      	movs	r0, #16
 80030a4:	f000 fbfa 	bl	800389c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_5);
 80030a8:	2020      	movs	r0, #32
 80030aa:	f000 fbf7 	bl	800389c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_10);
 80030ae:	2380      	movs	r3, #128	; 0x80
 80030b0:	00db      	lsls	r3, r3, #3
 80030b2:	0018      	movs	r0, r3
 80030b4:	f000 fbf2 	bl	800389c <HAL_GPIO_EXTI_IRQHandler>
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 80030b8:	2380      	movs	r3, #128	; 0x80
 80030ba:	019b      	lsls	r3, r3, #6
 80030bc:	0018      	movs	r0, r3
 80030be:	f000 fbed 	bl	800389c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI4_15_IRQn 1 */

  /* USER CODE END EXTI4_15_IRQn 1 */
}
 80030c2:	46c0      	nop			; (mov r8, r8)
 80030c4:	46bd      	mov	sp, r7
 80030c6:	bd80      	pop	{r7, pc}

080030c8 <TIM6_DAC_IRQHandler>:

/**
  * @brief This function handles TIM6 global interrupt and DAC1/DAC2 underrun error interrupts.
  */
void TIM6_DAC_IRQHandler(void)
{
 80030c8:	b580      	push	{r7, lr}
 80030ca:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM6_DAC_IRQn 0 */

  /* USER CODE END TIM6_DAC_IRQn 0 */
  HAL_TIM_IRQHandler(&htim6);
 80030cc:	4b03      	ldr	r3, [pc, #12]	; (80030dc <TIM6_DAC_IRQHandler+0x14>)
 80030ce:	0018      	movs	r0, r3
 80030d0:	f001 fb54 	bl	800477c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM6_DAC_IRQn 1 */

  /* USER CODE END TIM6_DAC_IRQn 1 */
}
 80030d4:	46c0      	nop			; (mov r8, r8)
 80030d6:	46bd      	mov	sp, r7
 80030d8:	bd80      	pop	{r7, pc}
 80030da:	46c0      	nop			; (mov r8, r8)
 80030dc:	200001f8 	.word	0x200001f8

080030e0 <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 80030e0:	b580      	push	{r7, lr}
 80030e2:	b086      	sub	sp, #24
 80030e4:	af00      	add	r7, sp, #0
 80030e6:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 80030e8:	4a14      	ldr	r2, [pc, #80]	; (800313c <_sbrk+0x5c>)
 80030ea:	4b15      	ldr	r3, [pc, #84]	; (8003140 <_sbrk+0x60>)
 80030ec:	1ad3      	subs	r3, r2, r3
 80030ee:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 80030f0:	697b      	ldr	r3, [r7, #20]
 80030f2:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initalize heap end at first call */
  if (NULL == __sbrk_heap_end)
 80030f4:	4b13      	ldr	r3, [pc, #76]	; (8003144 <_sbrk+0x64>)
 80030f6:	681b      	ldr	r3, [r3, #0]
 80030f8:	2b00      	cmp	r3, #0
 80030fa:	d102      	bne.n	8003102 <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 80030fc:	4b11      	ldr	r3, [pc, #68]	; (8003144 <_sbrk+0x64>)
 80030fe:	4a12      	ldr	r2, [pc, #72]	; (8003148 <_sbrk+0x68>)
 8003100:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 8003102:	4b10      	ldr	r3, [pc, #64]	; (8003144 <_sbrk+0x64>)
 8003104:	681a      	ldr	r2, [r3, #0]
 8003106:	687b      	ldr	r3, [r7, #4]
 8003108:	18d3      	adds	r3, r2, r3
 800310a:	693a      	ldr	r2, [r7, #16]
 800310c:	429a      	cmp	r2, r3
 800310e:	d207      	bcs.n	8003120 <_sbrk+0x40>
  {
    errno = ENOMEM;
 8003110:	f003 faa0 	bl	8006654 <__errno>
 8003114:	0003      	movs	r3, r0
 8003116:	220c      	movs	r2, #12
 8003118:	601a      	str	r2, [r3, #0]
    return (void *)-1;
 800311a:	2301      	movs	r3, #1
 800311c:	425b      	negs	r3, r3
 800311e:	e009      	b.n	8003134 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 8003120:	4b08      	ldr	r3, [pc, #32]	; (8003144 <_sbrk+0x64>)
 8003122:	681b      	ldr	r3, [r3, #0]
 8003124:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 8003126:	4b07      	ldr	r3, [pc, #28]	; (8003144 <_sbrk+0x64>)
 8003128:	681a      	ldr	r2, [r3, #0]
 800312a:	687b      	ldr	r3, [r7, #4]
 800312c:	18d2      	adds	r2, r2, r3
 800312e:	4b05      	ldr	r3, [pc, #20]	; (8003144 <_sbrk+0x64>)
 8003130:	601a      	str	r2, [r3, #0]

  return (void *)prev_heap_end;
 8003132:	68fb      	ldr	r3, [r7, #12]
}
 8003134:	0018      	movs	r0, r3
 8003136:	46bd      	mov	sp, r7
 8003138:	b006      	add	sp, #24
 800313a:	bd80      	pop	{r7, pc}
 800313c:	20005000 	.word	0x20005000
 8003140:	00000400 	.word	0x00000400
 8003144:	2000030c 	.word	0x2000030c
 8003148:	20000320 	.word	0x20000320

0800314c <SystemInit>:
  * @brief  Setup the microcontroller system.
  * @param  None
  * @retval None
  */
void SystemInit (void)
{
 800314c:	b580      	push	{r7, lr}
 800314e:	af00      	add	r7, sp, #0
/*!< Set MSION bit */
  RCC->CR |= (uint32_t)0x00000100U;
 8003150:	4b17      	ldr	r3, [pc, #92]	; (80031b0 <SystemInit+0x64>)
 8003152:	681a      	ldr	r2, [r3, #0]
 8003154:	4b16      	ldr	r3, [pc, #88]	; (80031b0 <SystemInit+0x64>)
 8003156:	2180      	movs	r1, #128	; 0x80
 8003158:	0049      	lsls	r1, r1, #1
 800315a:	430a      	orrs	r2, r1
 800315c:	601a      	str	r2, [r3, #0]

  /*!< Reset SW[1:0], HPRE[3:0], PPRE1[2:0], PPRE2[2:0], MCOSEL[2:0] and MCOPRE[2:0] bits */
  RCC->CFGR &= (uint32_t) 0x88FF400CU;
 800315e:	4b14      	ldr	r3, [pc, #80]	; (80031b0 <SystemInit+0x64>)
 8003160:	68da      	ldr	r2, [r3, #12]
 8003162:	4b13      	ldr	r3, [pc, #76]	; (80031b0 <SystemInit+0x64>)
 8003164:	4913      	ldr	r1, [pc, #76]	; (80031b4 <SystemInit+0x68>)
 8003166:	400a      	ands	r2, r1
 8003168:	60da      	str	r2, [r3, #12]

  /*!< Reset HSION, HSIDIVEN, HSEON, CSSON and PLLON bits */
  RCC->CR &= (uint32_t)0xFEF6FFF6U;
 800316a:	4b11      	ldr	r3, [pc, #68]	; (80031b0 <SystemInit+0x64>)
 800316c:	681a      	ldr	r2, [r3, #0]
 800316e:	4b10      	ldr	r3, [pc, #64]	; (80031b0 <SystemInit+0x64>)
 8003170:	4911      	ldr	r1, [pc, #68]	; (80031b8 <SystemInit+0x6c>)
 8003172:	400a      	ands	r2, r1
 8003174:	601a      	str	r2, [r3, #0]

  /*!< Reset HSI48ON  bit */
  RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 8003176:	4b0e      	ldr	r3, [pc, #56]	; (80031b0 <SystemInit+0x64>)
 8003178:	689a      	ldr	r2, [r3, #8]
 800317a:	4b0d      	ldr	r3, [pc, #52]	; (80031b0 <SystemInit+0x64>)
 800317c:	2101      	movs	r1, #1
 800317e:	438a      	bics	r2, r1
 8003180:	609a      	str	r2, [r3, #8]

  /*!< Reset HSEBYP bit */
  RCC->CR &= (uint32_t)0xFFFBFFFFU;
 8003182:	4b0b      	ldr	r3, [pc, #44]	; (80031b0 <SystemInit+0x64>)
 8003184:	681a      	ldr	r2, [r3, #0]
 8003186:	4b0a      	ldr	r3, [pc, #40]	; (80031b0 <SystemInit+0x64>)
 8003188:	490c      	ldr	r1, [pc, #48]	; (80031bc <SystemInit+0x70>)
 800318a:	400a      	ands	r2, r1
 800318c:	601a      	str	r2, [r3, #0]

  /*!< Reset PLLSRC, PLLMUL[3:0] and PLLDIV[1:0] bits */
  RCC->CFGR &= (uint32_t)0xFF02FFFFU;
 800318e:	4b08      	ldr	r3, [pc, #32]	; (80031b0 <SystemInit+0x64>)
 8003190:	68da      	ldr	r2, [r3, #12]
 8003192:	4b07      	ldr	r3, [pc, #28]	; (80031b0 <SystemInit+0x64>)
 8003194:	490a      	ldr	r1, [pc, #40]	; (80031c0 <SystemInit+0x74>)
 8003196:	400a      	ands	r2, r1
 8003198:	60da      	str	r2, [r3, #12]

  /*!< Disable all interrupts */
  RCC->CIER = 0x00000000U;
 800319a:	4b05      	ldr	r3, [pc, #20]	; (80031b0 <SystemInit+0x64>)
 800319c:	2200      	movs	r2, #0
 800319e:	611a      	str	r2, [r3, #16]

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 80031a0:	4b08      	ldr	r3, [pc, #32]	; (80031c4 <SystemInit+0x78>)
 80031a2:	2280      	movs	r2, #128	; 0x80
 80031a4:	0512      	lsls	r2, r2, #20
 80031a6:	609a      	str	r2, [r3, #8]
#endif
}
 80031a8:	46c0      	nop			; (mov r8, r8)
 80031aa:	46bd      	mov	sp, r7
 80031ac:	bd80      	pop	{r7, pc}
 80031ae:	46c0      	nop			; (mov r8, r8)
 80031b0:	40021000 	.word	0x40021000
 80031b4:	88ff400c 	.word	0x88ff400c
 80031b8:	fef6fff6 	.word	0xfef6fff6
 80031bc:	fffbffff 	.word	0xfffbffff
 80031c0:	ff02ffff 	.word	0xff02ffff
 80031c4:	e000ed00 	.word	0xe000ed00

080031c8 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
   ldr   r0, =_estack
 80031c8:	480d      	ldr	r0, [pc, #52]	; (8003200 <LoopForever+0x2>)
   mov   sp, r0          /* set stack pointer */
 80031ca:	4685      	mov	sp, r0

/* Copy the data segment initializers from flash to SRAM */
  movs  r1, #0
 80031cc:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 80031ce:	e003      	b.n	80031d8 <LoopCopyDataInit>

080031d0 <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 80031d0:	4b0c      	ldr	r3, [pc, #48]	; (8003204 <LoopForever+0x6>)
  ldr  r3, [r3, r1]
 80031d2:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 80031d4:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 80031d6:	3104      	adds	r1, #4

080031d8 <LoopCopyDataInit>:

LoopCopyDataInit:
  ldr  r0, =_sdata
 80031d8:	480b      	ldr	r0, [pc, #44]	; (8003208 <LoopForever+0xa>)
  ldr  r3, =_edata
 80031da:	4b0c      	ldr	r3, [pc, #48]	; (800320c <LoopForever+0xe>)
  adds  r2, r0, r1
 80031dc:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 80031de:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 80031e0:	d3f6      	bcc.n	80031d0 <CopyDataInit>
  ldr  r2, =_sbss
 80031e2:	4a0b      	ldr	r2, [pc, #44]	; (8003210 <LoopForever+0x12>)
  b  LoopFillZerobss
 80031e4:	e002      	b.n	80031ec <LoopFillZerobss>

080031e6 <FillZerobss>:
/* Zero fill the bss segment. */
FillZerobss:
  movs  r3, #0
 80031e6:	2300      	movs	r3, #0
  str  r3, [r2]
 80031e8:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80031ea:	3204      	adds	r2, #4

080031ec <LoopFillZerobss>:


LoopFillZerobss:
  ldr  r3, = _ebss
 80031ec:	4b09      	ldr	r3, [pc, #36]	; (8003214 <LoopForever+0x16>)
  cmp  r2, r3
 80031ee:	429a      	cmp	r2, r3
  bcc  FillZerobss
 80031f0:	d3f9      	bcc.n	80031e6 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit
 80031f2:	f7ff ffab 	bl	800314c <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 80031f6:	f003 fa33 	bl	8006660 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 80031fa:	f7ff fbb5 	bl	8002968 <main>

080031fe <LoopForever>:

LoopForever:
    b LoopForever
 80031fe:	e7fe      	b.n	80031fe <LoopForever>
   ldr   r0, =_estack
 8003200:	20005000 	.word	0x20005000
  ldr  r3, =_sidata
 8003204:	0800a67c 	.word	0x0800a67c
  ldr  r0, =_sdata
 8003208:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 800320c:	200001dc 	.word	0x200001dc
  ldr  r2, =_sbss
 8003210:	200001dc 	.word	0x200001dc
  ldr  r3, = _ebss
 8003214:	20000320 	.word	0x20000320

08003218 <ADC1_COMP_IRQHandler>:
 * @retval : None
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 8003218:	e7fe      	b.n	8003218 <ADC1_COMP_IRQHandler>
	...

0800321c <HAL_Init>:
  *        In the default implementation,Systick is used as source of time base.
  *        the tick variable is incremented each 1ms in its ISR.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 800321c:	b580      	push	{r7, lr}
 800321e:	b082      	sub	sp, #8
 8003220:	af00      	add	r7, sp, #0
  HAL_StatusTypeDef  status = HAL_OK;
 8003222:	1dfb      	adds	r3, r7, #7
 8003224:	2200      	movs	r2, #0
 8003226:	701a      	strb	r2, [r3, #0]
#if (BUFFER_CACHE_DISABLE != 0)
  __HAL_FLASH_BUFFER_CACHE_DISABLE();
#endif /* BUFFER_CACHE_DISABLE */

#if (PREREAD_ENABLE != 0)
  __HAL_FLASH_PREREAD_BUFFER_ENABLE();
 8003228:	4b0b      	ldr	r3, [pc, #44]	; (8003258 <HAL_Init+0x3c>)
 800322a:	681a      	ldr	r2, [r3, #0]
 800322c:	4b0a      	ldr	r3, [pc, #40]	; (8003258 <HAL_Init+0x3c>)
 800322e:	2140      	movs	r1, #64	; 0x40
 8003230:	430a      	orrs	r2, r1
 8003232:	601a      	str	r2, [r3, #0]
#if (PREFETCH_ENABLE != 0)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
#endif /* PREFETCH_ENABLE */

  /* Use SysTick as time base source and configure 1ms tick (default clock after Reset is MSI) */
  if (HAL_InitTick(TICK_INT_PRIORITY) != HAL_OK)
 8003234:	2000      	movs	r0, #0
 8003236:	f000 f811 	bl	800325c <HAL_InitTick>
 800323a:	1e03      	subs	r3, r0, #0
 800323c:	d003      	beq.n	8003246 <HAL_Init+0x2a>
  {
    status = HAL_ERROR;
 800323e:	1dfb      	adds	r3, r7, #7
 8003240:	2201      	movs	r2, #1
 8003242:	701a      	strb	r2, [r3, #0]
 8003244:	e001      	b.n	800324a <HAL_Init+0x2e>
  }
  else
  {
    /* Init the low level hardware */
    HAL_MspInit();
 8003246:	f7ff fe99 	bl	8002f7c <HAL_MspInit>
  }

  /* Return function status */
  return status;
 800324a:	1dfb      	adds	r3, r7, #7
 800324c:	781b      	ldrb	r3, [r3, #0]
}
 800324e:	0018      	movs	r0, r3
 8003250:	46bd      	mov	sp, r7
 8003252:	b002      	add	sp, #8
 8003254:	bd80      	pop	{r7, pc}
 8003256:	46c0      	nop			; (mov r8, r8)
 8003258:	40022000 	.word	0x40022000

0800325c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 800325c:	b590      	push	{r4, r7, lr}
 800325e:	b083      	sub	sp, #12
 8003260:	af00      	add	r7, sp, #0
 8003262:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 8003264:	4b14      	ldr	r3, [pc, #80]	; (80032b8 <HAL_InitTick+0x5c>)
 8003266:	681c      	ldr	r4, [r3, #0]
 8003268:	4b14      	ldr	r3, [pc, #80]	; (80032bc <HAL_InitTick+0x60>)
 800326a:	781b      	ldrb	r3, [r3, #0]
 800326c:	0019      	movs	r1, r3
 800326e:	23fa      	movs	r3, #250	; 0xfa
 8003270:	0098      	lsls	r0, r3, #2
 8003272:	f7fc ff5b 	bl	800012c <__udivsi3>
 8003276:	0003      	movs	r3, r0
 8003278:	0019      	movs	r1, r3
 800327a:	0020      	movs	r0, r4
 800327c:	f7fc ff56 	bl	800012c <__udivsi3>
 8003280:	0003      	movs	r3, r0
 8003282:	0018      	movs	r0, r3
 8003284:	f000 f929 	bl	80034da <HAL_SYSTICK_Config>
 8003288:	1e03      	subs	r3, r0, #0
 800328a:	d001      	beq.n	8003290 <HAL_InitTick+0x34>
  {
    return HAL_ERROR;
 800328c:	2301      	movs	r3, #1
 800328e:	e00f      	b.n	80032b0 <HAL_InitTick+0x54>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 8003290:	687b      	ldr	r3, [r7, #4]
 8003292:	2b03      	cmp	r3, #3
 8003294:	d80b      	bhi.n	80032ae <HAL_InitTick+0x52>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 8003296:	6879      	ldr	r1, [r7, #4]
 8003298:	2301      	movs	r3, #1
 800329a:	425b      	negs	r3, r3
 800329c:	2200      	movs	r2, #0
 800329e:	0018      	movs	r0, r3
 80032a0:	f000 f8f6 	bl	8003490 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 80032a4:	4b06      	ldr	r3, [pc, #24]	; (80032c0 <HAL_InitTick+0x64>)
 80032a6:	687a      	ldr	r2, [r7, #4]
 80032a8:	601a      	str	r2, [r3, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 80032aa:	2300      	movs	r3, #0
 80032ac:	e000      	b.n	80032b0 <HAL_InitTick+0x54>
    return HAL_ERROR;
 80032ae:	2301      	movs	r3, #1
}
 80032b0:	0018      	movs	r0, r3
 80032b2:	46bd      	mov	sp, r7
 80032b4:	b003      	add	sp, #12
 80032b6:	bd90      	pop	{r4, r7, pc}
 80032b8:	20000000 	.word	0x20000000
 80032bc:	20000008 	.word	0x20000008
 80032c0:	20000004 	.word	0x20000004

080032c4 <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 80032c4:	b580      	push	{r7, lr}
 80032c6:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 80032c8:	4b05      	ldr	r3, [pc, #20]	; (80032e0 <HAL_IncTick+0x1c>)
 80032ca:	781b      	ldrb	r3, [r3, #0]
 80032cc:	001a      	movs	r2, r3
 80032ce:	4b05      	ldr	r3, [pc, #20]	; (80032e4 <HAL_IncTick+0x20>)
 80032d0:	681b      	ldr	r3, [r3, #0]
 80032d2:	18d2      	adds	r2, r2, r3
 80032d4:	4b03      	ldr	r3, [pc, #12]	; (80032e4 <HAL_IncTick+0x20>)
 80032d6:	601a      	str	r2, [r3, #0]
}
 80032d8:	46c0      	nop			; (mov r8, r8)
 80032da:	46bd      	mov	sp, r7
 80032dc:	bd80      	pop	{r7, pc}
 80032de:	46c0      	nop			; (mov r8, r8)
 80032e0:	20000008 	.word	0x20000008
 80032e4:	20000318 	.word	0x20000318

080032e8 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 80032e8:	b580      	push	{r7, lr}
 80032ea:	af00      	add	r7, sp, #0
  return uwTick;
 80032ec:	4b02      	ldr	r3, [pc, #8]	; (80032f8 <HAL_GetTick+0x10>)
 80032ee:	681b      	ldr	r3, [r3, #0]
}
 80032f0:	0018      	movs	r0, r3
 80032f2:	46bd      	mov	sp, r7
 80032f4:	bd80      	pop	{r7, pc}
 80032f6:	46c0      	nop			; (mov r8, r8)
 80032f8:	20000318 	.word	0x20000318

080032fc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 80032fc:	b580      	push	{r7, lr}
 80032fe:	b084      	sub	sp, #16
 8003300:	af00      	add	r7, sp, #0
 8003302:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 8003304:	f7ff fff0 	bl	80032e8 <HAL_GetTick>
 8003308:	0003      	movs	r3, r0
 800330a:	60bb      	str	r3, [r7, #8]
  uint32_t wait = Delay;
 800330c:	687b      	ldr	r3, [r7, #4]
 800330e:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 8003310:	68fb      	ldr	r3, [r7, #12]
 8003312:	3301      	adds	r3, #1
 8003314:	d005      	beq.n	8003322 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 8003316:	4b09      	ldr	r3, [pc, #36]	; (800333c <HAL_Delay+0x40>)
 8003318:	781b      	ldrb	r3, [r3, #0]
 800331a:	001a      	movs	r2, r3
 800331c:	68fb      	ldr	r3, [r7, #12]
 800331e:	189b      	adds	r3, r3, r2
 8003320:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 8003322:	46c0      	nop			; (mov r8, r8)
 8003324:	f7ff ffe0 	bl	80032e8 <HAL_GetTick>
 8003328:	0002      	movs	r2, r0
 800332a:	68bb      	ldr	r3, [r7, #8]
 800332c:	1ad3      	subs	r3, r2, r3
 800332e:	68fa      	ldr	r2, [r7, #12]
 8003330:	429a      	cmp	r2, r3
 8003332:	d8f7      	bhi.n	8003324 <HAL_Delay+0x28>
  {
  }
}
 8003334:	46c0      	nop			; (mov r8, r8)
 8003336:	46bd      	mov	sp, r7
 8003338:	b004      	add	sp, #16
 800333a:	bd80      	pop	{r7, pc}
 800333c:	20000008 	.word	0x20000008

08003340 <NVIC_EnableIRQ>:
  \brief   Enable External Interrupt
  \details Enables a device-specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  External interrupt number. Value cannot be negative.
 */
__STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
{
 8003340:	b580      	push	{r7, lr}
 8003342:	b082      	sub	sp, #8
 8003344:	af00      	add	r7, sp, #0
 8003346:	0002      	movs	r2, r0
 8003348:	1dfb      	adds	r3, r7, #7
 800334a:	701a      	strb	r2, [r3, #0]
  NVIC->ISER[0U] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));
 800334c:	1dfb      	adds	r3, r7, #7
 800334e:	781b      	ldrb	r3, [r3, #0]
 8003350:	001a      	movs	r2, r3
 8003352:	231f      	movs	r3, #31
 8003354:	401a      	ands	r2, r3
 8003356:	4b04      	ldr	r3, [pc, #16]	; (8003368 <NVIC_EnableIRQ+0x28>)
 8003358:	2101      	movs	r1, #1
 800335a:	4091      	lsls	r1, r2
 800335c:	000a      	movs	r2, r1
 800335e:	601a      	str	r2, [r3, #0]
}
 8003360:	46c0      	nop			; (mov r8, r8)
 8003362:	46bd      	mov	sp, r7
 8003364:	b002      	add	sp, #8
 8003366:	bd80      	pop	{r7, pc}
 8003368:	e000e100 	.word	0xe000e100

0800336c <NVIC_SetPriority>:
  \note    The priority cannot be set for every core interrupt.
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
 */
__STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 800336c:	b590      	push	{r4, r7, lr}
 800336e:	b083      	sub	sp, #12
 8003370:	af00      	add	r7, sp, #0
 8003372:	0002      	movs	r2, r0
 8003374:	6039      	str	r1, [r7, #0]
 8003376:	1dfb      	adds	r3, r7, #7
 8003378:	701a      	strb	r2, [r3, #0]
  if ((int32_t)(IRQn) < 0)
 800337a:	1dfb      	adds	r3, r7, #7
 800337c:	781b      	ldrb	r3, [r3, #0]
 800337e:	2b7f      	cmp	r3, #127	; 0x7f
 8003380:	d932      	bls.n	80033e8 <NVIC_SetPriority+0x7c>
  {
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003382:	4a2f      	ldr	r2, [pc, #188]	; (8003440 <NVIC_SetPriority+0xd4>)
 8003384:	1dfb      	adds	r3, r7, #7
 8003386:	781b      	ldrb	r3, [r3, #0]
 8003388:	0019      	movs	r1, r3
 800338a:	230f      	movs	r3, #15
 800338c:	400b      	ands	r3, r1
 800338e:	3b08      	subs	r3, #8
 8003390:	089b      	lsrs	r3, r3, #2
 8003392:	3306      	adds	r3, #6
 8003394:	009b      	lsls	r3, r3, #2
 8003396:	18d3      	adds	r3, r2, r3
 8003398:	3304      	adds	r3, #4
 800339a:	681b      	ldr	r3, [r3, #0]
 800339c:	1dfa      	adds	r2, r7, #7
 800339e:	7812      	ldrb	r2, [r2, #0]
 80033a0:	0011      	movs	r1, r2
 80033a2:	2203      	movs	r2, #3
 80033a4:	400a      	ands	r2, r1
 80033a6:	00d2      	lsls	r2, r2, #3
 80033a8:	21ff      	movs	r1, #255	; 0xff
 80033aa:	4091      	lsls	r1, r2
 80033ac:	000a      	movs	r2, r1
 80033ae:	43d2      	mvns	r2, r2
 80033b0:	401a      	ands	r2, r3
 80033b2:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 80033b4:	683b      	ldr	r3, [r7, #0]
 80033b6:	019b      	lsls	r3, r3, #6
 80033b8:	22ff      	movs	r2, #255	; 0xff
 80033ba:	401a      	ands	r2, r3
 80033bc:	1dfb      	adds	r3, r7, #7
 80033be:	781b      	ldrb	r3, [r3, #0]
 80033c0:	0018      	movs	r0, r3
 80033c2:	2303      	movs	r3, #3
 80033c4:	4003      	ands	r3, r0
 80033c6:	00db      	lsls	r3, r3, #3
 80033c8:	409a      	lsls	r2, r3
    SCB->SHP[_SHP_IDX(IRQn)] = ((uint32_t)(SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80033ca:	481d      	ldr	r0, [pc, #116]	; (8003440 <NVIC_SetPriority+0xd4>)
 80033cc:	1dfb      	adds	r3, r7, #7
 80033ce:	781b      	ldrb	r3, [r3, #0]
 80033d0:	001c      	movs	r4, r3
 80033d2:	230f      	movs	r3, #15
 80033d4:	4023      	ands	r3, r4
 80033d6:	3b08      	subs	r3, #8
 80033d8:	089b      	lsrs	r3, r3, #2
 80033da:	430a      	orrs	r2, r1
 80033dc:	3306      	adds	r3, #6
 80033de:	009b      	lsls	r3, r3, #2
 80033e0:	18c3      	adds	r3, r0, r3
 80033e2:	3304      	adds	r3, #4
 80033e4:	601a      	str	r2, [r3, #0]
  else
  {
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
  }
}
 80033e6:	e027      	b.n	8003438 <NVIC_SetPriority+0xcc>
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 80033e8:	4a16      	ldr	r2, [pc, #88]	; (8003444 <NVIC_SetPriority+0xd8>)
 80033ea:	1dfb      	adds	r3, r7, #7
 80033ec:	781b      	ldrb	r3, [r3, #0]
 80033ee:	b25b      	sxtb	r3, r3
 80033f0:	089b      	lsrs	r3, r3, #2
 80033f2:	33c0      	adds	r3, #192	; 0xc0
 80033f4:	009b      	lsls	r3, r3, #2
 80033f6:	589b      	ldr	r3, [r3, r2]
 80033f8:	1dfa      	adds	r2, r7, #7
 80033fa:	7812      	ldrb	r2, [r2, #0]
 80033fc:	0011      	movs	r1, r2
 80033fe:	2203      	movs	r2, #3
 8003400:	400a      	ands	r2, r1
 8003402:	00d2      	lsls	r2, r2, #3
 8003404:	21ff      	movs	r1, #255	; 0xff
 8003406:	4091      	lsls	r1, r2
 8003408:	000a      	movs	r2, r1
 800340a:	43d2      	mvns	r2, r2
 800340c:	401a      	ands	r2, r3
 800340e:	0011      	movs	r1, r2
       (((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL) << _BIT_SHIFT(IRQn)));
 8003410:	683b      	ldr	r3, [r7, #0]
 8003412:	019b      	lsls	r3, r3, #6
 8003414:	22ff      	movs	r2, #255	; 0xff
 8003416:	401a      	ands	r2, r3
 8003418:	1dfb      	adds	r3, r7, #7
 800341a:	781b      	ldrb	r3, [r3, #0]
 800341c:	0018      	movs	r0, r3
 800341e:	2303      	movs	r3, #3
 8003420:	4003      	ands	r3, r0
 8003422:	00db      	lsls	r3, r3, #3
 8003424:	409a      	lsls	r2, r3
    NVIC->IP[_IP_IDX(IRQn)]  = ((uint32_t)(NVIC->IP[_IP_IDX(IRQn)]  & ~(0xFFUL << _BIT_SHIFT(IRQn))) |
 8003426:	4807      	ldr	r0, [pc, #28]	; (8003444 <NVIC_SetPriority+0xd8>)
 8003428:	1dfb      	adds	r3, r7, #7
 800342a:	781b      	ldrb	r3, [r3, #0]
 800342c:	b25b      	sxtb	r3, r3
 800342e:	089b      	lsrs	r3, r3, #2
 8003430:	430a      	orrs	r2, r1
 8003432:	33c0      	adds	r3, #192	; 0xc0
 8003434:	009b      	lsls	r3, r3, #2
 8003436:	501a      	str	r2, [r3, r0]
}
 8003438:	46c0      	nop			; (mov r8, r8)
 800343a:	46bd      	mov	sp, r7
 800343c:	b003      	add	sp, #12
 800343e:	bd90      	pop	{r4, r7, pc}
 8003440:	e000ed00 	.word	0xe000ed00
 8003444:	e000e100 	.word	0xe000e100

08003448 <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 8003448:	b580      	push	{r7, lr}
 800344a:	b082      	sub	sp, #8
 800344c:	af00      	add	r7, sp, #0
 800344e:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 8003450:	687b      	ldr	r3, [r7, #4]
 8003452:	3b01      	subs	r3, #1
 8003454:	4a0c      	ldr	r2, [pc, #48]	; (8003488 <SysTick_Config+0x40>)
 8003456:	4293      	cmp	r3, r2
 8003458:	d901      	bls.n	800345e <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 800345a:	2301      	movs	r3, #1
 800345c:	e010      	b.n	8003480 <SysTick_Config+0x38>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 800345e:	4b0b      	ldr	r3, [pc, #44]	; (800348c <SysTick_Config+0x44>)
 8003460:	687a      	ldr	r2, [r7, #4]
 8003462:	3a01      	subs	r2, #1
 8003464:	605a      	str	r2, [r3, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 8003466:	2301      	movs	r3, #1
 8003468:	425b      	negs	r3, r3
 800346a:	2103      	movs	r1, #3
 800346c:	0018      	movs	r0, r3
 800346e:	f7ff ff7d 	bl	800336c <NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 8003472:	4b06      	ldr	r3, [pc, #24]	; (800348c <SysTick_Config+0x44>)
 8003474:	2200      	movs	r2, #0
 8003476:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 8003478:	4b04      	ldr	r3, [pc, #16]	; (800348c <SysTick_Config+0x44>)
 800347a:	2207      	movs	r2, #7
 800347c:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 800347e:	2300      	movs	r3, #0
}
 8003480:	0018      	movs	r0, r3
 8003482:	46bd      	mov	sp, r7
 8003484:	b002      	add	sp, #8
 8003486:	bd80      	pop	{r7, pc}
 8003488:	00ffffff 	.word	0x00ffffff
 800348c:	e000e010 	.word	0xe000e010

08003490 <HAL_NVIC_SetPriority>:
  *         with stm32l0xx devices, this parameter is a dummy value and it is ignored, because 
  *         no subpriority supported in Cortex M0+ based products.   
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 8003490:	b580      	push	{r7, lr}
 8003492:	b084      	sub	sp, #16
 8003494:	af00      	add	r7, sp, #0
 8003496:	60b9      	str	r1, [r7, #8]
 8003498:	607a      	str	r2, [r7, #4]
 800349a:	210f      	movs	r1, #15
 800349c:	187b      	adds	r3, r7, r1
 800349e:	1c02      	adds	r2, r0, #0
 80034a0:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  NVIC_SetPriority(IRQn,PreemptPriority);
 80034a2:	68ba      	ldr	r2, [r7, #8]
 80034a4:	187b      	adds	r3, r7, r1
 80034a6:	781b      	ldrb	r3, [r3, #0]
 80034a8:	b25b      	sxtb	r3, r3
 80034aa:	0011      	movs	r1, r2
 80034ac:	0018      	movs	r0, r3
 80034ae:	f7ff ff5d 	bl	800336c <NVIC_SetPriority>
}
 80034b2:	46c0      	nop			; (mov r8, r8)
 80034b4:	46bd      	mov	sp, r7
 80034b6:	b004      	add	sp, #16
 80034b8:	bd80      	pop	{r7, pc}

080034ba <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of  IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to stm32l0xx.h file)  
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 80034ba:	b580      	push	{r7, lr}
 80034bc:	b082      	sub	sp, #8
 80034be:	af00      	add	r7, sp, #0
 80034c0:	0002      	movs	r2, r0
 80034c2:	1dfb      	adds	r3, r7, #7
 80034c4:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 80034c6:	1dfb      	adds	r3, r7, #7
 80034c8:	781b      	ldrb	r3, [r3, #0]
 80034ca:	b25b      	sxtb	r3, r3
 80034cc:	0018      	movs	r0, r3
 80034ce:	f7ff ff37 	bl	8003340 <NVIC_EnableIRQ>
}
 80034d2:	46c0      	nop			; (mov r8, r8)
 80034d4:	46bd      	mov	sp, r7
 80034d6:	b002      	add	sp, #8
 80034d8:	bd80      	pop	{r7, pc}

080034da <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 80034da:	b580      	push	{r7, lr}
 80034dc:	b082      	sub	sp, #8
 80034de:	af00      	add	r7, sp, #0
 80034e0:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 80034e2:	687b      	ldr	r3, [r7, #4]
 80034e4:	0018      	movs	r0, r3
 80034e6:	f7ff ffaf 	bl	8003448 <SysTick_Config>
 80034ea:	0003      	movs	r3, r0
}
 80034ec:	0018      	movs	r0, r3
 80034ee:	46bd      	mov	sp, r7
 80034f0:	b002      	add	sp, #8
 80034f2:	bd80      	pop	{r7, pc}

080034f4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *                    the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 80034f4:	b580      	push	{r7, lr}
 80034f6:	b086      	sub	sp, #24
 80034f8:	af00      	add	r7, sp, #0
 80034fa:	6078      	str	r0, [r7, #4]
 80034fc:	6039      	str	r1, [r7, #0]
  uint32_t position = 0x00U;
 80034fe:	2300      	movs	r3, #0
 8003500:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 8003502:	2300      	movs	r3, #0
 8003504:	60fb      	str	r3, [r7, #12]
  uint32_t temp = 0x00U;
 8003506:	2300      	movs	r3, #0
 8003508:	613b      	str	r3, [r7, #16]
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, (GPIO_Init->Pin)));

  /* Configure the port pins */
  while (((GPIO_Init->Pin) >> position) != 0)
 800350a:	e155      	b.n	80037b8 <HAL_GPIO_Init+0x2c4>
  {
    /* Get the IO position */
    iocurrent = (GPIO_Init->Pin) & (1U << position);
 800350c:	683b      	ldr	r3, [r7, #0]
 800350e:	681b      	ldr	r3, [r3, #0]
 8003510:	2101      	movs	r1, #1
 8003512:	697a      	ldr	r2, [r7, #20]
 8003514:	4091      	lsls	r1, r2
 8003516:	000a      	movs	r2, r1
 8003518:	4013      	ands	r3, r2
 800351a:	60fb      	str	r3, [r7, #12]

    if (iocurrent)
 800351c:	68fb      	ldr	r3, [r7, #12]
 800351e:	2b00      	cmp	r3, #0
 8003520:	d100      	bne.n	8003524 <HAL_GPIO_Init+0x30>
 8003522:	e146      	b.n	80037b2 <HAL_GPIO_Init+0x2be>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003524:	683b      	ldr	r3, [r7, #0]
 8003526:	685b      	ldr	r3, [r3, #4]
 8003528:	2b01      	cmp	r3, #1
 800352a:	d00b      	beq.n	8003544 <HAL_GPIO_Init+0x50>
 800352c:	683b      	ldr	r3, [r7, #0]
 800352e:	685b      	ldr	r3, [r3, #4]
 8003530:	2b02      	cmp	r3, #2
 8003532:	d007      	beq.n	8003544 <HAL_GPIO_Init+0x50>
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 8003534:	683b      	ldr	r3, [r7, #0]
 8003536:	685b      	ldr	r3, [r3, #4]
      if ((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 8003538:	2b11      	cmp	r3, #17
 800353a:	d003      	beq.n	8003544 <HAL_GPIO_Init+0x50>
          (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 800353c:	683b      	ldr	r3, [r7, #0]
 800353e:	685b      	ldr	r3, [r3, #4]
 8003540:	2b12      	cmp	r3, #18
 8003542:	d130      	bne.n	80035a6 <HAL_GPIO_Init+0xb2>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR;
 8003544:	687b      	ldr	r3, [r7, #4]
 8003546:	689b      	ldr	r3, [r3, #8]
 8003548:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OSPEEDER_OSPEED0 << (position * 2U));
 800354a:	697b      	ldr	r3, [r7, #20]
 800354c:	005b      	lsls	r3, r3, #1
 800354e:	2203      	movs	r2, #3
 8003550:	409a      	lsls	r2, r3
 8003552:	0013      	movs	r3, r2
 8003554:	43da      	mvns	r2, r3
 8003556:	693b      	ldr	r3, [r7, #16]
 8003558:	4013      	ands	r3, r2
 800355a:	613b      	str	r3, [r7, #16]
        temp |= (GPIO_Init->Speed << (position * 2U));
 800355c:	683b      	ldr	r3, [r7, #0]
 800355e:	68da      	ldr	r2, [r3, #12]
 8003560:	697b      	ldr	r3, [r7, #20]
 8003562:	005b      	lsls	r3, r3, #1
 8003564:	409a      	lsls	r2, r3
 8003566:	0013      	movs	r3, r2
 8003568:	693a      	ldr	r2, [r7, #16]
 800356a:	4313      	orrs	r3, r2
 800356c:	613b      	str	r3, [r7, #16]
        GPIOx->OSPEEDR = temp;
 800356e:	687b      	ldr	r3, [r7, #4]
 8003570:	693a      	ldr	r2, [r7, #16]
 8003572:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	685b      	ldr	r3, [r3, #4]
 8003578:	613b      	str	r3, [r7, #16]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 800357a:	2201      	movs	r2, #1
 800357c:	697b      	ldr	r3, [r7, #20]
 800357e:	409a      	lsls	r2, r3
 8003580:	0013      	movs	r3, r2
 8003582:	43da      	mvns	r2, r3
 8003584:	693b      	ldr	r3, [r7, #16]
 8003586:	4013      	ands	r3, r2
 8003588:	613b      	str	r3, [r7, #16]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 800358a:	683b      	ldr	r3, [r7, #0]
 800358c:	685b      	ldr	r3, [r3, #4]
 800358e:	091b      	lsrs	r3, r3, #4
 8003590:	2201      	movs	r2, #1
 8003592:	401a      	ands	r2, r3
 8003594:	697b      	ldr	r3, [r7, #20]
 8003596:	409a      	lsls	r2, r3
 8003598:	0013      	movs	r3, r2
 800359a:	693a      	ldr	r2, [r7, #16]
 800359c:	4313      	orrs	r3, r2
 800359e:	613b      	str	r3, [r7, #16]
        GPIOx->OTYPER = temp;
 80035a0:	687b      	ldr	r3, [r7, #4]
 80035a2:	693a      	ldr	r2, [r7, #16]
 80035a4:	605a      	str	r2, [r3, #4]
      }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 80035a6:	687b      	ldr	r3, [r7, #4]
 80035a8:	68db      	ldr	r3, [r3, #12]
 80035aa:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_PUPDR_PUPD0 << (position * 2U));
 80035ac:	697b      	ldr	r3, [r7, #20]
 80035ae:	005b      	lsls	r3, r3, #1
 80035b0:	2203      	movs	r2, #3
 80035b2:	409a      	lsls	r2, r3
 80035b4:	0013      	movs	r3, r2
 80035b6:	43da      	mvns	r2, r3
 80035b8:	693b      	ldr	r3, [r7, #16]
 80035ba:	4013      	ands	r3, r2
 80035bc:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 80035be:	683b      	ldr	r3, [r7, #0]
 80035c0:	689a      	ldr	r2, [r3, #8]
 80035c2:	697b      	ldr	r3, [r7, #20]
 80035c4:	005b      	lsls	r3, r3, #1
 80035c6:	409a      	lsls	r2, r3
 80035c8:	0013      	movs	r3, r2
 80035ca:	693a      	ldr	r2, [r7, #16]
 80035cc:	4313      	orrs	r3, r2
 80035ce:	613b      	str	r3, [r7, #16]
      GPIOx->PUPDR = temp;
 80035d0:	687b      	ldr	r3, [r7, #4]
 80035d2:	693a      	ldr	r2, [r7, #16]
 80035d4:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if ((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 80035d6:	683b      	ldr	r3, [r7, #0]
 80035d8:	685b      	ldr	r3, [r3, #4]
 80035da:	2b02      	cmp	r3, #2
 80035dc:	d003      	beq.n	80035e6 <HAL_GPIO_Init+0xf2>
 80035de:	683b      	ldr	r3, [r7, #0]
 80035e0:	685b      	ldr	r3, [r3, #4]
 80035e2:	2b12      	cmp	r3, #18
 80035e4:	d123      	bne.n	800362e <HAL_GPIO_Init+0x13a>
        /* Check the Alternate function parameters */
        assert_param(IS_GPIO_AF_INSTANCE(GPIOx));
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));

        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 80035e6:	697b      	ldr	r3, [r7, #20]
 80035e8:	08da      	lsrs	r2, r3, #3
 80035ea:	687b      	ldr	r3, [r7, #4]
 80035ec:	3208      	adds	r2, #8
 80035ee:	0092      	lsls	r2, r2, #2
 80035f0:	58d3      	ldr	r3, [r2, r3]
 80035f2:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)0xFU << ((uint32_t)(position & (uint32_t)0x07U) * 4U));
 80035f4:	697b      	ldr	r3, [r7, #20]
 80035f6:	2207      	movs	r2, #7
 80035f8:	4013      	ands	r3, r2
 80035fa:	009b      	lsls	r3, r3, #2
 80035fc:	220f      	movs	r2, #15
 80035fe:	409a      	lsls	r2, r3
 8003600:	0013      	movs	r3, r2
 8003602:	43da      	mvns	r2, r3
 8003604:	693b      	ldr	r3, [r7, #16]
 8003606:	4013      	ands	r3, r2
 8003608:	613b      	str	r3, [r7, #16]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & (uint32_t)0x07U) * 4U));
 800360a:	683b      	ldr	r3, [r7, #0]
 800360c:	691a      	ldr	r2, [r3, #16]
 800360e:	697b      	ldr	r3, [r7, #20]
 8003610:	2107      	movs	r1, #7
 8003612:	400b      	ands	r3, r1
 8003614:	009b      	lsls	r3, r3, #2
 8003616:	409a      	lsls	r2, r3
 8003618:	0013      	movs	r3, r2
 800361a:	693a      	ldr	r2, [r7, #16]
 800361c:	4313      	orrs	r3, r2
 800361e:	613b      	str	r3, [r7, #16]
        GPIOx->AFR[position >> 3U] = temp;
 8003620:	697b      	ldr	r3, [r7, #20]
 8003622:	08da      	lsrs	r2, r3, #3
 8003624:	687b      	ldr	r3, [r7, #4]
 8003626:	3208      	adds	r2, #8
 8003628:	0092      	lsls	r2, r2, #2
 800362a:	6939      	ldr	r1, [r7, #16]
 800362c:	50d1      	str	r1, [r2, r3]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 800362e:	687b      	ldr	r3, [r7, #4]
 8003630:	681b      	ldr	r3, [r3, #0]
 8003632:	613b      	str	r3, [r7, #16]
      temp &= ~(GPIO_MODER_MODE0 << (position * 2U));
 8003634:	697b      	ldr	r3, [r7, #20]
 8003636:	005b      	lsls	r3, r3, #1
 8003638:	2203      	movs	r2, #3
 800363a:	409a      	lsls	r2, r3
 800363c:	0013      	movs	r3, r2
 800363e:	43da      	mvns	r2, r3
 8003640:	693b      	ldr	r3, [r7, #16]
 8003642:	4013      	ands	r3, r2
 8003644:	613b      	str	r3, [r7, #16]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 8003646:	683b      	ldr	r3, [r7, #0]
 8003648:	685b      	ldr	r3, [r3, #4]
 800364a:	2203      	movs	r2, #3
 800364c:	401a      	ands	r2, r3
 800364e:	697b      	ldr	r3, [r7, #20]
 8003650:	005b      	lsls	r3, r3, #1
 8003652:	409a      	lsls	r2, r3
 8003654:	0013      	movs	r3, r2
 8003656:	693a      	ldr	r2, [r7, #16]
 8003658:	4313      	orrs	r3, r2
 800365a:	613b      	str	r3, [r7, #16]
      GPIOx->MODER = temp;
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	693a      	ldr	r2, [r7, #16]
 8003660:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if ((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 8003662:	683b      	ldr	r3, [r7, #0]
 8003664:	685a      	ldr	r2, [r3, #4]
 8003666:	2380      	movs	r3, #128	; 0x80
 8003668:	055b      	lsls	r3, r3, #21
 800366a:	4013      	ands	r3, r2
 800366c:	d100      	bne.n	8003670 <HAL_GPIO_Init+0x17c>
 800366e:	e0a0      	b.n	80037b2 <HAL_GPIO_Init+0x2be>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 8003670:	4b57      	ldr	r3, [pc, #348]	; (80037d0 <HAL_GPIO_Init+0x2dc>)
 8003672:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003674:	4b56      	ldr	r3, [pc, #344]	; (80037d0 <HAL_GPIO_Init+0x2dc>)
 8003676:	2101      	movs	r1, #1
 8003678:	430a      	orrs	r2, r1
 800367a:	635a      	str	r2, [r3, #52]	; 0x34

        temp = SYSCFG->EXTICR[position >> 2U];
 800367c:	4a55      	ldr	r2, [pc, #340]	; (80037d4 <HAL_GPIO_Init+0x2e0>)
 800367e:	697b      	ldr	r3, [r7, #20]
 8003680:	089b      	lsrs	r3, r3, #2
 8003682:	3302      	adds	r3, #2
 8003684:	009b      	lsls	r3, r3, #2
 8003686:	589b      	ldr	r3, [r3, r2]
 8003688:	613b      	str	r3, [r7, #16]
        CLEAR_BIT(temp, ((uint32_t)0x0FU) << (4U * (position & 0x03U)));
 800368a:	697b      	ldr	r3, [r7, #20]
 800368c:	2203      	movs	r2, #3
 800368e:	4013      	ands	r3, r2
 8003690:	009b      	lsls	r3, r3, #2
 8003692:	220f      	movs	r2, #15
 8003694:	409a      	lsls	r2, r3
 8003696:	0013      	movs	r3, r2
 8003698:	43da      	mvns	r2, r3
 800369a:	693b      	ldr	r3, [r7, #16]
 800369c:	4013      	ands	r3, r2
 800369e:	613b      	str	r3, [r7, #16]
        SET_BIT(temp, (GPIO_GET_INDEX(GPIOx)) << (4 * (position & 0x03U)));
 80036a0:	687a      	ldr	r2, [r7, #4]
 80036a2:	23a0      	movs	r3, #160	; 0xa0
 80036a4:	05db      	lsls	r3, r3, #23
 80036a6:	429a      	cmp	r2, r3
 80036a8:	d01f      	beq.n	80036ea <HAL_GPIO_Init+0x1f6>
 80036aa:	687b      	ldr	r3, [r7, #4]
 80036ac:	4a4a      	ldr	r2, [pc, #296]	; (80037d8 <HAL_GPIO_Init+0x2e4>)
 80036ae:	4293      	cmp	r3, r2
 80036b0:	d019      	beq.n	80036e6 <HAL_GPIO_Init+0x1f2>
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	4a49      	ldr	r2, [pc, #292]	; (80037dc <HAL_GPIO_Init+0x2e8>)
 80036b6:	4293      	cmp	r3, r2
 80036b8:	d013      	beq.n	80036e2 <HAL_GPIO_Init+0x1ee>
 80036ba:	687b      	ldr	r3, [r7, #4]
 80036bc:	4a48      	ldr	r2, [pc, #288]	; (80037e0 <HAL_GPIO_Init+0x2ec>)
 80036be:	4293      	cmp	r3, r2
 80036c0:	d00d      	beq.n	80036de <HAL_GPIO_Init+0x1ea>
 80036c2:	687b      	ldr	r3, [r7, #4]
 80036c4:	4a47      	ldr	r2, [pc, #284]	; (80037e4 <HAL_GPIO_Init+0x2f0>)
 80036c6:	4293      	cmp	r3, r2
 80036c8:	d007      	beq.n	80036da <HAL_GPIO_Init+0x1e6>
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	4a46      	ldr	r2, [pc, #280]	; (80037e8 <HAL_GPIO_Init+0x2f4>)
 80036ce:	4293      	cmp	r3, r2
 80036d0:	d101      	bne.n	80036d6 <HAL_GPIO_Init+0x1e2>
 80036d2:	2305      	movs	r3, #5
 80036d4:	e00a      	b.n	80036ec <HAL_GPIO_Init+0x1f8>
 80036d6:	2306      	movs	r3, #6
 80036d8:	e008      	b.n	80036ec <HAL_GPIO_Init+0x1f8>
 80036da:	2304      	movs	r3, #4
 80036dc:	e006      	b.n	80036ec <HAL_GPIO_Init+0x1f8>
 80036de:	2303      	movs	r3, #3
 80036e0:	e004      	b.n	80036ec <HAL_GPIO_Init+0x1f8>
 80036e2:	2302      	movs	r3, #2
 80036e4:	e002      	b.n	80036ec <HAL_GPIO_Init+0x1f8>
 80036e6:	2301      	movs	r3, #1
 80036e8:	e000      	b.n	80036ec <HAL_GPIO_Init+0x1f8>
 80036ea:	2300      	movs	r3, #0
 80036ec:	697a      	ldr	r2, [r7, #20]
 80036ee:	2103      	movs	r1, #3
 80036f0:	400a      	ands	r2, r1
 80036f2:	0092      	lsls	r2, r2, #2
 80036f4:	4093      	lsls	r3, r2
 80036f6:	693a      	ldr	r2, [r7, #16]
 80036f8:	4313      	orrs	r3, r2
 80036fa:	613b      	str	r3, [r7, #16]
        SYSCFG->EXTICR[position >> 2U] = temp;
 80036fc:	4935      	ldr	r1, [pc, #212]	; (80037d4 <HAL_GPIO_Init+0x2e0>)
 80036fe:	697b      	ldr	r3, [r7, #20]
 8003700:	089b      	lsrs	r3, r3, #2
 8003702:	3302      	adds	r3, #2
 8003704:	009b      	lsls	r3, r3, #2
 8003706:	693a      	ldr	r2, [r7, #16]
 8003708:	505a      	str	r2, [r3, r1]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 800370a:	4b38      	ldr	r3, [pc, #224]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 800370c:	681b      	ldr	r3, [r3, #0]
 800370e:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8003710:	68fb      	ldr	r3, [r7, #12]
 8003712:	43da      	mvns	r2, r3
 8003714:	693b      	ldr	r3, [r7, #16]
 8003716:	4013      	ands	r3, r2
 8003718:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 800371a:	683b      	ldr	r3, [r7, #0]
 800371c:	685a      	ldr	r2, [r3, #4]
 800371e:	2380      	movs	r3, #128	; 0x80
 8003720:	025b      	lsls	r3, r3, #9
 8003722:	4013      	ands	r3, r2
 8003724:	d003      	beq.n	800372e <HAL_GPIO_Init+0x23a>
        {
          temp |= iocurrent;
 8003726:	693a      	ldr	r2, [r7, #16]
 8003728:	68fb      	ldr	r3, [r7, #12]
 800372a:	4313      	orrs	r3, r2
 800372c:	613b      	str	r3, [r7, #16]
        }
        EXTI->IMR = temp;
 800372e:	4b2f      	ldr	r3, [pc, #188]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 8003730:	693a      	ldr	r2, [r7, #16]
 8003732:	601a      	str	r2, [r3, #0]

        temp = EXTI->EMR;
 8003734:	4b2d      	ldr	r3, [pc, #180]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 8003736:	685b      	ldr	r3, [r3, #4]
 8003738:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 800373a:	68fb      	ldr	r3, [r7, #12]
 800373c:	43da      	mvns	r2, r3
 800373e:	693b      	ldr	r3, [r7, #16]
 8003740:	4013      	ands	r3, r2
 8003742:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 8003744:	683b      	ldr	r3, [r7, #0]
 8003746:	685a      	ldr	r2, [r3, #4]
 8003748:	2380      	movs	r3, #128	; 0x80
 800374a:	029b      	lsls	r3, r3, #10
 800374c:	4013      	ands	r3, r2
 800374e:	d003      	beq.n	8003758 <HAL_GPIO_Init+0x264>
        {
          temp |= iocurrent;
 8003750:	693a      	ldr	r2, [r7, #16]
 8003752:	68fb      	ldr	r3, [r7, #12]
 8003754:	4313      	orrs	r3, r2
 8003756:	613b      	str	r3, [r7, #16]
        }
        EXTI->EMR = temp;
 8003758:	4b24      	ldr	r3, [pc, #144]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 800375a:	693a      	ldr	r2, [r7, #16]
 800375c:	605a      	str	r2, [r3, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 800375e:	4b23      	ldr	r3, [pc, #140]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 8003760:	689b      	ldr	r3, [r3, #8]
 8003762:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 8003764:	68fb      	ldr	r3, [r7, #12]
 8003766:	43da      	mvns	r2, r3
 8003768:	693b      	ldr	r3, [r7, #16]
 800376a:	4013      	ands	r3, r2
 800376c:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 800376e:	683b      	ldr	r3, [r7, #0]
 8003770:	685a      	ldr	r2, [r3, #4]
 8003772:	2380      	movs	r3, #128	; 0x80
 8003774:	035b      	lsls	r3, r3, #13
 8003776:	4013      	ands	r3, r2
 8003778:	d003      	beq.n	8003782 <HAL_GPIO_Init+0x28e>
        {
          temp |= iocurrent;
 800377a:	693a      	ldr	r2, [r7, #16]
 800377c:	68fb      	ldr	r3, [r7, #12]
 800377e:	4313      	orrs	r3, r2
 8003780:	613b      	str	r3, [r7, #16]
        }
        EXTI->RTSR = temp;
 8003782:	4b1a      	ldr	r3, [pc, #104]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 8003784:	693a      	ldr	r2, [r7, #16]
 8003786:	609a      	str	r2, [r3, #8]

        temp = EXTI->FTSR;
 8003788:	4b18      	ldr	r3, [pc, #96]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 800378a:	68db      	ldr	r3, [r3, #12]
 800378c:	613b      	str	r3, [r7, #16]
        temp &= ~((uint32_t)iocurrent);
 800378e:	68fb      	ldr	r3, [r7, #12]
 8003790:	43da      	mvns	r2, r3
 8003792:	693b      	ldr	r3, [r7, #16]
 8003794:	4013      	ands	r3, r2
 8003796:	613b      	str	r3, [r7, #16]
        if ((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 8003798:	683b      	ldr	r3, [r7, #0]
 800379a:	685a      	ldr	r2, [r3, #4]
 800379c:	2380      	movs	r3, #128	; 0x80
 800379e:	039b      	lsls	r3, r3, #14
 80037a0:	4013      	ands	r3, r2
 80037a2:	d003      	beq.n	80037ac <HAL_GPIO_Init+0x2b8>
        {
          temp |= iocurrent;
 80037a4:	693a      	ldr	r2, [r7, #16]
 80037a6:	68fb      	ldr	r3, [r7, #12]
 80037a8:	4313      	orrs	r3, r2
 80037aa:	613b      	str	r3, [r7, #16]
        }
        EXTI->FTSR = temp;
 80037ac:	4b0f      	ldr	r3, [pc, #60]	; (80037ec <HAL_GPIO_Init+0x2f8>)
 80037ae:	693a      	ldr	r2, [r7, #16]
 80037b0:	60da      	str	r2, [r3, #12]
      }
    }
    position++;
 80037b2:	697b      	ldr	r3, [r7, #20]
 80037b4:	3301      	adds	r3, #1
 80037b6:	617b      	str	r3, [r7, #20]
  while (((GPIO_Init->Pin) >> position) != 0)
 80037b8:	683b      	ldr	r3, [r7, #0]
 80037ba:	681a      	ldr	r2, [r3, #0]
 80037bc:	697b      	ldr	r3, [r7, #20]
 80037be:	40da      	lsrs	r2, r3
 80037c0:	1e13      	subs	r3, r2, #0
 80037c2:	d000      	beq.n	80037c6 <HAL_GPIO_Init+0x2d2>
 80037c4:	e6a2      	b.n	800350c <HAL_GPIO_Init+0x18>
  }
}
 80037c6:	46c0      	nop			; (mov r8, r8)
 80037c8:	46bd      	mov	sp, r7
 80037ca:	b006      	add	sp, #24
 80037cc:	bd80      	pop	{r7, pc}
 80037ce:	46c0      	nop			; (mov r8, r8)
 80037d0:	40021000 	.word	0x40021000
 80037d4:	40010000 	.word	0x40010000
 80037d8:	50000400 	.word	0x50000400
 80037dc:	50000800 	.word	0x50000800
 80037e0:	50000c00 	.word	0x50000c00
 80037e4:	50001000 	.word	0x50001000
 80037e8:	50001c00 	.word	0x50001c00
 80037ec:	40010400 	.word	0x40010400

080037f0 <HAL_GPIO_ReadPin>:
  *                   This parameter can be GPIO_PIN_x where x can be (0..15).
  *                   All port bits are not necessarily available on all GPIOs.
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 80037f0:	b580      	push	{r7, lr}
 80037f2:	b084      	sub	sp, #16
 80037f4:	af00      	add	r7, sp, #0
 80037f6:	6078      	str	r0, [r7, #4]
 80037f8:	000a      	movs	r2, r1
 80037fa:	1cbb      	adds	r3, r7, #2
 80037fc:	801a      	strh	r2, [r3, #0]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));

  if ((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 80037fe:	687b      	ldr	r3, [r7, #4]
 8003800:	691b      	ldr	r3, [r3, #16]
 8003802:	1cba      	adds	r2, r7, #2
 8003804:	8812      	ldrh	r2, [r2, #0]
 8003806:	4013      	ands	r3, r2
 8003808:	d004      	beq.n	8003814 <HAL_GPIO_ReadPin+0x24>
  {
    bitstatus = GPIO_PIN_SET;
 800380a:	230f      	movs	r3, #15
 800380c:	18fb      	adds	r3, r7, r3
 800380e:	2201      	movs	r2, #1
 8003810:	701a      	strb	r2, [r3, #0]
 8003812:	e003      	b.n	800381c <HAL_GPIO_ReadPin+0x2c>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 8003814:	230f      	movs	r3, #15
 8003816:	18fb      	adds	r3, r7, r3
 8003818:	2200      	movs	r2, #0
 800381a:	701a      	strb	r2, [r3, #0]
  }
  return bitstatus;
 800381c:	230f      	movs	r3, #15
 800381e:	18fb      	adds	r3, r7, r3
 8003820:	781b      	ldrb	r3, [r3, #0]
}
 8003822:	0018      	movs	r0, r3
 8003824:	46bd      	mov	sp, r7
 8003826:	b004      	add	sp, #16
 8003828:	bd80      	pop	{r7, pc}

0800382a <HAL_GPIO_WritePin>:
  *                        GPIO_PIN_RESET: to clear the port pin
  *                        GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 800382a:	b580      	push	{r7, lr}
 800382c:	b082      	sub	sp, #8
 800382e:	af00      	add	r7, sp, #0
 8003830:	6078      	str	r0, [r7, #4]
 8003832:	0008      	movs	r0, r1
 8003834:	0011      	movs	r1, r2
 8003836:	1cbb      	adds	r3, r7, #2
 8003838:	1c02      	adds	r2, r0, #0
 800383a:	801a      	strh	r2, [r3, #0]
 800383c:	1c7b      	adds	r3, r7, #1
 800383e:	1c0a      	adds	r2, r1, #0
 8003840:	701a      	strb	r2, [r3, #0]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if (PinState != GPIO_PIN_RESET)
 8003842:	1c7b      	adds	r3, r7, #1
 8003844:	781b      	ldrb	r3, [r3, #0]
 8003846:	2b00      	cmp	r3, #0
 8003848:	d004      	beq.n	8003854 <HAL_GPIO_WritePin+0x2a>
  {
    GPIOx->BSRR = GPIO_Pin;
 800384a:	1cbb      	adds	r3, r7, #2
 800384c:	881a      	ldrh	r2, [r3, #0]
 800384e:	687b      	ldr	r3, [r7, #4]
 8003850:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BRR = GPIO_Pin ;
  }
}
 8003852:	e003      	b.n	800385c <HAL_GPIO_WritePin+0x32>
    GPIOx->BRR = GPIO_Pin ;
 8003854:	1cbb      	adds	r3, r7, #2
 8003856:	881a      	ldrh	r2, [r3, #0]
 8003858:	687b      	ldr	r3, [r7, #4]
 800385a:	629a      	str	r2, [r3, #40]	; 0x28
}
 800385c:	46c0      	nop			; (mov r8, r8)
 800385e:	46bd      	mov	sp, r7
 8003860:	b002      	add	sp, #8
 8003862:	bd80      	pop	{r7, pc}

08003864 <HAL_GPIO_TogglePin>:
  *                All port bits are not necessarily available on all GPIOs.
  * @param  GPIO_Pin Specifies the pins to be toggled.
  * @retval None
  */
void HAL_GPIO_TogglePin(GPIO_TypeDef *GPIOx, uint16_t GPIO_Pin)
{
 8003864:	b580      	push	{r7, lr}
 8003866:	b084      	sub	sp, #16
 8003868:	af00      	add	r7, sp, #0
 800386a:	6078      	str	r0, [r7, #4]
 800386c:	000a      	movs	r2, r1
 800386e:	1cbb      	adds	r3, r7, #2
 8003870:	801a      	strh	r2, [r3, #0]

  /* Check the parameters */
  assert_param(IS_GPIO_PIN_AVAILABLE(GPIOx, GPIO_Pin));

  /* get current Ouput Data Register value */
  odr = GPIOx->ODR;
 8003872:	687b      	ldr	r3, [r7, #4]
 8003874:	695b      	ldr	r3, [r3, #20]
 8003876:	60fb      	str	r3, [r7, #12]

  /* Set selected pins that were at low level, and reset ones that were high */
  GPIOx->BSRR = ((odr & GPIO_Pin) << GPIO_NUMBER) | (~odr & GPIO_Pin);
 8003878:	1cbb      	adds	r3, r7, #2
 800387a:	881b      	ldrh	r3, [r3, #0]
 800387c:	68fa      	ldr	r2, [r7, #12]
 800387e:	4013      	ands	r3, r2
 8003880:	041a      	lsls	r2, r3, #16
 8003882:	68fb      	ldr	r3, [r7, #12]
 8003884:	43db      	mvns	r3, r3
 8003886:	1cb9      	adds	r1, r7, #2
 8003888:	8809      	ldrh	r1, [r1, #0]
 800388a:	400b      	ands	r3, r1
 800388c:	431a      	orrs	r2, r3
 800388e:	687b      	ldr	r3, [r7, #4]
 8003890:	619a      	str	r2, [r3, #24]
}
 8003892:	46c0      	nop			; (mov r8, r8)
 8003894:	46bd      	mov	sp, r7
 8003896:	b004      	add	sp, #16
 8003898:	bd80      	pop	{r7, pc}
	...

0800389c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected to the EXTI line.
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 800389c:	b580      	push	{r7, lr}
 800389e:	b082      	sub	sp, #8
 80038a0:	af00      	add	r7, sp, #0
 80038a2:	0002      	movs	r2, r0
 80038a4:	1dbb      	adds	r3, r7, #6
 80038a6:	801a      	strh	r2, [r3, #0]
  /* EXTI line interrupt detected */
  if (__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 80038a8:	4b09      	ldr	r3, [pc, #36]	; (80038d0 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 80038aa:	695b      	ldr	r3, [r3, #20]
 80038ac:	1dba      	adds	r2, r7, #6
 80038ae:	8812      	ldrh	r2, [r2, #0]
 80038b0:	4013      	ands	r3, r2
 80038b2:	d008      	beq.n	80038c6 <HAL_GPIO_EXTI_IRQHandler+0x2a>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 80038b4:	4b06      	ldr	r3, [pc, #24]	; (80038d0 <HAL_GPIO_EXTI_IRQHandler+0x34>)
 80038b6:	1dba      	adds	r2, r7, #6
 80038b8:	8812      	ldrh	r2, [r2, #0]
 80038ba:	615a      	str	r2, [r3, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 80038bc:	1dbb      	adds	r3, r7, #6
 80038be:	881b      	ldrh	r3, [r3, #0]
 80038c0:	0018      	movs	r0, r3
 80038c2:	f7ff f8cb 	bl	8002a5c <HAL_GPIO_EXTI_Callback>
  }
}
 80038c6:	46c0      	nop			; (mov r8, r8)
 80038c8:	46bd      	mov	sp, r7
 80038ca:	b002      	add	sp, #8
 80038cc:	bd80      	pop	{r7, pc}
 80038ce:	46c0      	nop			; (mov r8, r8)
 80038d0:	40010400 	.word	0x40010400

080038d4 <HAL_RCC_OscConfig>:
  *         supported by this macro. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 80038d4:	b5b0      	push	{r4, r5, r7, lr}
 80038d6:	b08a      	sub	sp, #40	; 0x28
 80038d8:	af00      	add	r7, sp, #0
 80038da:	6078      	str	r0, [r7, #4]
  uint32_t hsi_state;
  HAL_StatusTypeDef status;
  uint32_t sysclk_source, pll_config;

  /* Check the parameters */
  if(RCC_OscInitStruct == NULL)
 80038dc:	687b      	ldr	r3, [r7, #4]
 80038de:	2b00      	cmp	r3, #0
 80038e0:	d102      	bne.n	80038e8 <HAL_RCC_OscConfig+0x14>
  {
    return HAL_ERROR;
 80038e2:	2301      	movs	r3, #1
 80038e4:	f000 fbbc 	bl	8004060 <HAL_RCC_OscConfig+0x78c>
  }

  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));

  sysclk_source = __HAL_RCC_GET_SYSCLK_SOURCE();
 80038e8:	4bc8      	ldr	r3, [pc, #800]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 80038ea:	68db      	ldr	r3, [r3, #12]
 80038ec:	220c      	movs	r2, #12
 80038ee:	4013      	ands	r3, r2
 80038f0:	61fb      	str	r3, [r7, #28]
  pll_config = __HAL_RCC_GET_PLL_OSCSOURCE();
 80038f2:	4bc6      	ldr	r3, [pc, #792]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 80038f4:	68da      	ldr	r2, [r3, #12]
 80038f6:	2380      	movs	r3, #128	; 0x80
 80038f8:	025b      	lsls	r3, r3, #9
 80038fa:	4013      	ands	r3, r2
 80038fc:	61bb      	str	r3, [r7, #24]

  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 80038fe:	687b      	ldr	r3, [r7, #4]
 8003900:	681b      	ldr	r3, [r3, #0]
 8003902:	2201      	movs	r2, #1
 8003904:	4013      	ands	r3, r2
 8003906:	d100      	bne.n	800390a <HAL_RCC_OscConfig+0x36>
 8003908:	e07e      	b.n	8003a08 <HAL_RCC_OscConfig+0x134>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));

    /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowed to be disabled */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSE)
 800390a:	69fb      	ldr	r3, [r7, #28]
 800390c:	2b08      	cmp	r3, #8
 800390e:	d007      	beq.n	8003920 <HAL_RCC_OscConfig+0x4c>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSE)))
 8003910:	69fb      	ldr	r3, [r7, #28]
 8003912:	2b0c      	cmp	r3, #12
 8003914:	d112      	bne.n	800393c <HAL_RCC_OscConfig+0x68>
 8003916:	69ba      	ldr	r2, [r7, #24]
 8003918:	2380      	movs	r3, #128	; 0x80
 800391a:	025b      	lsls	r3, r3, #9
 800391c:	429a      	cmp	r2, r3
 800391e:	d10d      	bne.n	800393c <HAL_RCC_OscConfig+0x68>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003920:	4bba      	ldr	r3, [pc, #744]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003922:	681a      	ldr	r2, [r3, #0]
 8003924:	2380      	movs	r3, #128	; 0x80
 8003926:	029b      	lsls	r3, r3, #10
 8003928:	4013      	ands	r3, r2
 800392a:	d100      	bne.n	800392e <HAL_RCC_OscConfig+0x5a>
 800392c:	e06b      	b.n	8003a06 <HAL_RCC_OscConfig+0x132>
 800392e:	687b      	ldr	r3, [r7, #4]
 8003930:	685b      	ldr	r3, [r3, #4]
 8003932:	2b00      	cmp	r3, #0
 8003934:	d167      	bne.n	8003a06 <HAL_RCC_OscConfig+0x132>
      {
        return HAL_ERROR;
 8003936:	2301      	movs	r3, #1
 8003938:	f000 fb92 	bl	8004060 <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 800393c:	687b      	ldr	r3, [r7, #4]
 800393e:	685a      	ldr	r2, [r3, #4]
 8003940:	2380      	movs	r3, #128	; 0x80
 8003942:	025b      	lsls	r3, r3, #9
 8003944:	429a      	cmp	r2, r3
 8003946:	d107      	bne.n	8003958 <HAL_RCC_OscConfig+0x84>
 8003948:	4bb0      	ldr	r3, [pc, #704]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 800394a:	681a      	ldr	r2, [r3, #0]
 800394c:	4baf      	ldr	r3, [pc, #700]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 800394e:	2180      	movs	r1, #128	; 0x80
 8003950:	0249      	lsls	r1, r1, #9
 8003952:	430a      	orrs	r2, r1
 8003954:	601a      	str	r2, [r3, #0]
 8003956:	e027      	b.n	80039a8 <HAL_RCC_OscConfig+0xd4>
 8003958:	687b      	ldr	r3, [r7, #4]
 800395a:	685a      	ldr	r2, [r3, #4]
 800395c:	23a0      	movs	r3, #160	; 0xa0
 800395e:	02db      	lsls	r3, r3, #11
 8003960:	429a      	cmp	r2, r3
 8003962:	d10e      	bne.n	8003982 <HAL_RCC_OscConfig+0xae>
 8003964:	4ba9      	ldr	r3, [pc, #676]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003966:	681a      	ldr	r2, [r3, #0]
 8003968:	4ba8      	ldr	r3, [pc, #672]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 800396a:	2180      	movs	r1, #128	; 0x80
 800396c:	02c9      	lsls	r1, r1, #11
 800396e:	430a      	orrs	r2, r1
 8003970:	601a      	str	r2, [r3, #0]
 8003972:	4ba6      	ldr	r3, [pc, #664]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003974:	681a      	ldr	r2, [r3, #0]
 8003976:	4ba5      	ldr	r3, [pc, #660]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003978:	2180      	movs	r1, #128	; 0x80
 800397a:	0249      	lsls	r1, r1, #9
 800397c:	430a      	orrs	r2, r1
 800397e:	601a      	str	r2, [r3, #0]
 8003980:	e012      	b.n	80039a8 <HAL_RCC_OscConfig+0xd4>
 8003982:	4ba2      	ldr	r3, [pc, #648]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003984:	681a      	ldr	r2, [r3, #0]
 8003986:	4ba1      	ldr	r3, [pc, #644]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003988:	49a1      	ldr	r1, [pc, #644]	; (8003c10 <HAL_RCC_OscConfig+0x33c>)
 800398a:	400a      	ands	r2, r1
 800398c:	601a      	str	r2, [r3, #0]
 800398e:	4b9f      	ldr	r3, [pc, #636]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003990:	681a      	ldr	r2, [r3, #0]
 8003992:	2380      	movs	r3, #128	; 0x80
 8003994:	025b      	lsls	r3, r3, #9
 8003996:	4013      	ands	r3, r2
 8003998:	60fb      	str	r3, [r7, #12]
 800399a:	68fb      	ldr	r3, [r7, #12]
 800399c:	4b9b      	ldr	r3, [pc, #620]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 800399e:	681a      	ldr	r2, [r3, #0]
 80039a0:	4b9a      	ldr	r3, [pc, #616]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 80039a2:	499c      	ldr	r1, [pc, #624]	; (8003c14 <HAL_RCC_OscConfig+0x340>)
 80039a4:	400a      	ands	r2, r1
 80039a6:	601a      	str	r2, [r3, #0]

      /* Check the HSE State */
      if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 80039a8:	687b      	ldr	r3, [r7, #4]
 80039aa:	685b      	ldr	r3, [r3, #4]
 80039ac:	2b00      	cmp	r3, #0
 80039ae:	d015      	beq.n	80039dc <HAL_RCC_OscConfig+0x108>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80039b0:	f7ff fc9a 	bl	80032e8 <HAL_GetTick>
 80039b4:	0003      	movs	r3, r0
 80039b6:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80039b8:	e009      	b.n	80039ce <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80039ba:	f7ff fc95 	bl	80032e8 <HAL_GetTick>
 80039be:	0002      	movs	r2, r0
 80039c0:	697b      	ldr	r3, [r7, #20]
 80039c2:	1ad3      	subs	r3, r2, r3
 80039c4:	2b64      	cmp	r3, #100	; 0x64
 80039c6:	d902      	bls.n	80039ce <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 80039c8:	2303      	movs	r3, #3
 80039ca:	f000 fb49 	bl	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80039ce:	4b8f      	ldr	r3, [pc, #572]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 80039d0:	681a      	ldr	r2, [r3, #0]
 80039d2:	2380      	movs	r3, #128	; 0x80
 80039d4:	029b      	lsls	r3, r3, #10
 80039d6:	4013      	ands	r3, r2
 80039d8:	d0ef      	beq.n	80039ba <HAL_RCC_OscConfig+0xe6>
 80039da:	e015      	b.n	8003a08 <HAL_RCC_OscConfig+0x134>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 80039dc:	f7ff fc84 	bl	80032e8 <HAL_GetTick>
 80039e0:	0003      	movs	r3, r0
 80039e2:	617b      	str	r3, [r7, #20]

        /* Wait till HSE is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80039e4:	e008      	b.n	80039f8 <HAL_RCC_OscConfig+0x124>
        {
           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 80039e6:	f7ff fc7f 	bl	80032e8 <HAL_GetTick>
 80039ea:	0002      	movs	r2, r0
 80039ec:	697b      	ldr	r3, [r7, #20]
 80039ee:	1ad3      	subs	r3, r2, r3
 80039f0:	2b64      	cmp	r3, #100	; 0x64
 80039f2:	d901      	bls.n	80039f8 <HAL_RCC_OscConfig+0x124>
          {
            return HAL_TIMEOUT;
 80039f4:	2303      	movs	r3, #3
 80039f6:	e333      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U)
 80039f8:	4b84      	ldr	r3, [pc, #528]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 80039fa:	681a      	ldr	r2, [r3, #0]
 80039fc:	2380      	movs	r3, #128	; 0x80
 80039fe:	029b      	lsls	r3, r3, #10
 8003a00:	4013      	ands	r3, r2
 8003a02:	d1f0      	bne.n	80039e6 <HAL_RCC_OscConfig+0x112>
 8003a04:	e000      	b.n	8003a08 <HAL_RCC_OscConfig+0x134>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != 0U) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 8003a06:	46c0      	nop			; (mov r8, r8)
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 8003a08:	687b      	ldr	r3, [r7, #4]
 8003a0a:	681b      	ldr	r3, [r3, #0]
 8003a0c:	2202      	movs	r2, #2
 8003a0e:	4013      	ands	r3, r2
 8003a10:	d100      	bne.n	8003a14 <HAL_RCC_OscConfig+0x140>
 8003a12:	e098      	b.n	8003b46 <HAL_RCC_OscConfig+0x272>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    hsi_state = RCC_OscInitStruct->HSIState;
 8003a14:	687b      	ldr	r3, [r7, #4]
 8003a16:	68db      	ldr	r3, [r3, #12]
 8003a18:	627b      	str	r3, [r7, #36]	; 0x24

#if defined(RCC_CR_HSIOUTEN)
    if((hsi_state & RCC_HSI_OUTEN) != 0U)
 8003a1a:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a1c:	2220      	movs	r2, #32
 8003a1e:	4013      	ands	r3, r2
 8003a20:	d009      	beq.n	8003a36 <HAL_RCC_OscConfig+0x162>
    {
      /* HSI Output enable for timer requested */
      SET_BIT(RCC->CR, RCC_CR_HSIOUTEN);
 8003a22:	4b7a      	ldr	r3, [pc, #488]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a24:	681a      	ldr	r2, [r3, #0]
 8003a26:	4b79      	ldr	r3, [pc, #484]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a28:	2120      	movs	r1, #32
 8003a2a:	430a      	orrs	r2, r1
 8003a2c:	601a      	str	r2, [r3, #0]

      hsi_state &= ~RCC_CR_HSIOUTEN;
 8003a2e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a30:	2220      	movs	r2, #32
 8003a32:	4393      	bics	r3, r2
 8003a34:	627b      	str	r3, [r7, #36]	; 0x24
    }
#endif

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((sysclk_source == RCC_SYSCLKSOURCE_STATUS_HSI)
 8003a36:	69fb      	ldr	r3, [r7, #28]
 8003a38:	2b04      	cmp	r3, #4
 8003a3a:	d005      	beq.n	8003a48 <HAL_RCC_OscConfig+0x174>
       || ((sysclk_source == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (pll_config == RCC_PLLSOURCE_HSI)))
 8003a3c:	69fb      	ldr	r3, [r7, #28]
 8003a3e:	2b0c      	cmp	r3, #12
 8003a40:	d13d      	bne.n	8003abe <HAL_RCC_OscConfig+0x1ea>
 8003a42:	69bb      	ldr	r3, [r7, #24]
 8003a44:	2b00      	cmp	r3, #0
 8003a46:	d13a      	bne.n	8003abe <HAL_RCC_OscConfig+0x1ea>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U) && (hsi_state == RCC_HSI_OFF))
 8003a48:	4b70      	ldr	r3, [pc, #448]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a4a:	681b      	ldr	r3, [r3, #0]
 8003a4c:	2204      	movs	r2, #4
 8003a4e:	4013      	ands	r3, r2
 8003a50:	d004      	beq.n	8003a5c <HAL_RCC_OscConfig+0x188>
 8003a52:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003a54:	2b00      	cmp	r3, #0
 8003a56:	d101      	bne.n	8003a5c <HAL_RCC_OscConfig+0x188>
      {
        return HAL_ERROR;
 8003a58:	2301      	movs	r3, #1
 8003a5a:	e301      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      }
      /* Otherwise, just the calibration and HSI or HSIdiv4 are allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003a5c:	4b6b      	ldr	r3, [pc, #428]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a5e:	685b      	ldr	r3, [r3, #4]
 8003a60:	4a6d      	ldr	r2, [pc, #436]	; (8003c18 <HAL_RCC_OscConfig+0x344>)
 8003a62:	4013      	ands	r3, r2
 8003a64:	0019      	movs	r1, r3
 8003a66:	687b      	ldr	r3, [r7, #4]
 8003a68:	691b      	ldr	r3, [r3, #16]
 8003a6a:	021a      	lsls	r2, r3, #8
 8003a6c:	4b67      	ldr	r3, [pc, #412]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a6e:	430a      	orrs	r2, r1
 8003a70:	605a      	str	r2, [r3, #4]

        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8003a72:	4b66      	ldr	r3, [pc, #408]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a74:	681b      	ldr	r3, [r3, #0]
 8003a76:	2209      	movs	r2, #9
 8003a78:	4393      	bics	r3, r2
 8003a7a:	0019      	movs	r1, r3
 8003a7c:	4b63      	ldr	r3, [pc, #396]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a7e:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003a80:	430a      	orrs	r2, r1
 8003a82:	601a      	str	r2, [r3, #0]
      }

      /* Update the SystemCoreClock global variable */
      SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8003a84:	f000 fc20 	bl	80042c8 <HAL_RCC_GetSysClockFreq>
 8003a88:	0001      	movs	r1, r0
 8003a8a:	4b60      	ldr	r3, [pc, #384]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003a8c:	68db      	ldr	r3, [r3, #12]
 8003a8e:	091b      	lsrs	r3, r3, #4
 8003a90:	220f      	movs	r2, #15
 8003a92:	4013      	ands	r3, r2
 8003a94:	4a61      	ldr	r2, [pc, #388]	; (8003c1c <HAL_RCC_OscConfig+0x348>)
 8003a96:	5cd3      	ldrb	r3, [r2, r3]
 8003a98:	000a      	movs	r2, r1
 8003a9a:	40da      	lsrs	r2, r3
 8003a9c:	4b60      	ldr	r3, [pc, #384]	; (8003c20 <HAL_RCC_OscConfig+0x34c>)
 8003a9e:	601a      	str	r2, [r3, #0]

      /* Configure the source of time base considering new system clocks settings*/
      status = HAL_InitTick (TICK_INT_PRIORITY);
 8003aa0:	2513      	movs	r5, #19
 8003aa2:	197c      	adds	r4, r7, r5
 8003aa4:	2000      	movs	r0, #0
 8003aa6:	f7ff fbd9 	bl	800325c <HAL_InitTick>
 8003aaa:	0003      	movs	r3, r0
 8003aac:	7023      	strb	r3, [r4, #0]
      if(status != HAL_OK)
 8003aae:	197b      	adds	r3, r7, r5
 8003ab0:	781b      	ldrb	r3, [r3, #0]
 8003ab2:	2b00      	cmp	r3, #0
 8003ab4:	d047      	beq.n	8003b46 <HAL_RCC_OscConfig+0x272>
      {
        return status;
 8003ab6:	2313      	movs	r3, #19
 8003ab8:	18fb      	adds	r3, r7, r3
 8003aba:	781b      	ldrb	r3, [r3, #0]
 8003abc:	e2d0      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      }
    }
    else
    {
      /* Check the HSI State */
      if(hsi_state != RCC_HSI_OFF)
 8003abe:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8003ac0:	2b00      	cmp	r3, #0
 8003ac2:	d027      	beq.n	8003b14 <HAL_RCC_OscConfig+0x240>
      {
        /* Enable the Internal High Speed oscillator (HSI or HSIdiv4) */
        __HAL_RCC_HSI_CONFIG(hsi_state);
 8003ac4:	4b51      	ldr	r3, [pc, #324]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003ac6:	681b      	ldr	r3, [r3, #0]
 8003ac8:	2209      	movs	r2, #9
 8003aca:	4393      	bics	r3, r2
 8003acc:	0019      	movs	r1, r3
 8003ace:	4b4f      	ldr	r3, [pc, #316]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003ad0:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8003ad2:	430a      	orrs	r2, r1
 8003ad4:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003ad6:	f7ff fc07 	bl	80032e8 <HAL_GetTick>
 8003ada:	0003      	movs	r3, r0
 8003adc:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8003ade:	e008      	b.n	8003af2 <HAL_RCC_OscConfig+0x21e>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003ae0:	f7ff fc02 	bl	80032e8 <HAL_GetTick>
 8003ae4:	0002      	movs	r2, r0
 8003ae6:	697b      	ldr	r3, [r7, #20]
 8003ae8:	1ad3      	subs	r3, r2, r3
 8003aea:	2b02      	cmp	r3, #2
 8003aec:	d901      	bls.n	8003af2 <HAL_RCC_OscConfig+0x21e>
          {
            return HAL_TIMEOUT;
 8003aee:	2303      	movs	r3, #3
 8003af0:	e2b6      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 8003af2:	4b46      	ldr	r3, [pc, #280]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003af4:	681b      	ldr	r3, [r3, #0]
 8003af6:	2204      	movs	r2, #4
 8003af8:	4013      	ands	r3, r2
 8003afa:	d0f1      	beq.n	8003ae0 <HAL_RCC_OscConfig+0x20c>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 8003afc:	4b43      	ldr	r3, [pc, #268]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003afe:	685b      	ldr	r3, [r3, #4]
 8003b00:	4a45      	ldr	r2, [pc, #276]	; (8003c18 <HAL_RCC_OscConfig+0x344>)
 8003b02:	4013      	ands	r3, r2
 8003b04:	0019      	movs	r1, r3
 8003b06:	687b      	ldr	r3, [r7, #4]
 8003b08:	691b      	ldr	r3, [r3, #16]
 8003b0a:	021a      	lsls	r2, r3, #8
 8003b0c:	4b3f      	ldr	r3, [pc, #252]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b0e:	430a      	orrs	r2, r1
 8003b10:	605a      	str	r2, [r3, #4]
 8003b12:	e018      	b.n	8003b46 <HAL_RCC_OscConfig+0x272>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 8003b14:	4b3d      	ldr	r3, [pc, #244]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b16:	681a      	ldr	r2, [r3, #0]
 8003b18:	4b3c      	ldr	r3, [pc, #240]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b1a:	2101      	movs	r1, #1
 8003b1c:	438a      	bics	r2, r1
 8003b1e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003b20:	f7ff fbe2 	bl	80032e8 <HAL_GetTick>
 8003b24:	0003      	movs	r3, r0
 8003b26:	617b      	str	r3, [r7, #20]

        /* Wait till HSI is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8003b28:	e008      	b.n	8003b3c <HAL_RCC_OscConfig+0x268>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 8003b2a:	f7ff fbdd 	bl	80032e8 <HAL_GetTick>
 8003b2e:	0002      	movs	r2, r0
 8003b30:	697b      	ldr	r3, [r7, #20]
 8003b32:	1ad3      	subs	r3, r2, r3
 8003b34:	2b02      	cmp	r3, #2
 8003b36:	d901      	bls.n	8003b3c <HAL_RCC_OscConfig+0x268>
          {
            return HAL_TIMEOUT;
 8003b38:	2303      	movs	r3, #3
 8003b3a:	e291      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != 0U)
 8003b3c:	4b33      	ldr	r3, [pc, #204]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b3e:	681b      	ldr	r3, [r3, #0]
 8003b40:	2204      	movs	r2, #4
 8003b42:	4013      	ands	r3, r2
 8003b44:	d1f1      	bne.n	8003b2a <HAL_RCC_OscConfig+0x256>
        }
      }
    }
  }
  /*----------------------------- MSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_MSI) == RCC_OSCILLATORTYPE_MSI)
 8003b46:	687b      	ldr	r3, [r7, #4]
 8003b48:	681b      	ldr	r3, [r3, #0]
 8003b4a:	2210      	movs	r2, #16
 8003b4c:	4013      	ands	r3, r2
 8003b4e:	d100      	bne.n	8003b52 <HAL_RCC_OscConfig+0x27e>
 8003b50:	e09f      	b.n	8003c92 <HAL_RCC_OscConfig+0x3be>
  {
    /* When the MSI is used as system clock it will not be disabled */
    if((sysclk_source == RCC_CFGR_SWS_MSI) )
 8003b52:	69fb      	ldr	r3, [r7, #28]
 8003b54:	2b00      	cmp	r3, #0
 8003b56:	d13f      	bne.n	8003bd8 <HAL_RCC_OscConfig+0x304>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U) && (RCC_OscInitStruct->MSIState == RCC_MSI_OFF))
 8003b58:	4b2c      	ldr	r3, [pc, #176]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b5a:	681a      	ldr	r2, [r3, #0]
 8003b5c:	2380      	movs	r3, #128	; 0x80
 8003b5e:	009b      	lsls	r3, r3, #2
 8003b60:	4013      	ands	r3, r2
 8003b62:	d005      	beq.n	8003b70 <HAL_RCC_OscConfig+0x29c>
 8003b64:	687b      	ldr	r3, [r7, #4]
 8003b66:	69db      	ldr	r3, [r3, #28]
 8003b68:	2b00      	cmp	r3, #0
 8003b6a:	d101      	bne.n	8003b70 <HAL_RCC_OscConfig+0x29c>
      {
        return HAL_ERROR;
 8003b6c:	2301      	movs	r3, #1
 8003b6e:	e277      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8003b70:	4b26      	ldr	r3, [pc, #152]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b72:	685b      	ldr	r3, [r3, #4]
 8003b74:	4a2b      	ldr	r2, [pc, #172]	; (8003c24 <HAL_RCC_OscConfig+0x350>)
 8003b76:	4013      	ands	r3, r2
 8003b78:	0019      	movs	r1, r3
 8003b7a:	687b      	ldr	r3, [r7, #4]
 8003b7c:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003b7e:	4b23      	ldr	r3, [pc, #140]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b80:	430a      	orrs	r2, r1
 8003b82:	605a      	str	r2, [r3, #4]
        /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8003b84:	4b21      	ldr	r3, [pc, #132]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b86:	685b      	ldr	r3, [r3, #4]
 8003b88:	021b      	lsls	r3, r3, #8
 8003b8a:	0a19      	lsrs	r1, r3, #8
 8003b8c:	687b      	ldr	r3, [r7, #4]
 8003b8e:	6a1b      	ldr	r3, [r3, #32]
 8003b90:	061a      	lsls	r2, r3, #24
 8003b92:	4b1e      	ldr	r3, [pc, #120]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003b94:	430a      	orrs	r2, r1
 8003b96:	605a      	str	r2, [r3, #4]


        /* Update the SystemCoreClock global variable */
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8003b98:	687b      	ldr	r3, [r7, #4]
 8003b9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8003b9c:	0b5b      	lsrs	r3, r3, #13
 8003b9e:	3301      	adds	r3, #1
 8003ba0:	2280      	movs	r2, #128	; 0x80
 8003ba2:	0212      	lsls	r2, r2, #8
 8003ba4:	409a      	lsls	r2, r3
                           >> AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 8003ba6:	4b19      	ldr	r3, [pc, #100]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003ba8:	68db      	ldr	r3, [r3, #12]
 8003baa:	091b      	lsrs	r3, r3, #4
 8003bac:	210f      	movs	r1, #15
 8003bae:	400b      	ands	r3, r1
 8003bb0:	491a      	ldr	r1, [pc, #104]	; (8003c1c <HAL_RCC_OscConfig+0x348>)
 8003bb2:	5ccb      	ldrb	r3, [r1, r3]
 8003bb4:	40da      	lsrs	r2, r3
        SystemCoreClock =  (32768U * (1UL << ((RCC_OscInitStruct->MSIClockRange >> RCC_ICSCR_MSIRANGE_Pos) + 1U)))
 8003bb6:	4b1a      	ldr	r3, [pc, #104]	; (8003c20 <HAL_RCC_OscConfig+0x34c>)
 8003bb8:	601a      	str	r2, [r3, #0]

        /* Configure the source of time base considering new system clocks settings*/
        status = HAL_InitTick (TICK_INT_PRIORITY);
 8003bba:	2513      	movs	r5, #19
 8003bbc:	197c      	adds	r4, r7, r5
 8003bbe:	2000      	movs	r0, #0
 8003bc0:	f7ff fb4c 	bl	800325c <HAL_InitTick>
 8003bc4:	0003      	movs	r3, r0
 8003bc6:	7023      	strb	r3, [r4, #0]
        if(status != HAL_OK)
 8003bc8:	197b      	adds	r3, r7, r5
 8003bca:	781b      	ldrb	r3, [r3, #0]
 8003bcc:	2b00      	cmp	r3, #0
 8003bce:	d060      	beq.n	8003c92 <HAL_RCC_OscConfig+0x3be>
        {
          return status;
 8003bd0:	2313      	movs	r3, #19
 8003bd2:	18fb      	adds	r3, r7, r3
 8003bd4:	781b      	ldrb	r3, [r3, #0]
 8003bd6:	e243      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
    {
      /* Check MSI State */
      assert_param(IS_RCC_MSI(RCC_OscInitStruct->MSIState));

      /* Check the MSI State */
      if(RCC_OscInitStruct->MSIState != RCC_MSI_OFF)
 8003bd8:	687b      	ldr	r3, [r7, #4]
 8003bda:	69db      	ldr	r3, [r3, #28]
 8003bdc:	2b00      	cmp	r3, #0
 8003bde:	d03e      	beq.n	8003c5e <HAL_RCC_OscConfig+0x38a>
      {
        /* Enable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_ENABLE();
 8003be0:	4b0a      	ldr	r3, [pc, #40]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003be2:	681a      	ldr	r2, [r3, #0]
 8003be4:	4b09      	ldr	r3, [pc, #36]	; (8003c0c <HAL_RCC_OscConfig+0x338>)
 8003be6:	2180      	movs	r1, #128	; 0x80
 8003be8:	0049      	lsls	r1, r1, #1
 8003bea:	430a      	orrs	r2, r1
 8003bec:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003bee:	f7ff fb7b 	bl	80032e8 <HAL_GetTick>
 8003bf2:	0003      	movs	r3, r0
 8003bf4:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8003bf6:	e017      	b.n	8003c28 <HAL_RCC_OscConfig+0x354>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8003bf8:	f7ff fb76 	bl	80032e8 <HAL_GetTick>
 8003bfc:	0002      	movs	r2, r0
 8003bfe:	697b      	ldr	r3, [r7, #20]
 8003c00:	1ad3      	subs	r3, r2, r3
 8003c02:	2b02      	cmp	r3, #2
 8003c04:	d910      	bls.n	8003c28 <HAL_RCC_OscConfig+0x354>
          {
            return HAL_TIMEOUT;
 8003c06:	2303      	movs	r3, #3
 8003c08:	e22a      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
 8003c0a:	46c0      	nop			; (mov r8, r8)
 8003c0c:	40021000 	.word	0x40021000
 8003c10:	fffeffff 	.word	0xfffeffff
 8003c14:	fffbffff 	.word	0xfffbffff
 8003c18:	ffffe0ff 	.word	0xffffe0ff
 8003c1c:	0800a300 	.word	0x0800a300
 8003c20:	20000000 	.word	0x20000000
 8003c24:	ffff1fff 	.word	0xffff1fff
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 8003c28:	4bc6      	ldr	r3, [pc, #792]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c2a:	681a      	ldr	r2, [r3, #0]
 8003c2c:	2380      	movs	r3, #128	; 0x80
 8003c2e:	009b      	lsls	r3, r3, #2
 8003c30:	4013      	ands	r3, r2
 8003c32:	d0e1      	beq.n	8003bf8 <HAL_RCC_OscConfig+0x324>
        /* Check MSICalibrationValue and MSIClockRange input parameters */
        assert_param(IS_RCC_MSICALIBRATION_VALUE(RCC_OscInitStruct->MSICalibrationValue));
        assert_param(IS_RCC_MSI_CLOCK_RANGE(RCC_OscInitStruct->MSIClockRange));

        /* Selects the Multiple Speed oscillator (MSI) clock range .*/
        __HAL_RCC_MSI_RANGE_CONFIG(RCC_OscInitStruct->MSIClockRange);
 8003c34:	4bc3      	ldr	r3, [pc, #780]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c36:	685b      	ldr	r3, [r3, #4]
 8003c38:	4ac3      	ldr	r2, [pc, #780]	; (8003f48 <HAL_RCC_OscConfig+0x674>)
 8003c3a:	4013      	ands	r3, r2
 8003c3c:	0019      	movs	r1, r3
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 8003c42:	4bc0      	ldr	r3, [pc, #768]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c44:	430a      	orrs	r2, r1
 8003c46:	605a      	str	r2, [r3, #4]
         /* Adjusts the Multiple Speed oscillator (MSI) calibration value.*/
        __HAL_RCC_MSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->MSICalibrationValue);
 8003c48:	4bbe      	ldr	r3, [pc, #760]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c4a:	685b      	ldr	r3, [r3, #4]
 8003c4c:	021b      	lsls	r3, r3, #8
 8003c4e:	0a19      	lsrs	r1, r3, #8
 8003c50:	687b      	ldr	r3, [r7, #4]
 8003c52:	6a1b      	ldr	r3, [r3, #32]
 8003c54:	061a      	lsls	r2, r3, #24
 8003c56:	4bbb      	ldr	r3, [pc, #748]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c58:	430a      	orrs	r2, r1
 8003c5a:	605a      	str	r2, [r3, #4]
 8003c5c:	e019      	b.n	8003c92 <HAL_RCC_OscConfig+0x3be>
      }
      else
      {
        /* Disable the Multi Speed oscillator (MSI). */
        __HAL_RCC_MSI_DISABLE();
 8003c5e:	4bb9      	ldr	r3, [pc, #740]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c60:	681a      	ldr	r2, [r3, #0]
 8003c62:	4bb8      	ldr	r3, [pc, #736]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c64:	49b9      	ldr	r1, [pc, #740]	; (8003f4c <HAL_RCC_OscConfig+0x678>)
 8003c66:	400a      	ands	r2, r1
 8003c68:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003c6a:	f7ff fb3d 	bl	80032e8 <HAL_GetTick>
 8003c6e:	0003      	movs	r3, r0
 8003c70:	617b      	str	r3, [r7, #20]

        /* Wait till MSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8003c72:	e008      	b.n	8003c86 <HAL_RCC_OscConfig+0x3b2>
        {
          if((HAL_GetTick() - tickstart) > MSI_TIMEOUT_VALUE)
 8003c74:	f7ff fb38 	bl	80032e8 <HAL_GetTick>
 8003c78:	0002      	movs	r2, r0
 8003c7a:	697b      	ldr	r3, [r7, #20]
 8003c7c:	1ad3      	subs	r3, r2, r3
 8003c7e:	2b02      	cmp	r3, #2
 8003c80:	d901      	bls.n	8003c86 <HAL_RCC_OscConfig+0x3b2>
          {
            return HAL_TIMEOUT;
 8003c82:	2303      	movs	r3, #3
 8003c84:	e1ec      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) != 0U)
 8003c86:	4baf      	ldr	r3, [pc, #700]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003c88:	681a      	ldr	r2, [r3, #0]
 8003c8a:	2380      	movs	r3, #128	; 0x80
 8003c8c:	009b      	lsls	r3, r3, #2
 8003c8e:	4013      	ands	r3, r2
 8003c90:	d1f0      	bne.n	8003c74 <HAL_RCC_OscConfig+0x3a0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 8003c92:	687b      	ldr	r3, [r7, #4]
 8003c94:	681b      	ldr	r3, [r3, #0]
 8003c96:	2208      	movs	r2, #8
 8003c98:	4013      	ands	r3, r2
 8003c9a:	d036      	beq.n	8003d0a <HAL_RCC_OscConfig+0x436>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 8003c9c:	687b      	ldr	r3, [r7, #4]
 8003c9e:	695b      	ldr	r3, [r3, #20]
 8003ca0:	2b00      	cmp	r3, #0
 8003ca2:	d019      	beq.n	8003cd8 <HAL_RCC_OscConfig+0x404>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 8003ca4:	4ba7      	ldr	r3, [pc, #668]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003ca6:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003ca8:	4ba6      	ldr	r3, [pc, #664]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003caa:	2101      	movs	r1, #1
 8003cac:	430a      	orrs	r2, r1
 8003cae:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003cb0:	f7ff fb1a 	bl	80032e8 <HAL_GetTick>
 8003cb4:	0003      	movs	r3, r0
 8003cb6:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8003cb8:	e008      	b.n	8003ccc <HAL_RCC_OscConfig+0x3f8>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003cba:	f7ff fb15 	bl	80032e8 <HAL_GetTick>
 8003cbe:	0002      	movs	r2, r0
 8003cc0:	697b      	ldr	r3, [r7, #20]
 8003cc2:	1ad3      	subs	r3, r2, r3
 8003cc4:	2b02      	cmp	r3, #2
 8003cc6:	d901      	bls.n	8003ccc <HAL_RCC_OscConfig+0x3f8>
        {
          return HAL_TIMEOUT;
 8003cc8:	2303      	movs	r3, #3
 8003cca:	e1c9      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == 0U)
 8003ccc:	4b9d      	ldr	r3, [pc, #628]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003cce:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003cd0:	2202      	movs	r2, #2
 8003cd2:	4013      	ands	r3, r2
 8003cd4:	d0f1      	beq.n	8003cba <HAL_RCC_OscConfig+0x3e6>
 8003cd6:	e018      	b.n	8003d0a <HAL_RCC_OscConfig+0x436>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 8003cd8:	4b9a      	ldr	r3, [pc, #616]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003cda:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003cdc:	4b99      	ldr	r3, [pc, #612]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003cde:	2101      	movs	r1, #1
 8003ce0:	438a      	bics	r2, r1
 8003ce2:	651a      	str	r2, [r3, #80]	; 0x50

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003ce4:	f7ff fb00 	bl	80032e8 <HAL_GetTick>
 8003ce8:	0003      	movs	r3, r0
 8003cea:	617b      	str	r3, [r7, #20]

      /* Wait till LSI is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8003cec:	e008      	b.n	8003d00 <HAL_RCC_OscConfig+0x42c>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 8003cee:	f7ff fafb 	bl	80032e8 <HAL_GetTick>
 8003cf2:	0002      	movs	r2, r0
 8003cf4:	697b      	ldr	r3, [r7, #20]
 8003cf6:	1ad3      	subs	r3, r2, r3
 8003cf8:	2b02      	cmp	r3, #2
 8003cfa:	d901      	bls.n	8003d00 <HAL_RCC_OscConfig+0x42c>
        {
          return HAL_TIMEOUT;
 8003cfc:	2303      	movs	r3, #3
 8003cfe:	e1af      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != 0U)
 8003d00:	4b90      	ldr	r3, [pc, #576]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003d02:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8003d04:	2202      	movs	r2, #2
 8003d06:	4013      	ands	r3, r2
 8003d08:	d1f1      	bne.n	8003cee <HAL_RCC_OscConfig+0x41a>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 8003d0a:	687b      	ldr	r3, [r7, #4]
 8003d0c:	681b      	ldr	r3, [r3, #0]
 8003d0e:	2204      	movs	r2, #4
 8003d10:	4013      	ands	r3, r2
 8003d12:	d100      	bne.n	8003d16 <HAL_RCC_OscConfig+0x442>
 8003d14:	e0af      	b.n	8003e76 <HAL_RCC_OscConfig+0x5a2>
  {
    FlagStatus       pwrclkchanged = RESET;
 8003d16:	2323      	movs	r3, #35	; 0x23
 8003d18:	18fb      	adds	r3, r7, r3
 8003d1a:	2200      	movs	r2, #0
 8003d1c:	701a      	strb	r2, [r3, #0]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8003d1e:	4b89      	ldr	r3, [pc, #548]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003d20:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003d22:	2380      	movs	r3, #128	; 0x80
 8003d24:	055b      	lsls	r3, r3, #21
 8003d26:	4013      	ands	r3, r2
 8003d28:	d10a      	bne.n	8003d40 <HAL_RCC_OscConfig+0x46c>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8003d2a:	4b86      	ldr	r3, [pc, #536]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003d2c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003d2e:	4b85      	ldr	r3, [pc, #532]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003d30:	2180      	movs	r1, #128	; 0x80
 8003d32:	0549      	lsls	r1, r1, #21
 8003d34:	430a      	orrs	r2, r1
 8003d36:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 8003d38:	2323      	movs	r3, #35	; 0x23
 8003d3a:	18fb      	adds	r3, r7, r3
 8003d3c:	2201      	movs	r2, #1
 8003d3e:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003d40:	4b83      	ldr	r3, [pc, #524]	; (8003f50 <HAL_RCC_OscConfig+0x67c>)
 8003d42:	681a      	ldr	r2, [r3, #0]
 8003d44:	2380      	movs	r3, #128	; 0x80
 8003d46:	005b      	lsls	r3, r3, #1
 8003d48:	4013      	ands	r3, r2
 8003d4a:	d11a      	bne.n	8003d82 <HAL_RCC_OscConfig+0x4ae>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8003d4c:	4b80      	ldr	r3, [pc, #512]	; (8003f50 <HAL_RCC_OscConfig+0x67c>)
 8003d4e:	681a      	ldr	r2, [r3, #0]
 8003d50:	4b7f      	ldr	r3, [pc, #508]	; (8003f50 <HAL_RCC_OscConfig+0x67c>)
 8003d52:	2180      	movs	r1, #128	; 0x80
 8003d54:	0049      	lsls	r1, r1, #1
 8003d56:	430a      	orrs	r2, r1
 8003d58:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 8003d5a:	f7ff fac5 	bl	80032e8 <HAL_GetTick>
 8003d5e:	0003      	movs	r3, r0
 8003d60:	617b      	str	r3, [r7, #20]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003d62:	e008      	b.n	8003d76 <HAL_RCC_OscConfig+0x4a2>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 8003d64:	f7ff fac0 	bl	80032e8 <HAL_GetTick>
 8003d68:	0002      	movs	r2, r0
 8003d6a:	697b      	ldr	r3, [r7, #20]
 8003d6c:	1ad3      	subs	r3, r2, r3
 8003d6e:	2b64      	cmp	r3, #100	; 0x64
 8003d70:	d901      	bls.n	8003d76 <HAL_RCC_OscConfig+0x4a2>
        {
          return HAL_TIMEOUT;
 8003d72:	2303      	movs	r3, #3
 8003d74:	e174      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8003d76:	4b76      	ldr	r3, [pc, #472]	; (8003f50 <HAL_RCC_OscConfig+0x67c>)
 8003d78:	681a      	ldr	r2, [r3, #0]
 8003d7a:	2380      	movs	r3, #128	; 0x80
 8003d7c:	005b      	lsls	r3, r3, #1
 8003d7e:	4013      	ands	r3, r2
 8003d80:	d0f0      	beq.n	8003d64 <HAL_RCC_OscConfig+0x490>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 8003d82:	687b      	ldr	r3, [r7, #4]
 8003d84:	689a      	ldr	r2, [r3, #8]
 8003d86:	2380      	movs	r3, #128	; 0x80
 8003d88:	005b      	lsls	r3, r3, #1
 8003d8a:	429a      	cmp	r2, r3
 8003d8c:	d107      	bne.n	8003d9e <HAL_RCC_OscConfig+0x4ca>
 8003d8e:	4b6d      	ldr	r3, [pc, #436]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003d90:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003d92:	4b6c      	ldr	r3, [pc, #432]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003d94:	2180      	movs	r1, #128	; 0x80
 8003d96:	0049      	lsls	r1, r1, #1
 8003d98:	430a      	orrs	r2, r1
 8003d9a:	651a      	str	r2, [r3, #80]	; 0x50
 8003d9c:	e031      	b.n	8003e02 <HAL_RCC_OscConfig+0x52e>
 8003d9e:	687b      	ldr	r3, [r7, #4]
 8003da0:	689b      	ldr	r3, [r3, #8]
 8003da2:	2b00      	cmp	r3, #0
 8003da4:	d10c      	bne.n	8003dc0 <HAL_RCC_OscConfig+0x4ec>
 8003da6:	4b67      	ldr	r3, [pc, #412]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003da8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003daa:	4b66      	ldr	r3, [pc, #408]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003dac:	4967      	ldr	r1, [pc, #412]	; (8003f4c <HAL_RCC_OscConfig+0x678>)
 8003dae:	400a      	ands	r2, r1
 8003db0:	651a      	str	r2, [r3, #80]	; 0x50
 8003db2:	4b64      	ldr	r3, [pc, #400]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003db4:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003db6:	4b63      	ldr	r3, [pc, #396]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003db8:	4966      	ldr	r1, [pc, #408]	; (8003f54 <HAL_RCC_OscConfig+0x680>)
 8003dba:	400a      	ands	r2, r1
 8003dbc:	651a      	str	r2, [r3, #80]	; 0x50
 8003dbe:	e020      	b.n	8003e02 <HAL_RCC_OscConfig+0x52e>
 8003dc0:	687b      	ldr	r3, [r7, #4]
 8003dc2:	689a      	ldr	r2, [r3, #8]
 8003dc4:	23a0      	movs	r3, #160	; 0xa0
 8003dc6:	00db      	lsls	r3, r3, #3
 8003dc8:	429a      	cmp	r2, r3
 8003dca:	d10e      	bne.n	8003dea <HAL_RCC_OscConfig+0x516>
 8003dcc:	4b5d      	ldr	r3, [pc, #372]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003dce:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003dd0:	4b5c      	ldr	r3, [pc, #368]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003dd2:	2180      	movs	r1, #128	; 0x80
 8003dd4:	00c9      	lsls	r1, r1, #3
 8003dd6:	430a      	orrs	r2, r1
 8003dd8:	651a      	str	r2, [r3, #80]	; 0x50
 8003dda:	4b5a      	ldr	r3, [pc, #360]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003ddc:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003dde:	4b59      	ldr	r3, [pc, #356]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003de0:	2180      	movs	r1, #128	; 0x80
 8003de2:	0049      	lsls	r1, r1, #1
 8003de4:	430a      	orrs	r2, r1
 8003de6:	651a      	str	r2, [r3, #80]	; 0x50
 8003de8:	e00b      	b.n	8003e02 <HAL_RCC_OscConfig+0x52e>
 8003dea:	4b56      	ldr	r3, [pc, #344]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003dec:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003dee:	4b55      	ldr	r3, [pc, #340]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003df0:	4956      	ldr	r1, [pc, #344]	; (8003f4c <HAL_RCC_OscConfig+0x678>)
 8003df2:	400a      	ands	r2, r1
 8003df4:	651a      	str	r2, [r3, #80]	; 0x50
 8003df6:	4b53      	ldr	r3, [pc, #332]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003df8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003dfa:	4b52      	ldr	r3, [pc, #328]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003dfc:	4955      	ldr	r1, [pc, #340]	; (8003f54 <HAL_RCC_OscConfig+0x680>)
 8003dfe:	400a      	ands	r2, r1
 8003e00:	651a      	str	r2, [r3, #80]	; 0x50
    /* Check the LSE State */
    if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 8003e02:	687b      	ldr	r3, [r7, #4]
 8003e04:	689b      	ldr	r3, [r3, #8]
 8003e06:	2b00      	cmp	r3, #0
 8003e08:	d015      	beq.n	8003e36 <HAL_RCC_OscConfig+0x562>
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003e0a:	f7ff fa6d 	bl	80032e8 <HAL_GetTick>
 8003e0e:	0003      	movs	r3, r0
 8003e10:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003e12:	e009      	b.n	8003e28 <HAL_RCC_OscConfig+0x554>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003e14:	f7ff fa68 	bl	80032e8 <HAL_GetTick>
 8003e18:	0002      	movs	r2, r0
 8003e1a:	697b      	ldr	r3, [r7, #20]
 8003e1c:	1ad3      	subs	r3, r2, r3
 8003e1e:	4a4e      	ldr	r2, [pc, #312]	; (8003f58 <HAL_RCC_OscConfig+0x684>)
 8003e20:	4293      	cmp	r3, r2
 8003e22:	d901      	bls.n	8003e28 <HAL_RCC_OscConfig+0x554>
        {
          return HAL_TIMEOUT;
 8003e24:	2303      	movs	r3, #3
 8003e26:	e11b      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 8003e28:	4b46      	ldr	r3, [pc, #280]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e2a:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003e2c:	2380      	movs	r3, #128	; 0x80
 8003e2e:	009b      	lsls	r3, r3, #2
 8003e30:	4013      	ands	r3, r2
 8003e32:	d0ef      	beq.n	8003e14 <HAL_RCC_OscConfig+0x540>
 8003e34:	e014      	b.n	8003e60 <HAL_RCC_OscConfig+0x58c>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 8003e36:	f7ff fa57 	bl	80032e8 <HAL_GetTick>
 8003e3a:	0003      	movs	r3, r0
 8003e3c:	617b      	str	r3, [r7, #20]

      /* Wait till LSE is disabled */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8003e3e:	e009      	b.n	8003e54 <HAL_RCC_OscConfig+0x580>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 8003e40:	f7ff fa52 	bl	80032e8 <HAL_GetTick>
 8003e44:	0002      	movs	r2, r0
 8003e46:	697b      	ldr	r3, [r7, #20]
 8003e48:	1ad3      	subs	r3, r2, r3
 8003e4a:	4a43      	ldr	r2, [pc, #268]	; (8003f58 <HAL_RCC_OscConfig+0x684>)
 8003e4c:	4293      	cmp	r3, r2
 8003e4e:	d901      	bls.n	8003e54 <HAL_RCC_OscConfig+0x580>
        {
          return HAL_TIMEOUT;
 8003e50:	2303      	movs	r3, #3
 8003e52:	e105      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != 0U)
 8003e54:	4b3b      	ldr	r3, [pc, #236]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e56:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8003e58:	2380      	movs	r3, #128	; 0x80
 8003e5a:	009b      	lsls	r3, r3, #2
 8003e5c:	4013      	ands	r3, r2
 8003e5e:	d1ef      	bne.n	8003e40 <HAL_RCC_OscConfig+0x56c>
        }
      }
    }

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8003e60:	2323      	movs	r3, #35	; 0x23
 8003e62:	18fb      	adds	r3, r7, r3
 8003e64:	781b      	ldrb	r3, [r3, #0]
 8003e66:	2b01      	cmp	r3, #1
 8003e68:	d105      	bne.n	8003e76 <HAL_RCC_OscConfig+0x5a2>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 8003e6a:	4b36      	ldr	r3, [pc, #216]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e6c:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8003e6e:	4b35      	ldr	r3, [pc, #212]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e70:	493a      	ldr	r1, [pc, #232]	; (8003f5c <HAL_RCC_OscConfig+0x688>)
 8003e72:	400a      	ands	r2, r1
 8003e74:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined(RCC_HSI48_SUPPORT)
  /*----------------------------- HSI48 Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI48) == RCC_OSCILLATORTYPE_HSI48)
 8003e76:	687b      	ldr	r3, [r7, #4]
 8003e78:	681b      	ldr	r3, [r3, #0]
 8003e7a:	2220      	movs	r2, #32
 8003e7c:	4013      	ands	r3, r2
 8003e7e:	d049      	beq.n	8003f14 <HAL_RCC_OscConfig+0x640>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSI48(RCC_OscInitStruct->HSI48State));

      /* Check the HSI48 State */
      if(RCC_OscInitStruct->HSI48State != RCC_HSI48_OFF)
 8003e80:	687b      	ldr	r3, [r7, #4]
 8003e82:	699b      	ldr	r3, [r3, #24]
 8003e84:	2b00      	cmp	r3, #0
 8003e86:	d026      	beq.n	8003ed6 <HAL_RCC_OscConfig+0x602>
      {
        /* Enable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_ENABLE();
 8003e88:	4b2e      	ldr	r3, [pc, #184]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e8a:	689a      	ldr	r2, [r3, #8]
 8003e8c:	4b2d      	ldr	r3, [pc, #180]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e8e:	2101      	movs	r1, #1
 8003e90:	430a      	orrs	r2, r1
 8003e92:	609a      	str	r2, [r3, #8]
 8003e94:	4b2b      	ldr	r3, [pc, #172]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e96:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 8003e98:	4b2a      	ldr	r3, [pc, #168]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003e9a:	2101      	movs	r1, #1
 8003e9c:	430a      	orrs	r2, r1
 8003e9e:	635a      	str	r2, [r3, #52]	; 0x34
 8003ea0:	4b2f      	ldr	r3, [pc, #188]	; (8003f60 <HAL_RCC_OscConfig+0x68c>)
 8003ea2:	6a1a      	ldr	r2, [r3, #32]
 8003ea4:	4b2e      	ldr	r3, [pc, #184]	; (8003f60 <HAL_RCC_OscConfig+0x68c>)
 8003ea6:	2180      	movs	r1, #128	; 0x80
 8003ea8:	0189      	lsls	r1, r1, #6
 8003eaa:	430a      	orrs	r2, r1
 8003eac:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003eae:	f7ff fa1b 	bl	80032e8 <HAL_GetTick>
 8003eb2:	0003      	movs	r3, r0
 8003eb4:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8003eb6:	e008      	b.n	8003eca <HAL_RCC_OscConfig+0x5f6>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003eb8:	f7ff fa16 	bl	80032e8 <HAL_GetTick>
 8003ebc:	0002      	movs	r2, r0
 8003ebe:	697b      	ldr	r3, [r7, #20]
 8003ec0:	1ad3      	subs	r3, r2, r3
 8003ec2:	2b02      	cmp	r3, #2
 8003ec4:	d901      	bls.n	8003eca <HAL_RCC_OscConfig+0x5f6>
          {
            return HAL_TIMEOUT;
 8003ec6:	2303      	movs	r3, #3
 8003ec8:	e0ca      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) == 0U)
 8003eca:	4b1e      	ldr	r3, [pc, #120]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003ecc:	689b      	ldr	r3, [r3, #8]
 8003ece:	2202      	movs	r2, #2
 8003ed0:	4013      	ands	r3, r2
 8003ed2:	d0f1      	beq.n	8003eb8 <HAL_RCC_OscConfig+0x5e4>
 8003ed4:	e01e      	b.n	8003f14 <HAL_RCC_OscConfig+0x640>
        }
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI48). */
        __HAL_RCC_HSI48_DISABLE();
 8003ed6:	4b1b      	ldr	r3, [pc, #108]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003ed8:	689a      	ldr	r2, [r3, #8]
 8003eda:	4b1a      	ldr	r3, [pc, #104]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003edc:	2101      	movs	r1, #1
 8003ede:	438a      	bics	r2, r1
 8003ee0:	609a      	str	r2, [r3, #8]
 8003ee2:	4b1f      	ldr	r3, [pc, #124]	; (8003f60 <HAL_RCC_OscConfig+0x68c>)
 8003ee4:	6a1a      	ldr	r2, [r3, #32]
 8003ee6:	4b1e      	ldr	r3, [pc, #120]	; (8003f60 <HAL_RCC_OscConfig+0x68c>)
 8003ee8:	491e      	ldr	r1, [pc, #120]	; (8003f64 <HAL_RCC_OscConfig+0x690>)
 8003eea:	400a      	ands	r2, r1
 8003eec:	621a      	str	r2, [r3, #32]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003eee:	f7ff f9fb 	bl	80032e8 <HAL_GetTick>
 8003ef2:	0003      	movs	r3, r0
 8003ef4:	617b      	str	r3, [r7, #20]

        /* Wait till HSI48 is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8003ef6:	e008      	b.n	8003f0a <HAL_RCC_OscConfig+0x636>
        {
          if((HAL_GetTick() - tickstart) > HSI48_TIMEOUT_VALUE)
 8003ef8:	f7ff f9f6 	bl	80032e8 <HAL_GetTick>
 8003efc:	0002      	movs	r2, r0
 8003efe:	697b      	ldr	r3, [r7, #20]
 8003f00:	1ad3      	subs	r3, r2, r3
 8003f02:	2b02      	cmp	r3, #2
 8003f04:	d901      	bls.n	8003f0a <HAL_RCC_OscConfig+0x636>
          {
            return HAL_TIMEOUT;
 8003f06:	2303      	movs	r3, #3
 8003f08:	e0aa      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSI48RDY) != 0U)
 8003f0a:	4b0e      	ldr	r3, [pc, #56]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003f0c:	689b      	ldr	r3, [r3, #8]
 8003f0e:	2202      	movs	r2, #2
 8003f10:	4013      	ands	r3, r2
 8003f12:	d1f1      	bne.n	8003ef8 <HAL_RCC_OscConfig+0x624>
#endif /* RCC_HSI48_SUPPORT */

  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 8003f14:	687b      	ldr	r3, [r7, #4]
 8003f16:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003f18:	2b00      	cmp	r3, #0
 8003f1a:	d100      	bne.n	8003f1e <HAL_RCC_OscConfig+0x64a>
 8003f1c:	e09f      	b.n	800405e <HAL_RCC_OscConfig+0x78a>
  {
    /* Check if the PLL is used as system clock or not */
    if(sysclk_source != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 8003f1e:	69fb      	ldr	r3, [r7, #28]
 8003f20:	2b0c      	cmp	r3, #12
 8003f22:	d100      	bne.n	8003f26 <HAL_RCC_OscConfig+0x652>
 8003f24:	e078      	b.n	8004018 <HAL_RCC_OscConfig+0x744>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 8003f26:	687b      	ldr	r3, [r7, #4]
 8003f28:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 8003f2a:	2b02      	cmp	r3, #2
 8003f2c:	d159      	bne.n	8003fe2 <HAL_RCC_OscConfig+0x70e>
        assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
        assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
        assert_param(IS_RCC_PLL_DIV(RCC_OscInitStruct->PLL.PLLDIV));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003f2e:	4b05      	ldr	r3, [pc, #20]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003f30:	681a      	ldr	r2, [r3, #0]
 8003f32:	4b04      	ldr	r3, [pc, #16]	; (8003f44 <HAL_RCC_OscConfig+0x670>)
 8003f34:	490c      	ldr	r1, [pc, #48]	; (8003f68 <HAL_RCC_OscConfig+0x694>)
 8003f36:	400a      	ands	r2, r1
 8003f38:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003f3a:	f7ff f9d5 	bl	80032e8 <HAL_GetTick>
 8003f3e:	0003      	movs	r3, r0
 8003f40:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003f42:	e01c      	b.n	8003f7e <HAL_RCC_OscConfig+0x6aa>
 8003f44:	40021000 	.word	0x40021000
 8003f48:	ffff1fff 	.word	0xffff1fff
 8003f4c:	fffffeff 	.word	0xfffffeff
 8003f50:	40007000 	.word	0x40007000
 8003f54:	fffffbff 	.word	0xfffffbff
 8003f58:	00001388 	.word	0x00001388
 8003f5c:	efffffff 	.word	0xefffffff
 8003f60:	40010000 	.word	0x40010000
 8003f64:	ffffdfff 	.word	0xffffdfff
 8003f68:	feffffff 	.word	0xfeffffff
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003f6c:	f7ff f9bc 	bl	80032e8 <HAL_GetTick>
 8003f70:	0002      	movs	r2, r0
 8003f72:	697b      	ldr	r3, [r7, #20]
 8003f74:	1ad3      	subs	r3, r2, r3
 8003f76:	2b02      	cmp	r3, #2
 8003f78:	d901      	bls.n	8003f7e <HAL_RCC_OscConfig+0x6aa>
          {
            return HAL_TIMEOUT;
 8003f7a:	2303      	movs	r3, #3
 8003f7c:	e070      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003f7e:	4b3a      	ldr	r3, [pc, #232]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003f80:	681a      	ldr	r2, [r3, #0]
 8003f82:	2380      	movs	r3, #128	; 0x80
 8003f84:	049b      	lsls	r3, r3, #18
 8003f86:	4013      	ands	r3, r2
 8003f88:	d1f0      	bne.n	8003f6c <HAL_RCC_OscConfig+0x698>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 8003f8a:	4b37      	ldr	r3, [pc, #220]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003f8c:	68db      	ldr	r3, [r3, #12]
 8003f8e:	4a37      	ldr	r2, [pc, #220]	; (800406c <HAL_RCC_OscConfig+0x798>)
 8003f90:	4013      	ands	r3, r2
 8003f92:	0019      	movs	r1, r3
 8003f94:	687b      	ldr	r3, [r7, #4]
 8003f96:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8003f98:	687b      	ldr	r3, [r7, #4]
 8003f9a:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8003f9c:	431a      	orrs	r2, r3
 8003f9e:	687b      	ldr	r3, [r7, #4]
 8003fa0:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8003fa2:	431a      	orrs	r2, r3
 8003fa4:	4b30      	ldr	r3, [pc, #192]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003fa6:	430a      	orrs	r2, r1
 8003fa8:	60da      	str	r2, [r3, #12]
                             RCC_OscInitStruct->PLL.PLLMUL,
                             RCC_OscInitStruct->PLL.PLLDIV);
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 8003faa:	4b2f      	ldr	r3, [pc, #188]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003fac:	681a      	ldr	r2, [r3, #0]
 8003fae:	4b2e      	ldr	r3, [pc, #184]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003fb0:	2180      	movs	r1, #128	; 0x80
 8003fb2:	0449      	lsls	r1, r1, #17
 8003fb4:	430a      	orrs	r2, r1
 8003fb6:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003fb8:	f7ff f996 	bl	80032e8 <HAL_GetTick>
 8003fbc:	0003      	movs	r3, r0
 8003fbe:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8003fc0:	e008      	b.n	8003fd4 <HAL_RCC_OscConfig+0x700>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003fc2:	f7ff f991 	bl	80032e8 <HAL_GetTick>
 8003fc6:	0002      	movs	r2, r0
 8003fc8:	697b      	ldr	r3, [r7, #20]
 8003fca:	1ad3      	subs	r3, r2, r3
 8003fcc:	2b02      	cmp	r3, #2
 8003fce:	d901      	bls.n	8003fd4 <HAL_RCC_OscConfig+0x700>
          {
            return HAL_TIMEOUT;
 8003fd0:	2303      	movs	r3, #3
 8003fd2:	e045      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == 0U)
 8003fd4:	4b24      	ldr	r3, [pc, #144]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003fd6:	681a      	ldr	r2, [r3, #0]
 8003fd8:	2380      	movs	r3, #128	; 0x80
 8003fda:	049b      	lsls	r3, r3, #18
 8003fdc:	4013      	ands	r3, r2
 8003fde:	d0f0      	beq.n	8003fc2 <HAL_RCC_OscConfig+0x6ee>
 8003fe0:	e03d      	b.n	800405e <HAL_RCC_OscConfig+0x78a>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 8003fe2:	4b21      	ldr	r3, [pc, #132]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003fe4:	681a      	ldr	r2, [r3, #0]
 8003fe6:	4b20      	ldr	r3, [pc, #128]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8003fe8:	4921      	ldr	r1, [pc, #132]	; (8004070 <HAL_RCC_OscConfig+0x79c>)
 8003fea:	400a      	ands	r2, r1
 8003fec:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8003fee:	f7ff f97b 	bl	80032e8 <HAL_GetTick>
 8003ff2:	0003      	movs	r3, r0
 8003ff4:	617b      	str	r3, [r7, #20]

        /* Wait till PLL is disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 8003ff6:	e008      	b.n	800400a <HAL_RCC_OscConfig+0x736>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 8003ff8:	f7ff f976 	bl	80032e8 <HAL_GetTick>
 8003ffc:	0002      	movs	r2, r0
 8003ffe:	697b      	ldr	r3, [r7, #20]
 8004000:	1ad3      	subs	r3, r2, r3
 8004002:	2b02      	cmp	r3, #2
 8004004:	d901      	bls.n	800400a <HAL_RCC_OscConfig+0x736>
          {
            return HAL_TIMEOUT;
 8004006:	2303      	movs	r3, #3
 8004008:	e02a      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != 0U)
 800400a:	4b17      	ldr	r3, [pc, #92]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 800400c:	681a      	ldr	r2, [r3, #0]
 800400e:	2380      	movs	r3, #128	; 0x80
 8004010:	049b      	lsls	r3, r3, #18
 8004012:	4013      	ands	r3, r2
 8004014:	d1f0      	bne.n	8003ff8 <HAL_RCC_OscConfig+0x724>
 8004016:	e022      	b.n	800405e <HAL_RCC_OscConfig+0x78a>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 8004018:	687b      	ldr	r3, [r7, #4]
 800401a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800401c:	2b01      	cmp	r3, #1
 800401e:	d101      	bne.n	8004024 <HAL_RCC_OscConfig+0x750>
      {
        return HAL_ERROR;
 8004020:	2301      	movs	r3, #1
 8004022:	e01d      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->CFGR;
 8004024:	4b10      	ldr	r3, [pc, #64]	; (8004068 <HAL_RCC_OscConfig+0x794>)
 8004026:	68db      	ldr	r3, [r3, #12]
 8004028:	61bb      	str	r3, [r7, #24]
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 800402a:	69ba      	ldr	r2, [r7, #24]
 800402c:	2380      	movs	r3, #128	; 0x80
 800402e:	025b      	lsls	r3, r3, #9
 8004030:	401a      	ands	r2, r3
 8004032:	687b      	ldr	r3, [r7, #4]
 8004034:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 8004036:	429a      	cmp	r2, r3
 8004038:	d10f      	bne.n	800405a <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 800403a:	69ba      	ldr	r2, [r7, #24]
 800403c:	23f0      	movs	r3, #240	; 0xf0
 800403e:	039b      	lsls	r3, r3, #14
 8004040:	401a      	ands	r2, r3
 8004042:	687b      	ldr	r3, [r7, #4]
 8004044:	6b1b      	ldr	r3, [r3, #48]	; 0x30
        if((READ_BIT(pll_config, RCC_CFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 8004046:	429a      	cmp	r2, r3
 8004048:	d107      	bne.n	800405a <HAL_RCC_OscConfig+0x786>
           (READ_BIT(pll_config, RCC_CFGR_PLLDIV) != RCC_OscInitStruct->PLL.PLLDIV))
 800404a:	69ba      	ldr	r2, [r7, #24]
 800404c:	23c0      	movs	r3, #192	; 0xc0
 800404e:	041b      	lsls	r3, r3, #16
 8004050:	401a      	ands	r2, r3
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	6b5b      	ldr	r3, [r3, #52]	; 0x34
           (READ_BIT(pll_config, RCC_CFGR_PLLMUL) != RCC_OscInitStruct->PLL.PLLMUL) ||
 8004056:	429a      	cmp	r2, r3
 8004058:	d001      	beq.n	800405e <HAL_RCC_OscConfig+0x78a>
        {
          return HAL_ERROR;
 800405a:	2301      	movs	r3, #1
 800405c:	e000      	b.n	8004060 <HAL_RCC_OscConfig+0x78c>
        }
      }
    }
  }

  return HAL_OK;
 800405e:	2300      	movs	r3, #0
}
 8004060:	0018      	movs	r0, r3
 8004062:	46bd      	mov	sp, r7
 8004064:	b00a      	add	sp, #40	; 0x28
 8004066:	bdb0      	pop	{r4, r5, r7, pc}
 8004068:	40021000 	.word	0x40021000
 800406c:	ff02ffff 	.word	0xff02ffff
 8004070:	feffffff 	.word	0xfeffffff

08004074 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 8004074:	b5b0      	push	{r4, r5, r7, lr}
 8004076:	b084      	sub	sp, #16
 8004078:	af00      	add	r7, sp, #0
 800407a:	6078      	str	r0, [r7, #4]
 800407c:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;
  HAL_StatusTypeDef status;

  /* Check the parameters */
  if(RCC_ClkInitStruct == NULL)
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	2b00      	cmp	r3, #0
 8004082:	d101      	bne.n	8004088 <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 8004084:	2301      	movs	r3, #1
 8004086:	e10d      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
  must be correctly programmed according to the frequency of the CPU clock
  (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 8004088:	4b88      	ldr	r3, [pc, #544]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 800408a:	681b      	ldr	r3, [r3, #0]
 800408c:	2201      	movs	r2, #1
 800408e:	4013      	ands	r3, r2
 8004090:	683a      	ldr	r2, [r7, #0]
 8004092:	429a      	cmp	r2, r3
 8004094:	d911      	bls.n	80040ba <HAL_RCC_ClockConfig+0x46>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004096:	4b85      	ldr	r3, [pc, #532]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 8004098:	681b      	ldr	r3, [r3, #0]
 800409a:	2201      	movs	r2, #1
 800409c:	4393      	bics	r3, r2
 800409e:	0019      	movs	r1, r3
 80040a0:	4b82      	ldr	r3, [pc, #520]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 80040a2:	683a      	ldr	r2, [r7, #0]
 80040a4:	430a      	orrs	r2, r1
 80040a6:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 80040a8:	4b80      	ldr	r3, [pc, #512]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 80040aa:	681b      	ldr	r3, [r3, #0]
 80040ac:	2201      	movs	r2, #1
 80040ae:	4013      	ands	r3, r2
 80040b0:	683a      	ldr	r2, [r7, #0]
 80040b2:	429a      	cmp	r2, r3
 80040b4:	d001      	beq.n	80040ba <HAL_RCC_ClockConfig+0x46>
    {
      return HAL_ERROR;
 80040b6:	2301      	movs	r3, #1
 80040b8:	e0f4      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	681b      	ldr	r3, [r3, #0]
 80040be:	2202      	movs	r2, #2
 80040c0:	4013      	ands	r3, r2
 80040c2:	d009      	beq.n	80040d8 <HAL_RCC_ClockConfig+0x64>
  {
    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 80040c4:	4b7a      	ldr	r3, [pc, #488]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 80040c6:	68db      	ldr	r3, [r3, #12]
 80040c8:	22f0      	movs	r2, #240	; 0xf0
 80040ca:	4393      	bics	r3, r2
 80040cc:	0019      	movs	r1, r3
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	689a      	ldr	r2, [r3, #8]
 80040d2:	4b77      	ldr	r3, [pc, #476]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 80040d4:	430a      	orrs	r2, r1
 80040d6:	60da      	str	r2, [r3, #12]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 80040d8:	687b      	ldr	r3, [r7, #4]
 80040da:	681b      	ldr	r3, [r3, #0]
 80040dc:	2201      	movs	r2, #1
 80040de:	4013      	ands	r3, r2
 80040e0:	d100      	bne.n	80040e4 <HAL_RCC_ClockConfig+0x70>
 80040e2:	e089      	b.n	80041f8 <HAL_RCC_ClockConfig+0x184>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	685b      	ldr	r3, [r3, #4]
 80040e8:	2b02      	cmp	r3, #2
 80040ea:	d107      	bne.n	80040fc <HAL_RCC_ClockConfig+0x88>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == 0U)
 80040ec:	4b70      	ldr	r3, [pc, #448]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 80040ee:	681a      	ldr	r2, [r3, #0]
 80040f0:	2380      	movs	r3, #128	; 0x80
 80040f2:	029b      	lsls	r3, r3, #10
 80040f4:	4013      	ands	r3, r2
 80040f6:	d120      	bne.n	800413a <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 80040f8:	2301      	movs	r3, #1
 80040fa:	e0d3      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* PLL is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 80040fc:	687b      	ldr	r3, [r7, #4]
 80040fe:	685b      	ldr	r3, [r3, #4]
 8004100:	2b03      	cmp	r3, #3
 8004102:	d107      	bne.n	8004114 <HAL_RCC_ClockConfig+0xa0>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == 0U)
 8004104:	4b6a      	ldr	r3, [pc, #424]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 8004106:	681a      	ldr	r2, [r3, #0]
 8004108:	2380      	movs	r3, #128	; 0x80
 800410a:	049b      	lsls	r3, r3, #18
 800410c:	4013      	ands	r3, r2
 800410e:	d114      	bne.n	800413a <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8004110:	2301      	movs	r3, #1
 8004112:	e0c7      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
      }
    }
    /* HSI is selected as System Clock Source */
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 8004114:	687b      	ldr	r3, [r7, #4]
 8004116:	685b      	ldr	r3, [r3, #4]
 8004118:	2b01      	cmp	r3, #1
 800411a:	d106      	bne.n	800412a <HAL_RCC_ClockConfig+0xb6>
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == 0U)
 800411c:	4b64      	ldr	r3, [pc, #400]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 800411e:	681b      	ldr	r3, [r3, #0]
 8004120:	2204      	movs	r2, #4
 8004122:	4013      	ands	r3, r2
 8004124:	d109      	bne.n	800413a <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8004126:	2301      	movs	r3, #1
 8004128:	e0bc      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
    }
    /* MSI is selected as System Clock Source */
    else
    {
      /* Check the MSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_MSIRDY) == 0U)
 800412a:	4b61      	ldr	r3, [pc, #388]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 800412c:	681a      	ldr	r2, [r3, #0]
 800412e:	2380      	movs	r3, #128	; 0x80
 8004130:	009b      	lsls	r3, r3, #2
 8004132:	4013      	ands	r3, r2
 8004134:	d101      	bne.n	800413a <HAL_RCC_ClockConfig+0xc6>
      {
        return HAL_ERROR;
 8004136:	2301      	movs	r3, #1
 8004138:	e0b4      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
      }
    }
    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 800413a:	4b5d      	ldr	r3, [pc, #372]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 800413c:	68db      	ldr	r3, [r3, #12]
 800413e:	2203      	movs	r2, #3
 8004140:	4393      	bics	r3, r2
 8004142:	0019      	movs	r1, r3
 8004144:	687b      	ldr	r3, [r7, #4]
 8004146:	685a      	ldr	r2, [r3, #4]
 8004148:	4b59      	ldr	r3, [pc, #356]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 800414a:	430a      	orrs	r2, r1
 800414c:	60da      	str	r2, [r3, #12]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 800414e:	f7ff f8cb 	bl	80032e8 <HAL_GetTick>
 8004152:	0003      	movs	r3, r0
 8004154:	60fb      	str	r3, [r7, #12]

    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 8004156:	687b      	ldr	r3, [r7, #4]
 8004158:	685b      	ldr	r3, [r3, #4]
 800415a:	2b02      	cmp	r3, #2
 800415c:	d111      	bne.n	8004182 <HAL_RCC_ClockConfig+0x10e>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 800415e:	e009      	b.n	8004174 <HAL_RCC_ClockConfig+0x100>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 8004160:	f7ff f8c2 	bl	80032e8 <HAL_GetTick>
 8004164:	0002      	movs	r2, r0
 8004166:	68fb      	ldr	r3, [r7, #12]
 8004168:	1ad3      	subs	r3, r2, r3
 800416a:	4a52      	ldr	r2, [pc, #328]	; (80042b4 <HAL_RCC_ClockConfig+0x240>)
 800416c:	4293      	cmp	r3, r2
 800416e:	d901      	bls.n	8004174 <HAL_RCC_ClockConfig+0x100>
        {
          return HAL_TIMEOUT;
 8004170:	2303      	movs	r3, #3
 8004172:	e097      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 8004174:	4b4e      	ldr	r3, [pc, #312]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 8004176:	68db      	ldr	r3, [r3, #12]
 8004178:	220c      	movs	r2, #12
 800417a:	4013      	ands	r3, r2
 800417c:	2b08      	cmp	r3, #8
 800417e:	d1ef      	bne.n	8004160 <HAL_RCC_ClockConfig+0xec>
 8004180:	e03a      	b.n	80041f8 <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 8004182:	687b      	ldr	r3, [r7, #4]
 8004184:	685b      	ldr	r3, [r3, #4]
 8004186:	2b03      	cmp	r3, #3
 8004188:	d111      	bne.n	80041ae <HAL_RCC_ClockConfig+0x13a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 800418a:	e009      	b.n	80041a0 <HAL_RCC_ClockConfig+0x12c>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 800418c:	f7ff f8ac 	bl	80032e8 <HAL_GetTick>
 8004190:	0002      	movs	r2, r0
 8004192:	68fb      	ldr	r3, [r7, #12]
 8004194:	1ad3      	subs	r3, r2, r3
 8004196:	4a47      	ldr	r2, [pc, #284]	; (80042b4 <HAL_RCC_ClockConfig+0x240>)
 8004198:	4293      	cmp	r3, r2
 800419a:	d901      	bls.n	80041a0 <HAL_RCC_ClockConfig+0x12c>
        {
          return HAL_TIMEOUT;
 800419c:	2303      	movs	r3, #3
 800419e:	e081      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 80041a0:	4b43      	ldr	r3, [pc, #268]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 80041a2:	68db      	ldr	r3, [r3, #12]
 80041a4:	220c      	movs	r2, #12
 80041a6:	4013      	ands	r3, r2
 80041a8:	2b0c      	cmp	r3, #12
 80041aa:	d1ef      	bne.n	800418c <HAL_RCC_ClockConfig+0x118>
 80041ac:	e024      	b.n	80041f8 <HAL_RCC_ClockConfig+0x184>
        }
      }
    }
    else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSI)
 80041ae:	687b      	ldr	r3, [r7, #4]
 80041b0:	685b      	ldr	r3, [r3, #4]
 80041b2:	2b01      	cmp	r3, #1
 80041b4:	d11b      	bne.n	80041ee <HAL_RCC_ClockConfig+0x17a>
    {
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 80041b6:	e009      	b.n	80041cc <HAL_RCC_ClockConfig+0x158>
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80041b8:	f7ff f896 	bl	80032e8 <HAL_GetTick>
 80041bc:	0002      	movs	r2, r0
 80041be:	68fb      	ldr	r3, [r7, #12]
 80041c0:	1ad3      	subs	r3, r2, r3
 80041c2:	4a3c      	ldr	r2, [pc, #240]	; (80042b4 <HAL_RCC_ClockConfig+0x240>)
 80041c4:	4293      	cmp	r3, r2
 80041c6:	d901      	bls.n	80041cc <HAL_RCC_ClockConfig+0x158>
        {
          return HAL_TIMEOUT;
 80041c8:	2303      	movs	r3, #3
 80041ca:	e06b      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
      while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 80041cc:	4b38      	ldr	r3, [pc, #224]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 80041ce:	68db      	ldr	r3, [r3, #12]
 80041d0:	220c      	movs	r2, #12
 80041d2:	4013      	ands	r3, r2
 80041d4:	2b04      	cmp	r3, #4
 80041d6:	d1ef      	bne.n	80041b8 <HAL_RCC_ClockConfig+0x144>
 80041d8:	e00e      	b.n	80041f8 <HAL_RCC_ClockConfig+0x184>
    }
    else
    {
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
      {
        if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 80041da:	f7ff f885 	bl	80032e8 <HAL_GetTick>
 80041de:	0002      	movs	r2, r0
 80041e0:	68fb      	ldr	r3, [r7, #12]
 80041e2:	1ad3      	subs	r3, r2, r3
 80041e4:	4a33      	ldr	r2, [pc, #204]	; (80042b4 <HAL_RCC_ClockConfig+0x240>)
 80041e6:	4293      	cmp	r3, r2
 80041e8:	d901      	bls.n	80041ee <HAL_RCC_ClockConfig+0x17a>
        {
          return HAL_TIMEOUT;
 80041ea:	2303      	movs	r3, #3
 80041ec:	e05a      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
      while(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_MSI)
 80041ee:	4b30      	ldr	r3, [pc, #192]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 80041f0:	68db      	ldr	r3, [r3, #12]
 80041f2:	220c      	movs	r2, #12
 80041f4:	4013      	ands	r3, r2
 80041f6:	d1f0      	bne.n	80041da <HAL_RCC_ClockConfig+0x166>
        }
      }
    }
  }
  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 80041f8:	4b2c      	ldr	r3, [pc, #176]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 80041fa:	681b      	ldr	r3, [r3, #0]
 80041fc:	2201      	movs	r2, #1
 80041fe:	4013      	ands	r3, r2
 8004200:	683a      	ldr	r2, [r7, #0]
 8004202:	429a      	cmp	r2, r3
 8004204:	d211      	bcs.n	800422a <HAL_RCC_ClockConfig+0x1b6>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 8004206:	4b29      	ldr	r3, [pc, #164]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 8004208:	681b      	ldr	r3, [r3, #0]
 800420a:	2201      	movs	r2, #1
 800420c:	4393      	bics	r3, r2
 800420e:	0019      	movs	r1, r3
 8004210:	4b26      	ldr	r3, [pc, #152]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 8004212:	683a      	ldr	r2, [r7, #0]
 8004214:	430a      	orrs	r2, r1
 8004216:	601a      	str	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 8004218:	4b24      	ldr	r3, [pc, #144]	; (80042ac <HAL_RCC_ClockConfig+0x238>)
 800421a:	681b      	ldr	r3, [r3, #0]
 800421c:	2201      	movs	r2, #1
 800421e:	4013      	ands	r3, r2
 8004220:	683a      	ldr	r2, [r7, #0]
 8004222:	429a      	cmp	r2, r3
 8004224:	d001      	beq.n	800422a <HAL_RCC_ClockConfig+0x1b6>
    {
      return HAL_ERROR;
 8004226:	2301      	movs	r3, #1
 8004228:	e03c      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 800422a:	687b      	ldr	r3, [r7, #4]
 800422c:	681b      	ldr	r3, [r3, #0]
 800422e:	2204      	movs	r2, #4
 8004230:	4013      	ands	r3, r2
 8004232:	d009      	beq.n	8004248 <HAL_RCC_ClockConfig+0x1d4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 8004234:	4b1e      	ldr	r3, [pc, #120]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 8004236:	68db      	ldr	r3, [r3, #12]
 8004238:	4a1f      	ldr	r2, [pc, #124]	; (80042b8 <HAL_RCC_ClockConfig+0x244>)
 800423a:	4013      	ands	r3, r2
 800423c:	0019      	movs	r1, r3
 800423e:	687b      	ldr	r3, [r7, #4]
 8004240:	68da      	ldr	r2, [r3, #12]
 8004242:	4b1b      	ldr	r3, [pc, #108]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 8004244:	430a      	orrs	r2, r1
 8004246:	60da      	str	r2, [r3, #12]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 8004248:	687b      	ldr	r3, [r7, #4]
 800424a:	681b      	ldr	r3, [r3, #0]
 800424c:	2208      	movs	r2, #8
 800424e:	4013      	ands	r3, r2
 8004250:	d00a      	beq.n	8004268 <HAL_RCC_ClockConfig+0x1f4>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 8004252:	4b17      	ldr	r3, [pc, #92]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 8004254:	68db      	ldr	r3, [r3, #12]
 8004256:	4a19      	ldr	r2, [pc, #100]	; (80042bc <HAL_RCC_ClockConfig+0x248>)
 8004258:	4013      	ands	r3, r2
 800425a:	0019      	movs	r1, r3
 800425c:	687b      	ldr	r3, [r7, #4]
 800425e:	691b      	ldr	r3, [r3, #16]
 8004260:	00da      	lsls	r2, r3, #3
 8004262:	4b13      	ldr	r3, [pc, #76]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 8004264:	430a      	orrs	r2, r1
 8004266:	60da      	str	r2, [r3, #12]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 8004268:	f000 f82e 	bl	80042c8 <HAL_RCC_GetSysClockFreq>
 800426c:	0001      	movs	r1, r0
 800426e:	4b10      	ldr	r3, [pc, #64]	; (80042b0 <HAL_RCC_ClockConfig+0x23c>)
 8004270:	68db      	ldr	r3, [r3, #12]
 8004272:	091b      	lsrs	r3, r3, #4
 8004274:	220f      	movs	r2, #15
 8004276:	4013      	ands	r3, r2
 8004278:	4a11      	ldr	r2, [pc, #68]	; (80042c0 <HAL_RCC_ClockConfig+0x24c>)
 800427a:	5cd3      	ldrb	r3, [r2, r3]
 800427c:	000a      	movs	r2, r1
 800427e:	40da      	lsrs	r2, r3
 8004280:	4b10      	ldr	r3, [pc, #64]	; (80042c4 <HAL_RCC_ClockConfig+0x250>)
 8004282:	601a      	str	r2, [r3, #0]

  /* Configure the source of time base considering new system clocks settings*/
  status = HAL_InitTick(TICK_INT_PRIORITY);
 8004284:	250b      	movs	r5, #11
 8004286:	197c      	adds	r4, r7, r5
 8004288:	2000      	movs	r0, #0
 800428a:	f7fe ffe7 	bl	800325c <HAL_InitTick>
 800428e:	0003      	movs	r3, r0
 8004290:	7023      	strb	r3, [r4, #0]
  if(status != HAL_OK)
 8004292:	197b      	adds	r3, r7, r5
 8004294:	781b      	ldrb	r3, [r3, #0]
 8004296:	2b00      	cmp	r3, #0
 8004298:	d003      	beq.n	80042a2 <HAL_RCC_ClockConfig+0x22e>
  {
    return status;
 800429a:	230b      	movs	r3, #11
 800429c:	18fb      	adds	r3, r7, r3
 800429e:	781b      	ldrb	r3, [r3, #0]
 80042a0:	e000      	b.n	80042a4 <HAL_RCC_ClockConfig+0x230>
  }

  return HAL_OK;
 80042a2:	2300      	movs	r3, #0
}
 80042a4:	0018      	movs	r0, r3
 80042a6:	46bd      	mov	sp, r7
 80042a8:	b004      	add	sp, #16
 80042aa:	bdb0      	pop	{r4, r5, r7, pc}
 80042ac:	40022000 	.word	0x40022000
 80042b0:	40021000 	.word	0x40021000
 80042b4:	00001388 	.word	0x00001388
 80042b8:	fffff8ff 	.word	0xfffff8ff
 80042bc:	ffffc7ff 	.word	0xffffc7ff
 80042c0:	0800a300 	.word	0x0800a300
 80042c4:	20000000 	.word	0x20000000

080042c8 <HAL_RCC_GetSysClockFreq>:
  *         right SYSCLK value. Otherwise, any configuration based on this function will be incorrect.
  *
  * @retval SYSCLK frequency
  */
uint32_t HAL_RCC_GetSysClockFreq(void)
{
 80042c8:	b580      	push	{r7, lr}
 80042ca:	b086      	sub	sp, #24
 80042cc:	af00      	add	r7, sp, #0
  uint32_t tmpreg, pllm, plld, pllvco, msiclkrange;    /* no init needed */
  uint32_t sysclockfreq;

  tmpreg = RCC->CFGR;
 80042ce:	4b3b      	ldr	r3, [pc, #236]	; (80043bc <HAL_RCC_GetSysClockFreq+0xf4>)
 80042d0:	68db      	ldr	r3, [r3, #12]
 80042d2:	60fb      	str	r3, [r7, #12]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (tmpreg & RCC_CFGR_SWS)
 80042d4:	68fb      	ldr	r3, [r7, #12]
 80042d6:	220c      	movs	r2, #12
 80042d8:	4013      	ands	r3, r2
 80042da:	2b08      	cmp	r3, #8
 80042dc:	d00e      	beq.n	80042fc <HAL_RCC_GetSysClockFreq+0x34>
 80042de:	2b0c      	cmp	r3, #12
 80042e0:	d00f      	beq.n	8004302 <HAL_RCC_GetSysClockFreq+0x3a>
 80042e2:	2b04      	cmp	r3, #4
 80042e4:	d157      	bne.n	8004396 <HAL_RCC_GetSysClockFreq+0xce>
  {
    case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
    {
      if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 80042e6:	4b35      	ldr	r3, [pc, #212]	; (80043bc <HAL_RCC_GetSysClockFreq+0xf4>)
 80042e8:	681b      	ldr	r3, [r3, #0]
 80042ea:	2210      	movs	r2, #16
 80042ec:	4013      	ands	r3, r2
 80042ee:	d002      	beq.n	80042f6 <HAL_RCC_GetSysClockFreq+0x2e>
      {
        sysclockfreq =  (HSI_VALUE >> 2);
 80042f0:	4b33      	ldr	r3, [pc, #204]	; (80043c0 <HAL_RCC_GetSysClockFreq+0xf8>)
 80042f2:	613b      	str	r3, [r7, #16]
      }
      else
      {
        sysclockfreq =  HSI_VALUE;
      }
      break;
 80042f4:	e05d      	b.n	80043b2 <HAL_RCC_GetSysClockFreq+0xea>
        sysclockfreq =  HSI_VALUE;
 80042f6:	4b33      	ldr	r3, [pc, #204]	; (80043c4 <HAL_RCC_GetSysClockFreq+0xfc>)
 80042f8:	613b      	str	r3, [r7, #16]
      break;
 80042fa:	e05a      	b.n	80043b2 <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
    {
      sysclockfreq = HSE_VALUE;
 80042fc:	4b32      	ldr	r3, [pc, #200]	; (80043c8 <HAL_RCC_GetSysClockFreq+0x100>)
 80042fe:	613b      	str	r3, [r7, #16]
      break;
 8004300:	e057      	b.n	80043b2 <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
    {
      pllm = PLLMulTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMUL) >> RCC_CFGR_PLLMUL_Pos];
 8004302:	68fb      	ldr	r3, [r7, #12]
 8004304:	0c9b      	lsrs	r3, r3, #18
 8004306:	220f      	movs	r2, #15
 8004308:	4013      	ands	r3, r2
 800430a:	4a30      	ldr	r2, [pc, #192]	; (80043cc <HAL_RCC_GetSysClockFreq+0x104>)
 800430c:	5cd3      	ldrb	r3, [r2, r3]
 800430e:	60bb      	str	r3, [r7, #8]
      plld = ((uint32_t)(tmpreg & RCC_CFGR_PLLDIV) >> RCC_CFGR_PLLDIV_Pos) + 1U;
 8004310:	68fb      	ldr	r3, [r7, #12]
 8004312:	0d9b      	lsrs	r3, r3, #22
 8004314:	2203      	movs	r2, #3
 8004316:	4013      	ands	r3, r2
 8004318:	3301      	adds	r3, #1
 800431a:	607b      	str	r3, [r7, #4]
      if (__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 800431c:	4b27      	ldr	r3, [pc, #156]	; (80043bc <HAL_RCC_GetSysClockFreq+0xf4>)
 800431e:	68da      	ldr	r2, [r3, #12]
 8004320:	2380      	movs	r3, #128	; 0x80
 8004322:	025b      	lsls	r3, r3, #9
 8004324:	4013      	ands	r3, r2
 8004326:	d00f      	beq.n	8004348 <HAL_RCC_GetSysClockFreq+0x80>
      {
        /* HSE used as PLL clock source */
        pllvco = (HSE_VALUE * pllm) / plld;
 8004328:	68b9      	ldr	r1, [r7, #8]
 800432a:	000a      	movs	r2, r1
 800432c:	0152      	lsls	r2, r2, #5
 800432e:	1a52      	subs	r2, r2, r1
 8004330:	0193      	lsls	r3, r2, #6
 8004332:	1a9b      	subs	r3, r3, r2
 8004334:	00db      	lsls	r3, r3, #3
 8004336:	185b      	adds	r3, r3, r1
 8004338:	025b      	lsls	r3, r3, #9
 800433a:	6879      	ldr	r1, [r7, #4]
 800433c:	0018      	movs	r0, r3
 800433e:	f7fb fef5 	bl	800012c <__udivsi3>
 8004342:	0003      	movs	r3, r0
 8004344:	617b      	str	r3, [r7, #20]
 8004346:	e023      	b.n	8004390 <HAL_RCC_GetSysClockFreq+0xc8>
      }
      else
      {
        if ((RCC->CR & RCC_CR_HSIDIVF) != 0U)
 8004348:	4b1c      	ldr	r3, [pc, #112]	; (80043bc <HAL_RCC_GetSysClockFreq+0xf4>)
 800434a:	681b      	ldr	r3, [r3, #0]
 800434c:	2210      	movs	r2, #16
 800434e:	4013      	ands	r3, r2
 8004350:	d00f      	beq.n	8004372 <HAL_RCC_GetSysClockFreq+0xaa>
        {
          pllvco = ((HSI_VALUE >> 2) * pllm) / plld;
 8004352:	68b9      	ldr	r1, [r7, #8]
 8004354:	000a      	movs	r2, r1
 8004356:	0152      	lsls	r2, r2, #5
 8004358:	1a52      	subs	r2, r2, r1
 800435a:	0193      	lsls	r3, r2, #6
 800435c:	1a9b      	subs	r3, r3, r2
 800435e:	00db      	lsls	r3, r3, #3
 8004360:	185b      	adds	r3, r3, r1
 8004362:	021b      	lsls	r3, r3, #8
 8004364:	6879      	ldr	r1, [r7, #4]
 8004366:	0018      	movs	r0, r3
 8004368:	f7fb fee0 	bl	800012c <__udivsi3>
 800436c:	0003      	movs	r3, r0
 800436e:	617b      	str	r3, [r7, #20]
 8004370:	e00e      	b.n	8004390 <HAL_RCC_GetSysClockFreq+0xc8>
        }
        else
        {
         pllvco = (HSI_VALUE * pllm) / plld;
 8004372:	68b9      	ldr	r1, [r7, #8]
 8004374:	000a      	movs	r2, r1
 8004376:	0152      	lsls	r2, r2, #5
 8004378:	1a52      	subs	r2, r2, r1
 800437a:	0193      	lsls	r3, r2, #6
 800437c:	1a9b      	subs	r3, r3, r2
 800437e:	00db      	lsls	r3, r3, #3
 8004380:	185b      	adds	r3, r3, r1
 8004382:	029b      	lsls	r3, r3, #10
 8004384:	6879      	ldr	r1, [r7, #4]
 8004386:	0018      	movs	r0, r3
 8004388:	f7fb fed0 	bl	800012c <__udivsi3>
 800438c:	0003      	movs	r3, r0
 800438e:	617b      	str	r3, [r7, #20]
        }
      }
      sysclockfreq = pllvco;
 8004390:	697b      	ldr	r3, [r7, #20]
 8004392:	613b      	str	r3, [r7, #16]
      break;
 8004394:	e00d      	b.n	80043b2 <HAL_RCC_GetSysClockFreq+0xea>
    }
    case RCC_SYSCLKSOURCE_STATUS_MSI:  /* MSI used as system clock source */
    default: /* MSI used as system clock */
    {
      msiclkrange = (RCC->ICSCR & RCC_ICSCR_MSIRANGE ) >> RCC_ICSCR_MSIRANGE_Pos;
 8004396:	4b09      	ldr	r3, [pc, #36]	; (80043bc <HAL_RCC_GetSysClockFreq+0xf4>)
 8004398:	685b      	ldr	r3, [r3, #4]
 800439a:	0b5b      	lsrs	r3, r3, #13
 800439c:	2207      	movs	r2, #7
 800439e:	4013      	ands	r3, r2
 80043a0:	603b      	str	r3, [r7, #0]
      sysclockfreq = (32768U * (1UL << (msiclkrange + 1U)));
 80043a2:	683b      	ldr	r3, [r7, #0]
 80043a4:	3301      	adds	r3, #1
 80043a6:	2280      	movs	r2, #128	; 0x80
 80043a8:	0212      	lsls	r2, r2, #8
 80043aa:	409a      	lsls	r2, r3
 80043ac:	0013      	movs	r3, r2
 80043ae:	613b      	str	r3, [r7, #16]
      break;
 80043b0:	46c0      	nop			; (mov r8, r8)
    }
  }
  return sysclockfreq;
 80043b2:	693b      	ldr	r3, [r7, #16]
}
 80043b4:	0018      	movs	r0, r3
 80043b6:	46bd      	mov	sp, r7
 80043b8:	b006      	add	sp, #24
 80043ba:	bd80      	pop	{r7, pc}
 80043bc:	40021000 	.word	0x40021000
 80043c0:	003d0900 	.word	0x003d0900
 80043c4:	00f42400 	.word	0x00f42400
 80043c8:	007a1200 	.word	0x007a1200
 80043cc:	0800a318 	.word	0x0800a318

080043d0 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 80043d0:	b580      	push	{r7, lr}
 80043d2:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 80043d4:	4b02      	ldr	r3, [pc, #8]	; (80043e0 <HAL_RCC_GetHCLKFreq+0x10>)
 80043d6:	681b      	ldr	r3, [r3, #0]
}
 80043d8:	0018      	movs	r0, r3
 80043da:	46bd      	mov	sp, r7
 80043dc:	bd80      	pop	{r7, pc}
 80043de:	46c0      	nop			; (mov r8, r8)
 80043e0:	20000000 	.word	0x20000000

080043e4 <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 80043e4:	b580      	push	{r7, lr}
 80043e6:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos]);
 80043e8:	f7ff fff2 	bl	80043d0 <HAL_RCC_GetHCLKFreq>
 80043ec:	0001      	movs	r1, r0
 80043ee:	4b06      	ldr	r3, [pc, #24]	; (8004408 <HAL_RCC_GetPCLK1Freq+0x24>)
 80043f0:	68db      	ldr	r3, [r3, #12]
 80043f2:	0a1b      	lsrs	r3, r3, #8
 80043f4:	2207      	movs	r2, #7
 80043f6:	4013      	ands	r3, r2
 80043f8:	4a04      	ldr	r2, [pc, #16]	; (800440c <HAL_RCC_GetPCLK1Freq+0x28>)
 80043fa:	5cd3      	ldrb	r3, [r2, r3]
 80043fc:	40d9      	lsrs	r1, r3
 80043fe:	000b      	movs	r3, r1
}
 8004400:	0018      	movs	r0, r3
 8004402:	46bd      	mov	sp, r7
 8004404:	bd80      	pop	{r7, pc}
 8004406:	46c0      	nop			; (mov r8, r8)
 8004408:	40021000 	.word	0x40021000
 800440c:	0800a310 	.word	0x0800a310

08004410 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 8004410:	b580      	push	{r7, lr}
 8004412:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]);
 8004414:	f7ff ffdc 	bl	80043d0 <HAL_RCC_GetHCLKFreq>
 8004418:	0001      	movs	r1, r0
 800441a:	4b06      	ldr	r3, [pc, #24]	; (8004434 <HAL_RCC_GetPCLK2Freq+0x24>)
 800441c:	68db      	ldr	r3, [r3, #12]
 800441e:	0adb      	lsrs	r3, r3, #11
 8004420:	2207      	movs	r2, #7
 8004422:	4013      	ands	r3, r2
 8004424:	4a04      	ldr	r2, [pc, #16]	; (8004438 <HAL_RCC_GetPCLK2Freq+0x28>)
 8004426:	5cd3      	ldrb	r3, [r2, r3]
 8004428:	40d9      	lsrs	r1, r3
 800442a:	000b      	movs	r3, r1
}
 800442c:	0018      	movs	r0, r3
 800442e:	46bd      	mov	sp, r7
 8004430:	bd80      	pop	{r7, pc}
 8004432:	46c0      	nop			; (mov r8, r8)
 8004434:	40021000 	.word	0x40021000
 8004438:	0800a310 	.word	0x0800a310

0800443c <HAL_RCCEx_PeriphCLKConfig>:
  * @retval HAL status
  * @note   If HAL_ERROR returned, first switch-OFF HSE clock oscillator with @ref HAL_RCC_OscConfig()
  *         to possibly update HSE divider.
  */
HAL_StatusTypeDef HAL_RCCEx_PeriphCLKConfig(RCC_PeriphCLKInitTypeDef  *PeriphClkInit)
{
 800443c:	b580      	push	{r7, lr}
 800443e:	b086      	sub	sp, #24
 8004440:	af00      	add	r7, sp, #0
 8004442:	6078      	str	r0, [r7, #4]

  /* Check the parameters */
  assert_param(IS_RCC_PERIPHCLOCK(PeriphClkInit->PeriphClockSelection));

  /*------------------------------- RTC/LCD Configuration ------------------------*/
  if ((((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC)
 8004444:	687b      	ldr	r3, [r7, #4]
 8004446:	681b      	ldr	r3, [r3, #0]
 8004448:	2220      	movs	r2, #32
 800444a:	4013      	ands	r3, r2
 800444c:	d106      	bne.n	800445c <HAL_RCCEx_PeriphCLKConfig+0x20>
#if defined(LCD)
   || (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD)
 800444e:	687b      	ldr	r3, [r7, #4]
 8004450:	681a      	ldr	r2, [r3, #0]
 8004452:	2380      	movs	r3, #128	; 0x80
 8004454:	011b      	lsls	r3, r3, #4
 8004456:	4013      	ands	r3, r2
 8004458:	d100      	bne.n	800445c <HAL_RCCEx_PeriphCLKConfig+0x20>
 800445a:	e0dd      	b.n	8004618 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    {
      assert_param(IS_RCC_RTCCLKSOURCE(PeriphClkInit->LCDClockSelection));
    }
#endif /* LCD */

    FlagStatus       pwrclkchanged = RESET;
 800445c:	2317      	movs	r3, #23
 800445e:	18fb      	adds	r3, r7, r3
 8004460:	2200      	movs	r2, #0
 8004462:	701a      	strb	r2, [r3, #0]

    /* As soon as function is called to change RTC clock source, activation of the
       power domain is done. */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8004464:	4ba4      	ldr	r3, [pc, #656]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004466:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004468:	2380      	movs	r3, #128	; 0x80
 800446a:	055b      	lsls	r3, r3, #21
 800446c:	4013      	ands	r3, r2
 800446e:	d10a      	bne.n	8004486 <HAL_RCCEx_PeriphCLKConfig+0x4a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8004470:	4ba1      	ldr	r3, [pc, #644]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004472:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004474:	4ba0      	ldr	r3, [pc, #640]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004476:	2180      	movs	r1, #128	; 0x80
 8004478:	0549      	lsls	r1, r1, #21
 800447a:	430a      	orrs	r2, r1
 800447c:	639a      	str	r2, [r3, #56]	; 0x38
      pwrclkchanged = SET;
 800447e:	2317      	movs	r3, #23
 8004480:	18fb      	adds	r3, r7, r3
 8004482:	2201      	movs	r2, #1
 8004484:	701a      	strb	r2, [r3, #0]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 8004486:	4b9d      	ldr	r3, [pc, #628]	; (80046fc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8004488:	681a      	ldr	r2, [r3, #0]
 800448a:	2380      	movs	r3, #128	; 0x80
 800448c:	005b      	lsls	r3, r3, #1
 800448e:	4013      	ands	r3, r2
 8004490:	d11a      	bne.n	80044c8 <HAL_RCCEx_PeriphCLKConfig+0x8c>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 8004492:	4b9a      	ldr	r3, [pc, #616]	; (80046fc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8004494:	681a      	ldr	r2, [r3, #0]
 8004496:	4b99      	ldr	r3, [pc, #612]	; (80046fc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 8004498:	2180      	movs	r1, #128	; 0x80
 800449a:	0049      	lsls	r1, r1, #1
 800449c:	430a      	orrs	r2, r1
 800449e:	601a      	str	r2, [r3, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 80044a0:	f7fe ff22 	bl	80032e8 <HAL_GetTick>
 80044a4:	0003      	movs	r3, r0
 80044a6:	613b      	str	r3, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80044a8:	e008      	b.n	80044bc <HAL_RCCEx_PeriphCLKConfig+0x80>
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 80044aa:	f7fe ff1d 	bl	80032e8 <HAL_GetTick>
 80044ae:	0002      	movs	r2, r0
 80044b0:	693b      	ldr	r3, [r7, #16]
 80044b2:	1ad3      	subs	r3, r2, r3
 80044b4:	2b64      	cmp	r3, #100	; 0x64
 80044b6:	d901      	bls.n	80044bc <HAL_RCCEx_PeriphCLKConfig+0x80>
        {
          return HAL_TIMEOUT;
 80044b8:	2303      	movs	r3, #3
 80044ba:	e118      	b.n	80046ee <HAL_RCCEx_PeriphCLKConfig+0x2b2>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 80044bc:	4b8f      	ldr	r3, [pc, #572]	; (80046fc <HAL_RCCEx_PeriphCLKConfig+0x2c0>)
 80044be:	681a      	ldr	r2, [r3, #0]
 80044c0:	2380      	movs	r3, #128	; 0x80
 80044c2:	005b      	lsls	r3, r3, #1
 80044c4:	4013      	ands	r3, r2
 80044c6:	d0f0      	beq.n	80044aa <HAL_RCCEx_PeriphCLKConfig+0x6e>
        }
      }
    }

    /* Check if user wants to change HSE RTC prescaler whereas HSE is enabled */
    temp_reg = (RCC->CR & RCC_CR_RTCPRE);
 80044c8:	4b8b      	ldr	r3, [pc, #556]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80044ca:	681a      	ldr	r2, [r3, #0]
 80044cc:	23c0      	movs	r3, #192	; 0xc0
 80044ce:	039b      	lsls	r3, r3, #14
 80044d0:	4013      	ands	r3, r2
 80044d2:	60fb      	str	r3, [r7, #12]
    if ((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CR_RTCPRE))
 80044d4:	687b      	ldr	r3, [r7, #4]
 80044d6:	685a      	ldr	r2, [r3, #4]
 80044d8:	23c0      	movs	r3, #192	; 0xc0
 80044da:	039b      	lsls	r3, r3, #14
 80044dc:	4013      	ands	r3, r2
 80044de:	68fa      	ldr	r2, [r7, #12]
 80044e0:	429a      	cmp	r2, r3
 80044e2:	d107      	bne.n	80044f4 <HAL_RCCEx_PeriphCLKConfig+0xb8>
#if defined (LCD)
     || (temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CR_RTCPRE))
 80044e4:	687b      	ldr	r3, [r7, #4]
 80044e6:	689a      	ldr	r2, [r3, #8]
 80044e8:	23c0      	movs	r3, #192	; 0xc0
 80044ea:	039b      	lsls	r3, r3, #14
 80044ec:	4013      	ands	r3, r2
 80044ee:	68fa      	ldr	r2, [r7, #12]
 80044f0:	429a      	cmp	r2, r3
 80044f2:	d013      	beq.n	800451c <HAL_RCCEx_PeriphCLKConfig+0xe0>
#endif /* LCD */
       )
    { /* Check HSE State */
      if ((PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL) == RCC_CSR_RTCSEL_HSE)
 80044f4:	687b      	ldr	r3, [r7, #4]
 80044f6:	685a      	ldr	r2, [r3, #4]
 80044f8:	23c0      	movs	r3, #192	; 0xc0
 80044fa:	029b      	lsls	r3, r3, #10
 80044fc:	401a      	ands	r2, r3
 80044fe:	23c0      	movs	r3, #192	; 0xc0
 8004500:	029b      	lsls	r3, r3, #10
 8004502:	429a      	cmp	r2, r3
 8004504:	d10a      	bne.n	800451c <HAL_RCCEx_PeriphCLKConfig+0xe0>
      {
        if (HAL_IS_BIT_SET(RCC->CR, RCC_CR_HSERDY))
 8004506:	4b7c      	ldr	r3, [pc, #496]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004508:	681a      	ldr	r2, [r3, #0]
 800450a:	2380      	movs	r3, #128	; 0x80
 800450c:	029b      	lsls	r3, r3, #10
 800450e:	401a      	ands	r2, r3
 8004510:	2380      	movs	r3, #128	; 0x80
 8004512:	029b      	lsls	r3, r3, #10
 8004514:	429a      	cmp	r2, r3
 8004516:	d101      	bne.n	800451c <HAL_RCCEx_PeriphCLKConfig+0xe0>
        {
          /* To update HSE divider, first switch-OFF HSE clock oscillator*/
          return HAL_ERROR;
 8004518:	2301      	movs	r3, #1
 800451a:	e0e8      	b.n	80046ee <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        }
      }
    }

    /* Reset the Backup domain only if the RTC Clock source selection is modified from reset value */
    temp_reg = (RCC->CSR & RCC_CSR_RTCSEL);
 800451c:	4b76      	ldr	r3, [pc, #472]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800451e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004520:	23c0      	movs	r3, #192	; 0xc0
 8004522:	029b      	lsls	r3, r3, #10
 8004524:	4013      	ands	r3, r2
 8004526:	60fb      	str	r3, [r7, #12]

    if((temp_reg != 0x00000000U) && (((temp_reg != (PeriphClkInit->RTCClockSelection & RCC_CSR_RTCSEL)) \
 8004528:	68fb      	ldr	r3, [r7, #12]
 800452a:	2b00      	cmp	r3, #0
 800452c:	d049      	beq.n	80045c2 <HAL_RCCEx_PeriphCLKConfig+0x186>
 800452e:	687b      	ldr	r3, [r7, #4]
 8004530:	685a      	ldr	r2, [r3, #4]
 8004532:	23c0      	movs	r3, #192	; 0xc0
 8004534:	029b      	lsls	r3, r3, #10
 8004536:	4013      	ands	r3, r2
 8004538:	68fa      	ldr	r2, [r7, #12]
 800453a:	429a      	cmp	r2, r3
 800453c:	d004      	beq.n	8004548 <HAL_RCCEx_PeriphCLKConfig+0x10c>
      && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_RTC) == RCC_PERIPHCLK_RTC))
 800453e:	687b      	ldr	r3, [r7, #4]
 8004540:	681b      	ldr	r3, [r3, #0]
 8004542:	2220      	movs	r2, #32
 8004544:	4013      	ands	r3, r2
 8004546:	d10d      	bne.n	8004564 <HAL_RCCEx_PeriphCLKConfig+0x128>
#if defined(LCD)
      || ((temp_reg != (PeriphClkInit->LCDClockSelection & RCC_CSR_RTCSEL)) \
 8004548:	687b      	ldr	r3, [r7, #4]
 800454a:	689a      	ldr	r2, [r3, #8]
 800454c:	23c0      	movs	r3, #192	; 0xc0
 800454e:	029b      	lsls	r3, r3, #10
 8004550:	4013      	ands	r3, r2
 8004552:	68fa      	ldr	r2, [r7, #12]
 8004554:	429a      	cmp	r2, r3
 8004556:	d034      	beq.n	80045c2 <HAL_RCCEx_PeriphCLKConfig+0x186>
       && (((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LCD) == RCC_PERIPHCLK_LCD))
 8004558:	687b      	ldr	r3, [r7, #4]
 800455a:	681a      	ldr	r2, [r3, #0]
 800455c:	2380      	movs	r3, #128	; 0x80
 800455e:	011b      	lsls	r3, r3, #4
 8004560:	4013      	ands	r3, r2
 8004562:	d02e      	beq.n	80045c2 <HAL_RCCEx_PeriphCLKConfig+0x186>
#endif /* LCD */
     ))
    {
      /* Store the content of CSR register before the reset of Backup Domain */
      temp_reg = (RCC->CSR & ~(RCC_CSR_RTCSEL));
 8004564:	4b64      	ldr	r3, [pc, #400]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004566:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 8004568:	4a65      	ldr	r2, [pc, #404]	; (8004700 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 800456a:	4013      	ands	r3, r2
 800456c:	60fb      	str	r3, [r7, #12]

      /* RTC Clock selection can be changed only if the Backup Domain is reset */
      __HAL_RCC_BACKUPRESET_FORCE();
 800456e:	4b62      	ldr	r3, [pc, #392]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004570:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004572:	4b61      	ldr	r3, [pc, #388]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004574:	2180      	movs	r1, #128	; 0x80
 8004576:	0309      	lsls	r1, r1, #12
 8004578:	430a      	orrs	r2, r1
 800457a:	651a      	str	r2, [r3, #80]	; 0x50
      __HAL_RCC_BACKUPRESET_RELEASE();
 800457c:	4b5e      	ldr	r3, [pc, #376]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800457e:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 8004580:	4b5d      	ldr	r3, [pc, #372]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004582:	4960      	ldr	r1, [pc, #384]	; (8004704 <HAL_RCCEx_PeriphCLKConfig+0x2c8>)
 8004584:	400a      	ands	r2, r1
 8004586:	651a      	str	r2, [r3, #80]	; 0x50

      /* Restore the Content of CSR register */
      RCC->CSR = temp_reg;
 8004588:	4b5b      	ldr	r3, [pc, #364]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800458a:	68fa      	ldr	r2, [r7, #12]
 800458c:	651a      	str	r2, [r3, #80]	; 0x50

       /* Wait for LSERDY if LSE was enabled */
      if (HAL_IS_BIT_SET(temp_reg, RCC_CSR_LSEON))
 800458e:	68fa      	ldr	r2, [r7, #12]
 8004590:	2380      	movs	r3, #128	; 0x80
 8004592:	005b      	lsls	r3, r3, #1
 8004594:	4013      	ands	r3, r2
 8004596:	d014      	beq.n	80045c2 <HAL_RCCEx_PeriphCLKConfig+0x186>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 8004598:	f7fe fea6 	bl	80032e8 <HAL_GetTick>
 800459c:	0003      	movs	r3, r0
 800459e:	613b      	str	r3, [r7, #16]

        /* Wait till LSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80045a0:	e009      	b.n	80045b6 <HAL_RCCEx_PeriphCLKConfig+0x17a>
        {
          if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 80045a2:	f7fe fea1 	bl	80032e8 <HAL_GetTick>
 80045a6:	0002      	movs	r2, r0
 80045a8:	693b      	ldr	r3, [r7, #16]
 80045aa:	1ad3      	subs	r3, r2, r3
 80045ac:	4a56      	ldr	r2, [pc, #344]	; (8004708 <HAL_RCCEx_PeriphCLKConfig+0x2cc>)
 80045ae:	4293      	cmp	r3, r2
 80045b0:	d901      	bls.n	80045b6 <HAL_RCCEx_PeriphCLKConfig+0x17a>
          {
            return HAL_TIMEOUT;
 80045b2:	2303      	movs	r3, #3
 80045b4:	e09b      	b.n	80046ee <HAL_RCCEx_PeriphCLKConfig+0x2b2>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == 0U)
 80045b6:	4b50      	ldr	r3, [pc, #320]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80045b8:	6d1a      	ldr	r2, [r3, #80]	; 0x50
 80045ba:	2380      	movs	r3, #128	; 0x80
 80045bc:	009b      	lsls	r3, r3, #2
 80045be:	4013      	ands	r3, r2
 80045c0:	d0ef      	beq.n	80045a2 <HAL_RCCEx_PeriphCLKConfig+0x166>
          }
        }
      }
    }
    __HAL_RCC_RTC_CONFIG(PeriphClkInit->RTCClockSelection);
 80045c2:	687b      	ldr	r3, [r7, #4]
 80045c4:	685a      	ldr	r2, [r3, #4]
 80045c6:	23c0      	movs	r3, #192	; 0xc0
 80045c8:	029b      	lsls	r3, r3, #10
 80045ca:	401a      	ands	r2, r3
 80045cc:	23c0      	movs	r3, #192	; 0xc0
 80045ce:	029b      	lsls	r3, r3, #10
 80045d0:	429a      	cmp	r2, r3
 80045d2:	d10c      	bne.n	80045ee <HAL_RCCEx_PeriphCLKConfig+0x1b2>
 80045d4:	4b48      	ldr	r3, [pc, #288]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80045d6:	681b      	ldr	r3, [r3, #0]
 80045d8:	4a4c      	ldr	r2, [pc, #304]	; (800470c <HAL_RCCEx_PeriphCLKConfig+0x2d0>)
 80045da:	4013      	ands	r3, r2
 80045dc:	0019      	movs	r1, r3
 80045de:	687b      	ldr	r3, [r7, #4]
 80045e0:	685a      	ldr	r2, [r3, #4]
 80045e2:	23c0      	movs	r3, #192	; 0xc0
 80045e4:	039b      	lsls	r3, r3, #14
 80045e6:	401a      	ands	r2, r3
 80045e8:	4b43      	ldr	r3, [pc, #268]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80045ea:	430a      	orrs	r2, r1
 80045ec:	601a      	str	r2, [r3, #0]
 80045ee:	4b42      	ldr	r3, [pc, #264]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80045f0:	6d19      	ldr	r1, [r3, #80]	; 0x50
 80045f2:	687b      	ldr	r3, [r7, #4]
 80045f4:	685a      	ldr	r2, [r3, #4]
 80045f6:	23c0      	movs	r3, #192	; 0xc0
 80045f8:	029b      	lsls	r3, r3, #10
 80045fa:	401a      	ands	r2, r3
 80045fc:	4b3e      	ldr	r3, [pc, #248]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80045fe:	430a      	orrs	r2, r1
 8004600:	651a      	str	r2, [r3, #80]	; 0x50

    /* Require to disable power clock if necessary */
    if(pwrclkchanged == SET)
 8004602:	2317      	movs	r3, #23
 8004604:	18fb      	adds	r3, r7, r3
 8004606:	781b      	ldrb	r3, [r3, #0]
 8004608:	2b01      	cmp	r3, #1
 800460a:	d105      	bne.n	8004618 <HAL_RCCEx_PeriphCLKConfig+0x1dc>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 800460c:	4b3a      	ldr	r3, [pc, #232]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800460e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 8004610:	4b39      	ldr	r3, [pc, #228]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004612:	493f      	ldr	r1, [pc, #252]	; (8004710 <HAL_RCCEx_PeriphCLKConfig+0x2d4>)
 8004614:	400a      	ands	r2, r1
 8004616:	639a      	str	r2, [r3, #56]	; 0x38
    }
  }

#if defined (RCC_CCIPR_USART1SEL)
  /*------------------------------- USART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART1) == RCC_PERIPHCLK_USART1)
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	681b      	ldr	r3, [r3, #0]
 800461c:	2201      	movs	r2, #1
 800461e:	4013      	ands	r3, r2
 8004620:	d009      	beq.n	8004636 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART1CLKSOURCE(PeriphClkInit->Usart1ClockSelection));

    /* Configure the USART1 clock source */
    __HAL_RCC_USART1_CONFIG(PeriphClkInit->Usart1ClockSelection);
 8004622:	4b35      	ldr	r3, [pc, #212]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004624:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004626:	2203      	movs	r2, #3
 8004628:	4393      	bics	r3, r2
 800462a:	0019      	movs	r1, r3
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	68da      	ldr	r2, [r3, #12]
 8004630:	4b31      	ldr	r3, [pc, #196]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004632:	430a      	orrs	r2, r1
 8004634:	64da      	str	r2, [r3, #76]	; 0x4c
  }
#endif /* RCC_CCIPR_USART1SEL */

  /*----------------------------- USART2 Configuration --------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USART2) == RCC_PERIPHCLK_USART2)
 8004636:	687b      	ldr	r3, [r7, #4]
 8004638:	681b      	ldr	r3, [r3, #0]
 800463a:	2202      	movs	r2, #2
 800463c:	4013      	ands	r3, r2
 800463e:	d009      	beq.n	8004654 <HAL_RCCEx_PeriphCLKConfig+0x218>
  {
    /* Check the parameters */
    assert_param(IS_RCC_USART2CLKSOURCE(PeriphClkInit->Usart2ClockSelection));

    /* Configure the USART2 clock source */
    __HAL_RCC_USART2_CONFIG(PeriphClkInit->Usart2ClockSelection);
 8004640:	4b2d      	ldr	r3, [pc, #180]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004642:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004644:	220c      	movs	r2, #12
 8004646:	4393      	bics	r3, r2
 8004648:	0019      	movs	r1, r3
 800464a:	687b      	ldr	r3, [r7, #4]
 800464c:	691a      	ldr	r2, [r3, #16]
 800464e:	4b2a      	ldr	r3, [pc, #168]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004650:	430a      	orrs	r2, r1
 8004652:	64da      	str	r2, [r3, #76]	; 0x4c
  }

  /*------------------------------ LPUART1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPUART1) == RCC_PERIPHCLK_LPUART1)
 8004654:	687b      	ldr	r3, [r7, #4]
 8004656:	681b      	ldr	r3, [r3, #0]
 8004658:	2204      	movs	r2, #4
 800465a:	4013      	ands	r3, r2
 800465c:	d009      	beq.n	8004672 <HAL_RCCEx_PeriphCLKConfig+0x236>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LPUART1CLKSOURCE(PeriphClkInit->Lpuart1ClockSelection));

    /* Configure the LPUAR1 clock source */
    __HAL_RCC_LPUART1_CONFIG(PeriphClkInit->Lpuart1ClockSelection);
 800465e:	4b26      	ldr	r3, [pc, #152]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 8004660:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004662:	4a2c      	ldr	r2, [pc, #176]	; (8004714 <HAL_RCCEx_PeriphCLKConfig+0x2d8>)
 8004664:	4013      	ands	r3, r2
 8004666:	0019      	movs	r1, r3
 8004668:	687b      	ldr	r3, [r7, #4]
 800466a:	695a      	ldr	r2, [r3, #20]
 800466c:	4b22      	ldr	r3, [pc, #136]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800466e:	430a      	orrs	r2, r1
 8004670:	64da      	str	r2, [r3, #76]	; 0x4c
  }

  /*------------------------------ I2C1 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C1) == RCC_PERIPHCLK_I2C1)
 8004672:	687b      	ldr	r3, [r7, #4]
 8004674:	681b      	ldr	r3, [r3, #0]
 8004676:	2208      	movs	r2, #8
 8004678:	4013      	ands	r3, r2
 800467a:	d009      	beq.n	8004690 <HAL_RCCEx_PeriphCLKConfig+0x254>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C1CLKSOURCE(PeriphClkInit->I2c1ClockSelection));

    /* Configure the I2C1 clock source */
    __HAL_RCC_I2C1_CONFIG(PeriphClkInit->I2c1ClockSelection);
 800467c:	4b1e      	ldr	r3, [pc, #120]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800467e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004680:	4a25      	ldr	r2, [pc, #148]	; (8004718 <HAL_RCCEx_PeriphCLKConfig+0x2dc>)
 8004682:	4013      	ands	r3, r2
 8004684:	0019      	movs	r1, r3
 8004686:	687b      	ldr	r3, [r7, #4]
 8004688:	699a      	ldr	r2, [r3, #24]
 800468a:	4b1b      	ldr	r3, [pc, #108]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800468c:	430a      	orrs	r2, r1
 800468e:	64da      	str	r2, [r3, #76]	; 0x4c
  }

#if defined (RCC_CCIPR_I2C3SEL)
    /*------------------------------ I2C3 Configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_I2C3) == RCC_PERIPHCLK_I2C3)
 8004690:	687b      	ldr	r3, [r7, #4]
 8004692:	681a      	ldr	r2, [r3, #0]
 8004694:	2380      	movs	r3, #128	; 0x80
 8004696:	005b      	lsls	r3, r3, #1
 8004698:	4013      	ands	r3, r2
 800469a:	d009      	beq.n	80046b0 <HAL_RCCEx_PeriphCLKConfig+0x274>
  {
    /* Check the parameters */
    assert_param(IS_RCC_I2C3CLKSOURCE(PeriphClkInit->I2c3ClockSelection));

    /* Configure the I2C3 clock source */
    __HAL_RCC_I2C3_CONFIG(PeriphClkInit->I2c3ClockSelection);
 800469c:	4b16      	ldr	r3, [pc, #88]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 800469e:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80046a0:	4a17      	ldr	r2, [pc, #92]	; (8004700 <HAL_RCCEx_PeriphCLKConfig+0x2c4>)
 80046a2:	4013      	ands	r3, r2
 80046a4:	0019      	movs	r1, r3
 80046a6:	687b      	ldr	r3, [r7, #4]
 80046a8:	69da      	ldr	r2, [r3, #28]
 80046aa:	4b13      	ldr	r3, [pc, #76]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80046ac:	430a      	orrs	r2, r1
 80046ae:	64da      	str	r2, [r3, #76]	; 0x4c
  }
#endif /* RCC_CCIPR_I2C3SEL */

#if defined(USB)
 /*---------------------------- USB and RNG configuration --------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_USB) == (RCC_PERIPHCLK_USB))
 80046b0:	687b      	ldr	r3, [r7, #4]
 80046b2:	681b      	ldr	r3, [r3, #0]
 80046b4:	2240      	movs	r2, #64	; 0x40
 80046b6:	4013      	ands	r3, r2
 80046b8:	d009      	beq.n	80046ce <HAL_RCCEx_PeriphCLKConfig+0x292>
  {
    assert_param(IS_RCC_USBCLKSOURCE(PeriphClkInit->UsbClockSelection));
    __HAL_RCC_USB_CONFIG(PeriphClkInit->UsbClockSelection);
 80046ba:	4b0f      	ldr	r3, [pc, #60]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80046bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80046be:	4a17      	ldr	r2, [pc, #92]	; (800471c <HAL_RCCEx_PeriphCLKConfig+0x2e0>)
 80046c0:	4013      	ands	r3, r2
 80046c2:	0019      	movs	r1, r3
 80046c4:	687b      	ldr	r3, [r7, #4]
 80046c6:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 80046c8:	4b0b      	ldr	r3, [pc, #44]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80046ca:	430a      	orrs	r2, r1
 80046cc:	64da      	str	r2, [r3, #76]	; 0x4c
  }
#endif /* USB */

  /*---------------------------- LPTIM1 configuration ------------------------*/
  if(((PeriphClkInit->PeriphClockSelection) & RCC_PERIPHCLK_LPTIM1) == (RCC_PERIPHCLK_LPTIM1))
 80046ce:	687b      	ldr	r3, [r7, #4]
 80046d0:	681b      	ldr	r3, [r3, #0]
 80046d2:	2280      	movs	r2, #128	; 0x80
 80046d4:	4013      	ands	r3, r2
 80046d6:	d009      	beq.n	80046ec <HAL_RCCEx_PeriphCLKConfig+0x2b0>
  {
    assert_param(IS_RCC_LPTIMCLK(PeriphClkInit->LptimClockSelection));
    __HAL_RCC_LPTIM1_CONFIG(PeriphClkInit->LptimClockSelection);
 80046d8:	4b07      	ldr	r3, [pc, #28]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80046da:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80046dc:	4a10      	ldr	r2, [pc, #64]	; (8004720 <HAL_RCCEx_PeriphCLKConfig+0x2e4>)
 80046de:	4013      	ands	r3, r2
 80046e0:	0019      	movs	r1, r3
 80046e2:	687b      	ldr	r3, [r7, #4]
 80046e4:	6a1a      	ldr	r2, [r3, #32]
 80046e6:	4b04      	ldr	r3, [pc, #16]	; (80046f8 <HAL_RCCEx_PeriphCLKConfig+0x2bc>)
 80046e8:	430a      	orrs	r2, r1
 80046ea:	64da      	str	r2, [r3, #76]	; 0x4c
  }

  return HAL_OK;
 80046ec:	2300      	movs	r3, #0
}
 80046ee:	0018      	movs	r0, r3
 80046f0:	46bd      	mov	sp, r7
 80046f2:	b006      	add	sp, #24
 80046f4:	bd80      	pop	{r7, pc}
 80046f6:	46c0      	nop			; (mov r8, r8)
 80046f8:	40021000 	.word	0x40021000
 80046fc:	40007000 	.word	0x40007000
 8004700:	fffcffff 	.word	0xfffcffff
 8004704:	fff7ffff 	.word	0xfff7ffff
 8004708:	00001388 	.word	0x00001388
 800470c:	ffcfffff 	.word	0xffcfffff
 8004710:	efffffff 	.word	0xefffffff
 8004714:	fffff3ff 	.word	0xfffff3ff
 8004718:	ffffcfff 	.word	0xffffcfff
 800471c:	fbffffff 	.word	0xfbffffff
 8004720:	fff3ffff 	.word	0xfff3ffff

08004724 <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 8004724:	b580      	push	{r7, lr}
 8004726:	b082      	sub	sp, #8
 8004728:	af00      	add	r7, sp, #0
 800472a:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 800472c:	687b      	ldr	r3, [r7, #4]
 800472e:	2b00      	cmp	r3, #0
 8004730:	d101      	bne.n	8004736 <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 8004732:	2301      	movs	r3, #1
 8004734:	e01e      	b.n	8004774 <HAL_TIM_Base_Init+0x50>
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_PERIOD(htim->Init.Period));
  assert_param(IS_TIM_PRESCALER(htim->Init.Prescaler));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 8004736:	687b      	ldr	r3, [r7, #4]
 8004738:	2239      	movs	r2, #57	; 0x39
 800473a:	5c9b      	ldrb	r3, [r3, r2]
 800473c:	b2db      	uxtb	r3, r3
 800473e:	2b00      	cmp	r3, #0
 8004740:	d107      	bne.n	8004752 <HAL_TIM_Base_Init+0x2e>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 8004742:	687b      	ldr	r3, [r7, #4]
 8004744:	2238      	movs	r2, #56	; 0x38
 8004746:	2100      	movs	r1, #0
 8004748:	5499      	strb	r1, [r3, r2]
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 800474a:	687b      	ldr	r3, [r7, #4]
 800474c:	0018      	movs	r0, r3
 800474e:	f7fe fc29 	bl	8002fa4 <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 8004752:	687b      	ldr	r3, [r7, #4]
 8004754:	2239      	movs	r2, #57	; 0x39
 8004756:	2102      	movs	r1, #2
 8004758:	5499      	strb	r1, [r3, r2]

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 800475a:	687b      	ldr	r3, [r7, #4]
 800475c:	681a      	ldr	r2, [r3, #0]
 800475e:	687b      	ldr	r3, [r7, #4]
 8004760:	3304      	adds	r3, #4
 8004762:	0019      	movs	r1, r3
 8004764:	0010      	movs	r0, r2
 8004766:	f000 f919 	bl	800499c <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	2239      	movs	r2, #57	; 0x39
 800476e:	2101      	movs	r1, #1
 8004770:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8004772:	2300      	movs	r3, #0
}
 8004774:	0018      	movs	r0, r3
 8004776:	46bd      	mov	sp, r7
 8004778:	b002      	add	sp, #8
 800477a:	bd80      	pop	{r7, pc}

0800477c <HAL_TIM_IRQHandler>:
  * @brief  This function handles TIM interrupts requests.
  * @param  htim TIM  handle
  * @retval None
  */
void HAL_TIM_IRQHandler(TIM_HandleTypeDef *htim)
{
 800477c:	b580      	push	{r7, lr}
 800477e:	b082      	sub	sp, #8
 8004780:	af00      	add	r7, sp, #0
 8004782:	6078      	str	r0, [r7, #4]
  /* Capture compare 1 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC1) != RESET)
 8004784:	687b      	ldr	r3, [r7, #4]
 8004786:	681b      	ldr	r3, [r3, #0]
 8004788:	691b      	ldr	r3, [r3, #16]
 800478a:	2202      	movs	r2, #2
 800478c:	4013      	ands	r3, r2
 800478e:	2b02      	cmp	r3, #2
 8004790:	d124      	bne.n	80047dc <HAL_TIM_IRQHandler+0x60>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC1) != RESET)
 8004792:	687b      	ldr	r3, [r7, #4]
 8004794:	681b      	ldr	r3, [r3, #0]
 8004796:	68db      	ldr	r3, [r3, #12]
 8004798:	2202      	movs	r2, #2
 800479a:	4013      	ands	r3, r2
 800479c:	2b02      	cmp	r3, #2
 800479e:	d11d      	bne.n	80047dc <HAL_TIM_IRQHandler+0x60>
    {
      {
        __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC1);
 80047a0:	687b      	ldr	r3, [r7, #4]
 80047a2:	681b      	ldr	r3, [r3, #0]
 80047a4:	2203      	movs	r2, #3
 80047a6:	4252      	negs	r2, r2
 80047a8:	611a      	str	r2, [r3, #16]
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_1;
 80047aa:	687b      	ldr	r3, [r7, #4]
 80047ac:	2201      	movs	r2, #1
 80047ae:	761a      	strb	r2, [r3, #24]

        /* Input capture event */
        if ((htim->Instance->CCMR1 & TIM_CCMR1_CC1S) != 0x00U)
 80047b0:	687b      	ldr	r3, [r7, #4]
 80047b2:	681b      	ldr	r3, [r3, #0]
 80047b4:	699b      	ldr	r3, [r3, #24]
 80047b6:	2203      	movs	r2, #3
 80047b8:	4013      	ands	r3, r2
 80047ba:	d004      	beq.n	80047c6 <HAL_TIM_IRQHandler+0x4a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->IC_CaptureCallback(htim);
#else
          HAL_TIM_IC_CaptureCallback(htim);
 80047bc:	687b      	ldr	r3, [r7, #4]
 80047be:	0018      	movs	r0, r3
 80047c0:	f000 f8d4 	bl	800496c <HAL_TIM_IC_CaptureCallback>
 80047c4:	e007      	b.n	80047d6 <HAL_TIM_IRQHandler+0x5a>
        {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
          htim->OC_DelayElapsedCallback(htim);
          htim->PWM_PulseFinishedCallback(htim);
#else
          HAL_TIM_OC_DelayElapsedCallback(htim);
 80047c6:	687b      	ldr	r3, [r7, #4]
 80047c8:	0018      	movs	r0, r3
 80047ca:	f000 f8c7 	bl	800495c <HAL_TIM_OC_DelayElapsedCallback>
          HAL_TIM_PWM_PulseFinishedCallback(htim);
 80047ce:	687b      	ldr	r3, [r7, #4]
 80047d0:	0018      	movs	r0, r3
 80047d2:	f000 f8d3 	bl	800497c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
        }
        htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80047d6:	687b      	ldr	r3, [r7, #4]
 80047d8:	2200      	movs	r2, #0
 80047da:	761a      	strb	r2, [r3, #24]
      }
    }
  }
  /* Capture compare 2 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC2) != RESET)
 80047dc:	687b      	ldr	r3, [r7, #4]
 80047de:	681b      	ldr	r3, [r3, #0]
 80047e0:	691b      	ldr	r3, [r3, #16]
 80047e2:	2204      	movs	r2, #4
 80047e4:	4013      	ands	r3, r2
 80047e6:	2b04      	cmp	r3, #4
 80047e8:	d125      	bne.n	8004836 <HAL_TIM_IRQHandler+0xba>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC2) != RESET)
 80047ea:	687b      	ldr	r3, [r7, #4]
 80047ec:	681b      	ldr	r3, [r3, #0]
 80047ee:	68db      	ldr	r3, [r3, #12]
 80047f0:	2204      	movs	r2, #4
 80047f2:	4013      	ands	r3, r2
 80047f4:	2b04      	cmp	r3, #4
 80047f6:	d11e      	bne.n	8004836 <HAL_TIM_IRQHandler+0xba>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC2);
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	681b      	ldr	r3, [r3, #0]
 80047fc:	2205      	movs	r2, #5
 80047fe:	4252      	negs	r2, r2
 8004800:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_2;
 8004802:	687b      	ldr	r3, [r7, #4]
 8004804:	2202      	movs	r2, #2
 8004806:	761a      	strb	r2, [r3, #24]
      /* Input capture event */
      if ((htim->Instance->CCMR1 & TIM_CCMR1_CC2S) != 0x00U)
 8004808:	687b      	ldr	r3, [r7, #4]
 800480a:	681b      	ldr	r3, [r3, #0]
 800480c:	699a      	ldr	r2, [r3, #24]
 800480e:	23c0      	movs	r3, #192	; 0xc0
 8004810:	009b      	lsls	r3, r3, #2
 8004812:	4013      	ands	r3, r2
 8004814:	d004      	beq.n	8004820 <HAL_TIM_IRQHandler+0xa4>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 8004816:	687b      	ldr	r3, [r7, #4]
 8004818:	0018      	movs	r0, r3
 800481a:	f000 f8a7 	bl	800496c <HAL_TIM_IC_CaptureCallback>
 800481e:	e007      	b.n	8004830 <HAL_TIM_IRQHandler+0xb4>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8004820:	687b      	ldr	r3, [r7, #4]
 8004822:	0018      	movs	r0, r3
 8004824:	f000 f89a 	bl	800495c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	0018      	movs	r0, r3
 800482c:	f000 f8a6 	bl	800497c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8004830:	687b      	ldr	r3, [r7, #4]
 8004832:	2200      	movs	r2, #0
 8004834:	761a      	strb	r2, [r3, #24]
    }
  }
  /* Capture compare 3 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC3) != RESET)
 8004836:	687b      	ldr	r3, [r7, #4]
 8004838:	681b      	ldr	r3, [r3, #0]
 800483a:	691b      	ldr	r3, [r3, #16]
 800483c:	2208      	movs	r2, #8
 800483e:	4013      	ands	r3, r2
 8004840:	2b08      	cmp	r3, #8
 8004842:	d124      	bne.n	800488e <HAL_TIM_IRQHandler+0x112>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC3) != RESET)
 8004844:	687b      	ldr	r3, [r7, #4]
 8004846:	681b      	ldr	r3, [r3, #0]
 8004848:	68db      	ldr	r3, [r3, #12]
 800484a:	2208      	movs	r2, #8
 800484c:	4013      	ands	r3, r2
 800484e:	2b08      	cmp	r3, #8
 8004850:	d11d      	bne.n	800488e <HAL_TIM_IRQHandler+0x112>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC3);
 8004852:	687b      	ldr	r3, [r7, #4]
 8004854:	681b      	ldr	r3, [r3, #0]
 8004856:	2209      	movs	r2, #9
 8004858:	4252      	negs	r2, r2
 800485a:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_3;
 800485c:	687b      	ldr	r3, [r7, #4]
 800485e:	2204      	movs	r2, #4
 8004860:	761a      	strb	r2, [r3, #24]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC3S) != 0x00U)
 8004862:	687b      	ldr	r3, [r7, #4]
 8004864:	681b      	ldr	r3, [r3, #0]
 8004866:	69db      	ldr	r3, [r3, #28]
 8004868:	2203      	movs	r2, #3
 800486a:	4013      	ands	r3, r2
 800486c:	d004      	beq.n	8004878 <HAL_TIM_IRQHandler+0xfc>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 800486e:	687b      	ldr	r3, [r7, #4]
 8004870:	0018      	movs	r0, r3
 8004872:	f000 f87b 	bl	800496c <HAL_TIM_IC_CaptureCallback>
 8004876:	e007      	b.n	8004888 <HAL_TIM_IRQHandler+0x10c>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 8004878:	687b      	ldr	r3, [r7, #4]
 800487a:	0018      	movs	r0, r3
 800487c:	f000 f86e 	bl	800495c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 8004880:	687b      	ldr	r3, [r7, #4]
 8004882:	0018      	movs	r0, r3
 8004884:	f000 f87a 	bl	800497c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 8004888:	687b      	ldr	r3, [r7, #4]
 800488a:	2200      	movs	r2, #0
 800488c:	761a      	strb	r2, [r3, #24]
    }
  }
  /* Capture compare 4 event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_CC4) != RESET)
 800488e:	687b      	ldr	r3, [r7, #4]
 8004890:	681b      	ldr	r3, [r3, #0]
 8004892:	691b      	ldr	r3, [r3, #16]
 8004894:	2210      	movs	r2, #16
 8004896:	4013      	ands	r3, r2
 8004898:	2b10      	cmp	r3, #16
 800489a:	d125      	bne.n	80048e8 <HAL_TIM_IRQHandler+0x16c>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_CC4) != RESET)
 800489c:	687b      	ldr	r3, [r7, #4]
 800489e:	681b      	ldr	r3, [r3, #0]
 80048a0:	68db      	ldr	r3, [r3, #12]
 80048a2:	2210      	movs	r2, #16
 80048a4:	4013      	ands	r3, r2
 80048a6:	2b10      	cmp	r3, #16
 80048a8:	d11e      	bne.n	80048e8 <HAL_TIM_IRQHandler+0x16c>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_CC4);
 80048aa:	687b      	ldr	r3, [r7, #4]
 80048ac:	681b      	ldr	r3, [r3, #0]
 80048ae:	2211      	movs	r2, #17
 80048b0:	4252      	negs	r2, r2
 80048b2:	611a      	str	r2, [r3, #16]
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_4;
 80048b4:	687b      	ldr	r3, [r7, #4]
 80048b6:	2208      	movs	r2, #8
 80048b8:	761a      	strb	r2, [r3, #24]
      /* Input capture event */
      if ((htim->Instance->CCMR2 & TIM_CCMR2_CC4S) != 0x00U)
 80048ba:	687b      	ldr	r3, [r7, #4]
 80048bc:	681b      	ldr	r3, [r3, #0]
 80048be:	69da      	ldr	r2, [r3, #28]
 80048c0:	23c0      	movs	r3, #192	; 0xc0
 80048c2:	009b      	lsls	r3, r3, #2
 80048c4:	4013      	ands	r3, r2
 80048c6:	d004      	beq.n	80048d2 <HAL_TIM_IRQHandler+0x156>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->IC_CaptureCallback(htim);
#else
        HAL_TIM_IC_CaptureCallback(htim);
 80048c8:	687b      	ldr	r3, [r7, #4]
 80048ca:	0018      	movs	r0, r3
 80048cc:	f000 f84e 	bl	800496c <HAL_TIM_IC_CaptureCallback>
 80048d0:	e007      	b.n	80048e2 <HAL_TIM_IRQHandler+0x166>
      {
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
        htim->OC_DelayElapsedCallback(htim);
        htim->PWM_PulseFinishedCallback(htim);
#else
        HAL_TIM_OC_DelayElapsedCallback(htim);
 80048d2:	687b      	ldr	r3, [r7, #4]
 80048d4:	0018      	movs	r0, r3
 80048d6:	f000 f841 	bl	800495c <HAL_TIM_OC_DelayElapsedCallback>
        HAL_TIM_PWM_PulseFinishedCallback(htim);
 80048da:	687b      	ldr	r3, [r7, #4]
 80048dc:	0018      	movs	r0, r3
 80048de:	f000 f84d 	bl	800497c <HAL_TIM_PWM_PulseFinishedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
      }
      htim->Channel = HAL_TIM_ACTIVE_CHANNEL_CLEARED;
 80048e2:	687b      	ldr	r3, [r7, #4]
 80048e4:	2200      	movs	r2, #0
 80048e6:	761a      	strb	r2, [r3, #24]
    }
  }
  /* TIM Update event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_UPDATE) != RESET)
 80048e8:	687b      	ldr	r3, [r7, #4]
 80048ea:	681b      	ldr	r3, [r3, #0]
 80048ec:	691b      	ldr	r3, [r3, #16]
 80048ee:	2201      	movs	r2, #1
 80048f0:	4013      	ands	r3, r2
 80048f2:	2b01      	cmp	r3, #1
 80048f4:	d10f      	bne.n	8004916 <HAL_TIM_IRQHandler+0x19a>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_UPDATE) != RESET)
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	681b      	ldr	r3, [r3, #0]
 80048fa:	68db      	ldr	r3, [r3, #12]
 80048fc:	2201      	movs	r2, #1
 80048fe:	4013      	ands	r3, r2
 8004900:	2b01      	cmp	r3, #1
 8004902:	d108      	bne.n	8004916 <HAL_TIM_IRQHandler+0x19a>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_UPDATE);
 8004904:	687b      	ldr	r3, [r7, #4]
 8004906:	681b      	ldr	r3, [r3, #0]
 8004908:	2202      	movs	r2, #2
 800490a:	4252      	negs	r2, r2
 800490c:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->PeriodElapsedCallback(htim);
#else
      HAL_TIM_PeriodElapsedCallback(htim);
 800490e:	687b      	ldr	r3, [r7, #4]
 8004910:	0018      	movs	r0, r3
 8004912:	f000 f81b 	bl	800494c <HAL_TIM_PeriodElapsedCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
  /* TIM Trigger detection event */
  if (__HAL_TIM_GET_FLAG(htim, TIM_FLAG_TRIGGER) != RESET)
 8004916:	687b      	ldr	r3, [r7, #4]
 8004918:	681b      	ldr	r3, [r3, #0]
 800491a:	691b      	ldr	r3, [r3, #16]
 800491c:	2240      	movs	r2, #64	; 0x40
 800491e:	4013      	ands	r3, r2
 8004920:	2b40      	cmp	r3, #64	; 0x40
 8004922:	d10f      	bne.n	8004944 <HAL_TIM_IRQHandler+0x1c8>
  {
    if (__HAL_TIM_GET_IT_SOURCE(htim, TIM_IT_TRIGGER) != RESET)
 8004924:	687b      	ldr	r3, [r7, #4]
 8004926:	681b      	ldr	r3, [r3, #0]
 8004928:	68db      	ldr	r3, [r3, #12]
 800492a:	2240      	movs	r2, #64	; 0x40
 800492c:	4013      	ands	r3, r2
 800492e:	2b40      	cmp	r3, #64	; 0x40
 8004930:	d108      	bne.n	8004944 <HAL_TIM_IRQHandler+0x1c8>
    {
      __HAL_TIM_CLEAR_IT(htim, TIM_IT_TRIGGER);
 8004932:	687b      	ldr	r3, [r7, #4]
 8004934:	681b      	ldr	r3, [r3, #0]
 8004936:	2241      	movs	r2, #65	; 0x41
 8004938:	4252      	negs	r2, r2
 800493a:	611a      	str	r2, [r3, #16]
#if (USE_HAL_TIM_REGISTER_CALLBACKS == 1)
      htim->TriggerCallback(htim);
#else
      HAL_TIM_TriggerCallback(htim);
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	0018      	movs	r0, r3
 8004940:	f000 f824 	bl	800498c <HAL_TIM_TriggerCallback>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
    }
  }
}
 8004944:	46c0      	nop			; (mov r8, r8)
 8004946:	46bd      	mov	sp, r7
 8004948:	b002      	add	sp, #8
 800494a:	bd80      	pop	{r7, pc}

0800494c <HAL_TIM_PeriodElapsedCallback>:
  * @brief  Period elapsed callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 800494c:	b580      	push	{r7, lr}
 800494e:	b082      	sub	sp, #8
 8004950:	af00      	add	r7, sp, #0
 8004952:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PeriodElapsedCallback could be implemented in the user file
   */
}
 8004954:	46c0      	nop			; (mov r8, r8)
 8004956:	46bd      	mov	sp, r7
 8004958:	b002      	add	sp, #8
 800495a:	bd80      	pop	{r7, pc}

0800495c <HAL_TIM_OC_DelayElapsedCallback>:
  * @brief  Output Compare callback in non-blocking mode
  * @param  htim TIM OC handle
  * @retval None
  */
__weak void HAL_TIM_OC_DelayElapsedCallback(TIM_HandleTypeDef *htim)
{
 800495c:	b580      	push	{r7, lr}
 800495e:	b082      	sub	sp, #8
 8004960:	af00      	add	r7, sp, #0
 8004962:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_OC_DelayElapsedCallback could be implemented in the user file
   */
}
 8004964:	46c0      	nop			; (mov r8, r8)
 8004966:	46bd      	mov	sp, r7
 8004968:	b002      	add	sp, #8
 800496a:	bd80      	pop	{r7, pc}

0800496c <HAL_TIM_IC_CaptureCallback>:
  * @brief  Input Capture callback in non-blocking mode
  * @param  htim TIM IC handle
  * @retval None
  */
__weak void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
 800496c:	b580      	push	{r7, lr}
 800496e:	b082      	sub	sp, #8
 8004970:	af00      	add	r7, sp, #0
 8004972:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_IC_CaptureCallback could be implemented in the user file
   */
}
 8004974:	46c0      	nop			; (mov r8, r8)
 8004976:	46bd      	mov	sp, r7
 8004978:	b002      	add	sp, #8
 800497a:	bd80      	pop	{r7, pc}

0800497c <HAL_TIM_PWM_PulseFinishedCallback>:
  * @brief  PWM Pulse finished callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_PulseFinishedCallback(TIM_HandleTypeDef *htim)
{
 800497c:	b580      	push	{r7, lr}
 800497e:	b082      	sub	sp, #8
 8004980:	af00      	add	r7, sp, #0
 8004982:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_PulseFinishedCallback could be implemented in the user file
   */
}
 8004984:	46c0      	nop			; (mov r8, r8)
 8004986:	46bd      	mov	sp, r7
 8004988:	b002      	add	sp, #8
 800498a:	bd80      	pop	{r7, pc}

0800498c <HAL_TIM_TriggerCallback>:
  * @brief  Hall Trigger detection callback in non-blocking mode
  * @param  htim TIM handle
  * @retval None
  */
__weak void HAL_TIM_TriggerCallback(TIM_HandleTypeDef *htim)
{
 800498c:	b580      	push	{r7, lr}
 800498e:	b082      	sub	sp, #8
 8004990:	af00      	add	r7, sp, #0
 8004992:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_TriggerCallback could be implemented in the user file
   */
}
 8004994:	46c0      	nop			; (mov r8, r8)
 8004996:	46bd      	mov	sp, r7
 8004998:	b002      	add	sp, #8
 800499a:	bd80      	pop	{r7, pc}

0800499c <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 800499c:	b580      	push	{r7, lr}
 800499e:	b084      	sub	sp, #16
 80049a0:	af00      	add	r7, sp, #0
 80049a2:	6078      	str	r0, [r7, #4]
 80049a4:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	681b      	ldr	r3, [r3, #0]
 80049aa:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 80049ac:	687a      	ldr	r2, [r7, #4]
 80049ae:	2380      	movs	r3, #128	; 0x80
 80049b0:	05db      	lsls	r3, r3, #23
 80049b2:	429a      	cmp	r2, r3
 80049b4:	d00b      	beq.n	80049ce <TIM_Base_SetConfig+0x32>
 80049b6:	687b      	ldr	r3, [r7, #4]
 80049b8:	4a23      	ldr	r2, [pc, #140]	; (8004a48 <TIM_Base_SetConfig+0xac>)
 80049ba:	4293      	cmp	r3, r2
 80049bc:	d007      	beq.n	80049ce <TIM_Base_SetConfig+0x32>
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	4a22      	ldr	r2, [pc, #136]	; (8004a4c <TIM_Base_SetConfig+0xb0>)
 80049c2:	4293      	cmp	r3, r2
 80049c4:	d003      	beq.n	80049ce <TIM_Base_SetConfig+0x32>
 80049c6:	687b      	ldr	r3, [r7, #4]
 80049c8:	4a21      	ldr	r2, [pc, #132]	; (8004a50 <TIM_Base_SetConfig+0xb4>)
 80049ca:	4293      	cmp	r3, r2
 80049cc:	d108      	bne.n	80049e0 <TIM_Base_SetConfig+0x44>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 80049ce:	68fb      	ldr	r3, [r7, #12]
 80049d0:	2270      	movs	r2, #112	; 0x70
 80049d2:	4393      	bics	r3, r2
 80049d4:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 80049d6:	683b      	ldr	r3, [r7, #0]
 80049d8:	685b      	ldr	r3, [r3, #4]
 80049da:	68fa      	ldr	r2, [r7, #12]
 80049dc:	4313      	orrs	r3, r2
 80049de:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 80049e0:	687a      	ldr	r2, [r7, #4]
 80049e2:	2380      	movs	r3, #128	; 0x80
 80049e4:	05db      	lsls	r3, r3, #23
 80049e6:	429a      	cmp	r2, r3
 80049e8:	d00b      	beq.n	8004a02 <TIM_Base_SetConfig+0x66>
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	4a16      	ldr	r2, [pc, #88]	; (8004a48 <TIM_Base_SetConfig+0xac>)
 80049ee:	4293      	cmp	r3, r2
 80049f0:	d007      	beq.n	8004a02 <TIM_Base_SetConfig+0x66>
 80049f2:	687b      	ldr	r3, [r7, #4]
 80049f4:	4a15      	ldr	r2, [pc, #84]	; (8004a4c <TIM_Base_SetConfig+0xb0>)
 80049f6:	4293      	cmp	r3, r2
 80049f8:	d003      	beq.n	8004a02 <TIM_Base_SetConfig+0x66>
 80049fa:	687b      	ldr	r3, [r7, #4]
 80049fc:	4a14      	ldr	r2, [pc, #80]	; (8004a50 <TIM_Base_SetConfig+0xb4>)
 80049fe:	4293      	cmp	r3, r2
 8004a00:	d108      	bne.n	8004a14 <TIM_Base_SetConfig+0x78>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 8004a02:	68fb      	ldr	r3, [r7, #12]
 8004a04:	4a13      	ldr	r2, [pc, #76]	; (8004a54 <TIM_Base_SetConfig+0xb8>)
 8004a06:	4013      	ands	r3, r2
 8004a08:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 8004a0a:	683b      	ldr	r3, [r7, #0]
 8004a0c:	68db      	ldr	r3, [r3, #12]
 8004a0e:	68fa      	ldr	r2, [r7, #12]
 8004a10:	4313      	orrs	r3, r2
 8004a12:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 8004a14:	68fb      	ldr	r3, [r7, #12]
 8004a16:	2280      	movs	r2, #128	; 0x80
 8004a18:	4393      	bics	r3, r2
 8004a1a:	001a      	movs	r2, r3
 8004a1c:	683b      	ldr	r3, [r7, #0]
 8004a1e:	691b      	ldr	r3, [r3, #16]
 8004a20:	4313      	orrs	r3, r2
 8004a22:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 8004a24:	687b      	ldr	r3, [r7, #4]
 8004a26:	68fa      	ldr	r2, [r7, #12]
 8004a28:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 8004a2a:	683b      	ldr	r3, [r7, #0]
 8004a2c:	689a      	ldr	r2, [r3, #8]
 8004a2e:	687b      	ldr	r3, [r7, #4]
 8004a30:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 8004a32:	683b      	ldr	r3, [r7, #0]
 8004a34:	681a      	ldr	r2, [r3, #0]
 8004a36:	687b      	ldr	r3, [r7, #4]
 8004a38:	629a      	str	r2, [r3, #40]	; 0x28

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 8004a3a:	687b      	ldr	r3, [r7, #4]
 8004a3c:	2201      	movs	r2, #1
 8004a3e:	615a      	str	r2, [r3, #20]
}
 8004a40:	46c0      	nop			; (mov r8, r8)
 8004a42:	46bd      	mov	sp, r7
 8004a44:	b004      	add	sp, #16
 8004a46:	bd80      	pop	{r7, pc}
 8004a48:	40000400 	.word	0x40000400
 8004a4c:	40010800 	.word	0x40010800
 8004a50:	40011400 	.word	0x40011400
 8004a54:	fffffcff 	.word	0xfffffcff

08004a58 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 8004a58:	b580      	push	{r7, lr}
 8004a5a:	b084      	sub	sp, #16
 8004a5c:	af00      	add	r7, sp, #0
 8004a5e:	6078      	str	r0, [r7, #4]
 8004a60:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_SYNCHRO_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 8004a62:	687b      	ldr	r3, [r7, #4]
 8004a64:	2238      	movs	r2, #56	; 0x38
 8004a66:	5c9b      	ldrb	r3, [r3, r2]
 8004a68:	2b01      	cmp	r3, #1
 8004a6a:	d101      	bne.n	8004a70 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 8004a6c:	2302      	movs	r3, #2
 8004a6e:	e032      	b.n	8004ad6 <HAL_TIMEx_MasterConfigSynchronization+0x7e>
 8004a70:	687b      	ldr	r3, [r7, #4]
 8004a72:	2238      	movs	r2, #56	; 0x38
 8004a74:	2101      	movs	r1, #1
 8004a76:	5499      	strb	r1, [r3, r2]

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	2239      	movs	r2, #57	; 0x39
 8004a7c:	2102      	movs	r1, #2
 8004a7e:	5499      	strb	r1, [r3, r2]

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 8004a80:	687b      	ldr	r3, [r7, #4]
 8004a82:	681b      	ldr	r3, [r3, #0]
 8004a84:	685b      	ldr	r3, [r3, #4]
 8004a86:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 8004a88:	687b      	ldr	r3, [r7, #4]
 8004a8a:	681b      	ldr	r3, [r3, #0]
 8004a8c:	689b      	ldr	r3, [r3, #8]
 8004a8e:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 8004a90:	68fb      	ldr	r3, [r7, #12]
 8004a92:	2270      	movs	r2, #112	; 0x70
 8004a94:	4393      	bics	r3, r2
 8004a96:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 8004a98:	683b      	ldr	r3, [r7, #0]
 8004a9a:	681b      	ldr	r3, [r3, #0]
 8004a9c:	68fa      	ldr	r2, [r7, #12]
 8004a9e:	4313      	orrs	r3, r2
 8004aa0:	60fb      	str	r3, [r7, #12]

  /* Reset the MSM Bit */
  tmpsmcr &= ~TIM_SMCR_MSM;
 8004aa2:	68bb      	ldr	r3, [r7, #8]
 8004aa4:	2280      	movs	r2, #128	; 0x80
 8004aa6:	4393      	bics	r3, r2
 8004aa8:	60bb      	str	r3, [r7, #8]
  /* Set master mode */
  tmpsmcr |= sMasterConfig->MasterSlaveMode;
 8004aaa:	683b      	ldr	r3, [r7, #0]
 8004aac:	685b      	ldr	r3, [r3, #4]
 8004aae:	68ba      	ldr	r2, [r7, #8]
 8004ab0:	4313      	orrs	r3, r2
 8004ab2:	60bb      	str	r3, [r7, #8]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 8004ab4:	687b      	ldr	r3, [r7, #4]
 8004ab6:	681b      	ldr	r3, [r3, #0]
 8004ab8:	68fa      	ldr	r2, [r7, #12]
 8004aba:	605a      	str	r2, [r3, #4]

  /* Update TIMx SMCR */
  htim->Instance->SMCR = tmpsmcr;
 8004abc:	687b      	ldr	r3, [r7, #4]
 8004abe:	681b      	ldr	r3, [r3, #0]
 8004ac0:	68ba      	ldr	r2, [r7, #8]
 8004ac2:	609a      	str	r2, [r3, #8]

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 8004ac4:	687b      	ldr	r3, [r7, #4]
 8004ac6:	2239      	movs	r2, #57	; 0x39
 8004ac8:	2101      	movs	r1, #1
 8004aca:	5499      	strb	r1, [r3, r2]

  __HAL_UNLOCK(htim);
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	2238      	movs	r2, #56	; 0x38
 8004ad0:	2100      	movs	r1, #0
 8004ad2:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8004ad4:	2300      	movs	r3, #0
}
 8004ad6:	0018      	movs	r0, r3
 8004ad8:	46bd      	mov	sp, r7
 8004ada:	b004      	add	sp, #16
 8004adc:	bd80      	pop	{r7, pc}
	...

08004ae0 <HAL_UART_Init>:
  *        parameters in the UART_InitTypeDef and initialize the associated handle.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 8004ae0:	b580      	push	{r7, lr}
 8004ae2:	b082      	sub	sp, #8
 8004ae4:	af00      	add	r7, sp, #0
 8004ae6:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 8004ae8:	687b      	ldr	r3, [r7, #4]
 8004aea:	2b00      	cmp	r3, #0
 8004aec:	d101      	bne.n	8004af2 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 8004aee:	2301      	movs	r3, #1
 8004af0:	e044      	b.n	8004b7c <HAL_UART_Init+0x9c>
  {
    /* Check the parameters */
    assert_param((IS_UART_INSTANCE(huart->Instance)) || (IS_LPUART_INSTANCE(huart->Instance)));
  }

  if (huart->gState == HAL_UART_STATE_RESET)
 8004af2:	687b      	ldr	r3, [r7, #4]
 8004af4:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004af6:	2b00      	cmp	r3, #0
 8004af8:	d107      	bne.n	8004b0a <HAL_UART_Init+0x2a>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 8004afa:	687b      	ldr	r3, [r7, #4]
 8004afc:	2270      	movs	r2, #112	; 0x70
 8004afe:	2100      	movs	r1, #0
 8004b00:	5499      	strb	r1, [r3, r2]

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 8004b02:	687b      	ldr	r3, [r7, #4]
 8004b04:	0018      	movs	r0, r3
 8004b06:	f7fe fa6d 	bl	8002fe4 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 8004b0a:	687b      	ldr	r3, [r7, #4]
 8004b0c:	2224      	movs	r2, #36	; 0x24
 8004b0e:	675a      	str	r2, [r3, #116]	; 0x74

  /* Disable the Peripheral */
  __HAL_UART_DISABLE(huart);
 8004b10:	687b      	ldr	r3, [r7, #4]
 8004b12:	681b      	ldr	r3, [r3, #0]
 8004b14:	681a      	ldr	r2, [r3, #0]
 8004b16:	687b      	ldr	r3, [r7, #4]
 8004b18:	681b      	ldr	r3, [r3, #0]
 8004b1a:	2101      	movs	r1, #1
 8004b1c:	438a      	bics	r2, r1
 8004b1e:	601a      	str	r2, [r3, #0]

  /* Set the UART Communication parameters */
  if (UART_SetConfig(huart) == HAL_ERROR)
 8004b20:	687b      	ldr	r3, [r7, #4]
 8004b22:	0018      	movs	r0, r3
 8004b24:	f000 f8d8 	bl	8004cd8 <UART_SetConfig>
 8004b28:	0003      	movs	r3, r0
 8004b2a:	2b01      	cmp	r3, #1
 8004b2c:	d101      	bne.n	8004b32 <HAL_UART_Init+0x52>
  {
    return HAL_ERROR;
 8004b2e:	2301      	movs	r3, #1
 8004b30:	e024      	b.n	8004b7c <HAL_UART_Init+0x9c>
  }

  if (huart->AdvancedInit.AdvFeatureInit != UART_ADVFEATURE_NO_INIT)
 8004b32:	687b      	ldr	r3, [r7, #4]
 8004b34:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8004b36:	2b00      	cmp	r3, #0
 8004b38:	d003      	beq.n	8004b42 <HAL_UART_Init+0x62>
  {
    UART_AdvFeatureConfig(huart);
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	0018      	movs	r0, r3
 8004b3e:	f000 fbff 	bl	8005340 <UART_AdvFeatureConfig>
  }

  /* In asynchronous mode, the following bits must be kept cleared:
  - LINEN and CLKEN bits in the USART_CR2 register,
  - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 8004b42:	687b      	ldr	r3, [r7, #4]
 8004b44:	681b      	ldr	r3, [r3, #0]
 8004b46:	685a      	ldr	r2, [r3, #4]
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	681b      	ldr	r3, [r3, #0]
 8004b4c:	490d      	ldr	r1, [pc, #52]	; (8004b84 <HAL_UART_Init+0xa4>)
 8004b4e:	400a      	ands	r2, r1
 8004b50:	605a      	str	r2, [r3, #4]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 8004b52:	687b      	ldr	r3, [r7, #4]
 8004b54:	681b      	ldr	r3, [r3, #0]
 8004b56:	689a      	ldr	r2, [r3, #8]
 8004b58:	687b      	ldr	r3, [r7, #4]
 8004b5a:	681b      	ldr	r3, [r3, #0]
 8004b5c:	212a      	movs	r1, #42	; 0x2a
 8004b5e:	438a      	bics	r2, r1
 8004b60:	609a      	str	r2, [r3, #8]

  /* Enable the Peripheral */
  __HAL_UART_ENABLE(huart);
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	681b      	ldr	r3, [r3, #0]
 8004b66:	681a      	ldr	r2, [r3, #0]
 8004b68:	687b      	ldr	r3, [r7, #4]
 8004b6a:	681b      	ldr	r3, [r3, #0]
 8004b6c:	2101      	movs	r1, #1
 8004b6e:	430a      	orrs	r2, r1
 8004b70:	601a      	str	r2, [r3, #0]

  /* TEACK and/or REACK to check before moving huart->gState and huart->RxState to Ready */
  return (UART_CheckIdleState(huart));
 8004b72:	687b      	ldr	r3, [r7, #4]
 8004b74:	0018      	movs	r0, r3
 8004b76:	f000 fc97 	bl	80054a8 <UART_CheckIdleState>
 8004b7a:	0003      	movs	r3, r0
}
 8004b7c:	0018      	movs	r0, r3
 8004b7e:	46bd      	mov	sp, r7
 8004b80:	b002      	add	sp, #8
 8004b82:	bd80      	pop	{r7, pc}
 8004b84:	ffffb7ff 	.word	0xffffb7ff

08004b88 <HAL_UART_Transmit>:
  * @param Size    Amount of data to be sent.
  * @param Timeout Timeout duration.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 8004b88:	b580      	push	{r7, lr}
 8004b8a:	b08a      	sub	sp, #40	; 0x28
 8004b8c:	af02      	add	r7, sp, #8
 8004b8e:	60f8      	str	r0, [r7, #12]
 8004b90:	60b9      	str	r1, [r7, #8]
 8004b92:	603b      	str	r3, [r7, #0]
 8004b94:	1dbb      	adds	r3, r7, #6
 8004b96:	801a      	strh	r2, [r3, #0]
  uint8_t  *pdata8bits;
  uint16_t *pdata16bits;
  uint32_t tickstart;

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 8004b98:	68fb      	ldr	r3, [r7, #12]
 8004b9a:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 8004b9c:	2b20      	cmp	r3, #32
 8004b9e:	d000      	beq.n	8004ba2 <HAL_UART_Transmit+0x1a>
 8004ba0:	e094      	b.n	8004ccc <HAL_UART_Transmit+0x144>
  {
    if ((pData == NULL) || (Size == 0U))
 8004ba2:	68bb      	ldr	r3, [r7, #8]
 8004ba4:	2b00      	cmp	r3, #0
 8004ba6:	d003      	beq.n	8004bb0 <HAL_UART_Transmit+0x28>
 8004ba8:	1dbb      	adds	r3, r7, #6
 8004baa:	881b      	ldrh	r3, [r3, #0]
 8004bac:	2b00      	cmp	r3, #0
 8004bae:	d101      	bne.n	8004bb4 <HAL_UART_Transmit+0x2c>
    {
      return  HAL_ERROR;
 8004bb0:	2301      	movs	r3, #1
 8004bb2:	e08c      	b.n	8004cce <HAL_UART_Transmit+0x146>
    }

    /* In case of 9bits/No Parity transfer, pData buffer provided as input parameter
       should be aligned on a u16 frontier, as data to be filled into TDR will be
       handled through a u16 cast. */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004bb4:	68fb      	ldr	r3, [r7, #12]
 8004bb6:	689a      	ldr	r2, [r3, #8]
 8004bb8:	2380      	movs	r3, #128	; 0x80
 8004bba:	015b      	lsls	r3, r3, #5
 8004bbc:	429a      	cmp	r2, r3
 8004bbe:	d109      	bne.n	8004bd4 <HAL_UART_Transmit+0x4c>
 8004bc0:	68fb      	ldr	r3, [r7, #12]
 8004bc2:	691b      	ldr	r3, [r3, #16]
 8004bc4:	2b00      	cmp	r3, #0
 8004bc6:	d105      	bne.n	8004bd4 <HAL_UART_Transmit+0x4c>
    {
      if ((((uint32_t)pData) & 1) != 0)
 8004bc8:	68bb      	ldr	r3, [r7, #8]
 8004bca:	2201      	movs	r2, #1
 8004bcc:	4013      	ands	r3, r2
 8004bce:	d001      	beq.n	8004bd4 <HAL_UART_Transmit+0x4c>
      {
        return  HAL_ERROR;
 8004bd0:	2301      	movs	r3, #1
 8004bd2:	e07c      	b.n	8004cce <HAL_UART_Transmit+0x146>
      }
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 8004bd4:	68fb      	ldr	r3, [r7, #12]
 8004bd6:	2270      	movs	r2, #112	; 0x70
 8004bd8:	5c9b      	ldrb	r3, [r3, r2]
 8004bda:	2b01      	cmp	r3, #1
 8004bdc:	d101      	bne.n	8004be2 <HAL_UART_Transmit+0x5a>
 8004bde:	2302      	movs	r3, #2
 8004be0:	e075      	b.n	8004cce <HAL_UART_Transmit+0x146>
 8004be2:	68fb      	ldr	r3, [r7, #12]
 8004be4:	2270      	movs	r2, #112	; 0x70
 8004be6:	2101      	movs	r1, #1
 8004be8:	5499      	strb	r1, [r3, r2]

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 8004bea:	68fb      	ldr	r3, [r7, #12]
 8004bec:	2200      	movs	r2, #0
 8004bee:	67da      	str	r2, [r3, #124]	; 0x7c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 8004bf0:	68fb      	ldr	r3, [r7, #12]
 8004bf2:	2221      	movs	r2, #33	; 0x21
 8004bf4:	675a      	str	r2, [r3, #116]	; 0x74

    /* Init tickstart for timeout managment*/
    tickstart = HAL_GetTick();
 8004bf6:	f7fe fb77 	bl	80032e8 <HAL_GetTick>
 8004bfa:	0003      	movs	r3, r0
 8004bfc:	617b      	str	r3, [r7, #20]

    huart->TxXferSize  = Size;
 8004bfe:	68fb      	ldr	r3, [r7, #12]
 8004c00:	1dba      	adds	r2, r7, #6
 8004c02:	2150      	movs	r1, #80	; 0x50
 8004c04:	8812      	ldrh	r2, [r2, #0]
 8004c06:	525a      	strh	r2, [r3, r1]
    huart->TxXferCount = Size;
 8004c08:	68fb      	ldr	r3, [r7, #12]
 8004c0a:	1dba      	adds	r2, r7, #6
 8004c0c:	2152      	movs	r1, #82	; 0x52
 8004c0e:	8812      	ldrh	r2, [r2, #0]
 8004c10:	525a      	strh	r2, [r3, r1]

        /* In case of 9bits/No Parity transfer, pData needs to be handled as a uint16_t pointer */
    if ((huart->Init.WordLength == UART_WORDLENGTH_9B) && (huart->Init.Parity == UART_PARITY_NONE))
 8004c12:	68fb      	ldr	r3, [r7, #12]
 8004c14:	689a      	ldr	r2, [r3, #8]
 8004c16:	2380      	movs	r3, #128	; 0x80
 8004c18:	015b      	lsls	r3, r3, #5
 8004c1a:	429a      	cmp	r2, r3
 8004c1c:	d108      	bne.n	8004c30 <HAL_UART_Transmit+0xa8>
 8004c1e:	68fb      	ldr	r3, [r7, #12]
 8004c20:	691b      	ldr	r3, [r3, #16]
 8004c22:	2b00      	cmp	r3, #0
 8004c24:	d104      	bne.n	8004c30 <HAL_UART_Transmit+0xa8>
    {
      pdata8bits  = NULL;
 8004c26:	2300      	movs	r3, #0
 8004c28:	61fb      	str	r3, [r7, #28]
      pdata16bits = (uint16_t *) pData;
 8004c2a:	68bb      	ldr	r3, [r7, #8]
 8004c2c:	61bb      	str	r3, [r7, #24]
 8004c2e:	e003      	b.n	8004c38 <HAL_UART_Transmit+0xb0>
    }
    else
    {
      pdata8bits  = pData;
 8004c30:	68bb      	ldr	r3, [r7, #8]
 8004c32:	61fb      	str	r3, [r7, #28]
      pdata16bits = NULL;
 8004c34:	2300      	movs	r3, #0
 8004c36:	61bb      	str	r3, [r7, #24]
    }

    while (huart->TxXferCount > 0U)
 8004c38:	e02c      	b.n	8004c94 <HAL_UART_Transmit+0x10c>
    {
      if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 8004c3a:	697a      	ldr	r2, [r7, #20]
 8004c3c:	68f8      	ldr	r0, [r7, #12]
 8004c3e:	683b      	ldr	r3, [r7, #0]
 8004c40:	9300      	str	r3, [sp, #0]
 8004c42:	0013      	movs	r3, r2
 8004c44:	2200      	movs	r2, #0
 8004c46:	2180      	movs	r1, #128	; 0x80
 8004c48:	f000 fc74 	bl	8005534 <UART_WaitOnFlagUntilTimeout>
 8004c4c:	1e03      	subs	r3, r0, #0
 8004c4e:	d001      	beq.n	8004c54 <HAL_UART_Transmit+0xcc>
      {
        return HAL_TIMEOUT;
 8004c50:	2303      	movs	r3, #3
 8004c52:	e03c      	b.n	8004cce <HAL_UART_Transmit+0x146>
      }
      if (pdata8bits == NULL)
 8004c54:	69fb      	ldr	r3, [r7, #28]
 8004c56:	2b00      	cmp	r3, #0
 8004c58:	d10b      	bne.n	8004c72 <HAL_UART_Transmit+0xea>
      {
        huart->Instance->TDR = (uint16_t)(*pdata16bits & 0x01FFU);
 8004c5a:	69bb      	ldr	r3, [r7, #24]
 8004c5c:	881b      	ldrh	r3, [r3, #0]
 8004c5e:	001a      	movs	r2, r3
 8004c60:	68fb      	ldr	r3, [r7, #12]
 8004c62:	681b      	ldr	r3, [r3, #0]
 8004c64:	05d2      	lsls	r2, r2, #23
 8004c66:	0dd2      	lsrs	r2, r2, #23
 8004c68:	629a      	str	r2, [r3, #40]	; 0x28
        pdata16bits++;
 8004c6a:	69bb      	ldr	r3, [r7, #24]
 8004c6c:	3302      	adds	r3, #2
 8004c6e:	61bb      	str	r3, [r7, #24]
 8004c70:	e007      	b.n	8004c82 <HAL_UART_Transmit+0xfa>
      }
      else
      {
        huart->Instance->TDR = (uint8_t)(*pdata8bits & 0xFFU);
 8004c72:	69fb      	ldr	r3, [r7, #28]
 8004c74:	781a      	ldrb	r2, [r3, #0]
 8004c76:	68fb      	ldr	r3, [r7, #12]
 8004c78:	681b      	ldr	r3, [r3, #0]
 8004c7a:	629a      	str	r2, [r3, #40]	; 0x28
        pdata8bits++;
 8004c7c:	69fb      	ldr	r3, [r7, #28]
 8004c7e:	3301      	adds	r3, #1
 8004c80:	61fb      	str	r3, [r7, #28]
      }
      huart->TxXferCount--;
 8004c82:	68fb      	ldr	r3, [r7, #12]
 8004c84:	2252      	movs	r2, #82	; 0x52
 8004c86:	5a9b      	ldrh	r3, [r3, r2]
 8004c88:	b29b      	uxth	r3, r3
 8004c8a:	3b01      	subs	r3, #1
 8004c8c:	b299      	uxth	r1, r3
 8004c8e:	68fb      	ldr	r3, [r7, #12]
 8004c90:	2252      	movs	r2, #82	; 0x52
 8004c92:	5299      	strh	r1, [r3, r2]
    while (huart->TxXferCount > 0U)
 8004c94:	68fb      	ldr	r3, [r7, #12]
 8004c96:	2252      	movs	r2, #82	; 0x52
 8004c98:	5a9b      	ldrh	r3, [r3, r2]
 8004c9a:	b29b      	uxth	r3, r3
 8004c9c:	2b00      	cmp	r3, #0
 8004c9e:	d1cc      	bne.n	8004c3a <HAL_UART_Transmit+0xb2>
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 8004ca0:	697a      	ldr	r2, [r7, #20]
 8004ca2:	68f8      	ldr	r0, [r7, #12]
 8004ca4:	683b      	ldr	r3, [r7, #0]
 8004ca6:	9300      	str	r3, [sp, #0]
 8004ca8:	0013      	movs	r3, r2
 8004caa:	2200      	movs	r2, #0
 8004cac:	2140      	movs	r1, #64	; 0x40
 8004cae:	f000 fc41 	bl	8005534 <UART_WaitOnFlagUntilTimeout>
 8004cb2:	1e03      	subs	r3, r0, #0
 8004cb4:	d001      	beq.n	8004cba <HAL_UART_Transmit+0x132>
    {
      return HAL_TIMEOUT;
 8004cb6:	2303      	movs	r3, #3
 8004cb8:	e009      	b.n	8004cce <HAL_UART_Transmit+0x146>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 8004cba:	68fb      	ldr	r3, [r7, #12]
 8004cbc:	2220      	movs	r2, #32
 8004cbe:	675a      	str	r2, [r3, #116]	; 0x74

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 8004cc0:	68fb      	ldr	r3, [r7, #12]
 8004cc2:	2270      	movs	r2, #112	; 0x70
 8004cc4:	2100      	movs	r1, #0
 8004cc6:	5499      	strb	r1, [r3, r2]

    return HAL_OK;
 8004cc8:	2300      	movs	r3, #0
 8004cca:	e000      	b.n	8004cce <HAL_UART_Transmit+0x146>
  }
  else
  {
    return HAL_BUSY;
 8004ccc:	2302      	movs	r3, #2
  }
}
 8004cce:	0018      	movs	r0, r3
 8004cd0:	46bd      	mov	sp, r7
 8004cd2:	b008      	add	sp, #32
 8004cd4:	bd80      	pop	{r7, pc}
	...

08004cd8 <UART_SetConfig>:
  * @brief Configure the UART peripheral.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_SetConfig(UART_HandleTypeDef *huart)
{
 8004cd8:	b5b0      	push	{r4, r5, r7, lr}
 8004cda:	b08e      	sub	sp, #56	; 0x38
 8004cdc:	af00      	add	r7, sp, #0
 8004cde:	61f8      	str	r0, [r7, #28]
  uint32_t tmpreg;
  uint16_t brrtemp;
  UART_ClockSourceTypeDef clocksource = UART_CLOCKSOURCE_UNDEFINED;
 8004ce0:	231b      	movs	r3, #27
 8004ce2:	2218      	movs	r2, #24
 8004ce4:	4694      	mov	ip, r2
 8004ce6:	44bc      	add	ip, r7
 8004ce8:	4463      	add	r3, ip
 8004cea:	2210      	movs	r2, #16
 8004cec:	701a      	strb	r2, [r3, #0]
  uint32_t usartdiv                   = 0x00000000U;
 8004cee:	2300      	movs	r3, #0
 8004cf0:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_StatusTypeDef ret               = HAL_OK;
 8004cf2:	2313      	movs	r3, #19
 8004cf4:	2218      	movs	r2, #24
 8004cf6:	4694      	mov	ip, r2
 8004cf8:	44bc      	add	ip, r7
 8004cfa:	4463      	add	r3, ip
 8004cfc:	2200      	movs	r2, #0
 8004cfe:	701a      	strb	r2, [r3, #0]
  uint32_t lpuart_ker_ck_pres         = 0x00000000U;
 8004d00:	2300      	movs	r3, #0
 8004d02:	627b      	str	r3, [r7, #36]	; 0x24
  *  the UART Word Length, Parity, Mode and oversampling:
  *  set the M bits according to huart->Init.WordLength value
  *  set PCE and PS bits according to huart->Init.Parity value
  *  set TE and RE bits according to huart->Init.Mode value
  *  set OVER8 bit according to huart->Init.OverSampling value */
  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling ;
 8004d04:	69fb      	ldr	r3, [r7, #28]
 8004d06:	689a      	ldr	r2, [r3, #8]
 8004d08:	69fb      	ldr	r3, [r7, #28]
 8004d0a:	691b      	ldr	r3, [r3, #16]
 8004d0c:	431a      	orrs	r2, r3
 8004d0e:	69fb      	ldr	r3, [r7, #28]
 8004d10:	695b      	ldr	r3, [r3, #20]
 8004d12:	431a      	orrs	r2, r3
 8004d14:	69fb      	ldr	r3, [r7, #28]
 8004d16:	69db      	ldr	r3, [r3, #28]
 8004d18:	4313      	orrs	r3, r2
 8004d1a:	637b      	str	r3, [r7, #52]	; 0x34
  MODIFY_REG(huart->Instance->CR1, USART_CR1_FIELDS, tmpreg);
 8004d1c:	69fb      	ldr	r3, [r7, #28]
 8004d1e:	681b      	ldr	r3, [r3, #0]
 8004d20:	681b      	ldr	r3, [r3, #0]
 8004d22:	4aca      	ldr	r2, [pc, #808]	; (800504c <UART_SetConfig+0x374>)
 8004d24:	4013      	ands	r3, r2
 8004d26:	0019      	movs	r1, r3
 8004d28:	69fb      	ldr	r3, [r7, #28]
 8004d2a:	681b      	ldr	r3, [r3, #0]
 8004d2c:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8004d2e:	430a      	orrs	r2, r1
 8004d30:	601a      	str	r2, [r3, #0]

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits according
  * to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 8004d32:	69fb      	ldr	r3, [r7, #28]
 8004d34:	681b      	ldr	r3, [r3, #0]
 8004d36:	685b      	ldr	r3, [r3, #4]
 8004d38:	4ac5      	ldr	r2, [pc, #788]	; (8005050 <UART_SetConfig+0x378>)
 8004d3a:	4013      	ands	r3, r2
 8004d3c:	0019      	movs	r1, r3
 8004d3e:	69fb      	ldr	r3, [r7, #28]
 8004d40:	68da      	ldr	r2, [r3, #12]
 8004d42:	69fb      	ldr	r3, [r7, #28]
 8004d44:	681b      	ldr	r3, [r3, #0]
 8004d46:	430a      	orrs	r2, r1
 8004d48:	605a      	str	r2, [r3, #4]
  /* Configure
  * - UART HardWare Flow Control: set CTSE and RTSE bits according
  *   to huart->Init.HwFlowCtl value
  * - one-bit sampling method versus three samples' majority rule according
  *   to huart->Init.OneBitSampling (not applicable to LPUART) */
  tmpreg = (uint32_t)huart->Init.HwFlowCtl;
 8004d4a:	69fb      	ldr	r3, [r7, #28]
 8004d4c:	699b      	ldr	r3, [r3, #24]
 8004d4e:	637b      	str	r3, [r7, #52]	; 0x34

  if (!(UART_INSTANCE_LOWPOWER(huart)))
 8004d50:	69fb      	ldr	r3, [r7, #28]
 8004d52:	681b      	ldr	r3, [r3, #0]
 8004d54:	4abf      	ldr	r2, [pc, #764]	; (8005054 <UART_SetConfig+0x37c>)
 8004d56:	4293      	cmp	r3, r2
 8004d58:	d004      	beq.n	8004d64 <UART_SetConfig+0x8c>
  {
    tmpreg |= huart->Init.OneBitSampling;
 8004d5a:	69fb      	ldr	r3, [r7, #28]
 8004d5c:	6a1b      	ldr	r3, [r3, #32]
 8004d5e:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8004d60:	4313      	orrs	r3, r2
 8004d62:	637b      	str	r3, [r7, #52]	; 0x34
  }
  MODIFY_REG(huart->Instance->CR3, USART_CR3_FIELDS, tmpreg);
 8004d64:	69fb      	ldr	r3, [r7, #28]
 8004d66:	681b      	ldr	r3, [r3, #0]
 8004d68:	689b      	ldr	r3, [r3, #8]
 8004d6a:	4abb      	ldr	r2, [pc, #748]	; (8005058 <UART_SetConfig+0x380>)
 8004d6c:	4013      	ands	r3, r2
 8004d6e:	0019      	movs	r1, r3
 8004d70:	69fb      	ldr	r3, [r7, #28]
 8004d72:	681b      	ldr	r3, [r3, #0]
 8004d74:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 8004d76:	430a      	orrs	r2, r1
 8004d78:	609a      	str	r2, [r3, #8]


  /*-------------------------- USART BRR Configuration -----------------------*/
  UART_GETCLOCKSOURCE(huart, clocksource);
 8004d7a:	69fb      	ldr	r3, [r7, #28]
 8004d7c:	681b      	ldr	r3, [r3, #0]
 8004d7e:	4ab7      	ldr	r2, [pc, #732]	; (800505c <UART_SetConfig+0x384>)
 8004d80:	4293      	cmp	r3, r2
 8004d82:	d134      	bne.n	8004dee <UART_SetConfig+0x116>
 8004d84:	4bb6      	ldr	r3, [pc, #728]	; (8005060 <UART_SetConfig+0x388>)
 8004d86:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004d88:	2203      	movs	r2, #3
 8004d8a:	4013      	ands	r3, r2
 8004d8c:	2b01      	cmp	r3, #1
 8004d8e:	d015      	beq.n	8004dbc <UART_SetConfig+0xe4>
 8004d90:	d304      	bcc.n	8004d9c <UART_SetConfig+0xc4>
 8004d92:	2b02      	cmp	r3, #2
 8004d94:	d00a      	beq.n	8004dac <UART_SetConfig+0xd4>
 8004d96:	2b03      	cmp	r3, #3
 8004d98:	d018      	beq.n	8004dcc <UART_SetConfig+0xf4>
 8004d9a:	e01f      	b.n	8004ddc <UART_SetConfig+0x104>
 8004d9c:	231b      	movs	r3, #27
 8004d9e:	2218      	movs	r2, #24
 8004da0:	4694      	mov	ip, r2
 8004da2:	44bc      	add	ip, r7
 8004da4:	4463      	add	r3, ip
 8004da6:	2201      	movs	r2, #1
 8004da8:	701a      	strb	r2, [r3, #0]
 8004daa:	e0c5      	b.n	8004f38 <UART_SetConfig+0x260>
 8004dac:	231b      	movs	r3, #27
 8004dae:	2218      	movs	r2, #24
 8004db0:	4694      	mov	ip, r2
 8004db2:	44bc      	add	ip, r7
 8004db4:	4463      	add	r3, ip
 8004db6:	2202      	movs	r2, #2
 8004db8:	701a      	strb	r2, [r3, #0]
 8004dba:	e0bd      	b.n	8004f38 <UART_SetConfig+0x260>
 8004dbc:	231b      	movs	r3, #27
 8004dbe:	2218      	movs	r2, #24
 8004dc0:	4694      	mov	ip, r2
 8004dc2:	44bc      	add	ip, r7
 8004dc4:	4463      	add	r3, ip
 8004dc6:	2204      	movs	r2, #4
 8004dc8:	701a      	strb	r2, [r3, #0]
 8004dca:	e0b5      	b.n	8004f38 <UART_SetConfig+0x260>
 8004dcc:	231b      	movs	r3, #27
 8004dce:	2218      	movs	r2, #24
 8004dd0:	4694      	mov	ip, r2
 8004dd2:	44bc      	add	ip, r7
 8004dd4:	4463      	add	r3, ip
 8004dd6:	2208      	movs	r2, #8
 8004dd8:	701a      	strb	r2, [r3, #0]
 8004dda:	e0ad      	b.n	8004f38 <UART_SetConfig+0x260>
 8004ddc:	231b      	movs	r3, #27
 8004dde:	2218      	movs	r2, #24
 8004de0:	4694      	mov	ip, r2
 8004de2:	44bc      	add	ip, r7
 8004de4:	4463      	add	r3, ip
 8004de6:	2210      	movs	r2, #16
 8004de8:	701a      	strb	r2, [r3, #0]
 8004dea:	46c0      	nop			; (mov r8, r8)
 8004dec:	e0a4      	b.n	8004f38 <UART_SetConfig+0x260>
 8004dee:	69fb      	ldr	r3, [r7, #28]
 8004df0:	681b      	ldr	r3, [r3, #0]
 8004df2:	4a9c      	ldr	r2, [pc, #624]	; (8005064 <UART_SetConfig+0x38c>)
 8004df4:	4293      	cmp	r3, r2
 8004df6:	d137      	bne.n	8004e68 <UART_SetConfig+0x190>
 8004df8:	4b99      	ldr	r3, [pc, #612]	; (8005060 <UART_SetConfig+0x388>)
 8004dfa:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8004dfc:	220c      	movs	r2, #12
 8004dfe:	4013      	ands	r3, r2
 8004e00:	2b04      	cmp	r3, #4
 8004e02:	d018      	beq.n	8004e36 <UART_SetConfig+0x15e>
 8004e04:	d802      	bhi.n	8004e0c <UART_SetConfig+0x134>
 8004e06:	2b00      	cmp	r3, #0
 8004e08:	d005      	beq.n	8004e16 <UART_SetConfig+0x13e>
 8004e0a:	e024      	b.n	8004e56 <UART_SetConfig+0x17e>
 8004e0c:	2b08      	cmp	r3, #8
 8004e0e:	d00a      	beq.n	8004e26 <UART_SetConfig+0x14e>
 8004e10:	2b0c      	cmp	r3, #12
 8004e12:	d018      	beq.n	8004e46 <UART_SetConfig+0x16e>
 8004e14:	e01f      	b.n	8004e56 <UART_SetConfig+0x17e>
 8004e16:	231b      	movs	r3, #27
 8004e18:	2218      	movs	r2, #24
 8004e1a:	4694      	mov	ip, r2
 8004e1c:	44bc      	add	ip, r7
 8004e1e:	4463      	add	r3, ip
 8004e20:	2200      	movs	r2, #0
 8004e22:	701a      	strb	r2, [r3, #0]
 8004e24:	e088      	b.n	8004f38 <UART_SetConfig+0x260>
 8004e26:	231b      	movs	r3, #27
 8004e28:	2218      	movs	r2, #24
 8004e2a:	4694      	mov	ip, r2
 8004e2c:	44bc      	add	ip, r7
 8004e2e:	4463      	add	r3, ip
 8004e30:	2202      	movs	r2, #2
 8004e32:	701a      	strb	r2, [r3, #0]
 8004e34:	e080      	b.n	8004f38 <UART_SetConfig+0x260>
 8004e36:	231b      	movs	r3, #27
 8004e38:	2218      	movs	r2, #24
 8004e3a:	4694      	mov	ip, r2
 8004e3c:	44bc      	add	ip, r7
 8004e3e:	4463      	add	r3, ip
 8004e40:	2204      	movs	r2, #4
 8004e42:	701a      	strb	r2, [r3, #0]
 8004e44:	e078      	b.n	8004f38 <UART_SetConfig+0x260>
 8004e46:	231b      	movs	r3, #27
 8004e48:	2218      	movs	r2, #24
 8004e4a:	4694      	mov	ip, r2
 8004e4c:	44bc      	add	ip, r7
 8004e4e:	4463      	add	r3, ip
 8004e50:	2208      	movs	r2, #8
 8004e52:	701a      	strb	r2, [r3, #0]
 8004e54:	e070      	b.n	8004f38 <UART_SetConfig+0x260>
 8004e56:	231b      	movs	r3, #27
 8004e58:	2218      	movs	r2, #24
 8004e5a:	4694      	mov	ip, r2
 8004e5c:	44bc      	add	ip, r7
 8004e5e:	4463      	add	r3, ip
 8004e60:	2210      	movs	r2, #16
 8004e62:	701a      	strb	r2, [r3, #0]
 8004e64:	46c0      	nop			; (mov r8, r8)
 8004e66:	e067      	b.n	8004f38 <UART_SetConfig+0x260>
 8004e68:	69fb      	ldr	r3, [r7, #28]
 8004e6a:	681b      	ldr	r3, [r3, #0]
 8004e6c:	4a7e      	ldr	r2, [pc, #504]	; (8005068 <UART_SetConfig+0x390>)
 8004e6e:	4293      	cmp	r3, r2
 8004e70:	d107      	bne.n	8004e82 <UART_SetConfig+0x1aa>
 8004e72:	231b      	movs	r3, #27
 8004e74:	2218      	movs	r2, #24
 8004e76:	4694      	mov	ip, r2
 8004e78:	44bc      	add	ip, r7
 8004e7a:	4463      	add	r3, ip
 8004e7c:	2200      	movs	r2, #0
 8004e7e:	701a      	strb	r2, [r3, #0]
 8004e80:	e05a      	b.n	8004f38 <UART_SetConfig+0x260>
 8004e82:	69fb      	ldr	r3, [r7, #28]
 8004e84:	681b      	ldr	r3, [r3, #0]
 8004e86:	4a79      	ldr	r2, [pc, #484]	; (800506c <UART_SetConfig+0x394>)
 8004e88:	4293      	cmp	r3, r2
 8004e8a:	d107      	bne.n	8004e9c <UART_SetConfig+0x1c4>
 8004e8c:	231b      	movs	r3, #27
 8004e8e:	2218      	movs	r2, #24
 8004e90:	4694      	mov	ip, r2
 8004e92:	44bc      	add	ip, r7
 8004e94:	4463      	add	r3, ip
 8004e96:	2200      	movs	r2, #0
 8004e98:	701a      	strb	r2, [r3, #0]
 8004e9a:	e04d      	b.n	8004f38 <UART_SetConfig+0x260>
 8004e9c:	69fb      	ldr	r3, [r7, #28]
 8004e9e:	681b      	ldr	r3, [r3, #0]
 8004ea0:	4a6c      	ldr	r2, [pc, #432]	; (8005054 <UART_SetConfig+0x37c>)
 8004ea2:	4293      	cmp	r3, r2
 8004ea4:	d141      	bne.n	8004f2a <UART_SetConfig+0x252>
 8004ea6:	4b6e      	ldr	r3, [pc, #440]	; (8005060 <UART_SetConfig+0x388>)
 8004ea8:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 8004eaa:	23c0      	movs	r3, #192	; 0xc0
 8004eac:	011b      	lsls	r3, r3, #4
 8004eae:	4013      	ands	r3, r2
 8004eb0:	2280      	movs	r2, #128	; 0x80
 8004eb2:	00d2      	lsls	r2, r2, #3
 8004eb4:	4293      	cmp	r3, r2
 8004eb6:	d01f      	beq.n	8004ef8 <UART_SetConfig+0x220>
 8004eb8:	2280      	movs	r2, #128	; 0x80
 8004eba:	00d2      	lsls	r2, r2, #3
 8004ebc:	4293      	cmp	r3, r2
 8004ebe:	d802      	bhi.n	8004ec6 <UART_SetConfig+0x1ee>
 8004ec0:	2b00      	cmp	r3, #0
 8004ec2:	d009      	beq.n	8004ed8 <UART_SetConfig+0x200>
 8004ec4:	e028      	b.n	8004f18 <UART_SetConfig+0x240>
 8004ec6:	2280      	movs	r2, #128	; 0x80
 8004ec8:	0112      	lsls	r2, r2, #4
 8004eca:	4293      	cmp	r3, r2
 8004ecc:	d00c      	beq.n	8004ee8 <UART_SetConfig+0x210>
 8004ece:	22c0      	movs	r2, #192	; 0xc0
 8004ed0:	0112      	lsls	r2, r2, #4
 8004ed2:	4293      	cmp	r3, r2
 8004ed4:	d018      	beq.n	8004f08 <UART_SetConfig+0x230>
 8004ed6:	e01f      	b.n	8004f18 <UART_SetConfig+0x240>
 8004ed8:	231b      	movs	r3, #27
 8004eda:	2218      	movs	r2, #24
 8004edc:	4694      	mov	ip, r2
 8004ede:	44bc      	add	ip, r7
 8004ee0:	4463      	add	r3, ip
 8004ee2:	2200      	movs	r2, #0
 8004ee4:	701a      	strb	r2, [r3, #0]
 8004ee6:	e027      	b.n	8004f38 <UART_SetConfig+0x260>
 8004ee8:	231b      	movs	r3, #27
 8004eea:	2218      	movs	r2, #24
 8004eec:	4694      	mov	ip, r2
 8004eee:	44bc      	add	ip, r7
 8004ef0:	4463      	add	r3, ip
 8004ef2:	2202      	movs	r2, #2
 8004ef4:	701a      	strb	r2, [r3, #0]
 8004ef6:	e01f      	b.n	8004f38 <UART_SetConfig+0x260>
 8004ef8:	231b      	movs	r3, #27
 8004efa:	2218      	movs	r2, #24
 8004efc:	4694      	mov	ip, r2
 8004efe:	44bc      	add	ip, r7
 8004f00:	4463      	add	r3, ip
 8004f02:	2204      	movs	r2, #4
 8004f04:	701a      	strb	r2, [r3, #0]
 8004f06:	e017      	b.n	8004f38 <UART_SetConfig+0x260>
 8004f08:	231b      	movs	r3, #27
 8004f0a:	2218      	movs	r2, #24
 8004f0c:	4694      	mov	ip, r2
 8004f0e:	44bc      	add	ip, r7
 8004f10:	4463      	add	r3, ip
 8004f12:	2208      	movs	r2, #8
 8004f14:	701a      	strb	r2, [r3, #0]
 8004f16:	e00f      	b.n	8004f38 <UART_SetConfig+0x260>
 8004f18:	231b      	movs	r3, #27
 8004f1a:	2218      	movs	r2, #24
 8004f1c:	4694      	mov	ip, r2
 8004f1e:	44bc      	add	ip, r7
 8004f20:	4463      	add	r3, ip
 8004f22:	2210      	movs	r2, #16
 8004f24:	701a      	strb	r2, [r3, #0]
 8004f26:	46c0      	nop			; (mov r8, r8)
 8004f28:	e006      	b.n	8004f38 <UART_SetConfig+0x260>
 8004f2a:	231b      	movs	r3, #27
 8004f2c:	2218      	movs	r2, #24
 8004f2e:	4694      	mov	ip, r2
 8004f30:	44bc      	add	ip, r7
 8004f32:	4463      	add	r3, ip
 8004f34:	2210      	movs	r2, #16
 8004f36:	701a      	strb	r2, [r3, #0]

  /* Check LPUART instance */
  if (UART_INSTANCE_LOWPOWER(huart))
 8004f38:	69fb      	ldr	r3, [r7, #28]
 8004f3a:	681b      	ldr	r3, [r3, #0]
 8004f3c:	4a45      	ldr	r2, [pc, #276]	; (8005054 <UART_SetConfig+0x37c>)
 8004f3e:	4293      	cmp	r3, r2
 8004f40:	d000      	beq.n	8004f44 <UART_SetConfig+0x26c>
 8004f42:	e09d      	b.n	8005080 <UART_SetConfig+0x3a8>
  {
    /* Retrieve frequency clock */
    switch (clocksource)
 8004f44:	231b      	movs	r3, #27
 8004f46:	2218      	movs	r2, #24
 8004f48:	4694      	mov	ip, r2
 8004f4a:	44bc      	add	ip, r7
 8004f4c:	4463      	add	r3, ip
 8004f4e:	781b      	ldrb	r3, [r3, #0]
 8004f50:	2b02      	cmp	r3, #2
 8004f52:	d00d      	beq.n	8004f70 <UART_SetConfig+0x298>
 8004f54:	dc02      	bgt.n	8004f5c <UART_SetConfig+0x284>
 8004f56:	2b00      	cmp	r3, #0
 8004f58:	d005      	beq.n	8004f66 <UART_SetConfig+0x28e>
 8004f5a:	e01d      	b.n	8004f98 <UART_SetConfig+0x2c0>
 8004f5c:	2b04      	cmp	r3, #4
 8004f5e:	d012      	beq.n	8004f86 <UART_SetConfig+0x2ae>
 8004f60:	2b08      	cmp	r3, #8
 8004f62:	d015      	beq.n	8004f90 <UART_SetConfig+0x2b8>
 8004f64:	e018      	b.n	8004f98 <UART_SetConfig+0x2c0>
    {
      case UART_CLOCKSOURCE_PCLK1:
        lpuart_ker_ck_pres = HAL_RCC_GetPCLK1Freq();
 8004f66:	f7ff fa3d 	bl	80043e4 <HAL_RCC_GetPCLK1Freq>
 8004f6a:	0003      	movs	r3, r0
 8004f6c:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8004f6e:	e01b      	b.n	8004fa8 <UART_SetConfig+0x2d0>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8004f70:	4b3b      	ldr	r3, [pc, #236]	; (8005060 <UART_SetConfig+0x388>)
 8004f72:	681b      	ldr	r3, [r3, #0]
 8004f74:	2210      	movs	r2, #16
 8004f76:	4013      	ands	r3, r2
 8004f78:	d002      	beq.n	8004f80 <UART_SetConfig+0x2a8>
        {
          lpuart_ker_ck_pres = (uint32_t)(HSI_VALUE >> 2U);
 8004f7a:	4b3d      	ldr	r3, [pc, #244]	; (8005070 <UART_SetConfig+0x398>)
 8004f7c:	627b      	str	r3, [r7, #36]	; 0x24
        }
        else
        {
          lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
        }
        break;
 8004f7e:	e013      	b.n	8004fa8 <UART_SetConfig+0x2d0>
          lpuart_ker_ck_pres = (uint32_t)HSI_VALUE;
 8004f80:	4b3c      	ldr	r3, [pc, #240]	; (8005074 <UART_SetConfig+0x39c>)
 8004f82:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8004f84:	e010      	b.n	8004fa8 <UART_SetConfig+0x2d0>
      case UART_CLOCKSOURCE_SYSCLK:
        lpuart_ker_ck_pres = HAL_RCC_GetSysClockFreq();
 8004f86:	f7ff f99f 	bl	80042c8 <HAL_RCC_GetSysClockFreq>
 8004f8a:	0003      	movs	r3, r0
 8004f8c:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8004f8e:	e00b      	b.n	8004fa8 <UART_SetConfig+0x2d0>
      case UART_CLOCKSOURCE_LSE:
        lpuart_ker_ck_pres = (uint32_t)LSE_VALUE;
 8004f90:	2380      	movs	r3, #128	; 0x80
 8004f92:	021b      	lsls	r3, r3, #8
 8004f94:	627b      	str	r3, [r7, #36]	; 0x24
        break;
 8004f96:	e007      	b.n	8004fa8 <UART_SetConfig+0x2d0>
      case UART_CLOCKSOURCE_UNDEFINED:
      default:
        ret = HAL_ERROR;
 8004f98:	2313      	movs	r3, #19
 8004f9a:	2218      	movs	r2, #24
 8004f9c:	4694      	mov	ip, r2
 8004f9e:	44bc      	add	ip, r7
 8004fa0:	4463      	add	r3, ip
 8004fa2:	2201      	movs	r2, #1
 8004fa4:	701a      	strb	r2, [r3, #0]
        break;
 8004fa6:	46c0      	nop			; (mov r8, r8)
    }

    /* if proper clock source reported */
    if (lpuart_ker_ck_pres != 0U)
 8004fa8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004faa:	2b00      	cmp	r3, #0
 8004fac:	d100      	bne.n	8004fb0 <UART_SetConfig+0x2d8>
 8004fae:	e1a6      	b.n	80052fe <UART_SetConfig+0x626>
    {
      /* ensure that Frequency clock is in the range [3 * baudrate, 4096 * baudrate] */
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8004fb0:	69fb      	ldr	r3, [r7, #28]
 8004fb2:	685a      	ldr	r2, [r3, #4]
 8004fb4:	0013      	movs	r3, r2
 8004fb6:	005b      	lsls	r3, r3, #1
 8004fb8:	189b      	adds	r3, r3, r2
 8004fba:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004fbc:	429a      	cmp	r2, r3
 8004fbe:	d305      	bcc.n	8004fcc <UART_SetConfig+0x2f4>
          (lpuart_ker_ck_pres > (4096U * huart->Init.BaudRate)))
 8004fc0:	69fb      	ldr	r3, [r7, #28]
 8004fc2:	685b      	ldr	r3, [r3, #4]
 8004fc4:	031b      	lsls	r3, r3, #12
      if ((lpuart_ker_ck_pres < (3U * huart->Init.BaudRate)) ||
 8004fc6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 8004fc8:	429a      	cmp	r2, r3
 8004fca:	d907      	bls.n	8004fdc <UART_SetConfig+0x304>
      {
        ret = HAL_ERROR;
 8004fcc:	2313      	movs	r3, #19
 8004fce:	2218      	movs	r2, #24
 8004fd0:	4694      	mov	ip, r2
 8004fd2:	44bc      	add	ip, r7
 8004fd4:	4463      	add	r3, ip
 8004fd6:	2201      	movs	r2, #1
 8004fd8:	701a      	strb	r2, [r3, #0]
 8004fda:	e190      	b.n	80052fe <UART_SetConfig+0x626>
      }
      else
      {
        usartdiv = (uint32_t)(UART_DIV_LPUART(lpuart_ker_ck_pres, huart->Init.BaudRate));
 8004fdc:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8004fde:	613b      	str	r3, [r7, #16]
 8004fe0:	2300      	movs	r3, #0
 8004fe2:	617b      	str	r3, [r7, #20]
 8004fe4:	6939      	ldr	r1, [r7, #16]
 8004fe6:	697a      	ldr	r2, [r7, #20]
 8004fe8:	000b      	movs	r3, r1
 8004fea:	0e1b      	lsrs	r3, r3, #24
 8004fec:	0010      	movs	r0, r2
 8004fee:	0205      	lsls	r5, r0, #8
 8004ff0:	431d      	orrs	r5, r3
 8004ff2:	000b      	movs	r3, r1
 8004ff4:	021c      	lsls	r4, r3, #8
 8004ff6:	69fb      	ldr	r3, [r7, #28]
 8004ff8:	685b      	ldr	r3, [r3, #4]
 8004ffa:	085b      	lsrs	r3, r3, #1
 8004ffc:	60bb      	str	r3, [r7, #8]
 8004ffe:	2300      	movs	r3, #0
 8005000:	60fb      	str	r3, [r7, #12]
 8005002:	68b8      	ldr	r0, [r7, #8]
 8005004:	68f9      	ldr	r1, [r7, #12]
 8005006:	1900      	adds	r0, r0, r4
 8005008:	4169      	adcs	r1, r5
 800500a:	69fb      	ldr	r3, [r7, #28]
 800500c:	685b      	ldr	r3, [r3, #4]
 800500e:	603b      	str	r3, [r7, #0]
 8005010:	2300      	movs	r3, #0
 8005012:	607b      	str	r3, [r7, #4]
 8005014:	683a      	ldr	r2, [r7, #0]
 8005016:	687b      	ldr	r3, [r7, #4]
 8005018:	f7fb fa3c 	bl	8000494 <__aeabi_uldivmod>
 800501c:	0003      	movs	r3, r0
 800501e:	000c      	movs	r4, r1
 8005020:	62fb      	str	r3, [r7, #44]	; 0x2c

        /* It is forbidden to write values lower than 0x300 in the LPUART_BRR register */
        if ((usartdiv >= LPUART_BRR_MIN) && (usartdiv <= LPUART_BRR_MAX))
 8005022:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005024:	4a14      	ldr	r2, [pc, #80]	; (8005078 <UART_SetConfig+0x3a0>)
 8005026:	4293      	cmp	r3, r2
 8005028:	d908      	bls.n	800503c <UART_SetConfig+0x364>
 800502a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800502c:	4a13      	ldr	r2, [pc, #76]	; (800507c <UART_SetConfig+0x3a4>)
 800502e:	4293      	cmp	r3, r2
 8005030:	d804      	bhi.n	800503c <UART_SetConfig+0x364>
        {
          huart->Instance->BRR = usartdiv;
 8005032:	69fb      	ldr	r3, [r7, #28]
 8005034:	681b      	ldr	r3, [r3, #0]
 8005036:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 8005038:	60da      	str	r2, [r3, #12]
 800503a:	e160      	b.n	80052fe <UART_SetConfig+0x626>
        }
        else
        {
          ret = HAL_ERROR;
 800503c:	2313      	movs	r3, #19
 800503e:	2218      	movs	r2, #24
 8005040:	4694      	mov	ip, r2
 8005042:	44bc      	add	ip, r7
 8005044:	4463      	add	r3, ip
 8005046:	2201      	movs	r2, #1
 8005048:	701a      	strb	r2, [r3, #0]
 800504a:	e158      	b.n	80052fe <UART_SetConfig+0x626>
 800504c:	efff69f3 	.word	0xefff69f3
 8005050:	ffffcfff 	.word	0xffffcfff
 8005054:	40004800 	.word	0x40004800
 8005058:	fffff4ff 	.word	0xfffff4ff
 800505c:	40013800 	.word	0x40013800
 8005060:	40021000 	.word	0x40021000
 8005064:	40004400 	.word	0x40004400
 8005068:	40004c00 	.word	0x40004c00
 800506c:	40005000 	.word	0x40005000
 8005070:	003d0900 	.word	0x003d0900
 8005074:	00f42400 	.word	0x00f42400
 8005078:	000002ff 	.word	0x000002ff
 800507c:	000fffff 	.word	0x000fffff
        }
      } /*   if ( (lpuart_ker_ck_pres < (3 * huart->Init.BaudRate) ) || (lpuart_ker_ck_pres > (4096 * huart->Init.BaudRate) )) */
    } /* if (lpuart_ker_ck_pres != 0) */
  }
  /* Check UART Over Sampling to set Baud Rate Register */
  else if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 8005080:	69fb      	ldr	r3, [r7, #28]
 8005082:	69da      	ldr	r2, [r3, #28]
 8005084:	2380      	movs	r3, #128	; 0x80
 8005086:	021b      	lsls	r3, r3, #8
 8005088:	429a      	cmp	r2, r3
 800508a:	d000      	beq.n	800508e <UART_SetConfig+0x3b6>
 800508c:	e0a9      	b.n	80051e2 <UART_SetConfig+0x50a>
  {
    switch (clocksource)
 800508e:	231b      	movs	r3, #27
 8005090:	2218      	movs	r2, #24
 8005092:	4694      	mov	ip, r2
 8005094:	44bc      	add	ip, r7
 8005096:	4463      	add	r3, ip
 8005098:	781b      	ldrb	r3, [r3, #0]
 800509a:	2b08      	cmp	r3, #8
 800509c:	d86d      	bhi.n	800517a <UART_SetConfig+0x4a2>
 800509e:	009a      	lsls	r2, r3, #2
 80050a0:	4b9f      	ldr	r3, [pc, #636]	; (8005320 <UART_SetConfig+0x648>)
 80050a2:	18d3      	adds	r3, r2, r3
 80050a4:	681b      	ldr	r3, [r3, #0]
 80050a6:	469f      	mov	pc, r3
    {
      case UART_CLOCKSOURCE_PCLK1:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 80050a8:	f7ff f99c 	bl	80043e4 <HAL_RCC_GetPCLK1Freq>
 80050ac:	0003      	movs	r3, r0
 80050ae:	005a      	lsls	r2, r3, #1
 80050b0:	69fb      	ldr	r3, [r7, #28]
 80050b2:	685b      	ldr	r3, [r3, #4]
 80050b4:	085b      	lsrs	r3, r3, #1
 80050b6:	18d2      	adds	r2, r2, r3
 80050b8:	69fb      	ldr	r3, [r7, #28]
 80050ba:	685b      	ldr	r3, [r3, #4]
 80050bc:	0019      	movs	r1, r3
 80050be:	0010      	movs	r0, r2
 80050c0:	f7fb f834 	bl	800012c <__udivsi3>
 80050c4:	0003      	movs	r3, r0
 80050c6:	b29b      	uxth	r3, r3
 80050c8:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 80050ca:	e05e      	b.n	800518a <UART_SetConfig+0x4b2>
      case UART_CLOCKSOURCE_PCLK2:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 80050cc:	f7ff f9a0 	bl	8004410 <HAL_RCC_GetPCLK2Freq>
 80050d0:	0003      	movs	r3, r0
 80050d2:	005a      	lsls	r2, r3, #1
 80050d4:	69fb      	ldr	r3, [r7, #28]
 80050d6:	685b      	ldr	r3, [r3, #4]
 80050d8:	085b      	lsrs	r3, r3, #1
 80050da:	18d2      	adds	r2, r2, r3
 80050dc:	69fb      	ldr	r3, [r7, #28]
 80050de:	685b      	ldr	r3, [r3, #4]
 80050e0:	0019      	movs	r1, r3
 80050e2:	0010      	movs	r0, r2
 80050e4:	f7fb f822 	bl	800012c <__udivsi3>
 80050e8:	0003      	movs	r3, r0
 80050ea:	b29b      	uxth	r3, r3
 80050ec:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 80050ee:	e04c      	b.n	800518a <UART_SetConfig+0x4b2>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 80050f0:	4b8c      	ldr	r3, [pc, #560]	; (8005324 <UART_SetConfig+0x64c>)
 80050f2:	681b      	ldr	r3, [r3, #0]
 80050f4:	2210      	movs	r2, #16
 80050f6:	4013      	ands	r3, r2
 80050f8:	d00e      	beq.n	8005118 <UART_SetConfig+0x440>
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8((HSI_VALUE >> 2U), huart->Init.BaudRate));
 80050fa:	69fb      	ldr	r3, [r7, #28]
 80050fc:	685b      	ldr	r3, [r3, #4]
 80050fe:	085b      	lsrs	r3, r3, #1
 8005100:	4a89      	ldr	r2, [pc, #548]	; (8005328 <UART_SetConfig+0x650>)
 8005102:	189a      	adds	r2, r3, r2
 8005104:	69fb      	ldr	r3, [r7, #28]
 8005106:	685b      	ldr	r3, [r3, #4]
 8005108:	0019      	movs	r1, r3
 800510a:	0010      	movs	r0, r2
 800510c:	f7fb f80e 	bl	800012c <__udivsi3>
 8005110:	0003      	movs	r3, r0
 8005112:	b29b      	uxth	r3, r3
 8005114:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
        else
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
        }
        break;
 8005116:	e038      	b.n	800518a <UART_SetConfig+0x4b2>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HSI_VALUE, huart->Init.BaudRate));
 8005118:	69fb      	ldr	r3, [r7, #28]
 800511a:	685b      	ldr	r3, [r3, #4]
 800511c:	085b      	lsrs	r3, r3, #1
 800511e:	4a83      	ldr	r2, [pc, #524]	; (800532c <UART_SetConfig+0x654>)
 8005120:	189a      	adds	r2, r3, r2
 8005122:	69fb      	ldr	r3, [r7, #28]
 8005124:	685b      	ldr	r3, [r3, #4]
 8005126:	0019      	movs	r1, r3
 8005128:	0010      	movs	r0, r2
 800512a:	f7fa ffff 	bl	800012c <__udivsi3>
 800512e:	0003      	movs	r3, r0
 8005130:	b29b      	uxth	r3, r3
 8005132:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8005134:	e029      	b.n	800518a <UART_SetConfig+0x4b2>
      case UART_CLOCKSOURCE_SYSCLK:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8005136:	f7ff f8c7 	bl	80042c8 <HAL_RCC_GetSysClockFreq>
 800513a:	0003      	movs	r3, r0
 800513c:	005a      	lsls	r2, r3, #1
 800513e:	69fb      	ldr	r3, [r7, #28]
 8005140:	685b      	ldr	r3, [r3, #4]
 8005142:	085b      	lsrs	r3, r3, #1
 8005144:	18d2      	adds	r2, r2, r3
 8005146:	69fb      	ldr	r3, [r7, #28]
 8005148:	685b      	ldr	r3, [r3, #4]
 800514a:	0019      	movs	r1, r3
 800514c:	0010      	movs	r0, r2
 800514e:	f7fa ffed 	bl	800012c <__udivsi3>
 8005152:	0003      	movs	r3, r0
 8005154:	b29b      	uxth	r3, r3
 8005156:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8005158:	e017      	b.n	800518a <UART_SetConfig+0x4b2>
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING8(LSE_VALUE, huart->Init.BaudRate));
 800515a:	69fb      	ldr	r3, [r7, #28]
 800515c:	685b      	ldr	r3, [r3, #4]
 800515e:	085b      	lsrs	r3, r3, #1
 8005160:	2280      	movs	r2, #128	; 0x80
 8005162:	0252      	lsls	r2, r2, #9
 8005164:	189a      	adds	r2, r3, r2
 8005166:	69fb      	ldr	r3, [r7, #28]
 8005168:	685b      	ldr	r3, [r3, #4]
 800516a:	0019      	movs	r1, r3
 800516c:	0010      	movs	r0, r2
 800516e:	f7fa ffdd 	bl	800012c <__udivsi3>
 8005172:	0003      	movs	r3, r0
 8005174:	b29b      	uxth	r3, r3
 8005176:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8005178:	e007      	b.n	800518a <UART_SetConfig+0x4b2>
      case UART_CLOCKSOURCE_UNDEFINED:
      default:
        ret = HAL_ERROR;
 800517a:	2313      	movs	r3, #19
 800517c:	2218      	movs	r2, #24
 800517e:	4694      	mov	ip, r2
 8005180:	44bc      	add	ip, r7
 8005182:	4463      	add	r3, ip
 8005184:	2201      	movs	r2, #1
 8005186:	701a      	strb	r2, [r3, #0]
        break;
 8005188:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 800518a:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800518c:	2b0f      	cmp	r3, #15
 800518e:	d920      	bls.n	80051d2 <UART_SetConfig+0x4fa>
 8005190:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8005192:	4a67      	ldr	r2, [pc, #412]	; (8005330 <UART_SetConfig+0x658>)
 8005194:	4293      	cmp	r3, r2
 8005196:	d81c      	bhi.n	80051d2 <UART_SetConfig+0x4fa>
    {
      brrtemp = (uint16_t)(usartdiv & 0xFFF0U);
 8005198:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800519a:	b29a      	uxth	r2, r3
 800519c:	200a      	movs	r0, #10
 800519e:	2418      	movs	r4, #24
 80051a0:	193b      	adds	r3, r7, r4
 80051a2:	181b      	adds	r3, r3, r0
 80051a4:	210f      	movs	r1, #15
 80051a6:	438a      	bics	r2, r1
 80051a8:	801a      	strh	r2, [r3, #0]
      brrtemp |= (uint16_t)((usartdiv & (uint16_t)0x000FU) >> 1U);
 80051aa:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80051ac:	085b      	lsrs	r3, r3, #1
 80051ae:	b29b      	uxth	r3, r3
 80051b0:	2207      	movs	r2, #7
 80051b2:	4013      	ands	r3, r2
 80051b4:	b299      	uxth	r1, r3
 80051b6:	193b      	adds	r3, r7, r4
 80051b8:	181b      	adds	r3, r3, r0
 80051ba:	193a      	adds	r2, r7, r4
 80051bc:	1812      	adds	r2, r2, r0
 80051be:	8812      	ldrh	r2, [r2, #0]
 80051c0:	430a      	orrs	r2, r1
 80051c2:	801a      	strh	r2, [r3, #0]
      huart->Instance->BRR = brrtemp;
 80051c4:	69fb      	ldr	r3, [r7, #28]
 80051c6:	681b      	ldr	r3, [r3, #0]
 80051c8:	193a      	adds	r2, r7, r4
 80051ca:	1812      	adds	r2, r2, r0
 80051cc:	8812      	ldrh	r2, [r2, #0]
 80051ce:	60da      	str	r2, [r3, #12]
 80051d0:	e095      	b.n	80052fe <UART_SetConfig+0x626>
    }
    else
    {
      ret = HAL_ERROR;
 80051d2:	2313      	movs	r3, #19
 80051d4:	2218      	movs	r2, #24
 80051d6:	4694      	mov	ip, r2
 80051d8:	44bc      	add	ip, r7
 80051da:	4463      	add	r3, ip
 80051dc:	2201      	movs	r2, #1
 80051de:	701a      	strb	r2, [r3, #0]
 80051e0:	e08d      	b.n	80052fe <UART_SetConfig+0x626>
    }
  }
  else
  {
    switch (clocksource)
 80051e2:	231b      	movs	r3, #27
 80051e4:	2218      	movs	r2, #24
 80051e6:	4694      	mov	ip, r2
 80051e8:	44bc      	add	ip, r7
 80051ea:	4463      	add	r3, ip
 80051ec:	781b      	ldrb	r3, [r3, #0]
 80051ee:	2b08      	cmp	r3, #8
 80051f0:	d86a      	bhi.n	80052c8 <UART_SetConfig+0x5f0>
 80051f2:	009a      	lsls	r2, r3, #2
 80051f4:	4b4f      	ldr	r3, [pc, #316]	; (8005334 <UART_SetConfig+0x65c>)
 80051f6:	18d3      	adds	r3, r2, r3
 80051f8:	681b      	ldr	r3, [r3, #0]
 80051fa:	469f      	mov	pc, r3
    {
      case UART_CLOCKSOURCE_PCLK1:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK1Freq(), huart->Init.BaudRate));
 80051fc:	f7ff f8f2 	bl	80043e4 <HAL_RCC_GetPCLK1Freq>
 8005200:	0002      	movs	r2, r0
 8005202:	69fb      	ldr	r3, [r7, #28]
 8005204:	685b      	ldr	r3, [r3, #4]
 8005206:	085b      	lsrs	r3, r3, #1
 8005208:	18d2      	adds	r2, r2, r3
 800520a:	69fb      	ldr	r3, [r7, #28]
 800520c:	685b      	ldr	r3, [r3, #4]
 800520e:	0019      	movs	r1, r3
 8005210:	0010      	movs	r0, r2
 8005212:	f7fa ff8b 	bl	800012c <__udivsi3>
 8005216:	0003      	movs	r3, r0
 8005218:	b29b      	uxth	r3, r3
 800521a:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 800521c:	e05c      	b.n	80052d8 <UART_SetConfig+0x600>
      case UART_CLOCKSOURCE_PCLK2:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetPCLK2Freq(), huart->Init.BaudRate));
 800521e:	f7ff f8f7 	bl	8004410 <HAL_RCC_GetPCLK2Freq>
 8005222:	0002      	movs	r2, r0
 8005224:	69fb      	ldr	r3, [r7, #28]
 8005226:	685b      	ldr	r3, [r3, #4]
 8005228:	085b      	lsrs	r3, r3, #1
 800522a:	18d2      	adds	r2, r2, r3
 800522c:	69fb      	ldr	r3, [r7, #28]
 800522e:	685b      	ldr	r3, [r3, #4]
 8005230:	0019      	movs	r1, r3
 8005232:	0010      	movs	r0, r2
 8005234:	f7fa ff7a 	bl	800012c <__udivsi3>
 8005238:	0003      	movs	r3, r0
 800523a:	b29b      	uxth	r3, r3
 800523c:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 800523e:	e04b      	b.n	80052d8 <UART_SetConfig+0x600>
      case UART_CLOCKSOURCE_HSI:
        if (__HAL_RCC_GET_FLAG(RCC_FLAG_HSIDIV) != 0U)
 8005240:	4b38      	ldr	r3, [pc, #224]	; (8005324 <UART_SetConfig+0x64c>)
 8005242:	681b      	ldr	r3, [r3, #0]
 8005244:	2210      	movs	r2, #16
 8005246:	4013      	ands	r3, r2
 8005248:	d00e      	beq.n	8005268 <UART_SetConfig+0x590>
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16((HSI_VALUE >> 2U), huart->Init.BaudRate));
 800524a:	69fb      	ldr	r3, [r7, #28]
 800524c:	685b      	ldr	r3, [r3, #4]
 800524e:	085b      	lsrs	r3, r3, #1
 8005250:	4a39      	ldr	r2, [pc, #228]	; (8005338 <UART_SetConfig+0x660>)
 8005252:	189a      	adds	r2, r3, r2
 8005254:	69fb      	ldr	r3, [r7, #28]
 8005256:	685b      	ldr	r3, [r3, #4]
 8005258:	0019      	movs	r1, r3
 800525a:	0010      	movs	r0, r2
 800525c:	f7fa ff66 	bl	800012c <__udivsi3>
 8005260:	0003      	movs	r3, r0
 8005262:	b29b      	uxth	r3, r3
 8005264:	62fb      	str	r3, [r7, #44]	; 0x2c
        }
        else
        {
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
        }
        break;
 8005266:	e037      	b.n	80052d8 <UART_SetConfig+0x600>
          usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HSI_VALUE, huart->Init.BaudRate));
 8005268:	69fb      	ldr	r3, [r7, #28]
 800526a:	685b      	ldr	r3, [r3, #4]
 800526c:	085b      	lsrs	r3, r3, #1
 800526e:	4a33      	ldr	r2, [pc, #204]	; (800533c <UART_SetConfig+0x664>)
 8005270:	189a      	adds	r2, r3, r2
 8005272:	69fb      	ldr	r3, [r7, #28]
 8005274:	685b      	ldr	r3, [r3, #4]
 8005276:	0019      	movs	r1, r3
 8005278:	0010      	movs	r0, r2
 800527a:	f7fa ff57 	bl	800012c <__udivsi3>
 800527e:	0003      	movs	r3, r0
 8005280:	b29b      	uxth	r3, r3
 8005282:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 8005284:	e028      	b.n	80052d8 <UART_SetConfig+0x600>
      case UART_CLOCKSOURCE_SYSCLK:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(HAL_RCC_GetSysClockFreq(), huart->Init.BaudRate));
 8005286:	f7ff f81f 	bl	80042c8 <HAL_RCC_GetSysClockFreq>
 800528a:	0002      	movs	r2, r0
 800528c:	69fb      	ldr	r3, [r7, #28]
 800528e:	685b      	ldr	r3, [r3, #4]
 8005290:	085b      	lsrs	r3, r3, #1
 8005292:	18d2      	adds	r2, r2, r3
 8005294:	69fb      	ldr	r3, [r7, #28]
 8005296:	685b      	ldr	r3, [r3, #4]
 8005298:	0019      	movs	r1, r3
 800529a:	0010      	movs	r0, r2
 800529c:	f7fa ff46 	bl	800012c <__udivsi3>
 80052a0:	0003      	movs	r3, r0
 80052a2:	b29b      	uxth	r3, r3
 80052a4:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 80052a6:	e017      	b.n	80052d8 <UART_SetConfig+0x600>
      case UART_CLOCKSOURCE_LSE:
        usartdiv = (uint16_t)(UART_DIV_SAMPLING16(LSE_VALUE, huart->Init.BaudRate));
 80052a8:	69fb      	ldr	r3, [r7, #28]
 80052aa:	685b      	ldr	r3, [r3, #4]
 80052ac:	085b      	lsrs	r3, r3, #1
 80052ae:	2280      	movs	r2, #128	; 0x80
 80052b0:	0212      	lsls	r2, r2, #8
 80052b2:	189a      	adds	r2, r3, r2
 80052b4:	69fb      	ldr	r3, [r7, #28]
 80052b6:	685b      	ldr	r3, [r3, #4]
 80052b8:	0019      	movs	r1, r3
 80052ba:	0010      	movs	r0, r2
 80052bc:	f7fa ff36 	bl	800012c <__udivsi3>
 80052c0:	0003      	movs	r3, r0
 80052c2:	b29b      	uxth	r3, r3
 80052c4:	62fb      	str	r3, [r7, #44]	; 0x2c
        break;
 80052c6:	e007      	b.n	80052d8 <UART_SetConfig+0x600>
      case UART_CLOCKSOURCE_UNDEFINED:
      default:
        ret = HAL_ERROR;
 80052c8:	2313      	movs	r3, #19
 80052ca:	2218      	movs	r2, #24
 80052cc:	4694      	mov	ip, r2
 80052ce:	44bc      	add	ip, r7
 80052d0:	4463      	add	r3, ip
 80052d2:	2201      	movs	r2, #1
 80052d4:	701a      	strb	r2, [r3, #0]
        break;
 80052d6:	46c0      	nop			; (mov r8, r8)
    }

    /* USARTDIV must be greater than or equal to 0d16 */
    if ((usartdiv >= UART_BRR_MIN) && (usartdiv <= UART_BRR_MAX))
 80052d8:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80052da:	2b0f      	cmp	r3, #15
 80052dc:	d908      	bls.n	80052f0 <UART_SetConfig+0x618>
 80052de:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80052e0:	4a13      	ldr	r2, [pc, #76]	; (8005330 <UART_SetConfig+0x658>)
 80052e2:	4293      	cmp	r3, r2
 80052e4:	d804      	bhi.n	80052f0 <UART_SetConfig+0x618>
    {
      huart->Instance->BRR = usartdiv;
 80052e6:	69fb      	ldr	r3, [r7, #28]
 80052e8:	681b      	ldr	r3, [r3, #0]
 80052ea:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80052ec:	60da      	str	r2, [r3, #12]
 80052ee:	e006      	b.n	80052fe <UART_SetConfig+0x626>
    }
    else
    {
      ret = HAL_ERROR;
 80052f0:	2313      	movs	r3, #19
 80052f2:	2218      	movs	r2, #24
 80052f4:	4694      	mov	ip, r2
 80052f6:	44bc      	add	ip, r7
 80052f8:	4463      	add	r3, ip
 80052fa:	2201      	movs	r2, #1
 80052fc:	701a      	strb	r2, [r3, #0]
    }
  }


  /* Clear ISR function pointers */
  huart->RxISR = NULL;
 80052fe:	69fb      	ldr	r3, [r7, #28]
 8005300:	2200      	movs	r2, #0
 8005302:	661a      	str	r2, [r3, #96]	; 0x60
  huart->TxISR = NULL;
 8005304:	69fb      	ldr	r3, [r7, #28]
 8005306:	2200      	movs	r2, #0
 8005308:	665a      	str	r2, [r3, #100]	; 0x64

  return ret;
 800530a:	2313      	movs	r3, #19
 800530c:	2218      	movs	r2, #24
 800530e:	4694      	mov	ip, r2
 8005310:	44bc      	add	ip, r7
 8005312:	4463      	add	r3, ip
 8005314:	781b      	ldrb	r3, [r3, #0]
}
 8005316:	0018      	movs	r0, r3
 8005318:	46bd      	mov	sp, r7
 800531a:	b00e      	add	sp, #56	; 0x38
 800531c:	bdb0      	pop	{r4, r5, r7, pc}
 800531e:	46c0      	nop			; (mov r8, r8)
 8005320:	0800a324 	.word	0x0800a324
 8005324:	40021000 	.word	0x40021000
 8005328:	007a1200 	.word	0x007a1200
 800532c:	01e84800 	.word	0x01e84800
 8005330:	0000ffff 	.word	0x0000ffff
 8005334:	0800a348 	.word	0x0800a348
 8005338:	003d0900 	.word	0x003d0900
 800533c:	00f42400 	.word	0x00f42400

08005340 <UART_AdvFeatureConfig>:
  * @brief Configure the UART peripheral advanced features.
  * @param huart UART handle.
  * @retval None
  */
void UART_AdvFeatureConfig(UART_HandleTypeDef *huart)
{
 8005340:	b580      	push	{r7, lr}
 8005342:	b082      	sub	sp, #8
 8005344:	af00      	add	r7, sp, #0
 8005346:	6078      	str	r0, [r7, #4]
  /* Check whether the set of advanced features to configure is properly set */
  assert_param(IS_UART_ADVFEATURE_INIT(huart->AdvancedInit.AdvFeatureInit));

  /* if required, configure TX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_TXINVERT_INIT))
 8005348:	687b      	ldr	r3, [r7, #4]
 800534a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800534c:	2201      	movs	r2, #1
 800534e:	4013      	ands	r3, r2
 8005350:	d00b      	beq.n	800536a <UART_AdvFeatureConfig+0x2a>
  {
    assert_param(IS_UART_ADVFEATURE_TXINV(huart->AdvancedInit.TxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_TXINV, huart->AdvancedInit.TxPinLevelInvert);
 8005352:	687b      	ldr	r3, [r7, #4]
 8005354:	681b      	ldr	r3, [r3, #0]
 8005356:	685b      	ldr	r3, [r3, #4]
 8005358:	4a4a      	ldr	r2, [pc, #296]	; (8005484 <UART_AdvFeatureConfig+0x144>)
 800535a:	4013      	ands	r3, r2
 800535c:	0019      	movs	r1, r3
 800535e:	687b      	ldr	r3, [r7, #4]
 8005360:	6a9a      	ldr	r2, [r3, #40]	; 0x28
 8005362:	687b      	ldr	r3, [r7, #4]
 8005364:	681b      	ldr	r3, [r3, #0]
 8005366:	430a      	orrs	r2, r1
 8005368:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX pin active level inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXINVERT_INIT))
 800536a:	687b      	ldr	r3, [r7, #4]
 800536c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800536e:	2202      	movs	r2, #2
 8005370:	4013      	ands	r3, r2
 8005372:	d00b      	beq.n	800538c <UART_AdvFeatureConfig+0x4c>
  {
    assert_param(IS_UART_ADVFEATURE_RXINV(huart->AdvancedInit.RxPinLevelInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_RXINV, huart->AdvancedInit.RxPinLevelInvert);
 8005374:	687b      	ldr	r3, [r7, #4]
 8005376:	681b      	ldr	r3, [r3, #0]
 8005378:	685b      	ldr	r3, [r3, #4]
 800537a:	4a43      	ldr	r2, [pc, #268]	; (8005488 <UART_AdvFeatureConfig+0x148>)
 800537c:	4013      	ands	r3, r2
 800537e:	0019      	movs	r1, r3
 8005380:	687b      	ldr	r3, [r7, #4]
 8005382:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 8005384:	687b      	ldr	r3, [r7, #4]
 8005386:	681b      	ldr	r3, [r3, #0]
 8005388:	430a      	orrs	r2, r1
 800538a:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure data inversion */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DATAINVERT_INIT))
 800538c:	687b      	ldr	r3, [r7, #4]
 800538e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005390:	2204      	movs	r2, #4
 8005392:	4013      	ands	r3, r2
 8005394:	d00b      	beq.n	80053ae <UART_AdvFeatureConfig+0x6e>
  {
    assert_param(IS_UART_ADVFEATURE_DATAINV(huart->AdvancedInit.DataInvert));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_DATAINV, huart->AdvancedInit.DataInvert);
 8005396:	687b      	ldr	r3, [r7, #4]
 8005398:	681b      	ldr	r3, [r3, #0]
 800539a:	685b      	ldr	r3, [r3, #4]
 800539c:	4a3b      	ldr	r2, [pc, #236]	; (800548c <UART_AdvFeatureConfig+0x14c>)
 800539e:	4013      	ands	r3, r2
 80053a0:	0019      	movs	r1, r3
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 80053a6:	687b      	ldr	r3, [r7, #4]
 80053a8:	681b      	ldr	r3, [r3, #0]
 80053aa:	430a      	orrs	r2, r1
 80053ac:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX/TX pins swap */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_SWAP_INIT))
 80053ae:	687b      	ldr	r3, [r7, #4]
 80053b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053b2:	2208      	movs	r2, #8
 80053b4:	4013      	ands	r3, r2
 80053b6:	d00b      	beq.n	80053d0 <UART_AdvFeatureConfig+0x90>
  {
    assert_param(IS_UART_ADVFEATURE_SWAP(huart->AdvancedInit.Swap));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_SWAP, huart->AdvancedInit.Swap);
 80053b8:	687b      	ldr	r3, [r7, #4]
 80053ba:	681b      	ldr	r3, [r3, #0]
 80053bc:	685b      	ldr	r3, [r3, #4]
 80053be:	4a34      	ldr	r2, [pc, #208]	; (8005490 <UART_AdvFeatureConfig+0x150>)
 80053c0:	4013      	ands	r3, r2
 80053c2:	0019      	movs	r1, r3
 80053c4:	687b      	ldr	r3, [r7, #4]
 80053c6:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 80053c8:	687b      	ldr	r3, [r7, #4]
 80053ca:	681b      	ldr	r3, [r3, #0]
 80053cc:	430a      	orrs	r2, r1
 80053ce:	605a      	str	r2, [r3, #4]
  }

  /* if required, configure RX overrun detection disabling */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_RXOVERRUNDISABLE_INIT))
 80053d0:	687b      	ldr	r3, [r7, #4]
 80053d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053d4:	2210      	movs	r2, #16
 80053d6:	4013      	ands	r3, r2
 80053d8:	d00b      	beq.n	80053f2 <UART_AdvFeatureConfig+0xb2>
  {
    assert_param(IS_UART_OVERRUN(huart->AdvancedInit.OverrunDisable));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_OVRDIS, huart->AdvancedInit.OverrunDisable);
 80053da:	687b      	ldr	r3, [r7, #4]
 80053dc:	681b      	ldr	r3, [r3, #0]
 80053de:	689b      	ldr	r3, [r3, #8]
 80053e0:	4a2c      	ldr	r2, [pc, #176]	; (8005494 <UART_AdvFeatureConfig+0x154>)
 80053e2:	4013      	ands	r3, r2
 80053e4:	0019      	movs	r1, r3
 80053e6:	687b      	ldr	r3, [r7, #4]
 80053e8:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 80053ea:	687b      	ldr	r3, [r7, #4]
 80053ec:	681b      	ldr	r3, [r3, #0]
 80053ee:	430a      	orrs	r2, r1
 80053f0:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure DMA disabling on reception error */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_DMADISABLEONERROR_INIT))
 80053f2:	687b      	ldr	r3, [r7, #4]
 80053f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80053f6:	2220      	movs	r2, #32
 80053f8:	4013      	ands	r3, r2
 80053fa:	d00b      	beq.n	8005414 <UART_AdvFeatureConfig+0xd4>
  {
    assert_param(IS_UART_ADVFEATURE_DMAONRXERROR(huart->AdvancedInit.DMADisableonRxError));
    MODIFY_REG(huart->Instance->CR3, USART_CR3_DDRE, huart->AdvancedInit.DMADisableonRxError);
 80053fc:	687b      	ldr	r3, [r7, #4]
 80053fe:	681b      	ldr	r3, [r3, #0]
 8005400:	689b      	ldr	r3, [r3, #8]
 8005402:	4a25      	ldr	r2, [pc, #148]	; (8005498 <UART_AdvFeatureConfig+0x158>)
 8005404:	4013      	ands	r3, r2
 8005406:	0019      	movs	r1, r3
 8005408:	687b      	ldr	r3, [r7, #4]
 800540a:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800540c:	687b      	ldr	r3, [r7, #4]
 800540e:	681b      	ldr	r3, [r3, #0]
 8005410:	430a      	orrs	r2, r1
 8005412:	609a      	str	r2, [r3, #8]
  }

  /* if required, configure auto Baud rate detection scheme */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_AUTOBAUDRATE_INIT))
 8005414:	687b      	ldr	r3, [r7, #4]
 8005416:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8005418:	2240      	movs	r2, #64	; 0x40
 800541a:	4013      	ands	r3, r2
 800541c:	d01d      	beq.n	800545a <UART_AdvFeatureConfig+0x11a>
  {
    assert_param(IS_USART_AUTOBAUDRATE_DETECTION_INSTANCE(huart->Instance));
    assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATE(huart->AdvancedInit.AutoBaudRateEnable));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_ABREN, huart->AdvancedInit.AutoBaudRateEnable);
 800541e:	687b      	ldr	r3, [r7, #4]
 8005420:	681b      	ldr	r3, [r3, #0]
 8005422:	685b      	ldr	r3, [r3, #4]
 8005424:	4a1d      	ldr	r2, [pc, #116]	; (800549c <UART_AdvFeatureConfig+0x15c>)
 8005426:	4013      	ands	r3, r2
 8005428:	0019      	movs	r1, r3
 800542a:	687b      	ldr	r3, [r7, #4]
 800542c:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800542e:	687b      	ldr	r3, [r7, #4]
 8005430:	681b      	ldr	r3, [r3, #0]
 8005432:	430a      	orrs	r2, r1
 8005434:	605a      	str	r2, [r3, #4]
    /* set auto Baudrate detection parameters if detection is enabled */
    if (huart->AdvancedInit.AutoBaudRateEnable == UART_ADVFEATURE_AUTOBAUDRATE_ENABLE)
 8005436:	687b      	ldr	r3, [r7, #4]
 8005438:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800543a:	2380      	movs	r3, #128	; 0x80
 800543c:	035b      	lsls	r3, r3, #13
 800543e:	429a      	cmp	r2, r3
 8005440:	d10b      	bne.n	800545a <UART_AdvFeatureConfig+0x11a>
    {
      assert_param(IS_UART_ADVFEATURE_AUTOBAUDRATEMODE(huart->AdvancedInit.AutoBaudRateMode));
      MODIFY_REG(huart->Instance->CR2, USART_CR2_ABRMODE, huart->AdvancedInit.AutoBaudRateMode);
 8005442:	687b      	ldr	r3, [r7, #4]
 8005444:	681b      	ldr	r3, [r3, #0]
 8005446:	685b      	ldr	r3, [r3, #4]
 8005448:	4a15      	ldr	r2, [pc, #84]	; (80054a0 <UART_AdvFeatureConfig+0x160>)
 800544a:	4013      	ands	r3, r2
 800544c:	0019      	movs	r1, r3
 800544e:	687b      	ldr	r3, [r7, #4]
 8005450:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 8005452:	687b      	ldr	r3, [r7, #4]
 8005454:	681b      	ldr	r3, [r3, #0]
 8005456:	430a      	orrs	r2, r1
 8005458:	605a      	str	r2, [r3, #4]
    }
  }

  /* if required, configure MSB first on communication line */
  if (HAL_IS_BIT_SET(huart->AdvancedInit.AdvFeatureInit, UART_ADVFEATURE_MSBFIRST_INIT))
 800545a:	687b      	ldr	r3, [r7, #4]
 800545c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800545e:	2280      	movs	r2, #128	; 0x80
 8005460:	4013      	ands	r3, r2
 8005462:	d00b      	beq.n	800547c <UART_AdvFeatureConfig+0x13c>
  {
    assert_param(IS_UART_ADVFEATURE_MSBFIRST(huart->AdvancedInit.MSBFirst));
    MODIFY_REG(huart->Instance->CR2, USART_CR2_MSBFIRST, huart->AdvancedInit.MSBFirst);
 8005464:	687b      	ldr	r3, [r7, #4]
 8005466:	681b      	ldr	r3, [r3, #0]
 8005468:	685b      	ldr	r3, [r3, #4]
 800546a:	4a0e      	ldr	r2, [pc, #56]	; (80054a4 <UART_AdvFeatureConfig+0x164>)
 800546c:	4013      	ands	r3, r2
 800546e:	0019      	movs	r1, r3
 8005470:	687b      	ldr	r3, [r7, #4]
 8005472:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 8005474:	687b      	ldr	r3, [r7, #4]
 8005476:	681b      	ldr	r3, [r3, #0]
 8005478:	430a      	orrs	r2, r1
 800547a:	605a      	str	r2, [r3, #4]
  }
}
 800547c:	46c0      	nop			; (mov r8, r8)
 800547e:	46bd      	mov	sp, r7
 8005480:	b002      	add	sp, #8
 8005482:	bd80      	pop	{r7, pc}
 8005484:	fffdffff 	.word	0xfffdffff
 8005488:	fffeffff 	.word	0xfffeffff
 800548c:	fffbffff 	.word	0xfffbffff
 8005490:	ffff7fff 	.word	0xffff7fff
 8005494:	ffffefff 	.word	0xffffefff
 8005498:	ffffdfff 	.word	0xffffdfff
 800549c:	ffefffff 	.word	0xffefffff
 80054a0:	ff9fffff 	.word	0xff9fffff
 80054a4:	fff7ffff 	.word	0xfff7ffff

080054a8 <UART_CheckIdleState>:
  * @brief Check the UART Idle State.
  * @param huart UART handle.
  * @retval HAL status
  */
HAL_StatusTypeDef UART_CheckIdleState(UART_HandleTypeDef *huart)
{
 80054a8:	b580      	push	{r7, lr}
 80054aa:	b086      	sub	sp, #24
 80054ac:	af02      	add	r7, sp, #8
 80054ae:	6078      	str	r0, [r7, #4]
  uint32_t tickstart;

  /* Initialize the UART ErrorCode */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 80054b0:	687b      	ldr	r3, [r7, #4]
 80054b2:	2200      	movs	r2, #0
 80054b4:	67da      	str	r2, [r3, #124]	; 0x7c

  /* Init tickstart for timeout managment*/
  tickstart = HAL_GetTick();
 80054b6:	f7fd ff17 	bl	80032e8 <HAL_GetTick>
 80054ba:	0003      	movs	r3, r0
 80054bc:	60fb      	str	r3, [r7, #12]

  /* Check if the Transmitter is enabled */
  if ((huart->Instance->CR1 & USART_CR1_TE) == USART_CR1_TE)
 80054be:	687b      	ldr	r3, [r7, #4]
 80054c0:	681b      	ldr	r3, [r3, #0]
 80054c2:	681b      	ldr	r3, [r3, #0]
 80054c4:	2208      	movs	r2, #8
 80054c6:	4013      	ands	r3, r2
 80054c8:	2b08      	cmp	r3, #8
 80054ca:	d10d      	bne.n	80054e8 <UART_CheckIdleState+0x40>
  {
    /* Wait until TEACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_TEACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80054cc:	68fa      	ldr	r2, [r7, #12]
 80054ce:	2380      	movs	r3, #128	; 0x80
 80054d0:	0399      	lsls	r1, r3, #14
 80054d2:	6878      	ldr	r0, [r7, #4]
 80054d4:	4b16      	ldr	r3, [pc, #88]	; (8005530 <UART_CheckIdleState+0x88>)
 80054d6:	9300      	str	r3, [sp, #0]
 80054d8:	0013      	movs	r3, r2
 80054da:	2200      	movs	r2, #0
 80054dc:	f000 f82a 	bl	8005534 <UART_WaitOnFlagUntilTimeout>
 80054e0:	1e03      	subs	r3, r0, #0
 80054e2:	d001      	beq.n	80054e8 <UART_CheckIdleState+0x40>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 80054e4:	2303      	movs	r3, #3
 80054e6:	e01f      	b.n	8005528 <UART_CheckIdleState+0x80>
    }
  }

  /* Check if the Receiver is enabled */
  if ((huart->Instance->CR1 & USART_CR1_RE) == USART_CR1_RE)
 80054e8:	687b      	ldr	r3, [r7, #4]
 80054ea:	681b      	ldr	r3, [r3, #0]
 80054ec:	681b      	ldr	r3, [r3, #0]
 80054ee:	2204      	movs	r2, #4
 80054f0:	4013      	ands	r3, r2
 80054f2:	2b04      	cmp	r3, #4
 80054f4:	d10d      	bne.n	8005512 <UART_CheckIdleState+0x6a>
  {
    /* Wait until REACK flag is set */
    if (UART_WaitOnFlagUntilTimeout(huart, USART_ISR_REACK, RESET, tickstart, HAL_UART_TIMEOUT_VALUE) != HAL_OK)
 80054f6:	68fa      	ldr	r2, [r7, #12]
 80054f8:	2380      	movs	r3, #128	; 0x80
 80054fa:	03d9      	lsls	r1, r3, #15
 80054fc:	6878      	ldr	r0, [r7, #4]
 80054fe:	4b0c      	ldr	r3, [pc, #48]	; (8005530 <UART_CheckIdleState+0x88>)
 8005500:	9300      	str	r3, [sp, #0]
 8005502:	0013      	movs	r3, r2
 8005504:	2200      	movs	r2, #0
 8005506:	f000 f815 	bl	8005534 <UART_WaitOnFlagUntilTimeout>
 800550a:	1e03      	subs	r3, r0, #0
 800550c:	d001      	beq.n	8005512 <UART_CheckIdleState+0x6a>
    {
      /* Timeout occurred */
      return HAL_TIMEOUT;
 800550e:	2303      	movs	r3, #3
 8005510:	e00a      	b.n	8005528 <UART_CheckIdleState+0x80>
    }
  }

  /* Initialize the UART State */
  huart->gState = HAL_UART_STATE_READY;
 8005512:	687b      	ldr	r3, [r7, #4]
 8005514:	2220      	movs	r2, #32
 8005516:	675a      	str	r2, [r3, #116]	; 0x74
  huart->RxState = HAL_UART_STATE_READY;
 8005518:	687b      	ldr	r3, [r7, #4]
 800551a:	2220      	movs	r2, #32
 800551c:	679a      	str	r2, [r3, #120]	; 0x78

  /* Process Unlocked */
  __HAL_UNLOCK(huart);
 800551e:	687b      	ldr	r3, [r7, #4]
 8005520:	2270      	movs	r2, #112	; 0x70
 8005522:	2100      	movs	r1, #0
 8005524:	5499      	strb	r1, [r3, r2]

  return HAL_OK;
 8005526:	2300      	movs	r3, #0
}
 8005528:	0018      	movs	r0, r3
 800552a:	46bd      	mov	sp, r7
 800552c:	b004      	add	sp, #16
 800552e:	bd80      	pop	{r7, pc}
 8005530:	01ffffff 	.word	0x01ffffff

08005534 <UART_WaitOnFlagUntilTimeout>:
  * @param Tickstart Tick start value
  * @param Timeout   Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 8005534:	b580      	push	{r7, lr}
 8005536:	b084      	sub	sp, #16
 8005538:	af00      	add	r7, sp, #0
 800553a:	60f8      	str	r0, [r7, #12]
 800553c:	60b9      	str	r1, [r7, #8]
 800553e:	603b      	str	r3, [r7, #0]
 8005540:	1dfb      	adds	r3, r7, #7
 8005542:	701a      	strb	r2, [r3, #0]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 8005544:	e029      	b.n	800559a <UART_WaitOnFlagUntilTimeout+0x66>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 8005546:	69bb      	ldr	r3, [r7, #24]
 8005548:	3301      	adds	r3, #1
 800554a:	d026      	beq.n	800559a <UART_WaitOnFlagUntilTimeout+0x66>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 800554c:	f7fd fecc 	bl	80032e8 <HAL_GetTick>
 8005550:	0002      	movs	r2, r0
 8005552:	683b      	ldr	r3, [r7, #0]
 8005554:	1ad3      	subs	r3, r2, r3
 8005556:	69ba      	ldr	r2, [r7, #24]
 8005558:	429a      	cmp	r2, r3
 800555a:	d302      	bcc.n	8005562 <UART_WaitOnFlagUntilTimeout+0x2e>
 800555c:	69bb      	ldr	r3, [r7, #24]
 800555e:	2b00      	cmp	r3, #0
 8005560:	d11b      	bne.n	800559a <UART_WaitOnFlagUntilTimeout+0x66>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 8005562:	68fb      	ldr	r3, [r7, #12]
 8005564:	681b      	ldr	r3, [r3, #0]
 8005566:	681a      	ldr	r2, [r3, #0]
 8005568:	68fb      	ldr	r3, [r7, #12]
 800556a:	681b      	ldr	r3, [r3, #0]
 800556c:	4915      	ldr	r1, [pc, #84]	; (80055c4 <UART_WaitOnFlagUntilTimeout+0x90>)
 800556e:	400a      	ands	r2, r1
 8005570:	601a      	str	r2, [r3, #0]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 8005572:	68fb      	ldr	r3, [r7, #12]
 8005574:	681b      	ldr	r3, [r3, #0]
 8005576:	689a      	ldr	r2, [r3, #8]
 8005578:	68fb      	ldr	r3, [r7, #12]
 800557a:	681b      	ldr	r3, [r3, #0]
 800557c:	2101      	movs	r1, #1
 800557e:	438a      	bics	r2, r1
 8005580:	609a      	str	r2, [r3, #8]

        huart->gState = HAL_UART_STATE_READY;
 8005582:	68fb      	ldr	r3, [r7, #12]
 8005584:	2220      	movs	r2, #32
 8005586:	675a      	str	r2, [r3, #116]	; 0x74
        huart->RxState = HAL_UART_STATE_READY;
 8005588:	68fb      	ldr	r3, [r7, #12]
 800558a:	2220      	movs	r2, #32
 800558c:	679a      	str	r2, [r3, #120]	; 0x78

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 800558e:	68fb      	ldr	r3, [r7, #12]
 8005590:	2270      	movs	r2, #112	; 0x70
 8005592:	2100      	movs	r1, #0
 8005594:	5499      	strb	r1, [r3, r2]

        return HAL_TIMEOUT;
 8005596:	2303      	movs	r3, #3
 8005598:	e00f      	b.n	80055ba <UART_WaitOnFlagUntilTimeout+0x86>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 800559a:	68fb      	ldr	r3, [r7, #12]
 800559c:	681b      	ldr	r3, [r3, #0]
 800559e:	69db      	ldr	r3, [r3, #28]
 80055a0:	68ba      	ldr	r2, [r7, #8]
 80055a2:	4013      	ands	r3, r2
 80055a4:	68ba      	ldr	r2, [r7, #8]
 80055a6:	1ad3      	subs	r3, r2, r3
 80055a8:	425a      	negs	r2, r3
 80055aa:	4153      	adcs	r3, r2
 80055ac:	b2db      	uxtb	r3, r3
 80055ae:	001a      	movs	r2, r3
 80055b0:	1dfb      	adds	r3, r7, #7
 80055b2:	781b      	ldrb	r3, [r3, #0]
 80055b4:	429a      	cmp	r2, r3
 80055b6:	d0c6      	beq.n	8005546 <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 80055b8:	2300      	movs	r3, #0
}
 80055ba:	0018      	movs	r0, r3
 80055bc:	46bd      	mov	sp, r7
 80055be:	b004      	add	sp, #16
 80055c0:	bd80      	pop	{r7, pc}
 80055c2:	46c0      	nop			; (mov r8, r8)
 80055c4:	fffffe5f 	.word	0xfffffe5f

080055c8 <pow>:
 80055c8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80055ca:	2400      	movs	r4, #0
 80055cc:	b091      	sub	sp, #68	; 0x44
 80055ce:	001f      	movs	r7, r3
 80055d0:	9000      	str	r0, [sp, #0]
 80055d2:	9101      	str	r1, [sp, #4]
 80055d4:	0016      	movs	r6, r2
 80055d6:	f000 f98d 	bl	80058f4 <__ieee754_pow>
 80055da:	4bbe      	ldr	r3, [pc, #760]	; (80058d4 <pow+0x30c>)
 80055dc:	9002      	str	r0, [sp, #8]
 80055de:	9103      	str	r1, [sp, #12]
 80055e0:	571c      	ldrsb	r4, [r3, r4]
 80055e2:	1c63      	adds	r3, r4, #1
 80055e4:	d100      	bne.n	80055e8 <pow+0x20>
 80055e6:	e0d4      	b.n	8005792 <pow+0x1ca>
 80055e8:	0032      	movs	r2, r6
 80055ea:	003b      	movs	r3, r7
 80055ec:	0030      	movs	r0, r6
 80055ee:	0039      	movs	r1, r7
 80055f0:	f7fc fd7a 	bl	80020e8 <__aeabi_dcmpun>
 80055f4:	1e05      	subs	r5, r0, #0
 80055f6:	d000      	beq.n	80055fa <pow+0x32>
 80055f8:	e0cb      	b.n	8005792 <pow+0x1ca>
 80055fa:	9a00      	ldr	r2, [sp, #0]
 80055fc:	9b01      	ldr	r3, [sp, #4]
 80055fe:	0010      	movs	r0, r2
 8005600:	0019      	movs	r1, r3
 8005602:	f7fc fd71 	bl	80020e8 <__aeabi_dcmpun>
 8005606:	2200      	movs	r2, #0
 8005608:	9005      	str	r0, [sp, #20]
 800560a:	2800      	cmp	r0, #0
 800560c:	d01e      	beq.n	800564c <pow+0x84>
 800560e:	2300      	movs	r3, #0
 8005610:	0030      	movs	r0, r6
 8005612:	0039      	movs	r1, r7
 8005614:	f7fa ff10 	bl	8000438 <__aeabi_dcmpeq>
 8005618:	2800      	cmp	r0, #0
 800561a:	d100      	bne.n	800561e <pow+0x56>
 800561c:	e0b9      	b.n	8005792 <pow+0x1ca>
 800561e:	2301      	movs	r3, #1
 8005620:	9306      	str	r3, [sp, #24]
 8005622:	4bad      	ldr	r3, [pc, #692]	; (80058d8 <pow+0x310>)
 8005624:	950e      	str	r5, [sp, #56]	; 0x38
 8005626:	9307      	str	r3, [sp, #28]
 8005628:	9a00      	ldr	r2, [sp, #0]
 800562a:	9b01      	ldr	r3, [sp, #4]
 800562c:	9208      	str	r2, [sp, #32]
 800562e:	9309      	str	r3, [sp, #36]	; 0x24
 8005630:	2200      	movs	r2, #0
 8005632:	4baa      	ldr	r3, [pc, #680]	; (80058dc <pow+0x314>)
 8005634:	960a      	str	r6, [sp, #40]	; 0x28
 8005636:	970b      	str	r7, [sp, #44]	; 0x2c
 8005638:	920c      	str	r2, [sp, #48]	; 0x30
 800563a:	930d      	str	r3, [sp, #52]	; 0x34
 800563c:	2c02      	cmp	r4, #2
 800563e:	d033      	beq.n	80056a8 <pow+0xe0>
 8005640:	a806      	add	r0, sp, #24
 8005642:	f000 ff0b 	bl	800645c <matherr>
 8005646:	2800      	cmp	r0, #0
 8005648:	d125      	bne.n	8005696 <pow+0xce>
 800564a:	e059      	b.n	8005700 <pow+0x138>
 800564c:	2300      	movs	r3, #0
 800564e:	9800      	ldr	r0, [sp, #0]
 8005650:	9901      	ldr	r1, [sp, #4]
 8005652:	f7fa fef1 	bl	8000438 <__aeabi_dcmpeq>
 8005656:	2800      	cmp	r0, #0
 8005658:	d057      	beq.n	800570a <pow+0x142>
 800565a:	2200      	movs	r2, #0
 800565c:	2300      	movs	r3, #0
 800565e:	0030      	movs	r0, r6
 8005660:	0039      	movs	r1, r7
 8005662:	f7fa fee9 	bl	8000438 <__aeabi_dcmpeq>
 8005666:	1e05      	subs	r5, r0, #0
 8005668:	d021      	beq.n	80056ae <pow+0xe6>
 800566a:	2301      	movs	r3, #1
 800566c:	9306      	str	r3, [sp, #24]
 800566e:	4b9a      	ldr	r3, [pc, #616]	; (80058d8 <pow+0x310>)
 8005670:	960a      	str	r6, [sp, #40]	; 0x28
 8005672:	970b      	str	r7, [sp, #44]	; 0x2c
 8005674:	9307      	str	r3, [sp, #28]
 8005676:	9b05      	ldr	r3, [sp, #20]
 8005678:	930e      	str	r3, [sp, #56]	; 0x38
 800567a:	9a00      	ldr	r2, [sp, #0]
 800567c:	9b01      	ldr	r3, [sp, #4]
 800567e:	9208      	str	r2, [sp, #32]
 8005680:	9309      	str	r3, [sp, #36]	; 0x24
 8005682:	2200      	movs	r2, #0
 8005684:	2300      	movs	r3, #0
 8005686:	920c      	str	r2, [sp, #48]	; 0x30
 8005688:	930d      	str	r3, [sp, #52]	; 0x34
 800568a:	2c00      	cmp	r4, #0
 800568c:	d0d8      	beq.n	8005640 <pow+0x78>
 800568e:	2200      	movs	r2, #0
 8005690:	4b92      	ldr	r3, [pc, #584]	; (80058dc <pow+0x314>)
 8005692:	920c      	str	r2, [sp, #48]	; 0x30
 8005694:	930d      	str	r3, [sp, #52]	; 0x34
 8005696:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8005698:	9300      	str	r3, [sp, #0]
 800569a:	2b00      	cmp	r3, #0
 800569c:	d004      	beq.n	80056a8 <pow+0xe0>
 800569e:	f000 ffd9 	bl	8006654 <__errno>
 80056a2:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 80056a4:	9300      	str	r3, [sp, #0]
 80056a6:	6003      	str	r3, [r0, #0]
 80056a8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 80056aa:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 80056ac:	e06f      	b.n	800578e <pow+0x1c6>
 80056ae:	0030      	movs	r0, r6
 80056b0:	0039      	movs	r1, r7
 80056b2:	f000 fecb 	bl	800644c <finite>
 80056b6:	2800      	cmp	r0, #0
 80056b8:	d06b      	beq.n	8005792 <pow+0x1ca>
 80056ba:	2200      	movs	r2, #0
 80056bc:	2300      	movs	r3, #0
 80056be:	0030      	movs	r0, r6
 80056c0:	0039      	movs	r1, r7
 80056c2:	f7fa febf 	bl	8000444 <__aeabi_dcmplt>
 80056c6:	2800      	cmp	r0, #0
 80056c8:	d063      	beq.n	8005792 <pow+0x1ca>
 80056ca:	2301      	movs	r3, #1
 80056cc:	9306      	str	r3, [sp, #24]
 80056ce:	4b82      	ldr	r3, [pc, #520]	; (80058d8 <pow+0x310>)
 80056d0:	950e      	str	r5, [sp, #56]	; 0x38
 80056d2:	9307      	str	r3, [sp, #28]
 80056d4:	9b00      	ldr	r3, [sp, #0]
 80056d6:	9c01      	ldr	r4, [sp, #4]
 80056d8:	9308      	str	r3, [sp, #32]
 80056da:	9409      	str	r4, [sp, #36]	; 0x24
 80056dc:	4b7d      	ldr	r3, [pc, #500]	; (80058d4 <pow+0x30c>)
 80056de:	960a      	str	r6, [sp, #40]	; 0x28
 80056e0:	970b      	str	r7, [sp, #44]	; 0x2c
 80056e2:	781b      	ldrb	r3, [r3, #0]
 80056e4:	b25b      	sxtb	r3, r3
 80056e6:	2b00      	cmp	r3, #0
 80056e8:	d104      	bne.n	80056f4 <pow+0x12c>
 80056ea:	2300      	movs	r3, #0
 80056ec:	2400      	movs	r4, #0
 80056ee:	930c      	str	r3, [sp, #48]	; 0x30
 80056f0:	940d      	str	r4, [sp, #52]	; 0x34
 80056f2:	e7a5      	b.n	8005640 <pow+0x78>
 80056f4:	2000      	movs	r0, #0
 80056f6:	497a      	ldr	r1, [pc, #488]	; (80058e0 <pow+0x318>)
 80056f8:	900c      	str	r0, [sp, #48]	; 0x30
 80056fa:	910d      	str	r1, [sp, #52]	; 0x34
 80056fc:	2b02      	cmp	r3, #2
 80056fe:	d19f      	bne.n	8005640 <pow+0x78>
 8005700:	f000 ffa8 	bl	8006654 <__errno>
 8005704:	2321      	movs	r3, #33	; 0x21
 8005706:	6003      	str	r3, [r0, #0]
 8005708:	e7c5      	b.n	8005696 <pow+0xce>
 800570a:	9802      	ldr	r0, [sp, #8]
 800570c:	9903      	ldr	r1, [sp, #12]
 800570e:	f000 fe9d 	bl	800644c <finite>
 8005712:	9005      	str	r0, [sp, #20]
 8005714:	2800      	cmp	r0, #0
 8005716:	d000      	beq.n	800571a <pow+0x152>
 8005718:	e0a5      	b.n	8005866 <pow+0x29e>
 800571a:	9800      	ldr	r0, [sp, #0]
 800571c:	9901      	ldr	r1, [sp, #4]
 800571e:	f000 fe95 	bl	800644c <finite>
 8005722:	2800      	cmp	r0, #0
 8005724:	d100      	bne.n	8005728 <pow+0x160>
 8005726:	e09e      	b.n	8005866 <pow+0x29e>
 8005728:	0030      	movs	r0, r6
 800572a:	0039      	movs	r1, r7
 800572c:	f000 fe8e 	bl	800644c <finite>
 8005730:	2800      	cmp	r0, #0
 8005732:	d100      	bne.n	8005736 <pow+0x16e>
 8005734:	e097      	b.n	8005866 <pow+0x29e>
 8005736:	2500      	movs	r5, #0
 8005738:	4b66      	ldr	r3, [pc, #408]	; (80058d4 <pow+0x30c>)
 800573a:	ac06      	add	r4, sp, #24
 800573c:	575d      	ldrsb	r5, [r3, r5]
 800573e:	9a02      	ldr	r2, [sp, #8]
 8005740:	9b03      	ldr	r3, [sp, #12]
 8005742:	0019      	movs	r1, r3
 8005744:	0010      	movs	r0, r2
 8005746:	f7fc fccf 	bl	80020e8 <__aeabi_dcmpun>
 800574a:	4b63      	ldr	r3, [pc, #396]	; (80058d8 <pow+0x310>)
 800574c:	2800      	cmp	r0, #0
 800574e:	d031      	beq.n	80057b4 <pow+0x1ec>
 8005750:	2201      	movs	r2, #1
 8005752:	6063      	str	r3, [r4, #4]
 8005754:	9b05      	ldr	r3, [sp, #20]
 8005756:	9206      	str	r2, [sp, #24]
 8005758:	6223      	str	r3, [r4, #32]
 800575a:	6126      	str	r6, [r4, #16]
 800575c:	6167      	str	r7, [r4, #20]
 800575e:	9a00      	ldr	r2, [sp, #0]
 8005760:	9b01      	ldr	r3, [sp, #4]
 8005762:	60a2      	str	r2, [r4, #8]
 8005764:	60e3      	str	r3, [r4, #12]
 8005766:	2200      	movs	r2, #0
 8005768:	2300      	movs	r3, #0
 800576a:	2d00      	cmp	r5, #0
 800576c:	d115      	bne.n	800579a <pow+0x1d2>
 800576e:	61a2      	str	r2, [r4, #24]
 8005770:	61e3      	str	r3, [r4, #28]
 8005772:	0020      	movs	r0, r4
 8005774:	f000 fe72 	bl	800645c <matherr>
 8005778:	2800      	cmp	r0, #0
 800577a:	d016      	beq.n	80057aa <pow+0x1e2>
 800577c:	6a23      	ldr	r3, [r4, #32]
 800577e:	2b00      	cmp	r3, #0
 8005780:	d003      	beq.n	800578a <pow+0x1c2>
 8005782:	f000 ff67 	bl	8006654 <__errno>
 8005786:	6a23      	ldr	r3, [r4, #32]
 8005788:	6003      	str	r3, [r0, #0]
 800578a:	69a3      	ldr	r3, [r4, #24]
 800578c:	69e4      	ldr	r4, [r4, #28]
 800578e:	9302      	str	r3, [sp, #8]
 8005790:	9403      	str	r4, [sp, #12]
 8005792:	9802      	ldr	r0, [sp, #8]
 8005794:	9903      	ldr	r1, [sp, #12]
 8005796:	b011      	add	sp, #68	; 0x44
 8005798:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800579a:	0010      	movs	r0, r2
 800579c:	0019      	movs	r1, r3
 800579e:	f7fb fadf 	bl	8000d60 <__aeabi_ddiv>
 80057a2:	61a0      	str	r0, [r4, #24]
 80057a4:	61e1      	str	r1, [r4, #28]
 80057a6:	2d02      	cmp	r5, #2
 80057a8:	d1e3      	bne.n	8005772 <pow+0x1aa>
 80057aa:	f000 ff53 	bl	8006654 <__errno>
 80057ae:	2321      	movs	r3, #33	; 0x21
 80057b0:	6003      	str	r3, [r0, #0]
 80057b2:	e7e3      	b.n	800577c <pow+0x1b4>
 80057b4:	2203      	movs	r2, #3
 80057b6:	6126      	str	r6, [r4, #16]
 80057b8:	6167      	str	r7, [r4, #20]
 80057ba:	9206      	str	r2, [sp, #24]
 80057bc:	6063      	str	r3, [r4, #4]
 80057be:	6220      	str	r0, [r4, #32]
 80057c0:	9a00      	ldr	r2, [sp, #0]
 80057c2:	9b01      	ldr	r3, [sp, #4]
 80057c4:	0030      	movs	r0, r6
 80057c6:	60a2      	str	r2, [r4, #8]
 80057c8:	60e3      	str	r3, [r4, #12]
 80057ca:	0039      	movs	r1, r7
 80057cc:	2200      	movs	r2, #0
 80057ce:	4b45      	ldr	r3, [pc, #276]	; (80058e4 <pow+0x31c>)
 80057d0:	f7fb fed0 	bl	8001574 <__aeabi_dmul>
 80057d4:	0006      	movs	r6, r0
 80057d6:	000f      	movs	r7, r1
 80057d8:	2d00      	cmp	r5, #0
 80057da:	d124      	bne.n	8005826 <pow+0x25e>
 80057dc:	9800      	ldr	r0, [sp, #0]
 80057de:	9901      	ldr	r1, [sp, #4]
 80057e0:	22e0      	movs	r2, #224	; 0xe0
 80057e2:	4b41      	ldr	r3, [pc, #260]	; (80058e8 <pow+0x320>)
 80057e4:	0612      	lsls	r2, r2, #24
 80057e6:	61a2      	str	r2, [r4, #24]
 80057e8:	61e3      	str	r3, [r4, #28]
 80057ea:	2200      	movs	r2, #0
 80057ec:	2300      	movs	r3, #0
 80057ee:	f7fa fe29 	bl	8000444 <__aeabi_dcmplt>
 80057f2:	2800      	cmp	r0, #0
 80057f4:	d030      	beq.n	8005858 <pow+0x290>
 80057f6:	0030      	movs	r0, r6
 80057f8:	0039      	movs	r1, r7
 80057fa:	f000 fe37 	bl	800646c <rint>
 80057fe:	0032      	movs	r2, r6
 8005800:	003b      	movs	r3, r7
 8005802:	f7fa fe19 	bl	8000438 <__aeabi_dcmpeq>
 8005806:	2800      	cmp	r0, #0
 8005808:	d104      	bne.n	8005814 <pow+0x24c>
 800580a:	22e0      	movs	r2, #224	; 0xe0
 800580c:	4b37      	ldr	r3, [pc, #220]	; (80058ec <pow+0x324>)
 800580e:	0612      	lsls	r2, r2, #24
 8005810:	61a2      	str	r2, [r4, #24]
 8005812:	61e3      	str	r3, [r4, #28]
 8005814:	4b2f      	ldr	r3, [pc, #188]	; (80058d4 <pow+0x30c>)
 8005816:	781b      	ldrb	r3, [r3, #0]
 8005818:	b25b      	sxtb	r3, r3
 800581a:	2b02      	cmp	r3, #2
 800581c:	d11c      	bne.n	8005858 <pow+0x290>
 800581e:	f000 ff19 	bl	8006654 <__errno>
 8005822:	2322      	movs	r3, #34	; 0x22
 8005824:	e7c4      	b.n	80057b0 <pow+0x1e8>
 8005826:	2200      	movs	r2, #0
 8005828:	9800      	ldr	r0, [sp, #0]
 800582a:	9901      	ldr	r1, [sp, #4]
 800582c:	4b30      	ldr	r3, [pc, #192]	; (80058f0 <pow+0x328>)
 800582e:	61a2      	str	r2, [r4, #24]
 8005830:	61e3      	str	r3, [r4, #28]
 8005832:	2200      	movs	r2, #0
 8005834:	2300      	movs	r3, #0
 8005836:	f7fa fe05 	bl	8000444 <__aeabi_dcmplt>
 800583a:	2800      	cmp	r0, #0
 800583c:	d0ea      	beq.n	8005814 <pow+0x24c>
 800583e:	0030      	movs	r0, r6
 8005840:	0039      	movs	r1, r7
 8005842:	f000 fe13 	bl	800646c <rint>
 8005846:	0032      	movs	r2, r6
 8005848:	003b      	movs	r3, r7
 800584a:	f7fa fdf5 	bl	8000438 <__aeabi_dcmpeq>
 800584e:	2800      	cmp	r0, #0
 8005850:	d1e0      	bne.n	8005814 <pow+0x24c>
 8005852:	2200      	movs	r2, #0
 8005854:	4b22      	ldr	r3, [pc, #136]	; (80058e0 <pow+0x318>)
 8005856:	e7db      	b.n	8005810 <pow+0x248>
 8005858:	0020      	movs	r0, r4
 800585a:	f000 fdff 	bl	800645c <matherr>
 800585e:	2800      	cmp	r0, #0
 8005860:	d000      	beq.n	8005864 <pow+0x29c>
 8005862:	e78b      	b.n	800577c <pow+0x1b4>
 8005864:	e7db      	b.n	800581e <pow+0x256>
 8005866:	2200      	movs	r2, #0
 8005868:	9802      	ldr	r0, [sp, #8]
 800586a:	9903      	ldr	r1, [sp, #12]
 800586c:	2300      	movs	r3, #0
 800586e:	f7fa fde3 	bl	8000438 <__aeabi_dcmpeq>
 8005872:	2800      	cmp	r0, #0
 8005874:	d100      	bne.n	8005878 <pow+0x2b0>
 8005876:	e78c      	b.n	8005792 <pow+0x1ca>
 8005878:	9800      	ldr	r0, [sp, #0]
 800587a:	9901      	ldr	r1, [sp, #4]
 800587c:	f000 fde6 	bl	800644c <finite>
 8005880:	2800      	cmp	r0, #0
 8005882:	d100      	bne.n	8005886 <pow+0x2be>
 8005884:	e785      	b.n	8005792 <pow+0x1ca>
 8005886:	0030      	movs	r0, r6
 8005888:	0039      	movs	r1, r7
 800588a:	f000 fddf 	bl	800644c <finite>
 800588e:	2800      	cmp	r0, #0
 8005890:	d100      	bne.n	8005894 <pow+0x2cc>
 8005892:	e77e      	b.n	8005792 <pow+0x1ca>
 8005894:	2304      	movs	r3, #4
 8005896:	9306      	str	r3, [sp, #24]
 8005898:	4b0f      	ldr	r3, [pc, #60]	; (80058d8 <pow+0x310>)
 800589a:	960a      	str	r6, [sp, #40]	; 0x28
 800589c:	970b      	str	r7, [sp, #44]	; 0x2c
 800589e:	9307      	str	r3, [sp, #28]
 80058a0:	2300      	movs	r3, #0
 80058a2:	930e      	str	r3, [sp, #56]	; 0x38
 80058a4:	9b00      	ldr	r3, [sp, #0]
 80058a6:	9c01      	ldr	r4, [sp, #4]
 80058a8:	9308      	str	r3, [sp, #32]
 80058aa:	9409      	str	r4, [sp, #36]	; 0x24
 80058ac:	2300      	movs	r3, #0
 80058ae:	2400      	movs	r4, #0
 80058b0:	930c      	str	r3, [sp, #48]	; 0x30
 80058b2:	940d      	str	r4, [sp, #52]	; 0x34
 80058b4:	4b07      	ldr	r3, [pc, #28]	; (80058d4 <pow+0x30c>)
 80058b6:	781b      	ldrb	r3, [r3, #0]
 80058b8:	b25b      	sxtb	r3, r3
 80058ba:	2b02      	cmp	r3, #2
 80058bc:	d103      	bne.n	80058c6 <pow+0x2fe>
 80058be:	f000 fec9 	bl	8006654 <__errno>
 80058c2:	2322      	movs	r3, #34	; 0x22
 80058c4:	e71f      	b.n	8005706 <pow+0x13e>
 80058c6:	a806      	add	r0, sp, #24
 80058c8:	f000 fdc8 	bl	800645c <matherr>
 80058cc:	2800      	cmp	r0, #0
 80058ce:	d000      	beq.n	80058d2 <pow+0x30a>
 80058d0:	e6e1      	b.n	8005696 <pow+0xce>
 80058d2:	e7f4      	b.n	80058be <pow+0x2f6>
 80058d4:	20000009 	.word	0x20000009
 80058d8:	0800a36c 	.word	0x0800a36c
 80058dc:	3ff00000 	.word	0x3ff00000
 80058e0:	fff00000 	.word	0xfff00000
 80058e4:	3fe00000 	.word	0x3fe00000
 80058e8:	47efffff 	.word	0x47efffff
 80058ec:	c7efffff 	.word	0xc7efffff
 80058f0:	7ff00000 	.word	0x7ff00000

080058f4 <__ieee754_pow>:
 80058f4:	b5f0      	push	{r4, r5, r6, r7, lr}
 80058f6:	b095      	sub	sp, #84	; 0x54
 80058f8:	9202      	str	r2, [sp, #8]
 80058fa:	9303      	str	r3, [sp, #12]
 80058fc:	9b03      	ldr	r3, [sp, #12]
 80058fe:	000e      	movs	r6, r1
 8005900:	9902      	ldr	r1, [sp, #8]
 8005902:	005d      	lsls	r5, r3, #1
 8005904:	9304      	str	r3, [sp, #16]
 8005906:	000b      	movs	r3, r1
 8005908:	086d      	lsrs	r5, r5, #1
 800590a:	0007      	movs	r7, r0
 800590c:	432b      	orrs	r3, r5
 800590e:	d101      	bne.n	8005914 <__ieee754_pow+0x20>
 8005910:	f000 fcad 	bl	800626e <__ieee754_pow+0x97a>
 8005914:	4b7e      	ldr	r3, [pc, #504]	; (8005b10 <__ieee754_pow+0x21c>)
 8005916:	0074      	lsls	r4, r6, #1
 8005918:	9608      	str	r6, [sp, #32]
 800591a:	9000      	str	r0, [sp, #0]
 800591c:	0864      	lsrs	r4, r4, #1
 800591e:	469c      	mov	ip, r3
 8005920:	429c      	cmp	r4, r3
 8005922:	dc0b      	bgt.n	800593c <__ieee754_pow+0x48>
 8005924:	d104      	bne.n	8005930 <__ieee754_pow+0x3c>
 8005926:	2800      	cmp	r0, #0
 8005928:	d108      	bne.n	800593c <__ieee754_pow+0x48>
 800592a:	42a5      	cmp	r5, r4
 800592c:	dc0c      	bgt.n	8005948 <__ieee754_pow+0x54>
 800592e:	e001      	b.n	8005934 <__ieee754_pow+0x40>
 8005930:	429d      	cmp	r5, r3
 8005932:	dc03      	bgt.n	800593c <__ieee754_pow+0x48>
 8005934:	4565      	cmp	r5, ip
 8005936:	d10d      	bne.n	8005954 <__ieee754_pow+0x60>
 8005938:	2900      	cmp	r1, #0
 800593a:	d00b      	beq.n	8005954 <__ieee754_pow+0x60>
 800593c:	4b75      	ldr	r3, [pc, #468]	; (8005b14 <__ieee754_pow+0x220>)
 800593e:	18e4      	adds	r4, r4, r3
 8005940:	4327      	orrs	r7, r4
 8005942:	d101      	bne.n	8005948 <__ieee754_pow+0x54>
 8005944:	f000 fc93 	bl	800626e <__ieee754_pow+0x97a>
 8005948:	4873      	ldr	r0, [pc, #460]	; (8005b18 <__ieee754_pow+0x224>)
 800594a:	f000 fd89 	bl	8006460 <nan>
 800594e:	9000      	str	r0, [sp, #0]
 8005950:	9101      	str	r1, [sp, #4]
 8005952:	e061      	b.n	8005a18 <__ieee754_pow+0x124>
 8005954:	2300      	movs	r3, #0
 8005956:	9306      	str	r3, [sp, #24]
 8005958:	2e00      	cmp	r6, #0
 800595a:	da17      	bge.n	800598c <__ieee754_pow+0x98>
 800595c:	4a6f      	ldr	r2, [pc, #444]	; (8005b1c <__ieee754_pow+0x228>)
 800595e:	4295      	cmp	r5, r2
 8005960:	dc4d      	bgt.n	80059fe <__ieee754_pow+0x10a>
 8005962:	4a6f      	ldr	r2, [pc, #444]	; (8005b20 <__ieee754_pow+0x22c>)
 8005964:	4295      	cmp	r5, r2
 8005966:	dd11      	ble.n	800598c <__ieee754_pow+0x98>
 8005968:	4b6e      	ldr	r3, [pc, #440]	; (8005b24 <__ieee754_pow+0x230>)
 800596a:	152a      	asrs	r2, r5, #20
 800596c:	18d2      	adds	r2, r2, r3
 800596e:	2a14      	cmp	r2, #20
 8005970:	dd25      	ble.n	80059be <__ieee754_pow+0xca>
 8005972:	2034      	movs	r0, #52	; 0x34
 8005974:	1a82      	subs	r2, r0, r2
 8005976:	9802      	ldr	r0, [sp, #8]
 8005978:	40d0      	lsrs	r0, r2
 800597a:	0003      	movs	r3, r0
 800597c:	4093      	lsls	r3, r2
 800597e:	428b      	cmp	r3, r1
 8005980:	d104      	bne.n	800598c <__ieee754_pow+0x98>
 8005982:	2201      	movs	r2, #1
 8005984:	4010      	ands	r0, r2
 8005986:	1892      	adds	r2, r2, r2
 8005988:	1a13      	subs	r3, r2, r0
 800598a:	9306      	str	r3, [sp, #24]
 800598c:	2900      	cmp	r1, #0
 800598e:	d15e      	bne.n	8005a4e <__ieee754_pow+0x15a>
 8005990:	4565      	cmp	r5, ip
 8005992:	d123      	bne.n	80059dc <__ieee754_pow+0xe8>
 8005994:	4b5f      	ldr	r3, [pc, #380]	; (8005b14 <__ieee754_pow+0x220>)
 8005996:	18e3      	adds	r3, r4, r3
 8005998:	431f      	orrs	r7, r3
 800599a:	d101      	bne.n	80059a0 <__ieee754_pow+0xac>
 800599c:	f000 fc67 	bl	800626e <__ieee754_pow+0x97a>
 80059a0:	4b5f      	ldr	r3, [pc, #380]	; (8005b20 <__ieee754_pow+0x22c>)
 80059a2:	429c      	cmp	r4, r3
 80059a4:	dd2d      	ble.n	8005a02 <__ieee754_pow+0x10e>
 80059a6:	9b02      	ldr	r3, [sp, #8]
 80059a8:	9c03      	ldr	r4, [sp, #12]
 80059aa:	9300      	str	r3, [sp, #0]
 80059ac:	9401      	str	r4, [sp, #4]
 80059ae:	9b04      	ldr	r3, [sp, #16]
 80059b0:	2b00      	cmp	r3, #0
 80059b2:	da31      	bge.n	8005a18 <__ieee754_pow+0x124>
 80059b4:	2300      	movs	r3, #0
 80059b6:	2400      	movs	r4, #0
 80059b8:	9300      	str	r3, [sp, #0]
 80059ba:	9401      	str	r4, [sp, #4]
 80059bc:	e02c      	b.n	8005a18 <__ieee754_pow+0x124>
 80059be:	2900      	cmp	r1, #0
 80059c0:	d145      	bne.n	8005a4e <__ieee754_pow+0x15a>
 80059c2:	2314      	movs	r3, #20
 80059c4:	1a9a      	subs	r2, r3, r2
 80059c6:	002b      	movs	r3, r5
 80059c8:	4113      	asrs	r3, r2
 80059ca:	0019      	movs	r1, r3
 80059cc:	4091      	lsls	r1, r2
 80059ce:	42a9      	cmp	r1, r5
 80059d0:	d104      	bne.n	80059dc <__ieee754_pow+0xe8>
 80059d2:	2201      	movs	r2, #1
 80059d4:	4013      	ands	r3, r2
 80059d6:	1892      	adds	r2, r2, r2
 80059d8:	1ad3      	subs	r3, r2, r3
 80059da:	9306      	str	r3, [sp, #24]
 80059dc:	4b52      	ldr	r3, [pc, #328]	; (8005b28 <__ieee754_pow+0x234>)
 80059de:	429d      	cmp	r5, r3
 80059e0:	d11e      	bne.n	8005a20 <__ieee754_pow+0x12c>
 80059e2:	0038      	movs	r0, r7
 80059e4:	0031      	movs	r1, r6
 80059e6:	9b04      	ldr	r3, [sp, #16]
 80059e8:	9000      	str	r0, [sp, #0]
 80059ea:	9101      	str	r1, [sp, #4]
 80059ec:	2b00      	cmp	r3, #0
 80059ee:	da13      	bge.n	8005a18 <__ieee754_pow+0x124>
 80059f0:	003a      	movs	r2, r7
 80059f2:	0033      	movs	r3, r6
 80059f4:	2000      	movs	r0, #0
 80059f6:	494c      	ldr	r1, [pc, #304]	; (8005b28 <__ieee754_pow+0x234>)
 80059f8:	f7fb f9b2 	bl	8000d60 <__aeabi_ddiv>
 80059fc:	e7a7      	b.n	800594e <__ieee754_pow+0x5a>
 80059fe:	2302      	movs	r3, #2
 8005a00:	e7c3      	b.n	800598a <__ieee754_pow+0x96>
 8005a02:	9b04      	ldr	r3, [sp, #16]
 8005a04:	2b00      	cmp	r3, #0
 8005a06:	dad5      	bge.n	80059b4 <__ieee754_pow+0xc0>
 8005a08:	2280      	movs	r2, #128	; 0x80
 8005a0a:	0612      	lsls	r2, r2, #24
 8005a0c:	4694      	mov	ip, r2
 8005a0e:	9b02      	ldr	r3, [sp, #8]
 8005a10:	9300      	str	r3, [sp, #0]
 8005a12:	9b03      	ldr	r3, [sp, #12]
 8005a14:	4463      	add	r3, ip
 8005a16:	9301      	str	r3, [sp, #4]
 8005a18:	9800      	ldr	r0, [sp, #0]
 8005a1a:	9901      	ldr	r1, [sp, #4]
 8005a1c:	b015      	add	sp, #84	; 0x54
 8005a1e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8005a20:	2380      	movs	r3, #128	; 0x80
 8005a22:	9a04      	ldr	r2, [sp, #16]
 8005a24:	05db      	lsls	r3, r3, #23
 8005a26:	429a      	cmp	r2, r3
 8005a28:	d106      	bne.n	8005a38 <__ieee754_pow+0x144>
 8005a2a:	003a      	movs	r2, r7
 8005a2c:	0033      	movs	r3, r6
 8005a2e:	0038      	movs	r0, r7
 8005a30:	0031      	movs	r1, r6
 8005a32:	f7fb fd9f 	bl	8001574 <__aeabi_dmul>
 8005a36:	e78a      	b.n	800594e <__ieee754_pow+0x5a>
 8005a38:	4b3c      	ldr	r3, [pc, #240]	; (8005b2c <__ieee754_pow+0x238>)
 8005a3a:	9a04      	ldr	r2, [sp, #16]
 8005a3c:	429a      	cmp	r2, r3
 8005a3e:	d106      	bne.n	8005a4e <__ieee754_pow+0x15a>
 8005a40:	2e00      	cmp	r6, #0
 8005a42:	db04      	blt.n	8005a4e <__ieee754_pow+0x15a>
 8005a44:	0038      	movs	r0, r7
 8005a46:	0031      	movs	r1, r6
 8005a48:	f000 fc4a 	bl	80062e0 <__ieee754_sqrt>
 8005a4c:	e77f      	b.n	800594e <__ieee754_pow+0x5a>
 8005a4e:	0038      	movs	r0, r7
 8005a50:	0031      	movs	r1, r6
 8005a52:	f000 fcf7 	bl	8006444 <fabs>
 8005a56:	9000      	str	r0, [sp, #0]
 8005a58:	9101      	str	r1, [sp, #4]
 8005a5a:	2f00      	cmp	r7, #0
 8005a5c:	d12e      	bne.n	8005abc <__ieee754_pow+0x1c8>
 8005a5e:	2c00      	cmp	r4, #0
 8005a60:	d004      	beq.n	8005a6c <__ieee754_pow+0x178>
 8005a62:	4a31      	ldr	r2, [pc, #196]	; (8005b28 <__ieee754_pow+0x234>)
 8005a64:	00b3      	lsls	r3, r6, #2
 8005a66:	089b      	lsrs	r3, r3, #2
 8005a68:	4293      	cmp	r3, r2
 8005a6a:	d127      	bne.n	8005abc <__ieee754_pow+0x1c8>
 8005a6c:	9b04      	ldr	r3, [sp, #16]
 8005a6e:	2b00      	cmp	r3, #0
 8005a70:	da07      	bge.n	8005a82 <__ieee754_pow+0x18e>
 8005a72:	9a00      	ldr	r2, [sp, #0]
 8005a74:	9b01      	ldr	r3, [sp, #4]
 8005a76:	2000      	movs	r0, #0
 8005a78:	492b      	ldr	r1, [pc, #172]	; (8005b28 <__ieee754_pow+0x234>)
 8005a7a:	f7fb f971 	bl	8000d60 <__aeabi_ddiv>
 8005a7e:	9000      	str	r0, [sp, #0]
 8005a80:	9101      	str	r1, [sp, #4]
 8005a82:	9b08      	ldr	r3, [sp, #32]
 8005a84:	2b00      	cmp	r3, #0
 8005a86:	dac7      	bge.n	8005a18 <__ieee754_pow+0x124>
 8005a88:	4b22      	ldr	r3, [pc, #136]	; (8005b14 <__ieee754_pow+0x220>)
 8005a8a:	18e4      	adds	r4, r4, r3
 8005a8c:	9b06      	ldr	r3, [sp, #24]
 8005a8e:	431c      	orrs	r4, r3
 8005a90:	d108      	bne.n	8005aa4 <__ieee754_pow+0x1b0>
 8005a92:	9a00      	ldr	r2, [sp, #0]
 8005a94:	9b01      	ldr	r3, [sp, #4]
 8005a96:	0010      	movs	r0, r2
 8005a98:	0019      	movs	r1, r3
 8005a9a:	f7fb ffdd 	bl	8001a58 <__aeabi_dsub>
 8005a9e:	0002      	movs	r2, r0
 8005aa0:	000b      	movs	r3, r1
 8005aa2:	e7a9      	b.n	80059f8 <__ieee754_pow+0x104>
 8005aa4:	9b06      	ldr	r3, [sp, #24]
 8005aa6:	2b01      	cmp	r3, #1
 8005aa8:	d1b6      	bne.n	8005a18 <__ieee754_pow+0x124>
 8005aaa:	9800      	ldr	r0, [sp, #0]
 8005aac:	2180      	movs	r1, #128	; 0x80
 8005aae:	0002      	movs	r2, r0
 8005ab0:	9801      	ldr	r0, [sp, #4]
 8005ab2:	0609      	lsls	r1, r1, #24
 8005ab4:	1843      	adds	r3, r0, r1
 8005ab6:	9200      	str	r2, [sp, #0]
 8005ab8:	9301      	str	r3, [sp, #4]
 8005aba:	e7ad      	b.n	8005a18 <__ieee754_pow+0x124>
 8005abc:	0ff3      	lsrs	r3, r6, #31
 8005abe:	3b01      	subs	r3, #1
 8005ac0:	9310      	str	r3, [sp, #64]	; 0x40
 8005ac2:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005ac4:	9b06      	ldr	r3, [sp, #24]
 8005ac6:	4313      	orrs	r3, r2
 8005ac8:	d104      	bne.n	8005ad4 <__ieee754_pow+0x1e0>
 8005aca:	003a      	movs	r2, r7
 8005acc:	0033      	movs	r3, r6
 8005ace:	0038      	movs	r0, r7
 8005ad0:	0031      	movs	r1, r6
 8005ad2:	e7e2      	b.n	8005a9a <__ieee754_pow+0x1a6>
 8005ad4:	4b16      	ldr	r3, [pc, #88]	; (8005b30 <__ieee754_pow+0x23c>)
 8005ad6:	429d      	cmp	r5, r3
 8005ad8:	dc00      	bgt.n	8005adc <__ieee754_pow+0x1e8>
 8005ada:	e0f7      	b.n	8005ccc <__ieee754_pow+0x3d8>
 8005adc:	4b15      	ldr	r3, [pc, #84]	; (8005b34 <__ieee754_pow+0x240>)
 8005ade:	429d      	cmp	r5, r3
 8005ae0:	dd0b      	ble.n	8005afa <__ieee754_pow+0x206>
 8005ae2:	4b0f      	ldr	r3, [pc, #60]	; (8005b20 <__ieee754_pow+0x22c>)
 8005ae4:	429c      	cmp	r4, r3
 8005ae6:	dc0e      	bgt.n	8005b06 <__ieee754_pow+0x212>
 8005ae8:	9b04      	ldr	r3, [sp, #16]
 8005aea:	2b00      	cmp	r3, #0
 8005aec:	db00      	blt.n	8005af0 <__ieee754_pow+0x1fc>
 8005aee:	e761      	b.n	80059b4 <__ieee754_pow+0xc0>
 8005af0:	4a11      	ldr	r2, [pc, #68]	; (8005b38 <__ieee754_pow+0x244>)
 8005af2:	4b12      	ldr	r3, [pc, #72]	; (8005b3c <__ieee754_pow+0x248>)
 8005af4:	0010      	movs	r0, r2
 8005af6:	0019      	movs	r1, r3
 8005af8:	e79b      	b.n	8005a32 <__ieee754_pow+0x13e>
 8005afa:	4b11      	ldr	r3, [pc, #68]	; (8005b40 <__ieee754_pow+0x24c>)
 8005afc:	429c      	cmp	r4, r3
 8005afe:	ddf3      	ble.n	8005ae8 <__ieee754_pow+0x1f4>
 8005b00:	4b09      	ldr	r3, [pc, #36]	; (8005b28 <__ieee754_pow+0x234>)
 8005b02:	429c      	cmp	r4, r3
 8005b04:	dd1e      	ble.n	8005b44 <__ieee754_pow+0x250>
 8005b06:	9b04      	ldr	r3, [sp, #16]
 8005b08:	2b00      	cmp	r3, #0
 8005b0a:	dcf1      	bgt.n	8005af0 <__ieee754_pow+0x1fc>
 8005b0c:	e752      	b.n	80059b4 <__ieee754_pow+0xc0>
 8005b0e:	46c0      	nop			; (mov r8, r8)
 8005b10:	7ff00000 	.word	0x7ff00000
 8005b14:	c0100000 	.word	0xc0100000
 8005b18:	0800a559 	.word	0x0800a559
 8005b1c:	433fffff 	.word	0x433fffff
 8005b20:	3fefffff 	.word	0x3fefffff
 8005b24:	fffffc01 	.word	0xfffffc01
 8005b28:	3ff00000 	.word	0x3ff00000
 8005b2c:	3fe00000 	.word	0x3fe00000
 8005b30:	41e00000 	.word	0x41e00000
 8005b34:	43f00000 	.word	0x43f00000
 8005b38:	8800759c 	.word	0x8800759c
 8005b3c:	7e37e43c 	.word	0x7e37e43c
 8005b40:	3feffffe 	.word	0x3feffffe
 8005b44:	2200      	movs	r2, #0
 8005b46:	9800      	ldr	r0, [sp, #0]
 8005b48:	9901      	ldr	r1, [sp, #4]
 8005b4a:	4b52      	ldr	r3, [pc, #328]	; (8005c94 <__ieee754_pow+0x3a0>)
 8005b4c:	f7fb ff84 	bl	8001a58 <__aeabi_dsub>
 8005b50:	22c0      	movs	r2, #192	; 0xc0
 8005b52:	4b51      	ldr	r3, [pc, #324]	; (8005c98 <__ieee754_pow+0x3a4>)
 8005b54:	05d2      	lsls	r2, r2, #23
 8005b56:	0006      	movs	r6, r0
 8005b58:	000f      	movs	r7, r1
 8005b5a:	f7fb fd0b 	bl	8001574 <__aeabi_dmul>
 8005b5e:	4a4f      	ldr	r2, [pc, #316]	; (8005c9c <__ieee754_pow+0x3a8>)
 8005b60:	9000      	str	r0, [sp, #0]
 8005b62:	9101      	str	r1, [sp, #4]
 8005b64:	4b4e      	ldr	r3, [pc, #312]	; (8005ca0 <__ieee754_pow+0x3ac>)
 8005b66:	0030      	movs	r0, r6
 8005b68:	0039      	movs	r1, r7
 8005b6a:	f7fb fd03 	bl	8001574 <__aeabi_dmul>
 8005b6e:	2200      	movs	r2, #0
 8005b70:	9004      	str	r0, [sp, #16]
 8005b72:	9105      	str	r1, [sp, #20]
 8005b74:	4b4b      	ldr	r3, [pc, #300]	; (8005ca4 <__ieee754_pow+0x3b0>)
 8005b76:	0030      	movs	r0, r6
 8005b78:	0039      	movs	r1, r7
 8005b7a:	f7fb fcfb 	bl	8001574 <__aeabi_dmul>
 8005b7e:	0002      	movs	r2, r0
 8005b80:	000b      	movs	r3, r1
 8005b82:	4849      	ldr	r0, [pc, #292]	; (8005ca8 <__ieee754_pow+0x3b4>)
 8005b84:	4949      	ldr	r1, [pc, #292]	; (8005cac <__ieee754_pow+0x3b8>)
 8005b86:	f7fb ff67 	bl	8001a58 <__aeabi_dsub>
 8005b8a:	0032      	movs	r2, r6
 8005b8c:	003b      	movs	r3, r7
 8005b8e:	f7fb fcf1 	bl	8001574 <__aeabi_dmul>
 8005b92:	0002      	movs	r2, r0
 8005b94:	000b      	movs	r3, r1
 8005b96:	2000      	movs	r0, #0
 8005b98:	4945      	ldr	r1, [pc, #276]	; (8005cb0 <__ieee754_pow+0x3bc>)
 8005b9a:	f7fb ff5d 	bl	8001a58 <__aeabi_dsub>
 8005b9e:	0032      	movs	r2, r6
 8005ba0:	0004      	movs	r4, r0
 8005ba2:	000d      	movs	r5, r1
 8005ba4:	003b      	movs	r3, r7
 8005ba6:	0030      	movs	r0, r6
 8005ba8:	0039      	movs	r1, r7
 8005baa:	f7fb fce3 	bl	8001574 <__aeabi_dmul>
 8005bae:	0002      	movs	r2, r0
 8005bb0:	000b      	movs	r3, r1
 8005bb2:	0020      	movs	r0, r4
 8005bb4:	0029      	movs	r1, r5
 8005bb6:	f7fb fcdd 	bl	8001574 <__aeabi_dmul>
 8005bba:	4a3e      	ldr	r2, [pc, #248]	; (8005cb4 <__ieee754_pow+0x3c0>)
 8005bbc:	4b36      	ldr	r3, [pc, #216]	; (8005c98 <__ieee754_pow+0x3a4>)
 8005bbe:	f7fb fcd9 	bl	8001574 <__aeabi_dmul>
 8005bc2:	0002      	movs	r2, r0
 8005bc4:	000b      	movs	r3, r1
 8005bc6:	9804      	ldr	r0, [sp, #16]
 8005bc8:	9905      	ldr	r1, [sp, #20]
 8005bca:	f7fb ff45 	bl	8001a58 <__aeabi_dsub>
 8005bce:	0002      	movs	r2, r0
 8005bd0:	000b      	movs	r3, r1
 8005bd2:	0004      	movs	r4, r0
 8005bd4:	000d      	movs	r5, r1
 8005bd6:	9800      	ldr	r0, [sp, #0]
 8005bd8:	9901      	ldr	r1, [sp, #4]
 8005bda:	f7fa fda5 	bl	8000728 <__aeabi_dadd>
 8005bde:	9a00      	ldr	r2, [sp, #0]
 8005be0:	9b01      	ldr	r3, [sp, #4]
 8005be2:	2000      	movs	r0, #0
 8005be4:	9004      	str	r0, [sp, #16]
 8005be6:	9105      	str	r1, [sp, #20]
 8005be8:	f7fb ff36 	bl	8001a58 <__aeabi_dsub>
 8005bec:	0002      	movs	r2, r0
 8005bee:	000b      	movs	r3, r1
 8005bf0:	0020      	movs	r0, r4
 8005bf2:	0029      	movs	r1, r5
 8005bf4:	f7fb ff30 	bl	8001a58 <__aeabi_dsub>
 8005bf8:	9b06      	ldr	r3, [sp, #24]
 8005bfa:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8005bfc:	3b01      	subs	r3, #1
 8005bfe:	0006      	movs	r6, r0
 8005c00:	000f      	movs	r7, r1
 8005c02:	4313      	orrs	r3, r2
 8005c04:	d000      	beq.n	8005c08 <__ieee754_pow+0x314>
 8005c06:	e1de      	b.n	8005fc6 <__ieee754_pow+0x6d2>
 8005c08:	2300      	movs	r3, #0
 8005c0a:	4c2b      	ldr	r4, [pc, #172]	; (8005cb8 <__ieee754_pow+0x3c4>)
 8005c0c:	9300      	str	r3, [sp, #0]
 8005c0e:	9401      	str	r4, [sp, #4]
 8005c10:	9c02      	ldr	r4, [sp, #8]
 8005c12:	9d03      	ldr	r5, [sp, #12]
 8005c14:	9802      	ldr	r0, [sp, #8]
 8005c16:	9903      	ldr	r1, [sp, #12]
 8005c18:	2400      	movs	r4, #0
 8005c1a:	002b      	movs	r3, r5
 8005c1c:	0022      	movs	r2, r4
 8005c1e:	f7fb ff1b 	bl	8001a58 <__aeabi_dsub>
 8005c22:	9a04      	ldr	r2, [sp, #16]
 8005c24:	9b05      	ldr	r3, [sp, #20]
 8005c26:	f7fb fca5 	bl	8001574 <__aeabi_dmul>
 8005c2a:	9a02      	ldr	r2, [sp, #8]
 8005c2c:	9b03      	ldr	r3, [sp, #12]
 8005c2e:	9006      	str	r0, [sp, #24]
 8005c30:	9107      	str	r1, [sp, #28]
 8005c32:	0030      	movs	r0, r6
 8005c34:	0039      	movs	r1, r7
 8005c36:	f7fb fc9d 	bl	8001574 <__aeabi_dmul>
 8005c3a:	0002      	movs	r2, r0
 8005c3c:	000b      	movs	r3, r1
 8005c3e:	9806      	ldr	r0, [sp, #24]
 8005c40:	9907      	ldr	r1, [sp, #28]
 8005c42:	f7fa fd71 	bl	8000728 <__aeabi_dadd>
 8005c46:	0022      	movs	r2, r4
 8005c48:	002b      	movs	r3, r5
 8005c4a:	9006      	str	r0, [sp, #24]
 8005c4c:	9107      	str	r1, [sp, #28]
 8005c4e:	9804      	ldr	r0, [sp, #16]
 8005c50:	9905      	ldr	r1, [sp, #20]
 8005c52:	f7fb fc8f 	bl	8001574 <__aeabi_dmul>
 8005c56:	0006      	movs	r6, r0
 8005c58:	000f      	movs	r7, r1
 8005c5a:	000b      	movs	r3, r1
 8005c5c:	0002      	movs	r2, r0
 8005c5e:	9806      	ldr	r0, [sp, #24]
 8005c60:	9907      	ldr	r1, [sp, #28]
 8005c62:	9604      	str	r6, [sp, #16]
 8005c64:	9705      	str	r7, [sp, #20]
 8005c66:	f7fa fd5f 	bl	8000728 <__aeabi_dadd>
 8005c6a:	4b14      	ldr	r3, [pc, #80]	; (8005cbc <__ieee754_pow+0x3c8>)
 8005c6c:	0005      	movs	r5, r0
 8005c6e:	000c      	movs	r4, r1
 8005c70:	9108      	str	r1, [sp, #32]
 8005c72:	4299      	cmp	r1, r3
 8005c74:	dc00      	bgt.n	8005c78 <__ieee754_pow+0x384>
 8005c76:	e2d8      	b.n	800622a <__ieee754_pow+0x936>
 8005c78:	4b11      	ldr	r3, [pc, #68]	; (8005cc0 <__ieee754_pow+0x3cc>)
 8005c7a:	18cb      	adds	r3, r1, r3
 8005c7c:	4303      	orrs	r3, r0
 8005c7e:	d100      	bne.n	8005c82 <__ieee754_pow+0x38e>
 8005c80:	e1da      	b.n	8006038 <__ieee754_pow+0x744>
 8005c82:	9800      	ldr	r0, [sp, #0]
 8005c84:	9901      	ldr	r1, [sp, #4]
 8005c86:	4a0f      	ldr	r2, [pc, #60]	; (8005cc4 <__ieee754_pow+0x3d0>)
 8005c88:	4b0f      	ldr	r3, [pc, #60]	; (8005cc8 <__ieee754_pow+0x3d4>)
 8005c8a:	f7fb fc73 	bl	8001574 <__aeabi_dmul>
 8005c8e:	4a0d      	ldr	r2, [pc, #52]	; (8005cc4 <__ieee754_pow+0x3d0>)
 8005c90:	4b0d      	ldr	r3, [pc, #52]	; (8005cc8 <__ieee754_pow+0x3d4>)
 8005c92:	e6ce      	b.n	8005a32 <__ieee754_pow+0x13e>
 8005c94:	3ff00000 	.word	0x3ff00000
 8005c98:	3ff71547 	.word	0x3ff71547
 8005c9c:	f85ddf44 	.word	0xf85ddf44
 8005ca0:	3e54ae0b 	.word	0x3e54ae0b
 8005ca4:	3fd00000 	.word	0x3fd00000
 8005ca8:	55555555 	.word	0x55555555
 8005cac:	3fd55555 	.word	0x3fd55555
 8005cb0:	3fe00000 	.word	0x3fe00000
 8005cb4:	652b82fe 	.word	0x652b82fe
 8005cb8:	bff00000 	.word	0xbff00000
 8005cbc:	408fffff 	.word	0x408fffff
 8005cc0:	bf700000 	.word	0xbf700000
 8005cc4:	8800759c 	.word	0x8800759c
 8005cc8:	7e37e43c 	.word	0x7e37e43c
 8005ccc:	4bbf      	ldr	r3, [pc, #764]	; (8005fcc <__ieee754_pow+0x6d8>)
 8005cce:	2200      	movs	r2, #0
 8005cd0:	429c      	cmp	r4, r3
 8005cd2:	dc0a      	bgt.n	8005cea <__ieee754_pow+0x3f6>
 8005cd4:	9800      	ldr	r0, [sp, #0]
 8005cd6:	9901      	ldr	r1, [sp, #4]
 8005cd8:	2200      	movs	r2, #0
 8005cda:	4bbd      	ldr	r3, [pc, #756]	; (8005fd0 <__ieee754_pow+0x6dc>)
 8005cdc:	f7fb fc4a 	bl	8001574 <__aeabi_dmul>
 8005ce0:	2235      	movs	r2, #53	; 0x35
 8005ce2:	9000      	str	r0, [sp, #0]
 8005ce4:	9101      	str	r1, [sp, #4]
 8005ce6:	9c01      	ldr	r4, [sp, #4]
 8005ce8:	4252      	negs	r2, r2
 8005cea:	49ba      	ldr	r1, [pc, #744]	; (8005fd4 <__ieee754_pow+0x6e0>)
 8005cec:	1523      	asrs	r3, r4, #20
 8005cee:	185b      	adds	r3, r3, r1
 8005cf0:	189b      	adds	r3, r3, r2
 8005cf2:	0324      	lsls	r4, r4, #12
 8005cf4:	4db8      	ldr	r5, [pc, #736]	; (8005fd8 <__ieee754_pow+0x6e4>)
 8005cf6:	4ab9      	ldr	r2, [pc, #740]	; (8005fdc <__ieee754_pow+0x6e8>)
 8005cf8:	930d      	str	r3, [sp, #52]	; 0x34
 8005cfa:	0b23      	lsrs	r3, r4, #12
 8005cfc:	431d      	orrs	r5, r3
 8005cfe:	2400      	movs	r4, #0
 8005d00:	4293      	cmp	r3, r2
 8005d02:	dd09      	ble.n	8005d18 <__ieee754_pow+0x424>
 8005d04:	4ab6      	ldr	r2, [pc, #728]	; (8005fe0 <__ieee754_pow+0x6ec>)
 8005d06:	3401      	adds	r4, #1
 8005d08:	4293      	cmp	r3, r2
 8005d0a:	dd05      	ble.n	8005d18 <__ieee754_pow+0x424>
 8005d0c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8005d0e:	191b      	adds	r3, r3, r4
 8005d10:	2400      	movs	r4, #0
 8005d12:	930d      	str	r3, [sp, #52]	; 0x34
 8005d14:	4bb3      	ldr	r3, [pc, #716]	; (8005fe4 <__ieee754_pow+0x6f0>)
 8005d16:	18ed      	adds	r5, r5, r3
 8005d18:	9800      	ldr	r0, [sp, #0]
 8005d1a:	9901      	ldr	r1, [sp, #4]
 8005d1c:	0029      	movs	r1, r5
 8005d1e:	00e3      	lsls	r3, r4, #3
 8005d20:	9311      	str	r3, [sp, #68]	; 0x44
 8005d22:	4bb1      	ldr	r3, [pc, #708]	; (8005fe8 <__ieee754_pow+0x6f4>)
 8005d24:	00e2      	lsls	r2, r4, #3
 8005d26:	189b      	adds	r3, r3, r2
 8005d28:	681a      	ldr	r2, [r3, #0]
 8005d2a:	685b      	ldr	r3, [r3, #4]
 8005d2c:	900e      	str	r0, [sp, #56]	; 0x38
 8005d2e:	910f      	str	r1, [sp, #60]	; 0x3c
 8005d30:	920a      	str	r2, [sp, #40]	; 0x28
 8005d32:	930b      	str	r3, [sp, #44]	; 0x2c
 8005d34:	f7fb fe90 	bl	8001a58 <__aeabi_dsub>
 8005d38:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005d3a:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005d3c:	0006      	movs	r6, r0
 8005d3e:	000f      	movs	r7, r1
 8005d40:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005d42:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005d44:	f7fa fcf0 	bl	8000728 <__aeabi_dadd>
 8005d48:	0002      	movs	r2, r0
 8005d4a:	000b      	movs	r3, r1
 8005d4c:	2000      	movs	r0, #0
 8005d4e:	49a2      	ldr	r1, [pc, #648]	; (8005fd8 <__ieee754_pow+0x6e4>)
 8005d50:	f7fb f806 	bl	8000d60 <__aeabi_ddiv>
 8005d54:	9012      	str	r0, [sp, #72]	; 0x48
 8005d56:	9113      	str	r1, [sp, #76]	; 0x4c
 8005d58:	0002      	movs	r2, r0
 8005d5a:	000b      	movs	r3, r1
 8005d5c:	0030      	movs	r0, r6
 8005d5e:	0039      	movs	r1, r7
 8005d60:	f7fb fc08 	bl	8001574 <__aeabi_dmul>
 8005d64:	9008      	str	r0, [sp, #32]
 8005d66:	9109      	str	r1, [sp, #36]	; 0x24
 8005d68:	9a08      	ldr	r2, [sp, #32]
 8005d6a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005d6c:	2180      	movs	r1, #128	; 0x80
 8005d6e:	9204      	str	r2, [sp, #16]
 8005d70:	9305      	str	r3, [sp, #20]
 8005d72:	2300      	movs	r3, #0
 8005d74:	0589      	lsls	r1, r1, #22
 8005d76:	106d      	asrs	r5, r5, #1
 8005d78:	430d      	orrs	r5, r1
 8005d7a:	2180      	movs	r1, #128	; 0x80
 8005d7c:	9304      	str	r3, [sp, #16]
 8005d7e:	9a04      	ldr	r2, [sp, #16]
 8005d80:	9b05      	ldr	r3, [sp, #20]
 8005d82:	9200      	str	r2, [sp, #0]
 8005d84:	9301      	str	r3, [sp, #4]
 8005d86:	2200      	movs	r2, #0
 8005d88:	0309      	lsls	r1, r1, #12
 8005d8a:	186d      	adds	r5, r5, r1
 8005d8c:	04a4      	lsls	r4, r4, #18
 8005d8e:	192b      	adds	r3, r5, r4
 8005d90:	9800      	ldr	r0, [sp, #0]
 8005d92:	9901      	ldr	r1, [sp, #4]
 8005d94:	0014      	movs	r4, r2
 8005d96:	001d      	movs	r5, r3
 8005d98:	f7fb fbec 	bl	8001574 <__aeabi_dmul>
 8005d9c:	0002      	movs	r2, r0
 8005d9e:	000b      	movs	r3, r1
 8005da0:	0030      	movs	r0, r6
 8005da2:	0039      	movs	r1, r7
 8005da4:	f7fb fe58 	bl	8001a58 <__aeabi_dsub>
 8005da8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005daa:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005dac:	0006      	movs	r6, r0
 8005dae:	000f      	movs	r7, r1
 8005db0:	0020      	movs	r0, r4
 8005db2:	0029      	movs	r1, r5
 8005db4:	f7fb fe50 	bl	8001a58 <__aeabi_dsub>
 8005db8:	0002      	movs	r2, r0
 8005dba:	000b      	movs	r3, r1
 8005dbc:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005dbe:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005dc0:	f7fb fe4a 	bl	8001a58 <__aeabi_dsub>
 8005dc4:	9a00      	ldr	r2, [sp, #0]
 8005dc6:	9b01      	ldr	r3, [sp, #4]
 8005dc8:	f7fb fbd4 	bl	8001574 <__aeabi_dmul>
 8005dcc:	0002      	movs	r2, r0
 8005dce:	000b      	movs	r3, r1
 8005dd0:	0030      	movs	r0, r6
 8005dd2:	0039      	movs	r1, r7
 8005dd4:	f7fb fe40 	bl	8001a58 <__aeabi_dsub>
 8005dd8:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8005dda:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8005ddc:	f7fb fbca 	bl	8001574 <__aeabi_dmul>
 8005de0:	9a08      	ldr	r2, [sp, #32]
 8005de2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005de4:	900a      	str	r0, [sp, #40]	; 0x28
 8005de6:	910b      	str	r1, [sp, #44]	; 0x2c
 8005de8:	0010      	movs	r0, r2
 8005dea:	0019      	movs	r1, r3
 8005dec:	f7fb fbc2 	bl	8001574 <__aeabi_dmul>
 8005df0:	0006      	movs	r6, r0
 8005df2:	000f      	movs	r7, r1
 8005df4:	4a7d      	ldr	r2, [pc, #500]	; (8005fec <__ieee754_pow+0x6f8>)
 8005df6:	4b7e      	ldr	r3, [pc, #504]	; (8005ff0 <__ieee754_pow+0x6fc>)
 8005df8:	f7fb fbbc 	bl	8001574 <__aeabi_dmul>
 8005dfc:	4a7d      	ldr	r2, [pc, #500]	; (8005ff4 <__ieee754_pow+0x700>)
 8005dfe:	4b7e      	ldr	r3, [pc, #504]	; (8005ff8 <__ieee754_pow+0x704>)
 8005e00:	f7fa fc92 	bl	8000728 <__aeabi_dadd>
 8005e04:	0032      	movs	r2, r6
 8005e06:	003b      	movs	r3, r7
 8005e08:	f7fb fbb4 	bl	8001574 <__aeabi_dmul>
 8005e0c:	4a7b      	ldr	r2, [pc, #492]	; (8005ffc <__ieee754_pow+0x708>)
 8005e0e:	4b7c      	ldr	r3, [pc, #496]	; (8006000 <__ieee754_pow+0x70c>)
 8005e10:	f7fa fc8a 	bl	8000728 <__aeabi_dadd>
 8005e14:	0032      	movs	r2, r6
 8005e16:	003b      	movs	r3, r7
 8005e18:	f7fb fbac 	bl	8001574 <__aeabi_dmul>
 8005e1c:	4a79      	ldr	r2, [pc, #484]	; (8006004 <__ieee754_pow+0x710>)
 8005e1e:	4b7a      	ldr	r3, [pc, #488]	; (8006008 <__ieee754_pow+0x714>)
 8005e20:	f7fa fc82 	bl	8000728 <__aeabi_dadd>
 8005e24:	0032      	movs	r2, r6
 8005e26:	003b      	movs	r3, r7
 8005e28:	f7fb fba4 	bl	8001574 <__aeabi_dmul>
 8005e2c:	4a77      	ldr	r2, [pc, #476]	; (800600c <__ieee754_pow+0x718>)
 8005e2e:	4b78      	ldr	r3, [pc, #480]	; (8006010 <__ieee754_pow+0x71c>)
 8005e30:	f7fa fc7a 	bl	8000728 <__aeabi_dadd>
 8005e34:	0032      	movs	r2, r6
 8005e36:	003b      	movs	r3, r7
 8005e38:	f7fb fb9c 	bl	8001574 <__aeabi_dmul>
 8005e3c:	4a75      	ldr	r2, [pc, #468]	; (8006014 <__ieee754_pow+0x720>)
 8005e3e:	4b76      	ldr	r3, [pc, #472]	; (8006018 <__ieee754_pow+0x724>)
 8005e40:	f7fa fc72 	bl	8000728 <__aeabi_dadd>
 8005e44:	0032      	movs	r2, r6
 8005e46:	0004      	movs	r4, r0
 8005e48:	000d      	movs	r5, r1
 8005e4a:	003b      	movs	r3, r7
 8005e4c:	0030      	movs	r0, r6
 8005e4e:	0039      	movs	r1, r7
 8005e50:	f7fb fb90 	bl	8001574 <__aeabi_dmul>
 8005e54:	0002      	movs	r2, r0
 8005e56:	000b      	movs	r3, r1
 8005e58:	0020      	movs	r0, r4
 8005e5a:	0029      	movs	r1, r5
 8005e5c:	f7fb fb8a 	bl	8001574 <__aeabi_dmul>
 8005e60:	9a00      	ldr	r2, [sp, #0]
 8005e62:	9b01      	ldr	r3, [sp, #4]
 8005e64:	0004      	movs	r4, r0
 8005e66:	000d      	movs	r5, r1
 8005e68:	9808      	ldr	r0, [sp, #32]
 8005e6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005e6c:	f7fa fc5c 	bl	8000728 <__aeabi_dadd>
 8005e70:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8005e72:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8005e74:	f7fb fb7e 	bl	8001574 <__aeabi_dmul>
 8005e78:	0022      	movs	r2, r4
 8005e7a:	002b      	movs	r3, r5
 8005e7c:	f7fa fc54 	bl	8000728 <__aeabi_dadd>
 8005e80:	9a00      	ldr	r2, [sp, #0]
 8005e82:	9b01      	ldr	r3, [sp, #4]
 8005e84:	900e      	str	r0, [sp, #56]	; 0x38
 8005e86:	910f      	str	r1, [sp, #60]	; 0x3c
 8005e88:	0010      	movs	r0, r2
 8005e8a:	0019      	movs	r1, r3
 8005e8c:	f7fb fb72 	bl	8001574 <__aeabi_dmul>
 8005e90:	2200      	movs	r2, #0
 8005e92:	4b62      	ldr	r3, [pc, #392]	; (800601c <__ieee754_pow+0x728>)
 8005e94:	0004      	movs	r4, r0
 8005e96:	000d      	movs	r5, r1
 8005e98:	f7fa fc46 	bl	8000728 <__aeabi_dadd>
 8005e9c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8005e9e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8005ea0:	f7fa fc42 	bl	8000728 <__aeabi_dadd>
 8005ea4:	9e04      	ldr	r6, [sp, #16]
 8005ea6:	000f      	movs	r7, r1
 8005ea8:	0032      	movs	r2, r6
 8005eaa:	000b      	movs	r3, r1
 8005eac:	9800      	ldr	r0, [sp, #0]
 8005eae:	9901      	ldr	r1, [sp, #4]
 8005eb0:	f7fb fb60 	bl	8001574 <__aeabi_dmul>
 8005eb4:	2200      	movs	r2, #0
 8005eb6:	9000      	str	r0, [sp, #0]
 8005eb8:	9101      	str	r1, [sp, #4]
 8005eba:	4b58      	ldr	r3, [pc, #352]	; (800601c <__ieee754_pow+0x728>)
 8005ebc:	0030      	movs	r0, r6
 8005ebe:	0039      	movs	r1, r7
 8005ec0:	f7fb fdca 	bl	8001a58 <__aeabi_dsub>
 8005ec4:	0022      	movs	r2, r4
 8005ec6:	002b      	movs	r3, r5
 8005ec8:	f7fb fdc6 	bl	8001a58 <__aeabi_dsub>
 8005ecc:	0002      	movs	r2, r0
 8005ece:	000b      	movs	r3, r1
 8005ed0:	980e      	ldr	r0, [sp, #56]	; 0x38
 8005ed2:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8005ed4:	f7fb fdc0 	bl	8001a58 <__aeabi_dsub>
 8005ed8:	9a08      	ldr	r2, [sp, #32]
 8005eda:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005edc:	f7fb fb4a 	bl	8001574 <__aeabi_dmul>
 8005ee0:	0032      	movs	r2, r6
 8005ee2:	0004      	movs	r4, r0
 8005ee4:	000d      	movs	r5, r1
 8005ee6:	980a      	ldr	r0, [sp, #40]	; 0x28
 8005ee8:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8005eea:	003b      	movs	r3, r7
 8005eec:	f7fb fb42 	bl	8001574 <__aeabi_dmul>
 8005ef0:	0002      	movs	r2, r0
 8005ef2:	000b      	movs	r3, r1
 8005ef4:	0020      	movs	r0, r4
 8005ef6:	0029      	movs	r1, r5
 8005ef8:	f7fa fc16 	bl	8000728 <__aeabi_dadd>
 8005efc:	0004      	movs	r4, r0
 8005efe:	000d      	movs	r5, r1
 8005f00:	0002      	movs	r2, r0
 8005f02:	000b      	movs	r3, r1
 8005f04:	9800      	ldr	r0, [sp, #0]
 8005f06:	9901      	ldr	r1, [sp, #4]
 8005f08:	f7fa fc0e 	bl	8000728 <__aeabi_dadd>
 8005f0c:	22e0      	movs	r2, #224	; 0xe0
 8005f0e:	9e04      	ldr	r6, [sp, #16]
 8005f10:	0612      	lsls	r2, r2, #24
 8005f12:	4b43      	ldr	r3, [pc, #268]	; (8006020 <__ieee754_pow+0x72c>)
 8005f14:	0030      	movs	r0, r6
 8005f16:	000f      	movs	r7, r1
 8005f18:	f7fb fb2c 	bl	8001574 <__aeabi_dmul>
 8005f1c:	9008      	str	r0, [sp, #32]
 8005f1e:	9109      	str	r1, [sp, #36]	; 0x24
 8005f20:	9a00      	ldr	r2, [sp, #0]
 8005f22:	9b01      	ldr	r3, [sp, #4]
 8005f24:	0030      	movs	r0, r6
 8005f26:	0039      	movs	r1, r7
 8005f28:	f7fb fd96 	bl	8001a58 <__aeabi_dsub>
 8005f2c:	0002      	movs	r2, r0
 8005f2e:	000b      	movs	r3, r1
 8005f30:	0020      	movs	r0, r4
 8005f32:	0029      	movs	r1, r5
 8005f34:	f7fb fd90 	bl	8001a58 <__aeabi_dsub>
 8005f38:	4a3a      	ldr	r2, [pc, #232]	; (8006024 <__ieee754_pow+0x730>)
 8005f3a:	4b39      	ldr	r3, [pc, #228]	; (8006020 <__ieee754_pow+0x72c>)
 8005f3c:	f7fb fb1a 	bl	8001574 <__aeabi_dmul>
 8005f40:	4a39      	ldr	r2, [pc, #228]	; (8006028 <__ieee754_pow+0x734>)
 8005f42:	0004      	movs	r4, r0
 8005f44:	000d      	movs	r5, r1
 8005f46:	4b39      	ldr	r3, [pc, #228]	; (800602c <__ieee754_pow+0x738>)
 8005f48:	0030      	movs	r0, r6
 8005f4a:	0039      	movs	r1, r7
 8005f4c:	f7fb fb12 	bl	8001574 <__aeabi_dmul>
 8005f50:	0002      	movs	r2, r0
 8005f52:	000b      	movs	r3, r1
 8005f54:	0020      	movs	r0, r4
 8005f56:	0029      	movs	r1, r5
 8005f58:	f7fa fbe6 	bl	8000728 <__aeabi_dadd>
 8005f5c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005f5e:	4b34      	ldr	r3, [pc, #208]	; (8006030 <__ieee754_pow+0x73c>)
 8005f60:	189b      	adds	r3, r3, r2
 8005f62:	681a      	ldr	r2, [r3, #0]
 8005f64:	685b      	ldr	r3, [r3, #4]
 8005f66:	f7fa fbdf 	bl	8000728 <__aeabi_dadd>
 8005f6a:	9000      	str	r0, [sp, #0]
 8005f6c:	9101      	str	r1, [sp, #4]
 8005f6e:	980d      	ldr	r0, [sp, #52]	; 0x34
 8005f70:	f7fc f90c 	bl	800218c <__aeabi_i2d>
 8005f74:	0004      	movs	r4, r0
 8005f76:	000d      	movs	r5, r1
 8005f78:	9808      	ldr	r0, [sp, #32]
 8005f7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8005f7c:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8005f7e:	4b2d      	ldr	r3, [pc, #180]	; (8006034 <__ieee754_pow+0x740>)
 8005f80:	189b      	adds	r3, r3, r2
 8005f82:	681e      	ldr	r6, [r3, #0]
 8005f84:	685f      	ldr	r7, [r3, #4]
 8005f86:	9a00      	ldr	r2, [sp, #0]
 8005f88:	9b01      	ldr	r3, [sp, #4]
 8005f8a:	f7fa fbcd 	bl	8000728 <__aeabi_dadd>
 8005f8e:	0032      	movs	r2, r6
 8005f90:	003b      	movs	r3, r7
 8005f92:	f7fa fbc9 	bl	8000728 <__aeabi_dadd>
 8005f96:	0022      	movs	r2, r4
 8005f98:	002b      	movs	r3, r5
 8005f9a:	f7fa fbc5 	bl	8000728 <__aeabi_dadd>
 8005f9e:	9804      	ldr	r0, [sp, #16]
 8005fa0:	0022      	movs	r2, r4
 8005fa2:	002b      	movs	r3, r5
 8005fa4:	9004      	str	r0, [sp, #16]
 8005fa6:	9105      	str	r1, [sp, #20]
 8005fa8:	f7fb fd56 	bl	8001a58 <__aeabi_dsub>
 8005fac:	0032      	movs	r2, r6
 8005fae:	003b      	movs	r3, r7
 8005fb0:	f7fb fd52 	bl	8001a58 <__aeabi_dsub>
 8005fb4:	9a08      	ldr	r2, [sp, #32]
 8005fb6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8005fb8:	f7fb fd4e 	bl	8001a58 <__aeabi_dsub>
 8005fbc:	0002      	movs	r2, r0
 8005fbe:	000b      	movs	r3, r1
 8005fc0:	9800      	ldr	r0, [sp, #0]
 8005fc2:	9901      	ldr	r1, [sp, #4]
 8005fc4:	e616      	b.n	8005bf4 <__ieee754_pow+0x300>
 8005fc6:	2300      	movs	r3, #0
 8005fc8:	4c03      	ldr	r4, [pc, #12]	; (8005fd8 <__ieee754_pow+0x6e4>)
 8005fca:	e61f      	b.n	8005c0c <__ieee754_pow+0x318>
 8005fcc:	000fffff 	.word	0x000fffff
 8005fd0:	43400000 	.word	0x43400000
 8005fd4:	fffffc01 	.word	0xfffffc01
 8005fd8:	3ff00000 	.word	0x3ff00000
 8005fdc:	0003988e 	.word	0x0003988e
 8005fe0:	000bb679 	.word	0x000bb679
 8005fe4:	fff00000 	.word	0xfff00000
 8005fe8:	0800a370 	.word	0x0800a370
 8005fec:	4a454eef 	.word	0x4a454eef
 8005ff0:	3fca7e28 	.word	0x3fca7e28
 8005ff4:	93c9db65 	.word	0x93c9db65
 8005ff8:	3fcd864a 	.word	0x3fcd864a
 8005ffc:	a91d4101 	.word	0xa91d4101
 8006000:	3fd17460 	.word	0x3fd17460
 8006004:	518f264d 	.word	0x518f264d
 8006008:	3fd55555 	.word	0x3fd55555
 800600c:	db6fabff 	.word	0xdb6fabff
 8006010:	3fdb6db6 	.word	0x3fdb6db6
 8006014:	33333303 	.word	0x33333303
 8006018:	3fe33333 	.word	0x3fe33333
 800601c:	40080000 	.word	0x40080000
 8006020:	3feec709 	.word	0x3feec709
 8006024:	dc3a03fd 	.word	0xdc3a03fd
 8006028:	145b01f5 	.word	0x145b01f5
 800602c:	be3e2fe0 	.word	0xbe3e2fe0
 8006030:	0800a390 	.word	0x0800a390
 8006034:	0800a380 	.word	0x0800a380
 8006038:	4a8f      	ldr	r2, [pc, #572]	; (8006278 <__ieee754_pow+0x984>)
 800603a:	4b90      	ldr	r3, [pc, #576]	; (800627c <__ieee754_pow+0x988>)
 800603c:	9806      	ldr	r0, [sp, #24]
 800603e:	9907      	ldr	r1, [sp, #28]
 8006040:	f7fa fb72 	bl	8000728 <__aeabi_dadd>
 8006044:	0032      	movs	r2, r6
 8006046:	9002      	str	r0, [sp, #8]
 8006048:	9103      	str	r1, [sp, #12]
 800604a:	003b      	movs	r3, r7
 800604c:	0028      	movs	r0, r5
 800604e:	0021      	movs	r1, r4
 8006050:	f7fb fd02 	bl	8001a58 <__aeabi_dsub>
 8006054:	0002      	movs	r2, r0
 8006056:	000b      	movs	r3, r1
 8006058:	9802      	ldr	r0, [sp, #8]
 800605a:	9903      	ldr	r1, [sp, #12]
 800605c:	f7fa fa06 	bl	800046c <__aeabi_dcmpgt>
 8006060:	2800      	cmp	r0, #0
 8006062:	d000      	beq.n	8006066 <__ieee754_pow+0x772>
 8006064:	e60d      	b.n	8005c82 <__ieee754_pow+0x38e>
 8006066:	2100      	movs	r1, #0
 8006068:	4a85      	ldr	r2, [pc, #532]	; (8006280 <__ieee754_pow+0x98c>)
 800606a:	0063      	lsls	r3, r4, #1
 800606c:	085b      	lsrs	r3, r3, #1
 800606e:	9102      	str	r1, [sp, #8]
 8006070:	4293      	cmp	r3, r2
 8006072:	dd25      	ble.n	80060c0 <__ieee754_pow+0x7cc>
 8006074:	4a83      	ldr	r2, [pc, #524]	; (8006284 <__ieee754_pow+0x990>)
 8006076:	151b      	asrs	r3, r3, #20
 8006078:	189b      	adds	r3, r3, r2
 800607a:	2280      	movs	r2, #128	; 0x80
 800607c:	0352      	lsls	r2, r2, #13
 800607e:	4694      	mov	ip, r2
 8006080:	411a      	asrs	r2, r3
 8006082:	1914      	adds	r4, r2, r4
 8006084:	0060      	lsls	r0, r4, #1
 8006086:	4b80      	ldr	r3, [pc, #512]	; (8006288 <__ieee754_pow+0x994>)
 8006088:	0d40      	lsrs	r0, r0, #21
 800608a:	4d80      	ldr	r5, [pc, #512]	; (800628c <__ieee754_pow+0x998>)
 800608c:	18c0      	adds	r0, r0, r3
 800608e:	4105      	asrs	r5, r0
 8006090:	0021      	movs	r1, r4
 8006092:	43a9      	bics	r1, r5
 8006094:	000b      	movs	r3, r1
 8006096:	4661      	mov	r1, ip
 8006098:	0324      	lsls	r4, r4, #12
 800609a:	0b24      	lsrs	r4, r4, #12
 800609c:	4321      	orrs	r1, r4
 800609e:	2414      	movs	r4, #20
 80060a0:	1a20      	subs	r0, r4, r0
 80060a2:	4101      	asrs	r1, r0
 80060a4:	9102      	str	r1, [sp, #8]
 80060a6:	9908      	ldr	r1, [sp, #32]
 80060a8:	2200      	movs	r2, #0
 80060aa:	2900      	cmp	r1, #0
 80060ac:	da02      	bge.n	80060b4 <__ieee754_pow+0x7c0>
 80060ae:	9902      	ldr	r1, [sp, #8]
 80060b0:	4249      	negs	r1, r1
 80060b2:	9102      	str	r1, [sp, #8]
 80060b4:	0030      	movs	r0, r6
 80060b6:	0039      	movs	r1, r7
 80060b8:	f7fb fcce 	bl	8001a58 <__aeabi_dsub>
 80060bc:	9004      	str	r0, [sp, #16]
 80060be:	9105      	str	r1, [sp, #20]
 80060c0:	9a06      	ldr	r2, [sp, #24]
 80060c2:	9b07      	ldr	r3, [sp, #28]
 80060c4:	9804      	ldr	r0, [sp, #16]
 80060c6:	9905      	ldr	r1, [sp, #20]
 80060c8:	2600      	movs	r6, #0
 80060ca:	f7fa fb2d 	bl	8000728 <__aeabi_dadd>
 80060ce:	2200      	movs	r2, #0
 80060d0:	4b6f      	ldr	r3, [pc, #444]	; (8006290 <__ieee754_pow+0x99c>)
 80060d2:	0030      	movs	r0, r6
 80060d4:	000f      	movs	r7, r1
 80060d6:	f7fb fa4d 	bl	8001574 <__aeabi_dmul>
 80060da:	9a04      	ldr	r2, [sp, #16]
 80060dc:	9b05      	ldr	r3, [sp, #20]
 80060de:	9008      	str	r0, [sp, #32]
 80060e0:	9109      	str	r1, [sp, #36]	; 0x24
 80060e2:	0030      	movs	r0, r6
 80060e4:	0039      	movs	r1, r7
 80060e6:	f7fb fcb7 	bl	8001a58 <__aeabi_dsub>
 80060ea:	0002      	movs	r2, r0
 80060ec:	000b      	movs	r3, r1
 80060ee:	9806      	ldr	r0, [sp, #24]
 80060f0:	9907      	ldr	r1, [sp, #28]
 80060f2:	f7fb fcb1 	bl	8001a58 <__aeabi_dsub>
 80060f6:	4a67      	ldr	r2, [pc, #412]	; (8006294 <__ieee754_pow+0x9a0>)
 80060f8:	4b67      	ldr	r3, [pc, #412]	; (8006298 <__ieee754_pow+0x9a4>)
 80060fa:	f7fb fa3b 	bl	8001574 <__aeabi_dmul>
 80060fe:	4a67      	ldr	r2, [pc, #412]	; (800629c <__ieee754_pow+0x9a8>)
 8006100:	0004      	movs	r4, r0
 8006102:	000d      	movs	r5, r1
 8006104:	4b66      	ldr	r3, [pc, #408]	; (80062a0 <__ieee754_pow+0x9ac>)
 8006106:	0030      	movs	r0, r6
 8006108:	0039      	movs	r1, r7
 800610a:	f7fb fa33 	bl	8001574 <__aeabi_dmul>
 800610e:	0002      	movs	r2, r0
 8006110:	000b      	movs	r3, r1
 8006112:	0020      	movs	r0, r4
 8006114:	0029      	movs	r1, r5
 8006116:	f7fa fb07 	bl	8000728 <__aeabi_dadd>
 800611a:	0004      	movs	r4, r0
 800611c:	000d      	movs	r5, r1
 800611e:	0002      	movs	r2, r0
 8006120:	000b      	movs	r3, r1
 8006122:	9808      	ldr	r0, [sp, #32]
 8006124:	9909      	ldr	r1, [sp, #36]	; 0x24
 8006126:	f7fa faff 	bl	8000728 <__aeabi_dadd>
 800612a:	9a08      	ldr	r2, [sp, #32]
 800612c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800612e:	0006      	movs	r6, r0
 8006130:	000f      	movs	r7, r1
 8006132:	f7fb fc91 	bl	8001a58 <__aeabi_dsub>
 8006136:	0002      	movs	r2, r0
 8006138:	000b      	movs	r3, r1
 800613a:	0020      	movs	r0, r4
 800613c:	0029      	movs	r1, r5
 800613e:	f7fb fc8b 	bl	8001a58 <__aeabi_dsub>
 8006142:	0032      	movs	r2, r6
 8006144:	9004      	str	r0, [sp, #16]
 8006146:	9105      	str	r1, [sp, #20]
 8006148:	003b      	movs	r3, r7
 800614a:	0030      	movs	r0, r6
 800614c:	0039      	movs	r1, r7
 800614e:	f7fb fa11 	bl	8001574 <__aeabi_dmul>
 8006152:	0004      	movs	r4, r0
 8006154:	000d      	movs	r5, r1
 8006156:	4a53      	ldr	r2, [pc, #332]	; (80062a4 <__ieee754_pow+0x9b0>)
 8006158:	4b53      	ldr	r3, [pc, #332]	; (80062a8 <__ieee754_pow+0x9b4>)
 800615a:	f7fb fa0b 	bl	8001574 <__aeabi_dmul>
 800615e:	4a53      	ldr	r2, [pc, #332]	; (80062ac <__ieee754_pow+0x9b8>)
 8006160:	4b53      	ldr	r3, [pc, #332]	; (80062b0 <__ieee754_pow+0x9bc>)
 8006162:	f7fb fc79 	bl	8001a58 <__aeabi_dsub>
 8006166:	0022      	movs	r2, r4
 8006168:	002b      	movs	r3, r5
 800616a:	f7fb fa03 	bl	8001574 <__aeabi_dmul>
 800616e:	4a51      	ldr	r2, [pc, #324]	; (80062b4 <__ieee754_pow+0x9c0>)
 8006170:	4b51      	ldr	r3, [pc, #324]	; (80062b8 <__ieee754_pow+0x9c4>)
 8006172:	f7fa fad9 	bl	8000728 <__aeabi_dadd>
 8006176:	0022      	movs	r2, r4
 8006178:	002b      	movs	r3, r5
 800617a:	f7fb f9fb 	bl	8001574 <__aeabi_dmul>
 800617e:	4a4f      	ldr	r2, [pc, #316]	; (80062bc <__ieee754_pow+0x9c8>)
 8006180:	4b4f      	ldr	r3, [pc, #316]	; (80062c0 <__ieee754_pow+0x9cc>)
 8006182:	f7fb fc69 	bl	8001a58 <__aeabi_dsub>
 8006186:	0022      	movs	r2, r4
 8006188:	002b      	movs	r3, r5
 800618a:	f7fb f9f3 	bl	8001574 <__aeabi_dmul>
 800618e:	4a4d      	ldr	r2, [pc, #308]	; (80062c4 <__ieee754_pow+0x9d0>)
 8006190:	4b4d      	ldr	r3, [pc, #308]	; (80062c8 <__ieee754_pow+0x9d4>)
 8006192:	f7fa fac9 	bl	8000728 <__aeabi_dadd>
 8006196:	0022      	movs	r2, r4
 8006198:	002b      	movs	r3, r5
 800619a:	f7fb f9eb 	bl	8001574 <__aeabi_dmul>
 800619e:	0002      	movs	r2, r0
 80061a0:	000b      	movs	r3, r1
 80061a2:	0030      	movs	r0, r6
 80061a4:	0039      	movs	r1, r7
 80061a6:	f7fb fc57 	bl	8001a58 <__aeabi_dsub>
 80061aa:	0004      	movs	r4, r0
 80061ac:	000d      	movs	r5, r1
 80061ae:	0002      	movs	r2, r0
 80061b0:	000b      	movs	r3, r1
 80061b2:	0030      	movs	r0, r6
 80061b4:	0039      	movs	r1, r7
 80061b6:	f7fb f9dd 	bl	8001574 <__aeabi_dmul>
 80061ba:	2380      	movs	r3, #128	; 0x80
 80061bc:	9006      	str	r0, [sp, #24]
 80061be:	9107      	str	r1, [sp, #28]
 80061c0:	2200      	movs	r2, #0
 80061c2:	05db      	lsls	r3, r3, #23
 80061c4:	0020      	movs	r0, r4
 80061c6:	0029      	movs	r1, r5
 80061c8:	f7fb fc46 	bl	8001a58 <__aeabi_dsub>
 80061cc:	0002      	movs	r2, r0
 80061ce:	000b      	movs	r3, r1
 80061d0:	9806      	ldr	r0, [sp, #24]
 80061d2:	9907      	ldr	r1, [sp, #28]
 80061d4:	f7fa fdc4 	bl	8000d60 <__aeabi_ddiv>
 80061d8:	9a04      	ldr	r2, [sp, #16]
 80061da:	9b05      	ldr	r3, [sp, #20]
 80061dc:	0004      	movs	r4, r0
 80061de:	000d      	movs	r5, r1
 80061e0:	0030      	movs	r0, r6
 80061e2:	0039      	movs	r1, r7
 80061e4:	f7fb f9c6 	bl	8001574 <__aeabi_dmul>
 80061e8:	9a04      	ldr	r2, [sp, #16]
 80061ea:	9b05      	ldr	r3, [sp, #20]
 80061ec:	f7fa fa9c 	bl	8000728 <__aeabi_dadd>
 80061f0:	0002      	movs	r2, r0
 80061f2:	000b      	movs	r3, r1
 80061f4:	0020      	movs	r0, r4
 80061f6:	0029      	movs	r1, r5
 80061f8:	f7fb fc2e 	bl	8001a58 <__aeabi_dsub>
 80061fc:	0032      	movs	r2, r6
 80061fe:	003b      	movs	r3, r7
 8006200:	f7fb fc2a 	bl	8001a58 <__aeabi_dsub>
 8006204:	0002      	movs	r2, r0
 8006206:	000b      	movs	r3, r1
 8006208:	2000      	movs	r0, #0
 800620a:	4930      	ldr	r1, [pc, #192]	; (80062cc <__ieee754_pow+0x9d8>)
 800620c:	f7fb fc24 	bl	8001a58 <__aeabi_dsub>
 8006210:	9b02      	ldr	r3, [sp, #8]
 8006212:	051b      	lsls	r3, r3, #20
 8006214:	185b      	adds	r3, r3, r1
 8006216:	151a      	asrs	r2, r3, #20
 8006218:	2a00      	cmp	r2, #0
 800621a:	dc26      	bgt.n	800626a <__ieee754_pow+0x976>
 800621c:	9a02      	ldr	r2, [sp, #8]
 800621e:	f000 f9ad 	bl	800657c <scalbn>
 8006222:	9a00      	ldr	r2, [sp, #0]
 8006224:	9b01      	ldr	r3, [sp, #4]
 8006226:	f7ff fc04 	bl	8005a32 <__ieee754_pow+0x13e>
 800622a:	4a29      	ldr	r2, [pc, #164]	; (80062d0 <__ieee754_pow+0x9dc>)
 800622c:	004b      	lsls	r3, r1, #1
 800622e:	085b      	lsrs	r3, r3, #1
 8006230:	4293      	cmp	r3, r2
 8006232:	dc00      	bgt.n	8006236 <__ieee754_pow+0x942>
 8006234:	e717      	b.n	8006066 <__ieee754_pow+0x772>
 8006236:	4b27      	ldr	r3, [pc, #156]	; (80062d4 <__ieee754_pow+0x9e0>)
 8006238:	18cb      	adds	r3, r1, r3
 800623a:	4303      	orrs	r3, r0
 800623c:	d009      	beq.n	8006252 <__ieee754_pow+0x95e>
 800623e:	9800      	ldr	r0, [sp, #0]
 8006240:	9901      	ldr	r1, [sp, #4]
 8006242:	4a25      	ldr	r2, [pc, #148]	; (80062d8 <__ieee754_pow+0x9e4>)
 8006244:	4b25      	ldr	r3, [pc, #148]	; (80062dc <__ieee754_pow+0x9e8>)
 8006246:	f7fb f995 	bl	8001574 <__aeabi_dmul>
 800624a:	4a23      	ldr	r2, [pc, #140]	; (80062d8 <__ieee754_pow+0x9e4>)
 800624c:	4b23      	ldr	r3, [pc, #140]	; (80062dc <__ieee754_pow+0x9e8>)
 800624e:	f7ff fbf0 	bl	8005a32 <__ieee754_pow+0x13e>
 8006252:	0032      	movs	r2, r6
 8006254:	003b      	movs	r3, r7
 8006256:	f7fb fbff 	bl	8001a58 <__aeabi_dsub>
 800625a:	9a06      	ldr	r2, [sp, #24]
 800625c:	9b07      	ldr	r3, [sp, #28]
 800625e:	f7fa f90f 	bl	8000480 <__aeabi_dcmpge>
 8006262:	2800      	cmp	r0, #0
 8006264:	d100      	bne.n	8006268 <__ieee754_pow+0x974>
 8006266:	e6fe      	b.n	8006066 <__ieee754_pow+0x772>
 8006268:	e7e9      	b.n	800623e <__ieee754_pow+0x94a>
 800626a:	0019      	movs	r1, r3
 800626c:	e7d9      	b.n	8006222 <__ieee754_pow+0x92e>
 800626e:	2300      	movs	r3, #0
 8006270:	4c16      	ldr	r4, [pc, #88]	; (80062cc <__ieee754_pow+0x9d8>)
 8006272:	f7ff fba1 	bl	80059b8 <__ieee754_pow+0xc4>
 8006276:	46c0      	nop			; (mov r8, r8)
 8006278:	652b82fe 	.word	0x652b82fe
 800627c:	3c971547 	.word	0x3c971547
 8006280:	3fe00000 	.word	0x3fe00000
 8006284:	fffffc02 	.word	0xfffffc02
 8006288:	fffffc01 	.word	0xfffffc01
 800628c:	000fffff 	.word	0x000fffff
 8006290:	3fe62e43 	.word	0x3fe62e43
 8006294:	fefa39ef 	.word	0xfefa39ef
 8006298:	3fe62e42 	.word	0x3fe62e42
 800629c:	0ca86c39 	.word	0x0ca86c39
 80062a0:	be205c61 	.word	0xbe205c61
 80062a4:	72bea4d0 	.word	0x72bea4d0
 80062a8:	3e663769 	.word	0x3e663769
 80062ac:	c5d26bf1 	.word	0xc5d26bf1
 80062b0:	3ebbbd41 	.word	0x3ebbbd41
 80062b4:	af25de2c 	.word	0xaf25de2c
 80062b8:	3f11566a 	.word	0x3f11566a
 80062bc:	16bebd93 	.word	0x16bebd93
 80062c0:	3f66c16c 	.word	0x3f66c16c
 80062c4:	5555553e 	.word	0x5555553e
 80062c8:	3fc55555 	.word	0x3fc55555
 80062cc:	3ff00000 	.word	0x3ff00000
 80062d0:	4090cbff 	.word	0x4090cbff
 80062d4:	3f6f3400 	.word	0x3f6f3400
 80062d8:	c2f8f359 	.word	0xc2f8f359
 80062dc:	01a56e1f 	.word	0x01a56e1f

080062e0 <__ieee754_sqrt>:
 80062e0:	4b55      	ldr	r3, [pc, #340]	; (8006438 <__ieee754_sqrt+0x158>)
 80062e2:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80062e4:	001a      	movs	r2, r3
 80062e6:	0005      	movs	r5, r0
 80062e8:	000c      	movs	r4, r1
 80062ea:	400a      	ands	r2, r1
 80062ec:	429a      	cmp	r2, r3
 80062ee:	d10f      	bne.n	8006310 <__ieee754_sqrt+0x30>
 80062f0:	0002      	movs	r2, r0
 80062f2:	000b      	movs	r3, r1
 80062f4:	f7fb f93e 	bl	8001574 <__aeabi_dmul>
 80062f8:	0002      	movs	r2, r0
 80062fa:	000b      	movs	r3, r1
 80062fc:	0028      	movs	r0, r5
 80062fe:	0021      	movs	r1, r4
 8006300:	f7fa fa12 	bl	8000728 <__aeabi_dadd>
 8006304:	0005      	movs	r5, r0
 8006306:	000c      	movs	r4, r1
 8006308:	0028      	movs	r0, r5
 800630a:	0021      	movs	r1, r4
 800630c:	b003      	add	sp, #12
 800630e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006310:	0002      	movs	r2, r0
 8006312:	2900      	cmp	r1, #0
 8006314:	dc10      	bgt.n	8006338 <__ieee754_sqrt+0x58>
 8006316:	004b      	lsls	r3, r1, #1
 8006318:	085b      	lsrs	r3, r3, #1
 800631a:	4303      	orrs	r3, r0
 800631c:	d0f4      	beq.n	8006308 <__ieee754_sqrt+0x28>
 800631e:	2000      	movs	r0, #0
 8006320:	4281      	cmp	r1, r0
 8006322:	d100      	bne.n	8006326 <__ieee754_sqrt+0x46>
 8006324:	e07f      	b.n	8006426 <__ieee754_sqrt+0x146>
 8006326:	000b      	movs	r3, r1
 8006328:	0028      	movs	r0, r5
 800632a:	f7fb fb95 	bl	8001a58 <__aeabi_dsub>
 800632e:	0002      	movs	r2, r0
 8006330:	000b      	movs	r3, r1
 8006332:	f7fa fd15 	bl	8000d60 <__aeabi_ddiv>
 8006336:	e7e5      	b.n	8006304 <__ieee754_sqrt+0x24>
 8006338:	1508      	asrs	r0, r1, #20
 800633a:	d074      	beq.n	8006426 <__ieee754_sqrt+0x146>
 800633c:	4b3f      	ldr	r3, [pc, #252]	; (800643c <__ieee754_sqrt+0x15c>)
 800633e:	0309      	lsls	r1, r1, #12
 8006340:	18c0      	adds	r0, r0, r3
 8006342:	2380      	movs	r3, #128	; 0x80
 8006344:	0b09      	lsrs	r1, r1, #12
 8006346:	035b      	lsls	r3, r3, #13
 8006348:	4319      	orrs	r1, r3
 800634a:	07c3      	lsls	r3, r0, #31
 800634c:	d503      	bpl.n	8006356 <__ieee754_sqrt+0x76>
 800634e:	0fd3      	lsrs	r3, r2, #31
 8006350:	0049      	lsls	r1, r1, #1
 8006352:	18c9      	adds	r1, r1, r3
 8006354:	0052      	lsls	r2, r2, #1
 8006356:	2400      	movs	r4, #0
 8006358:	1043      	asrs	r3, r0, #1
 800635a:	0049      	lsls	r1, r1, #1
 800635c:	9301      	str	r3, [sp, #4]
 800635e:	2580      	movs	r5, #128	; 0x80
 8006360:	0fd3      	lsrs	r3, r2, #31
 8006362:	18cb      	adds	r3, r1, r3
 8006364:	0020      	movs	r0, r4
 8006366:	2116      	movs	r1, #22
 8006368:	0052      	lsls	r2, r2, #1
 800636a:	03ad      	lsls	r5, r5, #14
 800636c:	1946      	adds	r6, r0, r5
 800636e:	429e      	cmp	r6, r3
 8006370:	dc02      	bgt.n	8006378 <__ieee754_sqrt+0x98>
 8006372:	1970      	adds	r0, r6, r5
 8006374:	1b9b      	subs	r3, r3, r6
 8006376:	1964      	adds	r4, r4, r5
 8006378:	0fd6      	lsrs	r6, r2, #31
 800637a:	005b      	lsls	r3, r3, #1
 800637c:	3901      	subs	r1, #1
 800637e:	199b      	adds	r3, r3, r6
 8006380:	0052      	lsls	r2, r2, #1
 8006382:	086d      	lsrs	r5, r5, #1
 8006384:	2900      	cmp	r1, #0
 8006386:	d1f1      	bne.n	800636c <__ieee754_sqrt+0x8c>
 8006388:	2520      	movs	r5, #32
 800638a:	2680      	movs	r6, #128	; 0x80
 800638c:	46ac      	mov	ip, r5
 800638e:	9100      	str	r1, [sp, #0]
 8006390:	0636      	lsls	r6, r6, #24
 8006392:	9d00      	ldr	r5, [sp, #0]
 8006394:	1977      	adds	r7, r6, r5
 8006396:	4283      	cmp	r3, r0
 8006398:	dc02      	bgt.n	80063a0 <__ieee754_sqrt+0xc0>
 800639a:	d112      	bne.n	80063c2 <__ieee754_sqrt+0xe2>
 800639c:	4297      	cmp	r7, r2
 800639e:	d810      	bhi.n	80063c2 <__ieee754_sqrt+0xe2>
 80063a0:	19bd      	adds	r5, r7, r6
 80063a2:	9500      	str	r5, [sp, #0]
 80063a4:	0005      	movs	r5, r0
 80063a6:	2f00      	cmp	r7, #0
 80063a8:	da03      	bge.n	80063b2 <__ieee754_sqrt+0xd2>
 80063aa:	9d00      	ldr	r5, [sp, #0]
 80063ac:	43ed      	mvns	r5, r5
 80063ae:	0fed      	lsrs	r5, r5, #31
 80063b0:	1945      	adds	r5, r0, r5
 80063b2:	1a1b      	subs	r3, r3, r0
 80063b4:	42ba      	cmp	r2, r7
 80063b6:	4180      	sbcs	r0, r0
 80063b8:	4240      	negs	r0, r0
 80063ba:	1a1b      	subs	r3, r3, r0
 80063bc:	0028      	movs	r0, r5
 80063be:	1bd2      	subs	r2, r2, r7
 80063c0:	1989      	adds	r1, r1, r6
 80063c2:	0fd5      	lsrs	r5, r2, #31
 80063c4:	005b      	lsls	r3, r3, #1
 80063c6:	18eb      	adds	r3, r5, r3
 80063c8:	2501      	movs	r5, #1
 80063ca:	426d      	negs	r5, r5
 80063cc:	44ac      	add	ip, r5
 80063ce:	4665      	mov	r5, ip
 80063d0:	0052      	lsls	r2, r2, #1
 80063d2:	0876      	lsrs	r6, r6, #1
 80063d4:	2d00      	cmp	r5, #0
 80063d6:	d1dc      	bne.n	8006392 <__ieee754_sqrt+0xb2>
 80063d8:	4313      	orrs	r3, r2
 80063da:	d003      	beq.n	80063e4 <__ieee754_sqrt+0x104>
 80063dc:	1c4b      	adds	r3, r1, #1
 80063de:	d127      	bne.n	8006430 <__ieee754_sqrt+0x150>
 80063e0:	4661      	mov	r1, ip
 80063e2:	3401      	adds	r4, #1
 80063e4:	4b16      	ldr	r3, [pc, #88]	; (8006440 <__ieee754_sqrt+0x160>)
 80063e6:	1060      	asrs	r0, r4, #1
 80063e8:	18c0      	adds	r0, r0, r3
 80063ea:	0849      	lsrs	r1, r1, #1
 80063ec:	07e3      	lsls	r3, r4, #31
 80063ee:	d502      	bpl.n	80063f6 <__ieee754_sqrt+0x116>
 80063f0:	2380      	movs	r3, #128	; 0x80
 80063f2:	061b      	lsls	r3, r3, #24
 80063f4:	4319      	orrs	r1, r3
 80063f6:	9b01      	ldr	r3, [sp, #4]
 80063f8:	000d      	movs	r5, r1
 80063fa:	051c      	lsls	r4, r3, #20
 80063fc:	1823      	adds	r3, r4, r0
 80063fe:	001c      	movs	r4, r3
 8006400:	e782      	b.n	8006308 <__ieee754_sqrt+0x28>
 8006402:	0ad1      	lsrs	r1, r2, #11
 8006404:	3b15      	subs	r3, #21
 8006406:	0552      	lsls	r2, r2, #21
 8006408:	2900      	cmp	r1, #0
 800640a:	d0fa      	beq.n	8006402 <__ieee754_sqrt+0x122>
 800640c:	2480      	movs	r4, #128	; 0x80
 800640e:	0364      	lsls	r4, r4, #13
 8006410:	4221      	tst	r1, r4
 8006412:	d00a      	beq.n	800642a <__ieee754_sqrt+0x14a>
 8006414:	2420      	movs	r4, #32
 8006416:	0016      	movs	r6, r2
 8006418:	1a24      	subs	r4, r4, r0
 800641a:	40e6      	lsrs	r6, r4
 800641c:	1e45      	subs	r5, r0, #1
 800641e:	4082      	lsls	r2, r0
 8006420:	4331      	orrs	r1, r6
 8006422:	1b58      	subs	r0, r3, r5
 8006424:	e78a      	b.n	800633c <__ieee754_sqrt+0x5c>
 8006426:	2300      	movs	r3, #0
 8006428:	e7ee      	b.n	8006408 <__ieee754_sqrt+0x128>
 800642a:	0049      	lsls	r1, r1, #1
 800642c:	3001      	adds	r0, #1
 800642e:	e7ef      	b.n	8006410 <__ieee754_sqrt+0x130>
 8006430:	2301      	movs	r3, #1
 8006432:	3101      	adds	r1, #1
 8006434:	4399      	bics	r1, r3
 8006436:	e7d5      	b.n	80063e4 <__ieee754_sqrt+0x104>
 8006438:	7ff00000 	.word	0x7ff00000
 800643c:	fffffc01 	.word	0xfffffc01
 8006440:	3fe00000 	.word	0x3fe00000

08006444 <fabs>:
 8006444:	0049      	lsls	r1, r1, #1
 8006446:	084b      	lsrs	r3, r1, #1
 8006448:	0019      	movs	r1, r3
 800644a:	4770      	bx	lr

0800644c <finite>:
 800644c:	0048      	lsls	r0, r1, #1
 800644e:	4b02      	ldr	r3, [pc, #8]	; (8006458 <finite+0xc>)
 8006450:	0840      	lsrs	r0, r0, #1
 8006452:	18c0      	adds	r0, r0, r3
 8006454:	0fc0      	lsrs	r0, r0, #31
 8006456:	4770      	bx	lr
 8006458:	80100000 	.word	0x80100000

0800645c <matherr>:
 800645c:	2000      	movs	r0, #0
 800645e:	4770      	bx	lr

08006460 <nan>:
 8006460:	2000      	movs	r0, #0
 8006462:	4901      	ldr	r1, [pc, #4]	; (8006468 <nan+0x8>)
 8006464:	4770      	bx	lr
 8006466:	46c0      	nop			; (mov r8, r8)
 8006468:	7ff80000 	.word	0x7ff80000

0800646c <rint>:
 800646c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800646e:	004a      	lsls	r2, r1, #1
 8006470:	4e3e      	ldr	r6, [pc, #248]	; (800656c <rint+0x100>)
 8006472:	0d52      	lsrs	r2, r2, #21
 8006474:	b085      	sub	sp, #20
 8006476:	1996      	adds	r6, r2, r6
 8006478:	000d      	movs	r5, r1
 800647a:	9101      	str	r1, [sp, #4]
 800647c:	0003      	movs	r3, r0
 800647e:	0fcc      	lsrs	r4, r1, #31
 8006480:	2e13      	cmp	r6, #19
 8006482:	dc57      	bgt.n	8006534 <rint+0xc8>
 8006484:	2e00      	cmp	r6, #0
 8006486:	da2a      	bge.n	80064de <rint+0x72>
 8006488:	004a      	lsls	r2, r1, #1
 800648a:	0852      	lsrs	r2, r2, #1
 800648c:	4302      	orrs	r2, r0
 800648e:	d024      	beq.n	80064da <rint+0x6e>
 8006490:	030a      	lsls	r2, r1, #12
 8006492:	0b12      	lsrs	r2, r2, #12
 8006494:	4302      	orrs	r2, r0
 8006496:	4253      	negs	r3, r2
 8006498:	4313      	orrs	r3, r2
 800649a:	2280      	movs	r2, #128	; 0x80
 800649c:	0c4d      	lsrs	r5, r1, #17
 800649e:	0312      	lsls	r2, r2, #12
 80064a0:	0b1b      	lsrs	r3, r3, #12
 80064a2:	4013      	ands	r3, r2
 80064a4:	046d      	lsls	r5, r5, #17
 80064a6:	432b      	orrs	r3, r5
 80064a8:	0019      	movs	r1, r3
 80064aa:	4b31      	ldr	r3, [pc, #196]	; (8006570 <rint+0x104>)
 80064ac:	00e2      	lsls	r2, r4, #3
 80064ae:	189b      	adds	r3, r3, r2
 80064b0:	681e      	ldr	r6, [r3, #0]
 80064b2:	685f      	ldr	r7, [r3, #4]
 80064b4:	0002      	movs	r2, r0
 80064b6:	000b      	movs	r3, r1
 80064b8:	0030      	movs	r0, r6
 80064ba:	0039      	movs	r1, r7
 80064bc:	f7fa f934 	bl	8000728 <__aeabi_dadd>
 80064c0:	9002      	str	r0, [sp, #8]
 80064c2:	9103      	str	r1, [sp, #12]
 80064c4:	9802      	ldr	r0, [sp, #8]
 80064c6:	9903      	ldr	r1, [sp, #12]
 80064c8:	003b      	movs	r3, r7
 80064ca:	0032      	movs	r2, r6
 80064cc:	f7fb fac4 	bl	8001a58 <__aeabi_dsub>
 80064d0:	004b      	lsls	r3, r1, #1
 80064d2:	085b      	lsrs	r3, r3, #1
 80064d4:	07e4      	lsls	r4, r4, #31
 80064d6:	4323      	orrs	r3, r4
 80064d8:	0019      	movs	r1, r3
 80064da:	b005      	add	sp, #20
 80064dc:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80064de:	4a25      	ldr	r2, [pc, #148]	; (8006574 <rint+0x108>)
 80064e0:	4132      	asrs	r2, r6
 80064e2:	0017      	movs	r7, r2
 80064e4:	400f      	ands	r7, r1
 80064e6:	4307      	orrs	r7, r0
 80064e8:	d0f7      	beq.n	80064da <rint+0x6e>
 80064ea:	0852      	lsrs	r2, r2, #1
 80064ec:	0011      	movs	r1, r2
 80064ee:	4029      	ands	r1, r5
 80064f0:	430b      	orrs	r3, r1
 80064f2:	d00a      	beq.n	800650a <rint+0x9e>
 80064f4:	2300      	movs	r3, #0
 80064f6:	2e13      	cmp	r6, #19
 80064f8:	d101      	bne.n	80064fe <rint+0x92>
 80064fa:	2380      	movs	r3, #128	; 0x80
 80064fc:	061b      	lsls	r3, r3, #24
 80064fe:	2780      	movs	r7, #128	; 0x80
 8006500:	02ff      	lsls	r7, r7, #11
 8006502:	4137      	asrs	r7, r6
 8006504:	4395      	bics	r5, r2
 8006506:	432f      	orrs	r7, r5
 8006508:	9701      	str	r7, [sp, #4]
 800650a:	9901      	ldr	r1, [sp, #4]
 800650c:	001a      	movs	r2, r3
 800650e:	000b      	movs	r3, r1
 8006510:	4917      	ldr	r1, [pc, #92]	; (8006570 <rint+0x104>)
 8006512:	00e4      	lsls	r4, r4, #3
 8006514:	190c      	adds	r4, r1, r4
 8006516:	6865      	ldr	r5, [r4, #4]
 8006518:	6824      	ldr	r4, [r4, #0]
 800651a:	0020      	movs	r0, r4
 800651c:	0029      	movs	r1, r5
 800651e:	f7fa f903 	bl	8000728 <__aeabi_dadd>
 8006522:	9002      	str	r0, [sp, #8]
 8006524:	9103      	str	r1, [sp, #12]
 8006526:	9802      	ldr	r0, [sp, #8]
 8006528:	9903      	ldr	r1, [sp, #12]
 800652a:	0022      	movs	r2, r4
 800652c:	002b      	movs	r3, r5
 800652e:	f7fb fa93 	bl	8001a58 <__aeabi_dsub>
 8006532:	e7d2      	b.n	80064da <rint+0x6e>
 8006534:	2e33      	cmp	r6, #51	; 0x33
 8006536:	dd08      	ble.n	800654a <rint+0xde>
 8006538:	2380      	movs	r3, #128	; 0x80
 800653a:	00db      	lsls	r3, r3, #3
 800653c:	429e      	cmp	r6, r3
 800653e:	d1cc      	bne.n	80064da <rint+0x6e>
 8006540:	0002      	movs	r2, r0
 8006542:	000b      	movs	r3, r1
 8006544:	f7fa f8f0 	bl	8000728 <__aeabi_dadd>
 8006548:	e7c7      	b.n	80064da <rint+0x6e>
 800654a:	2601      	movs	r6, #1
 800654c:	4d0a      	ldr	r5, [pc, #40]	; (8006578 <rint+0x10c>)
 800654e:	4276      	negs	r6, r6
 8006550:	1952      	adds	r2, r2, r5
 8006552:	40d6      	lsrs	r6, r2
 8006554:	4206      	tst	r6, r0
 8006556:	d0c0      	beq.n	80064da <rint+0x6e>
 8006558:	0876      	lsrs	r6, r6, #1
 800655a:	4206      	tst	r6, r0
 800655c:	d0d5      	beq.n	800650a <rint+0x9e>
 800655e:	2180      	movs	r1, #128	; 0x80
 8006560:	05c9      	lsls	r1, r1, #23
 8006562:	4111      	asrs	r1, r2
 8006564:	43b3      	bics	r3, r6
 8006566:	430b      	orrs	r3, r1
 8006568:	e7cf      	b.n	800650a <rint+0x9e>
 800656a:	46c0      	nop			; (mov r8, r8)
 800656c:	fffffc01 	.word	0xfffffc01
 8006570:	0800a3a0 	.word	0x0800a3a0
 8006574:	000fffff 	.word	0x000fffff
 8006578:	fffffbed 	.word	0xfffffbed

0800657c <scalbn>:
 800657c:	004b      	lsls	r3, r1, #1
 800657e:	b570      	push	{r4, r5, r6, lr}
 8006580:	0d5b      	lsrs	r3, r3, #21
 8006582:	0014      	movs	r4, r2
 8006584:	000a      	movs	r2, r1
 8006586:	2b00      	cmp	r3, #0
 8006588:	d10d      	bne.n	80065a6 <scalbn+0x2a>
 800658a:	004b      	lsls	r3, r1, #1
 800658c:	085b      	lsrs	r3, r3, #1
 800658e:	4303      	orrs	r3, r0
 8006590:	d010      	beq.n	80065b4 <scalbn+0x38>
 8006592:	4b21      	ldr	r3, [pc, #132]	; (8006618 <scalbn+0x9c>)
 8006594:	2200      	movs	r2, #0
 8006596:	f7fa ffed 	bl	8001574 <__aeabi_dmul>
 800659a:	4b20      	ldr	r3, [pc, #128]	; (800661c <scalbn+0xa0>)
 800659c:	429c      	cmp	r4, r3
 800659e:	da0a      	bge.n	80065b6 <scalbn+0x3a>
 80065a0:	4a1f      	ldr	r2, [pc, #124]	; (8006620 <scalbn+0xa4>)
 80065a2:	4b20      	ldr	r3, [pc, #128]	; (8006624 <scalbn+0xa8>)
 80065a4:	e017      	b.n	80065d6 <scalbn+0x5a>
 80065a6:	4d20      	ldr	r5, [pc, #128]	; (8006628 <scalbn+0xac>)
 80065a8:	42ab      	cmp	r3, r5
 80065aa:	d108      	bne.n	80065be <scalbn+0x42>
 80065ac:	0002      	movs	r2, r0
 80065ae:	000b      	movs	r3, r1
 80065b0:	f7fa f8ba 	bl	8000728 <__aeabi_dadd>
 80065b4:	bd70      	pop	{r4, r5, r6, pc}
 80065b6:	000a      	movs	r2, r1
 80065b8:	004b      	lsls	r3, r1, #1
 80065ba:	0d5b      	lsrs	r3, r3, #21
 80065bc:	3b36      	subs	r3, #54	; 0x36
 80065be:	4d1b      	ldr	r5, [pc, #108]	; (800662c <scalbn+0xb0>)
 80065c0:	18e3      	adds	r3, r4, r3
 80065c2:	42ab      	cmp	r3, r5
 80065c4:	dd0a      	ble.n	80065dc <scalbn+0x60>
 80065c6:	0002      	movs	r2, r0
 80065c8:	000b      	movs	r3, r1
 80065ca:	4819      	ldr	r0, [pc, #100]	; (8006630 <scalbn+0xb4>)
 80065cc:	4919      	ldr	r1, [pc, #100]	; (8006634 <scalbn+0xb8>)
 80065ce:	f000 f839 	bl	8006644 <copysign>
 80065d2:	4a17      	ldr	r2, [pc, #92]	; (8006630 <scalbn+0xb4>)
 80065d4:	4b17      	ldr	r3, [pc, #92]	; (8006634 <scalbn+0xb8>)
 80065d6:	f7fa ffcd 	bl	8001574 <__aeabi_dmul>
 80065da:	e7eb      	b.n	80065b4 <scalbn+0x38>
 80065dc:	2b00      	cmp	r3, #0
 80065de:	dd05      	ble.n	80065ec <scalbn+0x70>
 80065e0:	4c15      	ldr	r4, [pc, #84]	; (8006638 <scalbn+0xbc>)
 80065e2:	051b      	lsls	r3, r3, #20
 80065e4:	4022      	ands	r2, r4
 80065e6:	431a      	orrs	r2, r3
 80065e8:	0011      	movs	r1, r2
 80065ea:	e7e3      	b.n	80065b4 <scalbn+0x38>
 80065ec:	001d      	movs	r5, r3
 80065ee:	3535      	adds	r5, #53	; 0x35
 80065f0:	da09      	bge.n	8006606 <scalbn+0x8a>
 80065f2:	4b12      	ldr	r3, [pc, #72]	; (800663c <scalbn+0xc0>)
 80065f4:	0002      	movs	r2, r0
 80065f6:	429c      	cmp	r4, r3
 80065f8:	dce6      	bgt.n	80065c8 <scalbn+0x4c>
 80065fa:	000b      	movs	r3, r1
 80065fc:	4808      	ldr	r0, [pc, #32]	; (8006620 <scalbn+0xa4>)
 80065fe:	4909      	ldr	r1, [pc, #36]	; (8006624 <scalbn+0xa8>)
 8006600:	f000 f820 	bl	8006644 <copysign>
 8006604:	e7cc      	b.n	80065a0 <scalbn+0x24>
 8006606:	4c0c      	ldr	r4, [pc, #48]	; (8006638 <scalbn+0xbc>)
 8006608:	3336      	adds	r3, #54	; 0x36
 800660a:	4022      	ands	r2, r4
 800660c:	051b      	lsls	r3, r3, #20
 800660e:	4313      	orrs	r3, r2
 8006610:	0019      	movs	r1, r3
 8006612:	2200      	movs	r2, #0
 8006614:	4b0a      	ldr	r3, [pc, #40]	; (8006640 <scalbn+0xc4>)
 8006616:	e7de      	b.n	80065d6 <scalbn+0x5a>
 8006618:	43500000 	.word	0x43500000
 800661c:	ffff3cb0 	.word	0xffff3cb0
 8006620:	c2f8f359 	.word	0xc2f8f359
 8006624:	01a56e1f 	.word	0x01a56e1f
 8006628:	000007ff 	.word	0x000007ff
 800662c:	000007fe 	.word	0x000007fe
 8006630:	8800759c 	.word	0x8800759c
 8006634:	7e37e43c 	.word	0x7e37e43c
 8006638:	800fffff 	.word	0x800fffff
 800663c:	0000c350 	.word	0x0000c350
 8006640:	3c900000 	.word	0x3c900000

08006644 <copysign>:
 8006644:	b530      	push	{r4, r5, lr}
 8006646:	004a      	lsls	r2, r1, #1
 8006648:	0fdb      	lsrs	r3, r3, #31
 800664a:	07db      	lsls	r3, r3, #31
 800664c:	0852      	lsrs	r2, r2, #1
 800664e:	431a      	orrs	r2, r3
 8006650:	0011      	movs	r1, r2
 8006652:	bd30      	pop	{r4, r5, pc}

08006654 <__errno>:
 8006654:	4b01      	ldr	r3, [pc, #4]	; (800665c <__errno+0x8>)
 8006656:	6818      	ldr	r0, [r3, #0]
 8006658:	4770      	bx	lr
 800665a:	46c0      	nop			; (mov r8, r8)
 800665c:	2000000c 	.word	0x2000000c

08006660 <__libc_init_array>:
 8006660:	b570      	push	{r4, r5, r6, lr}
 8006662:	2600      	movs	r6, #0
 8006664:	4d0c      	ldr	r5, [pc, #48]	; (8006698 <__libc_init_array+0x38>)
 8006666:	4c0d      	ldr	r4, [pc, #52]	; (800669c <__libc_init_array+0x3c>)
 8006668:	1b64      	subs	r4, r4, r5
 800666a:	10a4      	asrs	r4, r4, #2
 800666c:	42a6      	cmp	r6, r4
 800666e:	d109      	bne.n	8006684 <__libc_init_array+0x24>
 8006670:	2600      	movs	r6, #0
 8006672:	f003 fdd7 	bl	800a224 <_init>
 8006676:	4d0a      	ldr	r5, [pc, #40]	; (80066a0 <__libc_init_array+0x40>)
 8006678:	4c0a      	ldr	r4, [pc, #40]	; (80066a4 <__libc_init_array+0x44>)
 800667a:	1b64      	subs	r4, r4, r5
 800667c:	10a4      	asrs	r4, r4, #2
 800667e:	42a6      	cmp	r6, r4
 8006680:	d105      	bne.n	800668e <__libc_init_array+0x2e>
 8006682:	bd70      	pop	{r4, r5, r6, pc}
 8006684:	00b3      	lsls	r3, r6, #2
 8006686:	58eb      	ldr	r3, [r5, r3]
 8006688:	4798      	blx	r3
 800668a:	3601      	adds	r6, #1
 800668c:	e7ee      	b.n	800666c <__libc_init_array+0xc>
 800668e:	00b3      	lsls	r3, r6, #2
 8006690:	58eb      	ldr	r3, [r5, r3]
 8006692:	4798      	blx	r3
 8006694:	3601      	adds	r6, #1
 8006696:	e7f2      	b.n	800667e <__libc_init_array+0x1e>
 8006698:	0800a670 	.word	0x0800a670
 800669c:	0800a670 	.word	0x0800a670
 80066a0:	0800a670 	.word	0x0800a670
 80066a4:	0800a678 	.word	0x0800a678

080066a8 <memset>:
 80066a8:	0003      	movs	r3, r0
 80066aa:	1812      	adds	r2, r2, r0
 80066ac:	4293      	cmp	r3, r2
 80066ae:	d100      	bne.n	80066b2 <memset+0xa>
 80066b0:	4770      	bx	lr
 80066b2:	7019      	strb	r1, [r3, #0]
 80066b4:	3301      	adds	r3, #1
 80066b6:	e7f9      	b.n	80066ac <memset+0x4>

080066b8 <__cvt>:
 80066b8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80066ba:	b08b      	sub	sp, #44	; 0x2c
 80066bc:	0014      	movs	r4, r2
 80066be:	1e1d      	subs	r5, r3, #0
 80066c0:	9912      	ldr	r1, [sp, #72]	; 0x48
 80066c2:	da53      	bge.n	800676c <__cvt+0xb4>
 80066c4:	2480      	movs	r4, #128	; 0x80
 80066c6:	0624      	lsls	r4, r4, #24
 80066c8:	191b      	adds	r3, r3, r4
 80066ca:	001d      	movs	r5, r3
 80066cc:	0014      	movs	r4, r2
 80066ce:	232d      	movs	r3, #45	; 0x2d
 80066d0:	700b      	strb	r3, [r1, #0]
 80066d2:	2320      	movs	r3, #32
 80066d4:	9e14      	ldr	r6, [sp, #80]	; 0x50
 80066d6:	2203      	movs	r2, #3
 80066d8:	439e      	bics	r6, r3
 80066da:	2e46      	cmp	r6, #70	; 0x46
 80066dc:	d007      	beq.n	80066ee <__cvt+0x36>
 80066de:	0033      	movs	r3, r6
 80066e0:	3b45      	subs	r3, #69	; 0x45
 80066e2:	4259      	negs	r1, r3
 80066e4:	414b      	adcs	r3, r1
 80066e6:	9910      	ldr	r1, [sp, #64]	; 0x40
 80066e8:	3a01      	subs	r2, #1
 80066ea:	18cb      	adds	r3, r1, r3
 80066ec:	9310      	str	r3, [sp, #64]	; 0x40
 80066ee:	ab09      	add	r3, sp, #36	; 0x24
 80066f0:	9304      	str	r3, [sp, #16]
 80066f2:	ab08      	add	r3, sp, #32
 80066f4:	9303      	str	r3, [sp, #12]
 80066f6:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80066f8:	9200      	str	r2, [sp, #0]
 80066fa:	9302      	str	r3, [sp, #8]
 80066fc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80066fe:	0022      	movs	r2, r4
 8006700:	9301      	str	r3, [sp, #4]
 8006702:	002b      	movs	r3, r5
 8006704:	f001 fdbe 	bl	8008284 <_dtoa_r>
 8006708:	0007      	movs	r7, r0
 800670a:	2e47      	cmp	r6, #71	; 0x47
 800670c:	d102      	bne.n	8006714 <__cvt+0x5c>
 800670e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006710:	07db      	lsls	r3, r3, #31
 8006712:	d524      	bpl.n	800675e <__cvt+0xa6>
 8006714:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8006716:	18fb      	adds	r3, r7, r3
 8006718:	9307      	str	r3, [sp, #28]
 800671a:	2e46      	cmp	r6, #70	; 0x46
 800671c:	d114      	bne.n	8006748 <__cvt+0x90>
 800671e:	783b      	ldrb	r3, [r7, #0]
 8006720:	2b30      	cmp	r3, #48	; 0x30
 8006722:	d10c      	bne.n	800673e <__cvt+0x86>
 8006724:	2200      	movs	r2, #0
 8006726:	2300      	movs	r3, #0
 8006728:	0020      	movs	r0, r4
 800672a:	0029      	movs	r1, r5
 800672c:	f7f9 fe84 	bl	8000438 <__aeabi_dcmpeq>
 8006730:	2800      	cmp	r0, #0
 8006732:	d104      	bne.n	800673e <__cvt+0x86>
 8006734:	2301      	movs	r3, #1
 8006736:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8006738:	1a9b      	subs	r3, r3, r2
 800673a:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 800673c:	6013      	str	r3, [r2, #0]
 800673e:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006740:	9a07      	ldr	r2, [sp, #28]
 8006742:	681b      	ldr	r3, [r3, #0]
 8006744:	18d3      	adds	r3, r2, r3
 8006746:	9307      	str	r3, [sp, #28]
 8006748:	2200      	movs	r2, #0
 800674a:	2300      	movs	r3, #0
 800674c:	0020      	movs	r0, r4
 800674e:	0029      	movs	r1, r5
 8006750:	f7f9 fe72 	bl	8000438 <__aeabi_dcmpeq>
 8006754:	2230      	movs	r2, #48	; 0x30
 8006756:	2800      	cmp	r0, #0
 8006758:	d00d      	beq.n	8006776 <__cvt+0xbe>
 800675a:	9b07      	ldr	r3, [sp, #28]
 800675c:	9309      	str	r3, [sp, #36]	; 0x24
 800675e:	0038      	movs	r0, r7
 8006760:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006762:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8006764:	1bdb      	subs	r3, r3, r7
 8006766:	6013      	str	r3, [r2, #0]
 8006768:	b00b      	add	sp, #44	; 0x2c
 800676a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800676c:	2300      	movs	r3, #0
 800676e:	e7af      	b.n	80066d0 <__cvt+0x18>
 8006770:	1c59      	adds	r1, r3, #1
 8006772:	9109      	str	r1, [sp, #36]	; 0x24
 8006774:	701a      	strb	r2, [r3, #0]
 8006776:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8006778:	9907      	ldr	r1, [sp, #28]
 800677a:	428b      	cmp	r3, r1
 800677c:	d3f8      	bcc.n	8006770 <__cvt+0xb8>
 800677e:	e7ee      	b.n	800675e <__cvt+0xa6>

08006780 <__exponent>:
 8006780:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006782:	1c83      	adds	r3, r0, #2
 8006784:	b085      	sub	sp, #20
 8006786:	9301      	str	r3, [sp, #4]
 8006788:	0006      	movs	r6, r0
 800678a:	000c      	movs	r4, r1
 800678c:	7002      	strb	r2, [r0, #0]
 800678e:	232b      	movs	r3, #43	; 0x2b
 8006790:	2900      	cmp	r1, #0
 8006792:	da01      	bge.n	8006798 <__exponent+0x18>
 8006794:	232d      	movs	r3, #45	; 0x2d
 8006796:	424c      	negs	r4, r1
 8006798:	7073      	strb	r3, [r6, #1]
 800679a:	2c09      	cmp	r4, #9
 800679c:	dd22      	ble.n	80067e4 <__exponent+0x64>
 800679e:	ab02      	add	r3, sp, #8
 80067a0:	1ddd      	adds	r5, r3, #7
 80067a2:	0020      	movs	r0, r4
 80067a4:	210a      	movs	r1, #10
 80067a6:	f7f9 fe31 	bl	800040c <__aeabi_idivmod>
 80067aa:	1e6f      	subs	r7, r5, #1
 80067ac:	3130      	adds	r1, #48	; 0x30
 80067ae:	7039      	strb	r1, [r7, #0]
 80067b0:	0020      	movs	r0, r4
 80067b2:	210a      	movs	r1, #10
 80067b4:	f7f9 fd44 	bl	8000240 <__divsi3>
 80067b8:	0004      	movs	r4, r0
 80067ba:	2809      	cmp	r0, #9
 80067bc:	dc0b      	bgt.n	80067d6 <__exponent+0x56>
 80067be:	3d02      	subs	r5, #2
 80067c0:	3430      	adds	r4, #48	; 0x30
 80067c2:	9b01      	ldr	r3, [sp, #4]
 80067c4:	702c      	strb	r4, [r5, #0]
 80067c6:	aa02      	add	r2, sp, #8
 80067c8:	3207      	adds	r2, #7
 80067ca:	0018      	movs	r0, r3
 80067cc:	42aa      	cmp	r2, r5
 80067ce:	d804      	bhi.n	80067da <__exponent+0x5a>
 80067d0:	1b80      	subs	r0, r0, r6
 80067d2:	b005      	add	sp, #20
 80067d4:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80067d6:	003d      	movs	r5, r7
 80067d8:	e7e3      	b.n	80067a2 <__exponent+0x22>
 80067da:	782a      	ldrb	r2, [r5, #0]
 80067dc:	3501      	adds	r5, #1
 80067de:	701a      	strb	r2, [r3, #0]
 80067e0:	3301      	adds	r3, #1
 80067e2:	e7f0      	b.n	80067c6 <__exponent+0x46>
 80067e4:	2330      	movs	r3, #48	; 0x30
 80067e6:	18e4      	adds	r4, r4, r3
 80067e8:	70b3      	strb	r3, [r6, #2]
 80067ea:	1d30      	adds	r0, r6, #4
 80067ec:	70f4      	strb	r4, [r6, #3]
 80067ee:	e7ef      	b.n	80067d0 <__exponent+0x50>

080067f0 <_printf_float>:
 80067f0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80067f2:	b095      	sub	sp, #84	; 0x54
 80067f4:	000c      	movs	r4, r1
 80067f6:	920a      	str	r2, [sp, #40]	; 0x28
 80067f8:	930b      	str	r3, [sp, #44]	; 0x2c
 80067fa:	9d1a      	ldr	r5, [sp, #104]	; 0x68
 80067fc:	9009      	str	r0, [sp, #36]	; 0x24
 80067fe:	f002 fe57 	bl	80094b0 <_localeconv_r>
 8006802:	6803      	ldr	r3, [r0, #0]
 8006804:	0018      	movs	r0, r3
 8006806:	930c      	str	r3, [sp, #48]	; 0x30
 8006808:	f7f9 fc7e 	bl	8000108 <strlen>
 800680c:	2300      	movs	r3, #0
 800680e:	9312      	str	r3, [sp, #72]	; 0x48
 8006810:	6823      	ldr	r3, [r4, #0]
 8006812:	900e      	str	r0, [sp, #56]	; 0x38
 8006814:	930d      	str	r3, [sp, #52]	; 0x34
 8006816:	990d      	ldr	r1, [sp, #52]	; 0x34
 8006818:	7e27      	ldrb	r7, [r4, #24]
 800681a:	682b      	ldr	r3, [r5, #0]
 800681c:	2207      	movs	r2, #7
 800681e:	05c9      	lsls	r1, r1, #23
 8006820:	d545      	bpl.n	80068ae <_printf_float+0xbe>
 8006822:	189b      	adds	r3, r3, r2
 8006824:	4393      	bics	r3, r2
 8006826:	001a      	movs	r2, r3
 8006828:	3208      	adds	r2, #8
 800682a:	602a      	str	r2, [r5, #0]
 800682c:	681a      	ldr	r2, [r3, #0]
 800682e:	685b      	ldr	r3, [r3, #4]
 8006830:	64a2      	str	r2, [r4, #72]	; 0x48
 8006832:	64e3      	str	r3, [r4, #76]	; 0x4c
 8006834:	2201      	movs	r2, #1
 8006836:	6ce5      	ldr	r5, [r4, #76]	; 0x4c
 8006838:	6ca6      	ldr	r6, [r4, #72]	; 0x48
 800683a:	006b      	lsls	r3, r5, #1
 800683c:	085b      	lsrs	r3, r3, #1
 800683e:	930f      	str	r3, [sp, #60]	; 0x3c
 8006840:	4252      	negs	r2, r2
 8006842:	4bac      	ldr	r3, [pc, #688]	; (8006af4 <_printf_float+0x304>)
 8006844:	0030      	movs	r0, r6
 8006846:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8006848:	f7fb fc4e 	bl	80020e8 <__aeabi_dcmpun>
 800684c:	2800      	cmp	r0, #0
 800684e:	d130      	bne.n	80068b2 <_printf_float+0xc2>
 8006850:	2201      	movs	r2, #1
 8006852:	4ba8      	ldr	r3, [pc, #672]	; (8006af4 <_printf_float+0x304>)
 8006854:	4252      	negs	r2, r2
 8006856:	0030      	movs	r0, r6
 8006858:	990f      	ldr	r1, [sp, #60]	; 0x3c
 800685a:	f7f9 fdfd 	bl	8000458 <__aeabi_dcmple>
 800685e:	2800      	cmp	r0, #0
 8006860:	d127      	bne.n	80068b2 <_printf_float+0xc2>
 8006862:	2200      	movs	r2, #0
 8006864:	2300      	movs	r3, #0
 8006866:	0030      	movs	r0, r6
 8006868:	0029      	movs	r1, r5
 800686a:	f7f9 fdeb 	bl	8000444 <__aeabi_dcmplt>
 800686e:	2800      	cmp	r0, #0
 8006870:	d003      	beq.n	800687a <_printf_float+0x8a>
 8006872:	0023      	movs	r3, r4
 8006874:	222d      	movs	r2, #45	; 0x2d
 8006876:	3343      	adds	r3, #67	; 0x43
 8006878:	701a      	strb	r2, [r3, #0]
 800687a:	4d9f      	ldr	r5, [pc, #636]	; (8006af8 <_printf_float+0x308>)
 800687c:	2f47      	cmp	r7, #71	; 0x47
 800687e:	d800      	bhi.n	8006882 <_printf_float+0x92>
 8006880:	4d9e      	ldr	r5, [pc, #632]	; (8006afc <_printf_float+0x30c>)
 8006882:	2303      	movs	r3, #3
 8006884:	2600      	movs	r6, #0
 8006886:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006888:	6123      	str	r3, [r4, #16]
 800688a:	3301      	adds	r3, #1
 800688c:	439a      	bics	r2, r3
 800688e:	6022      	str	r2, [r4, #0]
 8006890:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8006892:	aa13      	add	r2, sp, #76	; 0x4c
 8006894:	9300      	str	r3, [sp, #0]
 8006896:	0021      	movs	r1, r4
 8006898:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 800689a:	9809      	ldr	r0, [sp, #36]	; 0x24
 800689c:	f000 f9f4 	bl	8006c88 <_printf_common>
 80068a0:	1c43      	adds	r3, r0, #1
 80068a2:	d000      	beq.n	80068a6 <_printf_float+0xb6>
 80068a4:	e093      	b.n	80069ce <_printf_float+0x1de>
 80068a6:	2001      	movs	r0, #1
 80068a8:	4240      	negs	r0, r0
 80068aa:	b015      	add	sp, #84	; 0x54
 80068ac:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80068ae:	3307      	adds	r3, #7
 80068b0:	e7b8      	b.n	8006824 <_printf_float+0x34>
 80068b2:	0032      	movs	r2, r6
 80068b4:	002b      	movs	r3, r5
 80068b6:	0030      	movs	r0, r6
 80068b8:	0029      	movs	r1, r5
 80068ba:	f7fb fc15 	bl	80020e8 <__aeabi_dcmpun>
 80068be:	2800      	cmp	r0, #0
 80068c0:	d004      	beq.n	80068cc <_printf_float+0xdc>
 80068c2:	4d8f      	ldr	r5, [pc, #572]	; (8006b00 <_printf_float+0x310>)
 80068c4:	2f47      	cmp	r7, #71	; 0x47
 80068c6:	d8dc      	bhi.n	8006882 <_printf_float+0x92>
 80068c8:	4d8e      	ldr	r5, [pc, #568]	; (8006b04 <_printf_float+0x314>)
 80068ca:	e7da      	b.n	8006882 <_printf_float+0x92>
 80068cc:	2380      	movs	r3, #128	; 0x80
 80068ce:	990d      	ldr	r1, [sp, #52]	; 0x34
 80068d0:	6862      	ldr	r2, [r4, #4]
 80068d2:	00db      	lsls	r3, r3, #3
 80068d4:	430b      	orrs	r3, r1
 80068d6:	1c51      	adds	r1, r2, #1
 80068d8:	d143      	bne.n	8006962 <_printf_float+0x172>
 80068da:	3207      	adds	r2, #7
 80068dc:	6062      	str	r2, [r4, #4]
 80068de:	aa12      	add	r2, sp, #72	; 0x48
 80068e0:	2100      	movs	r1, #0
 80068e2:	9205      	str	r2, [sp, #20]
 80068e4:	aa11      	add	r2, sp, #68	; 0x44
 80068e6:	9203      	str	r2, [sp, #12]
 80068e8:	2223      	movs	r2, #35	; 0x23
 80068ea:	6023      	str	r3, [r4, #0]
 80068ec:	9106      	str	r1, [sp, #24]
 80068ee:	9301      	str	r3, [sp, #4]
 80068f0:	a908      	add	r1, sp, #32
 80068f2:	6863      	ldr	r3, [r4, #4]
 80068f4:	1852      	adds	r2, r2, r1
 80068f6:	9202      	str	r2, [sp, #8]
 80068f8:	9300      	str	r3, [sp, #0]
 80068fa:	0032      	movs	r2, r6
 80068fc:	002b      	movs	r3, r5
 80068fe:	9704      	str	r7, [sp, #16]
 8006900:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006902:	f7ff fed9 	bl	80066b8 <__cvt>
 8006906:	2320      	movs	r3, #32
 8006908:	003a      	movs	r2, r7
 800690a:	0005      	movs	r5, r0
 800690c:	439a      	bics	r2, r3
 800690e:	2a47      	cmp	r2, #71	; 0x47
 8006910:	d107      	bne.n	8006922 <_printf_float+0x132>
 8006912:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006914:	1cda      	adds	r2, r3, #3
 8006916:	db02      	blt.n	800691e <_printf_float+0x12e>
 8006918:	6862      	ldr	r2, [r4, #4]
 800691a:	4293      	cmp	r3, r2
 800691c:	dd45      	ble.n	80069aa <_printf_float+0x1ba>
 800691e:	3f02      	subs	r7, #2
 8006920:	b2ff      	uxtb	r7, r7
 8006922:	9911      	ldr	r1, [sp, #68]	; 0x44
 8006924:	2f65      	cmp	r7, #101	; 0x65
 8006926:	d825      	bhi.n	8006974 <_printf_float+0x184>
 8006928:	0020      	movs	r0, r4
 800692a:	3901      	subs	r1, #1
 800692c:	003a      	movs	r2, r7
 800692e:	3050      	adds	r0, #80	; 0x50
 8006930:	9111      	str	r1, [sp, #68]	; 0x44
 8006932:	f7ff ff25 	bl	8006780 <__exponent>
 8006936:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006938:	0006      	movs	r6, r0
 800693a:	1813      	adds	r3, r2, r0
 800693c:	6123      	str	r3, [r4, #16]
 800693e:	2a01      	cmp	r2, #1
 8006940:	dc02      	bgt.n	8006948 <_printf_float+0x158>
 8006942:	6822      	ldr	r2, [r4, #0]
 8006944:	07d2      	lsls	r2, r2, #31
 8006946:	d501      	bpl.n	800694c <_printf_float+0x15c>
 8006948:	3301      	adds	r3, #1
 800694a:	6123      	str	r3, [r4, #16]
 800694c:	2323      	movs	r3, #35	; 0x23
 800694e:	aa08      	add	r2, sp, #32
 8006950:	189b      	adds	r3, r3, r2
 8006952:	781b      	ldrb	r3, [r3, #0]
 8006954:	2b00      	cmp	r3, #0
 8006956:	d09b      	beq.n	8006890 <_printf_float+0xa0>
 8006958:	0023      	movs	r3, r4
 800695a:	222d      	movs	r2, #45	; 0x2d
 800695c:	3343      	adds	r3, #67	; 0x43
 800695e:	701a      	strb	r2, [r3, #0]
 8006960:	e796      	b.n	8006890 <_printf_float+0xa0>
 8006962:	2f67      	cmp	r7, #103	; 0x67
 8006964:	d100      	bne.n	8006968 <_printf_float+0x178>
 8006966:	e176      	b.n	8006c56 <_printf_float+0x466>
 8006968:	2f47      	cmp	r7, #71	; 0x47
 800696a:	d1b8      	bne.n	80068de <_printf_float+0xee>
 800696c:	2a00      	cmp	r2, #0
 800696e:	d1b6      	bne.n	80068de <_printf_float+0xee>
 8006970:	2201      	movs	r2, #1
 8006972:	e7b3      	b.n	80068dc <_printf_float+0xec>
 8006974:	2f66      	cmp	r7, #102	; 0x66
 8006976:	d119      	bne.n	80069ac <_printf_float+0x1bc>
 8006978:	6863      	ldr	r3, [r4, #4]
 800697a:	2900      	cmp	r1, #0
 800697c:	dd0c      	ble.n	8006998 <_printf_float+0x1a8>
 800697e:	6121      	str	r1, [r4, #16]
 8006980:	2b00      	cmp	r3, #0
 8006982:	d102      	bne.n	800698a <_printf_float+0x19a>
 8006984:	6822      	ldr	r2, [r4, #0]
 8006986:	07d2      	lsls	r2, r2, #31
 8006988:	d502      	bpl.n	8006990 <_printf_float+0x1a0>
 800698a:	3301      	adds	r3, #1
 800698c:	185b      	adds	r3, r3, r1
 800698e:	6123      	str	r3, [r4, #16]
 8006990:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006992:	2600      	movs	r6, #0
 8006994:	65a3      	str	r3, [r4, #88]	; 0x58
 8006996:	e7d9      	b.n	800694c <_printf_float+0x15c>
 8006998:	2b00      	cmp	r3, #0
 800699a:	d103      	bne.n	80069a4 <_printf_float+0x1b4>
 800699c:	2201      	movs	r2, #1
 800699e:	6821      	ldr	r1, [r4, #0]
 80069a0:	4211      	tst	r1, r2
 80069a2:	d000      	beq.n	80069a6 <_printf_float+0x1b6>
 80069a4:	1c9a      	adds	r2, r3, #2
 80069a6:	6122      	str	r2, [r4, #16]
 80069a8:	e7f2      	b.n	8006990 <_printf_float+0x1a0>
 80069aa:	2767      	movs	r7, #103	; 0x67
 80069ac:	9b11      	ldr	r3, [sp, #68]	; 0x44
 80069ae:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80069b0:	4293      	cmp	r3, r2
 80069b2:	db05      	blt.n	80069c0 <_printf_float+0x1d0>
 80069b4:	6822      	ldr	r2, [r4, #0]
 80069b6:	6123      	str	r3, [r4, #16]
 80069b8:	07d2      	lsls	r2, r2, #31
 80069ba:	d5e9      	bpl.n	8006990 <_printf_float+0x1a0>
 80069bc:	3301      	adds	r3, #1
 80069be:	e7e6      	b.n	800698e <_printf_float+0x19e>
 80069c0:	2101      	movs	r1, #1
 80069c2:	2b00      	cmp	r3, #0
 80069c4:	dc01      	bgt.n	80069ca <_printf_float+0x1da>
 80069c6:	1849      	adds	r1, r1, r1
 80069c8:	1ac9      	subs	r1, r1, r3
 80069ca:	1852      	adds	r2, r2, r1
 80069cc:	e7eb      	b.n	80069a6 <_printf_float+0x1b6>
 80069ce:	6822      	ldr	r2, [r4, #0]
 80069d0:	0553      	lsls	r3, r2, #21
 80069d2:	d408      	bmi.n	80069e6 <_printf_float+0x1f6>
 80069d4:	6923      	ldr	r3, [r4, #16]
 80069d6:	002a      	movs	r2, r5
 80069d8:	990a      	ldr	r1, [sp, #40]	; 0x28
 80069da:	9809      	ldr	r0, [sp, #36]	; 0x24
 80069dc:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 80069de:	47a8      	blx	r5
 80069e0:	1c43      	adds	r3, r0, #1
 80069e2:	d129      	bne.n	8006a38 <_printf_float+0x248>
 80069e4:	e75f      	b.n	80068a6 <_printf_float+0xb6>
 80069e6:	2f65      	cmp	r7, #101	; 0x65
 80069e8:	d800      	bhi.n	80069ec <_printf_float+0x1fc>
 80069ea:	e0e0      	b.n	8006bae <_printf_float+0x3be>
 80069ec:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 80069ee:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 80069f0:	2200      	movs	r2, #0
 80069f2:	2300      	movs	r3, #0
 80069f4:	f7f9 fd20 	bl	8000438 <__aeabi_dcmpeq>
 80069f8:	2800      	cmp	r0, #0
 80069fa:	d034      	beq.n	8006a66 <_printf_float+0x276>
 80069fc:	2301      	movs	r3, #1
 80069fe:	4a42      	ldr	r2, [pc, #264]	; (8006b08 <_printf_float+0x318>)
 8006a00:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006a02:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006a04:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006a06:	47a8      	blx	r5
 8006a08:	1c43      	adds	r3, r0, #1
 8006a0a:	d100      	bne.n	8006a0e <_printf_float+0x21e>
 8006a0c:	e74b      	b.n	80068a6 <_printf_float+0xb6>
 8006a0e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a10:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006a12:	4293      	cmp	r3, r2
 8006a14:	db02      	blt.n	8006a1c <_printf_float+0x22c>
 8006a16:	6823      	ldr	r3, [r4, #0]
 8006a18:	07db      	lsls	r3, r3, #31
 8006a1a:	d50d      	bpl.n	8006a38 <_printf_float+0x248>
 8006a1c:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006a1e:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006a20:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006a22:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006a24:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006a26:	47a8      	blx	r5
 8006a28:	2500      	movs	r5, #0
 8006a2a:	1c43      	adds	r3, r0, #1
 8006a2c:	d100      	bne.n	8006a30 <_printf_float+0x240>
 8006a2e:	e73a      	b.n	80068a6 <_printf_float+0xb6>
 8006a30:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006a32:	3b01      	subs	r3, #1
 8006a34:	42ab      	cmp	r3, r5
 8006a36:	dc0a      	bgt.n	8006a4e <_printf_float+0x25e>
 8006a38:	6823      	ldr	r3, [r4, #0]
 8006a3a:	079b      	lsls	r3, r3, #30
 8006a3c:	d500      	bpl.n	8006a40 <_printf_float+0x250>
 8006a3e:	e108      	b.n	8006c52 <_printf_float+0x462>
 8006a40:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8006a42:	68e0      	ldr	r0, [r4, #12]
 8006a44:	4298      	cmp	r0, r3
 8006a46:	db00      	blt.n	8006a4a <_printf_float+0x25a>
 8006a48:	e72f      	b.n	80068aa <_printf_float+0xba>
 8006a4a:	0018      	movs	r0, r3
 8006a4c:	e72d      	b.n	80068aa <_printf_float+0xba>
 8006a4e:	0022      	movs	r2, r4
 8006a50:	2301      	movs	r3, #1
 8006a52:	321a      	adds	r2, #26
 8006a54:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006a56:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006a58:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006a5a:	47b0      	blx	r6
 8006a5c:	1c43      	adds	r3, r0, #1
 8006a5e:	d100      	bne.n	8006a62 <_printf_float+0x272>
 8006a60:	e721      	b.n	80068a6 <_printf_float+0xb6>
 8006a62:	3501      	adds	r5, #1
 8006a64:	e7e4      	b.n	8006a30 <_printf_float+0x240>
 8006a66:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a68:	2b00      	cmp	r3, #0
 8006a6a:	dc2d      	bgt.n	8006ac8 <_printf_float+0x2d8>
 8006a6c:	2301      	movs	r3, #1
 8006a6e:	4a26      	ldr	r2, [pc, #152]	; (8006b08 <_printf_float+0x318>)
 8006a70:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006a72:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006a74:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006a76:	47b0      	blx	r6
 8006a78:	1c43      	adds	r3, r0, #1
 8006a7a:	d100      	bne.n	8006a7e <_printf_float+0x28e>
 8006a7c:	e713      	b.n	80068a6 <_printf_float+0xb6>
 8006a7e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006a80:	2b00      	cmp	r3, #0
 8006a82:	d105      	bne.n	8006a90 <_printf_float+0x2a0>
 8006a84:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006a86:	2b00      	cmp	r3, #0
 8006a88:	d102      	bne.n	8006a90 <_printf_float+0x2a0>
 8006a8a:	6823      	ldr	r3, [r4, #0]
 8006a8c:	07db      	lsls	r3, r3, #31
 8006a8e:	d5d3      	bpl.n	8006a38 <_printf_float+0x248>
 8006a90:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006a92:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006a94:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006a96:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006a98:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006a9a:	47b0      	blx	r6
 8006a9c:	2600      	movs	r6, #0
 8006a9e:	1c43      	adds	r3, r0, #1
 8006aa0:	d100      	bne.n	8006aa4 <_printf_float+0x2b4>
 8006aa2:	e700      	b.n	80068a6 <_printf_float+0xb6>
 8006aa4:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006aa6:	425b      	negs	r3, r3
 8006aa8:	42b3      	cmp	r3, r6
 8006aaa:	dc01      	bgt.n	8006ab0 <_printf_float+0x2c0>
 8006aac:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006aae:	e792      	b.n	80069d6 <_printf_float+0x1e6>
 8006ab0:	0022      	movs	r2, r4
 8006ab2:	2301      	movs	r3, #1
 8006ab4:	321a      	adds	r2, #26
 8006ab6:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006ab8:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006aba:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8006abc:	47b8      	blx	r7
 8006abe:	1c43      	adds	r3, r0, #1
 8006ac0:	d100      	bne.n	8006ac4 <_printf_float+0x2d4>
 8006ac2:	e6f0      	b.n	80068a6 <_printf_float+0xb6>
 8006ac4:	3601      	adds	r6, #1
 8006ac6:	e7ed      	b.n	8006aa4 <_printf_float+0x2b4>
 8006ac8:	6da3      	ldr	r3, [r4, #88]	; 0x58
 8006aca:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8006acc:	429f      	cmp	r7, r3
 8006ace:	dd00      	ble.n	8006ad2 <_printf_float+0x2e2>
 8006ad0:	001f      	movs	r7, r3
 8006ad2:	2f00      	cmp	r7, #0
 8006ad4:	dd08      	ble.n	8006ae8 <_printf_float+0x2f8>
 8006ad6:	003b      	movs	r3, r7
 8006ad8:	002a      	movs	r2, r5
 8006ada:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006adc:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006ade:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006ae0:	47b0      	blx	r6
 8006ae2:	1c43      	adds	r3, r0, #1
 8006ae4:	d100      	bne.n	8006ae8 <_printf_float+0x2f8>
 8006ae6:	e6de      	b.n	80068a6 <_printf_float+0xb6>
 8006ae8:	2300      	movs	r3, #0
 8006aea:	930d      	str	r3, [sp, #52]	; 0x34
 8006aec:	43fb      	mvns	r3, r7
 8006aee:	17db      	asrs	r3, r3, #31
 8006af0:	930f      	str	r3, [sp, #60]	; 0x3c
 8006af2:	e018      	b.n	8006b26 <_printf_float+0x336>
 8006af4:	7fefffff 	.word	0x7fefffff
 8006af8:	0800a3b4 	.word	0x0800a3b4
 8006afc:	0800a3b0 	.word	0x0800a3b0
 8006b00:	0800a3bc 	.word	0x0800a3bc
 8006b04:	0800a3b8 	.word	0x0800a3b8
 8006b08:	0800a3c0 	.word	0x0800a3c0
 8006b0c:	0022      	movs	r2, r4
 8006b0e:	2301      	movs	r3, #1
 8006b10:	321a      	adds	r2, #26
 8006b12:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006b14:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006b16:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006b18:	47b0      	blx	r6
 8006b1a:	1c43      	adds	r3, r0, #1
 8006b1c:	d100      	bne.n	8006b20 <_printf_float+0x330>
 8006b1e:	e6c2      	b.n	80068a6 <_printf_float+0xb6>
 8006b20:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8006b22:	3301      	adds	r3, #1
 8006b24:	930d      	str	r3, [sp, #52]	; 0x34
 8006b26:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8006b28:	6da6      	ldr	r6, [r4, #88]	; 0x58
 8006b2a:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 8006b2c:	403b      	ands	r3, r7
 8006b2e:	1af3      	subs	r3, r6, r3
 8006b30:	4293      	cmp	r3, r2
 8006b32:	dceb      	bgt.n	8006b0c <_printf_float+0x31c>
 8006b34:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006b36:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8006b38:	19ad      	adds	r5, r5, r6
 8006b3a:	4293      	cmp	r3, r2
 8006b3c:	db10      	blt.n	8006b60 <_printf_float+0x370>
 8006b3e:	6823      	ldr	r3, [r4, #0]
 8006b40:	07db      	lsls	r3, r3, #31
 8006b42:	d40d      	bmi.n	8006b60 <_printf_float+0x370>
 8006b44:	9f12      	ldr	r7, [sp, #72]	; 0x48
 8006b46:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8006b48:	1bbe      	subs	r6, r7, r6
 8006b4a:	1aff      	subs	r7, r7, r3
 8006b4c:	42b7      	cmp	r7, r6
 8006b4e:	dd00      	ble.n	8006b52 <_printf_float+0x362>
 8006b50:	0037      	movs	r7, r6
 8006b52:	2f00      	cmp	r7, #0
 8006b54:	dc0d      	bgt.n	8006b72 <_printf_float+0x382>
 8006b56:	43fe      	mvns	r6, r7
 8006b58:	17f3      	asrs	r3, r6, #31
 8006b5a:	2500      	movs	r5, #0
 8006b5c:	930c      	str	r3, [sp, #48]	; 0x30
 8006b5e:	e01c      	b.n	8006b9a <_printf_float+0x3aa>
 8006b60:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006b62:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006b64:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006b66:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006b68:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8006b6a:	47b8      	blx	r7
 8006b6c:	1c43      	adds	r3, r0, #1
 8006b6e:	d1e9      	bne.n	8006b44 <_printf_float+0x354>
 8006b70:	e699      	b.n	80068a6 <_printf_float+0xb6>
 8006b72:	003b      	movs	r3, r7
 8006b74:	002a      	movs	r2, r5
 8006b76:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006b78:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006b7a:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006b7c:	47a8      	blx	r5
 8006b7e:	1c43      	adds	r3, r0, #1
 8006b80:	d1e9      	bne.n	8006b56 <_printf_float+0x366>
 8006b82:	e690      	b.n	80068a6 <_printf_float+0xb6>
 8006b84:	0022      	movs	r2, r4
 8006b86:	2301      	movs	r3, #1
 8006b88:	321a      	adds	r2, #26
 8006b8a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006b8c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006b8e:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006b90:	47b0      	blx	r6
 8006b92:	1c43      	adds	r3, r0, #1
 8006b94:	d100      	bne.n	8006b98 <_printf_float+0x3a8>
 8006b96:	e686      	b.n	80068a6 <_printf_float+0xb6>
 8006b98:	3501      	adds	r5, #1
 8006b9a:	9a11      	ldr	r2, [sp, #68]	; 0x44
 8006b9c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006b9e:	990c      	ldr	r1, [sp, #48]	; 0x30
 8006ba0:	1a9b      	subs	r3, r3, r2
 8006ba2:	003a      	movs	r2, r7
 8006ba4:	400a      	ands	r2, r1
 8006ba6:	1a9b      	subs	r3, r3, r2
 8006ba8:	42ab      	cmp	r3, r5
 8006baa:	dceb      	bgt.n	8006b84 <_printf_float+0x394>
 8006bac:	e744      	b.n	8006a38 <_printf_float+0x248>
 8006bae:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006bb0:	2b01      	cmp	r3, #1
 8006bb2:	dc02      	bgt.n	8006bba <_printf_float+0x3ca>
 8006bb4:	2301      	movs	r3, #1
 8006bb6:	421a      	tst	r2, r3
 8006bb8:	d032      	beq.n	8006c20 <_printf_float+0x430>
 8006bba:	2301      	movs	r3, #1
 8006bbc:	002a      	movs	r2, r5
 8006bbe:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006bc0:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006bc2:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8006bc4:	47b8      	blx	r7
 8006bc6:	1c43      	adds	r3, r0, #1
 8006bc8:	d100      	bne.n	8006bcc <_printf_float+0x3dc>
 8006bca:	e66c      	b.n	80068a6 <_printf_float+0xb6>
 8006bcc:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006bce:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8006bd0:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006bd2:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006bd4:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8006bd6:	3501      	adds	r5, #1
 8006bd8:	47b8      	blx	r7
 8006bda:	1c43      	adds	r3, r0, #1
 8006bdc:	d100      	bne.n	8006be0 <_printf_float+0x3f0>
 8006bde:	e662      	b.n	80068a6 <_printf_float+0xb6>
 8006be0:	6ca0      	ldr	r0, [r4, #72]	; 0x48
 8006be2:	6ce1      	ldr	r1, [r4, #76]	; 0x4c
 8006be4:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006be6:	2200      	movs	r2, #0
 8006be8:	1e5f      	subs	r7, r3, #1
 8006bea:	2300      	movs	r3, #0
 8006bec:	f7f9 fc24 	bl	8000438 <__aeabi_dcmpeq>
 8006bf0:	003b      	movs	r3, r7
 8006bf2:	2800      	cmp	r0, #0
 8006bf4:	d014      	beq.n	8006c20 <_printf_float+0x430>
 8006bf6:	2500      	movs	r5, #0
 8006bf8:	e00a      	b.n	8006c10 <_printf_float+0x420>
 8006bfa:	0022      	movs	r2, r4
 8006bfc:	2301      	movs	r3, #1
 8006bfe:	321a      	adds	r2, #26
 8006c00:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006c02:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006c04:	9f0b      	ldr	r7, [sp, #44]	; 0x2c
 8006c06:	47b8      	blx	r7
 8006c08:	1c43      	adds	r3, r0, #1
 8006c0a:	d100      	bne.n	8006c0e <_printf_float+0x41e>
 8006c0c:	e64b      	b.n	80068a6 <_printf_float+0xb6>
 8006c0e:	3501      	adds	r5, #1
 8006c10:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8006c12:	3b01      	subs	r3, #1
 8006c14:	42ab      	cmp	r3, r5
 8006c16:	dcf0      	bgt.n	8006bfa <_printf_float+0x40a>
 8006c18:	0022      	movs	r2, r4
 8006c1a:	0033      	movs	r3, r6
 8006c1c:	3250      	adds	r2, #80	; 0x50
 8006c1e:	e6db      	b.n	80069d8 <_printf_float+0x1e8>
 8006c20:	002a      	movs	r2, r5
 8006c22:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006c24:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006c26:	9d0b      	ldr	r5, [sp, #44]	; 0x2c
 8006c28:	47a8      	blx	r5
 8006c2a:	1c43      	adds	r3, r0, #1
 8006c2c:	d1f4      	bne.n	8006c18 <_printf_float+0x428>
 8006c2e:	e63a      	b.n	80068a6 <_printf_float+0xb6>
 8006c30:	0022      	movs	r2, r4
 8006c32:	2301      	movs	r3, #1
 8006c34:	3219      	adds	r2, #25
 8006c36:	990a      	ldr	r1, [sp, #40]	; 0x28
 8006c38:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006c3a:	9e0b      	ldr	r6, [sp, #44]	; 0x2c
 8006c3c:	47b0      	blx	r6
 8006c3e:	1c43      	adds	r3, r0, #1
 8006c40:	d100      	bne.n	8006c44 <_printf_float+0x454>
 8006c42:	e630      	b.n	80068a6 <_printf_float+0xb6>
 8006c44:	3501      	adds	r5, #1
 8006c46:	68e3      	ldr	r3, [r4, #12]
 8006c48:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8006c4a:	1a9b      	subs	r3, r3, r2
 8006c4c:	42ab      	cmp	r3, r5
 8006c4e:	dcef      	bgt.n	8006c30 <_printf_float+0x440>
 8006c50:	e6f6      	b.n	8006a40 <_printf_float+0x250>
 8006c52:	2500      	movs	r5, #0
 8006c54:	e7f7      	b.n	8006c46 <_printf_float+0x456>
 8006c56:	2a00      	cmp	r2, #0
 8006c58:	d100      	bne.n	8006c5c <_printf_float+0x46c>
 8006c5a:	e689      	b.n	8006970 <_printf_float+0x180>
 8006c5c:	2100      	movs	r1, #0
 8006c5e:	9106      	str	r1, [sp, #24]
 8006c60:	a912      	add	r1, sp, #72	; 0x48
 8006c62:	9105      	str	r1, [sp, #20]
 8006c64:	a911      	add	r1, sp, #68	; 0x44
 8006c66:	9103      	str	r1, [sp, #12]
 8006c68:	2123      	movs	r1, #35	; 0x23
 8006c6a:	a808      	add	r0, sp, #32
 8006c6c:	1809      	adds	r1, r1, r0
 8006c6e:	6023      	str	r3, [r4, #0]
 8006c70:	9301      	str	r3, [sp, #4]
 8006c72:	9200      	str	r2, [sp, #0]
 8006c74:	002b      	movs	r3, r5
 8006c76:	9704      	str	r7, [sp, #16]
 8006c78:	9102      	str	r1, [sp, #8]
 8006c7a:	0032      	movs	r2, r6
 8006c7c:	9809      	ldr	r0, [sp, #36]	; 0x24
 8006c7e:	f7ff fd1b 	bl	80066b8 <__cvt>
 8006c82:	0005      	movs	r5, r0
 8006c84:	e645      	b.n	8006912 <_printf_float+0x122>
 8006c86:	46c0      	nop			; (mov r8, r8)

08006c88 <_printf_common>:
 8006c88:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8006c8a:	0015      	movs	r5, r2
 8006c8c:	9301      	str	r3, [sp, #4]
 8006c8e:	688a      	ldr	r2, [r1, #8]
 8006c90:	690b      	ldr	r3, [r1, #16]
 8006c92:	9000      	str	r0, [sp, #0]
 8006c94:	000c      	movs	r4, r1
 8006c96:	4293      	cmp	r3, r2
 8006c98:	da00      	bge.n	8006c9c <_printf_common+0x14>
 8006c9a:	0013      	movs	r3, r2
 8006c9c:	0022      	movs	r2, r4
 8006c9e:	602b      	str	r3, [r5, #0]
 8006ca0:	3243      	adds	r2, #67	; 0x43
 8006ca2:	7812      	ldrb	r2, [r2, #0]
 8006ca4:	2a00      	cmp	r2, #0
 8006ca6:	d001      	beq.n	8006cac <_printf_common+0x24>
 8006ca8:	3301      	adds	r3, #1
 8006caa:	602b      	str	r3, [r5, #0]
 8006cac:	6823      	ldr	r3, [r4, #0]
 8006cae:	069b      	lsls	r3, r3, #26
 8006cb0:	d502      	bpl.n	8006cb8 <_printf_common+0x30>
 8006cb2:	682b      	ldr	r3, [r5, #0]
 8006cb4:	3302      	adds	r3, #2
 8006cb6:	602b      	str	r3, [r5, #0]
 8006cb8:	2706      	movs	r7, #6
 8006cba:	6823      	ldr	r3, [r4, #0]
 8006cbc:	401f      	ands	r7, r3
 8006cbe:	d027      	beq.n	8006d10 <_printf_common+0x88>
 8006cc0:	0023      	movs	r3, r4
 8006cc2:	3343      	adds	r3, #67	; 0x43
 8006cc4:	781b      	ldrb	r3, [r3, #0]
 8006cc6:	1e5a      	subs	r2, r3, #1
 8006cc8:	4193      	sbcs	r3, r2
 8006cca:	6822      	ldr	r2, [r4, #0]
 8006ccc:	0692      	lsls	r2, r2, #26
 8006cce:	d430      	bmi.n	8006d32 <_printf_common+0xaa>
 8006cd0:	0022      	movs	r2, r4
 8006cd2:	9901      	ldr	r1, [sp, #4]
 8006cd4:	3243      	adds	r2, #67	; 0x43
 8006cd6:	9800      	ldr	r0, [sp, #0]
 8006cd8:	9e08      	ldr	r6, [sp, #32]
 8006cda:	47b0      	blx	r6
 8006cdc:	1c43      	adds	r3, r0, #1
 8006cde:	d025      	beq.n	8006d2c <_printf_common+0xa4>
 8006ce0:	2306      	movs	r3, #6
 8006ce2:	6820      	ldr	r0, [r4, #0]
 8006ce4:	682a      	ldr	r2, [r5, #0]
 8006ce6:	68e1      	ldr	r1, [r4, #12]
 8006ce8:	4003      	ands	r3, r0
 8006cea:	2500      	movs	r5, #0
 8006cec:	2b04      	cmp	r3, #4
 8006cee:	d103      	bne.n	8006cf8 <_printf_common+0x70>
 8006cf0:	1a8d      	subs	r5, r1, r2
 8006cf2:	43eb      	mvns	r3, r5
 8006cf4:	17db      	asrs	r3, r3, #31
 8006cf6:	401d      	ands	r5, r3
 8006cf8:	68a3      	ldr	r3, [r4, #8]
 8006cfa:	6922      	ldr	r2, [r4, #16]
 8006cfc:	4293      	cmp	r3, r2
 8006cfe:	dd01      	ble.n	8006d04 <_printf_common+0x7c>
 8006d00:	1a9b      	subs	r3, r3, r2
 8006d02:	18ed      	adds	r5, r5, r3
 8006d04:	2700      	movs	r7, #0
 8006d06:	42bd      	cmp	r5, r7
 8006d08:	d120      	bne.n	8006d4c <_printf_common+0xc4>
 8006d0a:	2000      	movs	r0, #0
 8006d0c:	e010      	b.n	8006d30 <_printf_common+0xa8>
 8006d0e:	3701      	adds	r7, #1
 8006d10:	68e3      	ldr	r3, [r4, #12]
 8006d12:	682a      	ldr	r2, [r5, #0]
 8006d14:	1a9b      	subs	r3, r3, r2
 8006d16:	42bb      	cmp	r3, r7
 8006d18:	ddd2      	ble.n	8006cc0 <_printf_common+0x38>
 8006d1a:	0022      	movs	r2, r4
 8006d1c:	2301      	movs	r3, #1
 8006d1e:	3219      	adds	r2, #25
 8006d20:	9901      	ldr	r1, [sp, #4]
 8006d22:	9800      	ldr	r0, [sp, #0]
 8006d24:	9e08      	ldr	r6, [sp, #32]
 8006d26:	47b0      	blx	r6
 8006d28:	1c43      	adds	r3, r0, #1
 8006d2a:	d1f0      	bne.n	8006d0e <_printf_common+0x86>
 8006d2c:	2001      	movs	r0, #1
 8006d2e:	4240      	negs	r0, r0
 8006d30:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8006d32:	2030      	movs	r0, #48	; 0x30
 8006d34:	18e1      	adds	r1, r4, r3
 8006d36:	3143      	adds	r1, #67	; 0x43
 8006d38:	7008      	strb	r0, [r1, #0]
 8006d3a:	0021      	movs	r1, r4
 8006d3c:	1c5a      	adds	r2, r3, #1
 8006d3e:	3145      	adds	r1, #69	; 0x45
 8006d40:	7809      	ldrb	r1, [r1, #0]
 8006d42:	18a2      	adds	r2, r4, r2
 8006d44:	3243      	adds	r2, #67	; 0x43
 8006d46:	3302      	adds	r3, #2
 8006d48:	7011      	strb	r1, [r2, #0]
 8006d4a:	e7c1      	b.n	8006cd0 <_printf_common+0x48>
 8006d4c:	0022      	movs	r2, r4
 8006d4e:	2301      	movs	r3, #1
 8006d50:	321a      	adds	r2, #26
 8006d52:	9901      	ldr	r1, [sp, #4]
 8006d54:	9800      	ldr	r0, [sp, #0]
 8006d56:	9e08      	ldr	r6, [sp, #32]
 8006d58:	47b0      	blx	r6
 8006d5a:	1c43      	adds	r3, r0, #1
 8006d5c:	d0e6      	beq.n	8006d2c <_printf_common+0xa4>
 8006d5e:	3701      	adds	r7, #1
 8006d60:	e7d1      	b.n	8006d06 <_printf_common+0x7e>
	...

08006d64 <_printf_i>:
 8006d64:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006d66:	b089      	sub	sp, #36	; 0x24
 8006d68:	9204      	str	r2, [sp, #16]
 8006d6a:	000a      	movs	r2, r1
 8006d6c:	3243      	adds	r2, #67	; 0x43
 8006d6e:	9305      	str	r3, [sp, #20]
 8006d70:	9003      	str	r0, [sp, #12]
 8006d72:	9202      	str	r2, [sp, #8]
 8006d74:	7e0a      	ldrb	r2, [r1, #24]
 8006d76:	000c      	movs	r4, r1
 8006d78:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8006d7a:	2a6e      	cmp	r2, #110	; 0x6e
 8006d7c:	d100      	bne.n	8006d80 <_printf_i+0x1c>
 8006d7e:	e086      	b.n	8006e8e <_printf_i+0x12a>
 8006d80:	d81f      	bhi.n	8006dc2 <_printf_i+0x5e>
 8006d82:	2a63      	cmp	r2, #99	; 0x63
 8006d84:	d033      	beq.n	8006dee <_printf_i+0x8a>
 8006d86:	d808      	bhi.n	8006d9a <_printf_i+0x36>
 8006d88:	2a00      	cmp	r2, #0
 8006d8a:	d100      	bne.n	8006d8e <_printf_i+0x2a>
 8006d8c:	e08c      	b.n	8006ea8 <_printf_i+0x144>
 8006d8e:	2a58      	cmp	r2, #88	; 0x58
 8006d90:	d04d      	beq.n	8006e2e <_printf_i+0xca>
 8006d92:	0025      	movs	r5, r4
 8006d94:	3542      	adds	r5, #66	; 0x42
 8006d96:	702a      	strb	r2, [r5, #0]
 8006d98:	e030      	b.n	8006dfc <_printf_i+0x98>
 8006d9a:	2a64      	cmp	r2, #100	; 0x64
 8006d9c:	d001      	beq.n	8006da2 <_printf_i+0x3e>
 8006d9e:	2a69      	cmp	r2, #105	; 0x69
 8006da0:	d1f7      	bne.n	8006d92 <_printf_i+0x2e>
 8006da2:	6819      	ldr	r1, [r3, #0]
 8006da4:	6825      	ldr	r5, [r4, #0]
 8006da6:	1d0a      	adds	r2, r1, #4
 8006da8:	0628      	lsls	r0, r5, #24
 8006daa:	d529      	bpl.n	8006e00 <_printf_i+0x9c>
 8006dac:	6808      	ldr	r0, [r1, #0]
 8006dae:	601a      	str	r2, [r3, #0]
 8006db0:	2800      	cmp	r0, #0
 8006db2:	da03      	bge.n	8006dbc <_printf_i+0x58>
 8006db4:	232d      	movs	r3, #45	; 0x2d
 8006db6:	9a02      	ldr	r2, [sp, #8]
 8006db8:	4240      	negs	r0, r0
 8006dba:	7013      	strb	r3, [r2, #0]
 8006dbc:	4e6b      	ldr	r6, [pc, #428]	; (8006f6c <_printf_i+0x208>)
 8006dbe:	270a      	movs	r7, #10
 8006dc0:	e04f      	b.n	8006e62 <_printf_i+0xfe>
 8006dc2:	2a73      	cmp	r2, #115	; 0x73
 8006dc4:	d074      	beq.n	8006eb0 <_printf_i+0x14c>
 8006dc6:	d808      	bhi.n	8006dda <_printf_i+0x76>
 8006dc8:	2a6f      	cmp	r2, #111	; 0x6f
 8006dca:	d01f      	beq.n	8006e0c <_printf_i+0xa8>
 8006dcc:	2a70      	cmp	r2, #112	; 0x70
 8006dce:	d1e0      	bne.n	8006d92 <_printf_i+0x2e>
 8006dd0:	2220      	movs	r2, #32
 8006dd2:	6809      	ldr	r1, [r1, #0]
 8006dd4:	430a      	orrs	r2, r1
 8006dd6:	6022      	str	r2, [r4, #0]
 8006dd8:	e003      	b.n	8006de2 <_printf_i+0x7e>
 8006dda:	2a75      	cmp	r2, #117	; 0x75
 8006ddc:	d016      	beq.n	8006e0c <_printf_i+0xa8>
 8006dde:	2a78      	cmp	r2, #120	; 0x78
 8006de0:	d1d7      	bne.n	8006d92 <_printf_i+0x2e>
 8006de2:	0022      	movs	r2, r4
 8006de4:	2178      	movs	r1, #120	; 0x78
 8006de6:	3245      	adds	r2, #69	; 0x45
 8006de8:	7011      	strb	r1, [r2, #0]
 8006dea:	4e61      	ldr	r6, [pc, #388]	; (8006f70 <_printf_i+0x20c>)
 8006dec:	e022      	b.n	8006e34 <_printf_i+0xd0>
 8006dee:	0025      	movs	r5, r4
 8006df0:	681a      	ldr	r2, [r3, #0]
 8006df2:	3542      	adds	r5, #66	; 0x42
 8006df4:	1d11      	adds	r1, r2, #4
 8006df6:	6019      	str	r1, [r3, #0]
 8006df8:	6813      	ldr	r3, [r2, #0]
 8006dfa:	702b      	strb	r3, [r5, #0]
 8006dfc:	2301      	movs	r3, #1
 8006dfe:	e065      	b.n	8006ecc <_printf_i+0x168>
 8006e00:	6808      	ldr	r0, [r1, #0]
 8006e02:	601a      	str	r2, [r3, #0]
 8006e04:	0669      	lsls	r1, r5, #25
 8006e06:	d5d3      	bpl.n	8006db0 <_printf_i+0x4c>
 8006e08:	b200      	sxth	r0, r0
 8006e0a:	e7d1      	b.n	8006db0 <_printf_i+0x4c>
 8006e0c:	6819      	ldr	r1, [r3, #0]
 8006e0e:	6825      	ldr	r5, [r4, #0]
 8006e10:	1d08      	adds	r0, r1, #4
 8006e12:	6018      	str	r0, [r3, #0]
 8006e14:	6808      	ldr	r0, [r1, #0]
 8006e16:	062e      	lsls	r6, r5, #24
 8006e18:	d505      	bpl.n	8006e26 <_printf_i+0xc2>
 8006e1a:	4e54      	ldr	r6, [pc, #336]	; (8006f6c <_printf_i+0x208>)
 8006e1c:	2708      	movs	r7, #8
 8006e1e:	2a6f      	cmp	r2, #111	; 0x6f
 8006e20:	d01b      	beq.n	8006e5a <_printf_i+0xf6>
 8006e22:	270a      	movs	r7, #10
 8006e24:	e019      	b.n	8006e5a <_printf_i+0xf6>
 8006e26:	066d      	lsls	r5, r5, #25
 8006e28:	d5f7      	bpl.n	8006e1a <_printf_i+0xb6>
 8006e2a:	b280      	uxth	r0, r0
 8006e2c:	e7f5      	b.n	8006e1a <_printf_i+0xb6>
 8006e2e:	3145      	adds	r1, #69	; 0x45
 8006e30:	4e4e      	ldr	r6, [pc, #312]	; (8006f6c <_printf_i+0x208>)
 8006e32:	700a      	strb	r2, [r1, #0]
 8006e34:	6818      	ldr	r0, [r3, #0]
 8006e36:	6822      	ldr	r2, [r4, #0]
 8006e38:	1d01      	adds	r1, r0, #4
 8006e3a:	6800      	ldr	r0, [r0, #0]
 8006e3c:	6019      	str	r1, [r3, #0]
 8006e3e:	0615      	lsls	r5, r2, #24
 8006e40:	d521      	bpl.n	8006e86 <_printf_i+0x122>
 8006e42:	07d3      	lsls	r3, r2, #31
 8006e44:	d502      	bpl.n	8006e4c <_printf_i+0xe8>
 8006e46:	2320      	movs	r3, #32
 8006e48:	431a      	orrs	r2, r3
 8006e4a:	6022      	str	r2, [r4, #0]
 8006e4c:	2710      	movs	r7, #16
 8006e4e:	2800      	cmp	r0, #0
 8006e50:	d103      	bne.n	8006e5a <_printf_i+0xf6>
 8006e52:	2320      	movs	r3, #32
 8006e54:	6822      	ldr	r2, [r4, #0]
 8006e56:	439a      	bics	r2, r3
 8006e58:	6022      	str	r2, [r4, #0]
 8006e5a:	0023      	movs	r3, r4
 8006e5c:	2200      	movs	r2, #0
 8006e5e:	3343      	adds	r3, #67	; 0x43
 8006e60:	701a      	strb	r2, [r3, #0]
 8006e62:	6863      	ldr	r3, [r4, #4]
 8006e64:	60a3      	str	r3, [r4, #8]
 8006e66:	2b00      	cmp	r3, #0
 8006e68:	db58      	blt.n	8006f1c <_printf_i+0x1b8>
 8006e6a:	2204      	movs	r2, #4
 8006e6c:	6821      	ldr	r1, [r4, #0]
 8006e6e:	4391      	bics	r1, r2
 8006e70:	6021      	str	r1, [r4, #0]
 8006e72:	2800      	cmp	r0, #0
 8006e74:	d154      	bne.n	8006f20 <_printf_i+0x1bc>
 8006e76:	9d02      	ldr	r5, [sp, #8]
 8006e78:	2b00      	cmp	r3, #0
 8006e7a:	d05a      	beq.n	8006f32 <_printf_i+0x1ce>
 8006e7c:	0025      	movs	r5, r4
 8006e7e:	7833      	ldrb	r3, [r6, #0]
 8006e80:	3542      	adds	r5, #66	; 0x42
 8006e82:	702b      	strb	r3, [r5, #0]
 8006e84:	e055      	b.n	8006f32 <_printf_i+0x1ce>
 8006e86:	0655      	lsls	r5, r2, #25
 8006e88:	d5db      	bpl.n	8006e42 <_printf_i+0xde>
 8006e8a:	b280      	uxth	r0, r0
 8006e8c:	e7d9      	b.n	8006e42 <_printf_i+0xde>
 8006e8e:	681a      	ldr	r2, [r3, #0]
 8006e90:	680d      	ldr	r5, [r1, #0]
 8006e92:	1d10      	adds	r0, r2, #4
 8006e94:	6949      	ldr	r1, [r1, #20]
 8006e96:	6018      	str	r0, [r3, #0]
 8006e98:	6813      	ldr	r3, [r2, #0]
 8006e9a:	062e      	lsls	r6, r5, #24
 8006e9c:	d501      	bpl.n	8006ea2 <_printf_i+0x13e>
 8006e9e:	6019      	str	r1, [r3, #0]
 8006ea0:	e002      	b.n	8006ea8 <_printf_i+0x144>
 8006ea2:	066d      	lsls	r5, r5, #25
 8006ea4:	d5fb      	bpl.n	8006e9e <_printf_i+0x13a>
 8006ea6:	8019      	strh	r1, [r3, #0]
 8006ea8:	2300      	movs	r3, #0
 8006eaa:	9d02      	ldr	r5, [sp, #8]
 8006eac:	6123      	str	r3, [r4, #16]
 8006eae:	e04f      	b.n	8006f50 <_printf_i+0x1ec>
 8006eb0:	681a      	ldr	r2, [r3, #0]
 8006eb2:	1d11      	adds	r1, r2, #4
 8006eb4:	6019      	str	r1, [r3, #0]
 8006eb6:	6815      	ldr	r5, [r2, #0]
 8006eb8:	2100      	movs	r1, #0
 8006eba:	6862      	ldr	r2, [r4, #4]
 8006ebc:	0028      	movs	r0, r5
 8006ebe:	f002 fb1f 	bl	8009500 <memchr>
 8006ec2:	2800      	cmp	r0, #0
 8006ec4:	d001      	beq.n	8006eca <_printf_i+0x166>
 8006ec6:	1b40      	subs	r0, r0, r5
 8006ec8:	6060      	str	r0, [r4, #4]
 8006eca:	6863      	ldr	r3, [r4, #4]
 8006ecc:	6123      	str	r3, [r4, #16]
 8006ece:	2300      	movs	r3, #0
 8006ed0:	9a02      	ldr	r2, [sp, #8]
 8006ed2:	7013      	strb	r3, [r2, #0]
 8006ed4:	e03c      	b.n	8006f50 <_printf_i+0x1ec>
 8006ed6:	6923      	ldr	r3, [r4, #16]
 8006ed8:	002a      	movs	r2, r5
 8006eda:	9904      	ldr	r1, [sp, #16]
 8006edc:	9803      	ldr	r0, [sp, #12]
 8006ede:	9d05      	ldr	r5, [sp, #20]
 8006ee0:	47a8      	blx	r5
 8006ee2:	1c43      	adds	r3, r0, #1
 8006ee4:	d03e      	beq.n	8006f64 <_printf_i+0x200>
 8006ee6:	6823      	ldr	r3, [r4, #0]
 8006ee8:	079b      	lsls	r3, r3, #30
 8006eea:	d415      	bmi.n	8006f18 <_printf_i+0x1b4>
 8006eec:	9b07      	ldr	r3, [sp, #28]
 8006eee:	68e0      	ldr	r0, [r4, #12]
 8006ef0:	4298      	cmp	r0, r3
 8006ef2:	da39      	bge.n	8006f68 <_printf_i+0x204>
 8006ef4:	0018      	movs	r0, r3
 8006ef6:	e037      	b.n	8006f68 <_printf_i+0x204>
 8006ef8:	0022      	movs	r2, r4
 8006efa:	2301      	movs	r3, #1
 8006efc:	3219      	adds	r2, #25
 8006efe:	9904      	ldr	r1, [sp, #16]
 8006f00:	9803      	ldr	r0, [sp, #12]
 8006f02:	9e05      	ldr	r6, [sp, #20]
 8006f04:	47b0      	blx	r6
 8006f06:	1c43      	adds	r3, r0, #1
 8006f08:	d02c      	beq.n	8006f64 <_printf_i+0x200>
 8006f0a:	3501      	adds	r5, #1
 8006f0c:	68e3      	ldr	r3, [r4, #12]
 8006f0e:	9a07      	ldr	r2, [sp, #28]
 8006f10:	1a9b      	subs	r3, r3, r2
 8006f12:	42ab      	cmp	r3, r5
 8006f14:	dcf0      	bgt.n	8006ef8 <_printf_i+0x194>
 8006f16:	e7e9      	b.n	8006eec <_printf_i+0x188>
 8006f18:	2500      	movs	r5, #0
 8006f1a:	e7f7      	b.n	8006f0c <_printf_i+0x1a8>
 8006f1c:	2800      	cmp	r0, #0
 8006f1e:	d0ad      	beq.n	8006e7c <_printf_i+0x118>
 8006f20:	9d02      	ldr	r5, [sp, #8]
 8006f22:	0039      	movs	r1, r7
 8006f24:	f7f9 f988 	bl	8000238 <__aeabi_uidivmod>
 8006f28:	5c73      	ldrb	r3, [r6, r1]
 8006f2a:	3d01      	subs	r5, #1
 8006f2c:	702b      	strb	r3, [r5, #0]
 8006f2e:	2800      	cmp	r0, #0
 8006f30:	d1f7      	bne.n	8006f22 <_printf_i+0x1be>
 8006f32:	2f08      	cmp	r7, #8
 8006f34:	d109      	bne.n	8006f4a <_printf_i+0x1e6>
 8006f36:	6823      	ldr	r3, [r4, #0]
 8006f38:	07db      	lsls	r3, r3, #31
 8006f3a:	d506      	bpl.n	8006f4a <_printf_i+0x1e6>
 8006f3c:	6863      	ldr	r3, [r4, #4]
 8006f3e:	6922      	ldr	r2, [r4, #16]
 8006f40:	4293      	cmp	r3, r2
 8006f42:	dc02      	bgt.n	8006f4a <_printf_i+0x1e6>
 8006f44:	2330      	movs	r3, #48	; 0x30
 8006f46:	3d01      	subs	r5, #1
 8006f48:	702b      	strb	r3, [r5, #0]
 8006f4a:	9b02      	ldr	r3, [sp, #8]
 8006f4c:	1b5b      	subs	r3, r3, r5
 8006f4e:	6123      	str	r3, [r4, #16]
 8006f50:	9b05      	ldr	r3, [sp, #20]
 8006f52:	aa07      	add	r2, sp, #28
 8006f54:	9300      	str	r3, [sp, #0]
 8006f56:	0021      	movs	r1, r4
 8006f58:	9b04      	ldr	r3, [sp, #16]
 8006f5a:	9803      	ldr	r0, [sp, #12]
 8006f5c:	f7ff fe94 	bl	8006c88 <_printf_common>
 8006f60:	1c43      	adds	r3, r0, #1
 8006f62:	d1b8      	bne.n	8006ed6 <_printf_i+0x172>
 8006f64:	2001      	movs	r0, #1
 8006f66:	4240      	negs	r0, r0
 8006f68:	b009      	add	sp, #36	; 0x24
 8006f6a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8006f6c:	0800a3c2 	.word	0x0800a3c2
 8006f70:	0800a3d3 	.word	0x0800a3d3

08006f74 <_scanf_float>:
 8006f74:	b5f0      	push	{r4, r5, r6, r7, lr}
 8006f76:	b08b      	sub	sp, #44	; 0x2c
 8006f78:	9002      	str	r0, [sp, #8]
 8006f7a:	9200      	str	r2, [sp, #0]
 8006f7c:	2000      	movs	r0, #0
 8006f7e:	22ae      	movs	r2, #174	; 0xae
 8006f80:	9305      	str	r3, [sp, #20]
 8006f82:	688b      	ldr	r3, [r1, #8]
 8006f84:	000e      	movs	r6, r1
 8006f86:	1e59      	subs	r1, r3, #1
 8006f88:	0052      	lsls	r2, r2, #1
 8006f8a:	9004      	str	r0, [sp, #16]
 8006f8c:	4291      	cmp	r1, r2
 8006f8e:	d905      	bls.n	8006f9c <_scanf_float+0x28>
 8006f90:	3b5e      	subs	r3, #94	; 0x5e
 8006f92:	3bff      	subs	r3, #255	; 0xff
 8006f94:	9304      	str	r3, [sp, #16]
 8006f96:	235e      	movs	r3, #94	; 0x5e
 8006f98:	33ff      	adds	r3, #255	; 0xff
 8006f9a:	60b3      	str	r3, [r6, #8]
 8006f9c:	23f0      	movs	r3, #240	; 0xf0
 8006f9e:	6832      	ldr	r2, [r6, #0]
 8006fa0:	00db      	lsls	r3, r3, #3
 8006fa2:	4313      	orrs	r3, r2
 8006fa4:	6033      	str	r3, [r6, #0]
 8006fa6:	0033      	movs	r3, r6
 8006fa8:	2700      	movs	r7, #0
 8006faa:	331c      	adds	r3, #28
 8006fac:	001d      	movs	r5, r3
 8006fae:	003c      	movs	r4, r7
 8006fb0:	9303      	str	r3, [sp, #12]
 8006fb2:	9708      	str	r7, [sp, #32]
 8006fb4:	9707      	str	r7, [sp, #28]
 8006fb6:	9701      	str	r7, [sp, #4]
 8006fb8:	9706      	str	r7, [sp, #24]
 8006fba:	68b2      	ldr	r2, [r6, #8]
 8006fbc:	2a00      	cmp	r2, #0
 8006fbe:	d013      	beq.n	8006fe8 <_scanf_float+0x74>
 8006fc0:	9b00      	ldr	r3, [sp, #0]
 8006fc2:	681b      	ldr	r3, [r3, #0]
 8006fc4:	9309      	str	r3, [sp, #36]	; 0x24
 8006fc6:	781b      	ldrb	r3, [r3, #0]
 8006fc8:	2b49      	cmp	r3, #73	; 0x49
 8006fca:	d100      	bne.n	8006fce <_scanf_float+0x5a>
 8006fcc:	e07c      	b.n	80070c8 <_scanf_float+0x154>
 8006fce:	d854      	bhi.n	800707a <_scanf_float+0x106>
 8006fd0:	2b39      	cmp	r3, #57	; 0x39
 8006fd2:	d847      	bhi.n	8007064 <_scanf_float+0xf0>
 8006fd4:	2b31      	cmp	r3, #49	; 0x31
 8006fd6:	d300      	bcc.n	8006fda <_scanf_float+0x66>
 8006fd8:	e094      	b.n	8007104 <_scanf_float+0x190>
 8006fda:	2b2d      	cmp	r3, #45	; 0x2d
 8006fdc:	d100      	bne.n	8006fe0 <_scanf_float+0x6c>
 8006fde:	e09c      	b.n	800711a <_scanf_float+0x1a6>
 8006fe0:	d817      	bhi.n	8007012 <_scanf_float+0x9e>
 8006fe2:	2b2b      	cmp	r3, #43	; 0x2b
 8006fe4:	d100      	bne.n	8006fe8 <_scanf_float+0x74>
 8006fe6:	e098      	b.n	800711a <_scanf_float+0x1a6>
 8006fe8:	9b01      	ldr	r3, [sp, #4]
 8006fea:	2b00      	cmp	r3, #0
 8006fec:	d003      	beq.n	8006ff6 <_scanf_float+0x82>
 8006fee:	6832      	ldr	r2, [r6, #0]
 8006ff0:	4b9b      	ldr	r3, [pc, #620]	; (8007260 <_scanf_float+0x2ec>)
 8006ff2:	4013      	ands	r3, r2
 8006ff4:	6033      	str	r3, [r6, #0]
 8006ff6:	3c01      	subs	r4, #1
 8006ff8:	2c01      	cmp	r4, #1
 8006ffa:	d900      	bls.n	8006ffe <_scanf_float+0x8a>
 8006ffc:	e0ee      	b.n	80071dc <_scanf_float+0x268>
 8006ffe:	24be      	movs	r4, #190	; 0xbe
 8007000:	0064      	lsls	r4, r4, #1
 8007002:	9b03      	ldr	r3, [sp, #12]
 8007004:	429d      	cmp	r5, r3
 8007006:	d900      	bls.n	800700a <_scanf_float+0x96>
 8007008:	e0de      	b.n	80071c8 <_scanf_float+0x254>
 800700a:	2701      	movs	r7, #1
 800700c:	0038      	movs	r0, r7
 800700e:	b00b      	add	sp, #44	; 0x2c
 8007010:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8007012:	2b2e      	cmp	r3, #46	; 0x2e
 8007014:	d100      	bne.n	8007018 <_scanf_float+0xa4>
 8007016:	e0a2      	b.n	800715e <_scanf_float+0x1ea>
 8007018:	2b30      	cmp	r3, #48	; 0x30
 800701a:	d1e5      	bne.n	8006fe8 <_scanf_float+0x74>
 800701c:	6831      	ldr	r1, [r6, #0]
 800701e:	05c8      	lsls	r0, r1, #23
 8007020:	d570      	bpl.n	8007104 <_scanf_float+0x190>
 8007022:	2380      	movs	r3, #128	; 0x80
 8007024:	4399      	bics	r1, r3
 8007026:	9b01      	ldr	r3, [sp, #4]
 8007028:	6031      	str	r1, [r6, #0]
 800702a:	3301      	adds	r3, #1
 800702c:	9301      	str	r3, [sp, #4]
 800702e:	9b04      	ldr	r3, [sp, #16]
 8007030:	2b00      	cmp	r3, #0
 8007032:	d003      	beq.n	800703c <_scanf_float+0xc8>
 8007034:	3b01      	subs	r3, #1
 8007036:	3201      	adds	r2, #1
 8007038:	9304      	str	r3, [sp, #16]
 800703a:	60b2      	str	r2, [r6, #8]
 800703c:	68b3      	ldr	r3, [r6, #8]
 800703e:	9a00      	ldr	r2, [sp, #0]
 8007040:	3b01      	subs	r3, #1
 8007042:	60b3      	str	r3, [r6, #8]
 8007044:	6933      	ldr	r3, [r6, #16]
 8007046:	3301      	adds	r3, #1
 8007048:	6133      	str	r3, [r6, #16]
 800704a:	9b00      	ldr	r3, [sp, #0]
 800704c:	685b      	ldr	r3, [r3, #4]
 800704e:	9309      	str	r3, [sp, #36]	; 0x24
 8007050:	3b01      	subs	r3, #1
 8007052:	6053      	str	r3, [r2, #4]
 8007054:	2b00      	cmp	r3, #0
 8007056:	dc00      	bgt.n	800705a <_scanf_float+0xe6>
 8007058:	e0ac      	b.n	80071b4 <_scanf_float+0x240>
 800705a:	6813      	ldr	r3, [r2, #0]
 800705c:	9309      	str	r3, [sp, #36]	; 0x24
 800705e:	3301      	adds	r3, #1
 8007060:	6013      	str	r3, [r2, #0]
 8007062:	e7aa      	b.n	8006fba <_scanf_float+0x46>
 8007064:	2b45      	cmp	r3, #69	; 0x45
 8007066:	d100      	bne.n	800706a <_scanf_float+0xf6>
 8007068:	e083      	b.n	8007172 <_scanf_float+0x1fe>
 800706a:	2b46      	cmp	r3, #70	; 0x46
 800706c:	d06d      	beq.n	800714a <_scanf_float+0x1d6>
 800706e:	2b41      	cmp	r3, #65	; 0x41
 8007070:	d1ba      	bne.n	8006fe8 <_scanf_float+0x74>
 8007072:	2c01      	cmp	r4, #1
 8007074:	d1b8      	bne.n	8006fe8 <_scanf_float+0x74>
 8007076:	2402      	movs	r4, #2
 8007078:	e04c      	b.n	8007114 <_scanf_float+0x1a0>
 800707a:	2b65      	cmp	r3, #101	; 0x65
 800707c:	d079      	beq.n	8007172 <_scanf_float+0x1fe>
 800707e:	d81b      	bhi.n	80070b8 <_scanf_float+0x144>
 8007080:	2b54      	cmp	r3, #84	; 0x54
 8007082:	d067      	beq.n	8007154 <_scanf_float+0x1e0>
 8007084:	d813      	bhi.n	80070ae <_scanf_float+0x13a>
 8007086:	2b4e      	cmp	r3, #78	; 0x4e
 8007088:	d1ae      	bne.n	8006fe8 <_scanf_float+0x74>
 800708a:	2c00      	cmp	r4, #0
 800708c:	d14c      	bne.n	8007128 <_scanf_float+0x1b4>
 800708e:	9a01      	ldr	r2, [sp, #4]
 8007090:	2a00      	cmp	r2, #0
 8007092:	d14b      	bne.n	800712c <_scanf_float+0x1b8>
 8007094:	21e0      	movs	r1, #224	; 0xe0
 8007096:	20e0      	movs	r0, #224	; 0xe0
 8007098:	6832      	ldr	r2, [r6, #0]
 800709a:	00c9      	lsls	r1, r1, #3
 800709c:	4011      	ands	r1, r2
 800709e:	00c0      	lsls	r0, r0, #3
 80070a0:	4281      	cmp	r1, r0
 80070a2:	d143      	bne.n	800712c <_scanf_float+0x1b8>
 80070a4:	496f      	ldr	r1, [pc, #444]	; (8007264 <_scanf_float+0x2f0>)
 80070a6:	3401      	adds	r4, #1
 80070a8:	400a      	ands	r2, r1
 80070aa:	6032      	str	r2, [r6, #0]
 80070ac:	e032      	b.n	8007114 <_scanf_float+0x1a0>
 80070ae:	2b59      	cmp	r3, #89	; 0x59
 80070b0:	d023      	beq.n	80070fa <_scanf_float+0x186>
 80070b2:	2b61      	cmp	r3, #97	; 0x61
 80070b4:	d0dd      	beq.n	8007072 <_scanf_float+0xfe>
 80070b6:	e797      	b.n	8006fe8 <_scanf_float+0x74>
 80070b8:	2b6e      	cmp	r3, #110	; 0x6e
 80070ba:	d0e6      	beq.n	800708a <_scanf_float+0x116>
 80070bc:	d818      	bhi.n	80070f0 <_scanf_float+0x17c>
 80070be:	2b66      	cmp	r3, #102	; 0x66
 80070c0:	d043      	beq.n	800714a <_scanf_float+0x1d6>
 80070c2:	2b69      	cmp	r3, #105	; 0x69
 80070c4:	d000      	beq.n	80070c8 <_scanf_float+0x154>
 80070c6:	e78f      	b.n	8006fe8 <_scanf_float+0x74>
 80070c8:	2f00      	cmp	r7, #0
 80070ca:	d137      	bne.n	800713c <_scanf_float+0x1c8>
 80070cc:	9a01      	ldr	r2, [sp, #4]
 80070ce:	2a00      	cmp	r2, #0
 80070d0:	d000      	beq.n	80070d4 <_scanf_float+0x160>
 80070d2:	e78c      	b.n	8006fee <_scanf_float+0x7a>
 80070d4:	21e0      	movs	r1, #224	; 0xe0
 80070d6:	20e0      	movs	r0, #224	; 0xe0
 80070d8:	6832      	ldr	r2, [r6, #0]
 80070da:	00c9      	lsls	r1, r1, #3
 80070dc:	4011      	ands	r1, r2
 80070de:	00c0      	lsls	r0, r0, #3
 80070e0:	4281      	cmp	r1, r0
 80070e2:	d000      	beq.n	80070e6 <_scanf_float+0x172>
 80070e4:	e787      	b.n	8006ff6 <_scanf_float+0x82>
 80070e6:	495f      	ldr	r1, [pc, #380]	; (8007264 <_scanf_float+0x2f0>)
 80070e8:	3701      	adds	r7, #1
 80070ea:	400a      	ands	r2, r1
 80070ec:	6032      	str	r2, [r6, #0]
 80070ee:	e011      	b.n	8007114 <_scanf_float+0x1a0>
 80070f0:	2b74      	cmp	r3, #116	; 0x74
 80070f2:	d02f      	beq.n	8007154 <_scanf_float+0x1e0>
 80070f4:	2b79      	cmp	r3, #121	; 0x79
 80070f6:	d000      	beq.n	80070fa <_scanf_float+0x186>
 80070f8:	e776      	b.n	8006fe8 <_scanf_float+0x74>
 80070fa:	2f07      	cmp	r7, #7
 80070fc:	d000      	beq.n	8007100 <_scanf_float+0x18c>
 80070fe:	e773      	b.n	8006fe8 <_scanf_float+0x74>
 8007100:	2708      	movs	r7, #8
 8007102:	e007      	b.n	8007114 <_scanf_float+0x1a0>
 8007104:	19e2      	adds	r2, r4, r7
 8007106:	2a00      	cmp	r2, #0
 8007108:	d000      	beq.n	800710c <_scanf_float+0x198>
 800710a:	e76d      	b.n	8006fe8 <_scanf_float+0x74>
 800710c:	4a56      	ldr	r2, [pc, #344]	; (8007268 <_scanf_float+0x2f4>)
 800710e:	6831      	ldr	r1, [r6, #0]
 8007110:	400a      	ands	r2, r1
 8007112:	6032      	str	r2, [r6, #0]
 8007114:	702b      	strb	r3, [r5, #0]
 8007116:	3501      	adds	r5, #1
 8007118:	e790      	b.n	800703c <_scanf_float+0xc8>
 800711a:	2180      	movs	r1, #128	; 0x80
 800711c:	6832      	ldr	r2, [r6, #0]
 800711e:	420a      	tst	r2, r1
 8007120:	d100      	bne.n	8007124 <_scanf_float+0x1b0>
 8007122:	e761      	b.n	8006fe8 <_scanf_float+0x74>
 8007124:	438a      	bics	r2, r1
 8007126:	e7f4      	b.n	8007112 <_scanf_float+0x19e>
 8007128:	2c02      	cmp	r4, #2
 800712a:	d041      	beq.n	80071b0 <_scanf_float+0x23c>
 800712c:	2f01      	cmp	r7, #1
 800712e:	d002      	beq.n	8007136 <_scanf_float+0x1c2>
 8007130:	2f04      	cmp	r7, #4
 8007132:	d000      	beq.n	8007136 <_scanf_float+0x1c2>
 8007134:	e758      	b.n	8006fe8 <_scanf_float+0x74>
 8007136:	3701      	adds	r7, #1
 8007138:	b2ff      	uxtb	r7, r7
 800713a:	e7eb      	b.n	8007114 <_scanf_float+0x1a0>
 800713c:	2102      	movs	r1, #2
 800713e:	1efa      	subs	r2, r7, #3
 8007140:	438a      	bics	r2, r1
 8007142:	b2d2      	uxtb	r2, r2
 8007144:	2a00      	cmp	r2, #0
 8007146:	d0f6      	beq.n	8007136 <_scanf_float+0x1c2>
 8007148:	e74e      	b.n	8006fe8 <_scanf_float+0x74>
 800714a:	2f02      	cmp	r7, #2
 800714c:	d000      	beq.n	8007150 <_scanf_float+0x1dc>
 800714e:	e74b      	b.n	8006fe8 <_scanf_float+0x74>
 8007150:	2703      	movs	r7, #3
 8007152:	e7df      	b.n	8007114 <_scanf_float+0x1a0>
 8007154:	2f06      	cmp	r7, #6
 8007156:	d000      	beq.n	800715a <_scanf_float+0x1e6>
 8007158:	e746      	b.n	8006fe8 <_scanf_float+0x74>
 800715a:	2707      	movs	r7, #7
 800715c:	e7da      	b.n	8007114 <_scanf_float+0x1a0>
 800715e:	6832      	ldr	r2, [r6, #0]
 8007160:	0591      	lsls	r1, r2, #22
 8007162:	d400      	bmi.n	8007166 <_scanf_float+0x1f2>
 8007164:	e740      	b.n	8006fe8 <_scanf_float+0x74>
 8007166:	4941      	ldr	r1, [pc, #260]	; (800726c <_scanf_float+0x2f8>)
 8007168:	400a      	ands	r2, r1
 800716a:	6032      	str	r2, [r6, #0]
 800716c:	9a01      	ldr	r2, [sp, #4]
 800716e:	9206      	str	r2, [sp, #24]
 8007170:	e7d0      	b.n	8007114 <_scanf_float+0x1a0>
 8007172:	21a0      	movs	r1, #160	; 0xa0
 8007174:	2080      	movs	r0, #128	; 0x80
 8007176:	6832      	ldr	r2, [r6, #0]
 8007178:	00c9      	lsls	r1, r1, #3
 800717a:	4011      	ands	r1, r2
 800717c:	00c0      	lsls	r0, r0, #3
 800717e:	4281      	cmp	r1, r0
 8007180:	d006      	beq.n	8007190 <_scanf_float+0x21c>
 8007182:	4202      	tst	r2, r0
 8007184:	d100      	bne.n	8007188 <_scanf_float+0x214>
 8007186:	e72f      	b.n	8006fe8 <_scanf_float+0x74>
 8007188:	9901      	ldr	r1, [sp, #4]
 800718a:	2900      	cmp	r1, #0
 800718c:	d100      	bne.n	8007190 <_scanf_float+0x21c>
 800718e:	e732      	b.n	8006ff6 <_scanf_float+0x82>
 8007190:	0591      	lsls	r1, r2, #22
 8007192:	d404      	bmi.n	800719e <_scanf_float+0x22a>
 8007194:	9901      	ldr	r1, [sp, #4]
 8007196:	9806      	ldr	r0, [sp, #24]
 8007198:	9508      	str	r5, [sp, #32]
 800719a:	1a09      	subs	r1, r1, r0
 800719c:	9107      	str	r1, [sp, #28]
 800719e:	4931      	ldr	r1, [pc, #196]	; (8007264 <_scanf_float+0x2f0>)
 80071a0:	400a      	ands	r2, r1
 80071a2:	21c0      	movs	r1, #192	; 0xc0
 80071a4:	0049      	lsls	r1, r1, #1
 80071a6:	430a      	orrs	r2, r1
 80071a8:	6032      	str	r2, [r6, #0]
 80071aa:	2200      	movs	r2, #0
 80071ac:	9201      	str	r2, [sp, #4]
 80071ae:	e7b1      	b.n	8007114 <_scanf_float+0x1a0>
 80071b0:	2403      	movs	r4, #3
 80071b2:	e7af      	b.n	8007114 <_scanf_float+0x1a0>
 80071b4:	23c0      	movs	r3, #192	; 0xc0
 80071b6:	005b      	lsls	r3, r3, #1
 80071b8:	58f3      	ldr	r3, [r6, r3]
 80071ba:	9900      	ldr	r1, [sp, #0]
 80071bc:	9802      	ldr	r0, [sp, #8]
 80071be:	4798      	blx	r3
 80071c0:	2800      	cmp	r0, #0
 80071c2:	d100      	bne.n	80071c6 <_scanf_float+0x252>
 80071c4:	e6f9      	b.n	8006fba <_scanf_float+0x46>
 80071c6:	e70f      	b.n	8006fe8 <_scanf_float+0x74>
 80071c8:	3d01      	subs	r5, #1
 80071ca:	5933      	ldr	r3, [r6, r4]
 80071cc:	7829      	ldrb	r1, [r5, #0]
 80071ce:	9a00      	ldr	r2, [sp, #0]
 80071d0:	9802      	ldr	r0, [sp, #8]
 80071d2:	4798      	blx	r3
 80071d4:	6933      	ldr	r3, [r6, #16]
 80071d6:	3b01      	subs	r3, #1
 80071d8:	6133      	str	r3, [r6, #16]
 80071da:	e712      	b.n	8007002 <_scanf_float+0x8e>
 80071dc:	1e7b      	subs	r3, r7, #1
 80071de:	2b06      	cmp	r3, #6
 80071e0:	d826      	bhi.n	8007230 <_scanf_float+0x2bc>
 80071e2:	2f02      	cmp	r7, #2
 80071e4:	d839      	bhi.n	800725a <_scanf_float+0x2e6>
 80071e6:	24be      	movs	r4, #190	; 0xbe
 80071e8:	0064      	lsls	r4, r4, #1
 80071ea:	9b03      	ldr	r3, [sp, #12]
 80071ec:	429d      	cmp	r5, r3
 80071ee:	d800      	bhi.n	80071f2 <_scanf_float+0x27e>
 80071f0:	e70b      	b.n	800700a <_scanf_float+0x96>
 80071f2:	3d01      	subs	r5, #1
 80071f4:	5933      	ldr	r3, [r6, r4]
 80071f6:	7829      	ldrb	r1, [r5, #0]
 80071f8:	9a00      	ldr	r2, [sp, #0]
 80071fa:	9802      	ldr	r0, [sp, #8]
 80071fc:	4798      	blx	r3
 80071fe:	6933      	ldr	r3, [r6, #16]
 8007200:	3b01      	subs	r3, #1
 8007202:	6133      	str	r3, [r6, #16]
 8007204:	e7f1      	b.n	80071ea <_scanf_float+0x276>
 8007206:	9b04      	ldr	r3, [sp, #16]
 8007208:	9a00      	ldr	r2, [sp, #0]
 800720a:	3b01      	subs	r3, #1
 800720c:	9304      	str	r3, [sp, #16]
 800720e:	7819      	ldrb	r1, [r3, #0]
 8007210:	23be      	movs	r3, #190	; 0xbe
 8007212:	005b      	lsls	r3, r3, #1
 8007214:	58f3      	ldr	r3, [r6, r3]
 8007216:	9802      	ldr	r0, [sp, #8]
 8007218:	9309      	str	r3, [sp, #36]	; 0x24
 800721a:	4798      	blx	r3
 800721c:	6933      	ldr	r3, [r6, #16]
 800721e:	3b01      	subs	r3, #1
 8007220:	6133      	str	r3, [r6, #16]
 8007222:	3c01      	subs	r4, #1
 8007224:	b2e4      	uxtb	r4, r4
 8007226:	2c02      	cmp	r4, #2
 8007228:	d1ed      	bne.n	8007206 <_scanf_float+0x292>
 800722a:	3f03      	subs	r7, #3
 800722c:	b2ff      	uxtb	r7, r7
 800722e:	1bed      	subs	r5, r5, r7
 8007230:	6833      	ldr	r3, [r6, #0]
 8007232:	05da      	lsls	r2, r3, #23
 8007234:	d537      	bpl.n	80072a6 <_scanf_float+0x332>
 8007236:	055b      	lsls	r3, r3, #21
 8007238:	d51a      	bpl.n	8007270 <_scanf_float+0x2fc>
 800723a:	24be      	movs	r4, #190	; 0xbe
 800723c:	0064      	lsls	r4, r4, #1
 800723e:	9b03      	ldr	r3, [sp, #12]
 8007240:	429d      	cmp	r5, r3
 8007242:	d800      	bhi.n	8007246 <_scanf_float+0x2d2>
 8007244:	e6e1      	b.n	800700a <_scanf_float+0x96>
 8007246:	3d01      	subs	r5, #1
 8007248:	5933      	ldr	r3, [r6, r4]
 800724a:	7829      	ldrb	r1, [r5, #0]
 800724c:	9a00      	ldr	r2, [sp, #0]
 800724e:	9802      	ldr	r0, [sp, #8]
 8007250:	4798      	blx	r3
 8007252:	6933      	ldr	r3, [r6, #16]
 8007254:	3b01      	subs	r3, #1
 8007256:	6133      	str	r3, [r6, #16]
 8007258:	e7f1      	b.n	800723e <_scanf_float+0x2ca>
 800725a:	003c      	movs	r4, r7
 800725c:	9504      	str	r5, [sp, #16]
 800725e:	e7e0      	b.n	8007222 <_scanf_float+0x2ae>
 8007260:	fffffeff 	.word	0xfffffeff
 8007264:	fffff87f 	.word	0xfffff87f
 8007268:	fffffe7f 	.word	0xfffffe7f
 800726c:	fffffd7f 	.word	0xfffffd7f
 8007270:	6933      	ldr	r3, [r6, #16]
 8007272:	1e6c      	subs	r4, r5, #1
 8007274:	7821      	ldrb	r1, [r4, #0]
 8007276:	3b01      	subs	r3, #1
 8007278:	6133      	str	r3, [r6, #16]
 800727a:	2965      	cmp	r1, #101	; 0x65
 800727c:	d00c      	beq.n	8007298 <_scanf_float+0x324>
 800727e:	2945      	cmp	r1, #69	; 0x45
 8007280:	d00a      	beq.n	8007298 <_scanf_float+0x324>
 8007282:	23be      	movs	r3, #190	; 0xbe
 8007284:	005b      	lsls	r3, r3, #1
 8007286:	58f3      	ldr	r3, [r6, r3]
 8007288:	9a00      	ldr	r2, [sp, #0]
 800728a:	9802      	ldr	r0, [sp, #8]
 800728c:	4798      	blx	r3
 800728e:	6933      	ldr	r3, [r6, #16]
 8007290:	1eac      	subs	r4, r5, #2
 8007292:	3b01      	subs	r3, #1
 8007294:	7821      	ldrb	r1, [r4, #0]
 8007296:	6133      	str	r3, [r6, #16]
 8007298:	23be      	movs	r3, #190	; 0xbe
 800729a:	005b      	lsls	r3, r3, #1
 800729c:	58f3      	ldr	r3, [r6, r3]
 800729e:	9a00      	ldr	r2, [sp, #0]
 80072a0:	9802      	ldr	r0, [sp, #8]
 80072a2:	4798      	blx	r3
 80072a4:	0025      	movs	r5, r4
 80072a6:	2710      	movs	r7, #16
 80072a8:	6833      	ldr	r3, [r6, #0]
 80072aa:	401f      	ands	r7, r3
 80072ac:	d15b      	bne.n	8007366 <_scanf_float+0x3f2>
 80072ae:	23c0      	movs	r3, #192	; 0xc0
 80072b0:	702f      	strb	r7, [r5, #0]
 80072b2:	6832      	ldr	r2, [r6, #0]
 80072b4:	00db      	lsls	r3, r3, #3
 80072b6:	4013      	ands	r3, r2
 80072b8:	2280      	movs	r2, #128	; 0x80
 80072ba:	00d2      	lsls	r2, r2, #3
 80072bc:	4293      	cmp	r3, r2
 80072be:	d11b      	bne.n	80072f8 <_scanf_float+0x384>
 80072c0:	9a06      	ldr	r2, [sp, #24]
 80072c2:	9b01      	ldr	r3, [sp, #4]
 80072c4:	1a9b      	subs	r3, r3, r2
 80072c6:	425a      	negs	r2, r3
 80072c8:	2b00      	cmp	r3, #0
 80072ca:	d122      	bne.n	8007312 <_scanf_float+0x39e>
 80072cc:	2200      	movs	r2, #0
 80072ce:	9903      	ldr	r1, [sp, #12]
 80072d0:	9802      	ldr	r0, [sp, #8]
 80072d2:	f000 feb1 	bl	8008038 <_strtod_r>
 80072d6:	9b05      	ldr	r3, [sp, #20]
 80072d8:	0004      	movs	r4, r0
 80072da:	6830      	ldr	r0, [r6, #0]
 80072dc:	000d      	movs	r5, r1
 80072de:	681b      	ldr	r3, [r3, #0]
 80072e0:	0782      	lsls	r2, r0, #30
 80072e2:	d523      	bpl.n	800732c <_scanf_float+0x3b8>
 80072e4:	1d1a      	adds	r2, r3, #4
 80072e6:	9905      	ldr	r1, [sp, #20]
 80072e8:	600a      	str	r2, [r1, #0]
 80072ea:	681b      	ldr	r3, [r3, #0]
 80072ec:	601c      	str	r4, [r3, #0]
 80072ee:	605d      	str	r5, [r3, #4]
 80072f0:	68f3      	ldr	r3, [r6, #12]
 80072f2:	3301      	adds	r3, #1
 80072f4:	60f3      	str	r3, [r6, #12]
 80072f6:	e689      	b.n	800700c <_scanf_float+0x98>
 80072f8:	9b07      	ldr	r3, [sp, #28]
 80072fa:	2b00      	cmp	r3, #0
 80072fc:	d0e6      	beq.n	80072cc <_scanf_float+0x358>
 80072fe:	9b08      	ldr	r3, [sp, #32]
 8007300:	003a      	movs	r2, r7
 8007302:	1c59      	adds	r1, r3, #1
 8007304:	9802      	ldr	r0, [sp, #8]
 8007306:	230a      	movs	r3, #10
 8007308:	f000 ff26 	bl	8008158 <_strtol_r>
 800730c:	9b07      	ldr	r3, [sp, #28]
 800730e:	9d08      	ldr	r5, [sp, #32]
 8007310:	1ac2      	subs	r2, r0, r3
 8007312:	0033      	movs	r3, r6
 8007314:	3370      	adds	r3, #112	; 0x70
 8007316:	33ff      	adds	r3, #255	; 0xff
 8007318:	429d      	cmp	r5, r3
 800731a:	d302      	bcc.n	8007322 <_scanf_float+0x3ae>
 800731c:	0035      	movs	r5, r6
 800731e:	356f      	adds	r5, #111	; 0x6f
 8007320:	35ff      	adds	r5, #255	; 0xff
 8007322:	4912      	ldr	r1, [pc, #72]	; (800736c <_scanf_float+0x3f8>)
 8007324:	0028      	movs	r0, r5
 8007326:	f000 f827 	bl	8007378 <siprintf>
 800732a:	e7cf      	b.n	80072cc <_scanf_float+0x358>
 800732c:	2104      	movs	r1, #4
 800732e:	4008      	ands	r0, r1
 8007330:	1d1a      	adds	r2, r3, #4
 8007332:	9001      	str	r0, [sp, #4]
 8007334:	2800      	cmp	r0, #0
 8007336:	d1d6      	bne.n	80072e6 <_scanf_float+0x372>
 8007338:	9905      	ldr	r1, [sp, #20]
 800733a:	0020      	movs	r0, r4
 800733c:	600a      	str	r2, [r1, #0]
 800733e:	681b      	ldr	r3, [r3, #0]
 8007340:	0022      	movs	r2, r4
 8007342:	9300      	str	r3, [sp, #0]
 8007344:	0029      	movs	r1, r5
 8007346:	002b      	movs	r3, r5
 8007348:	f7fa fece 	bl	80020e8 <__aeabi_dcmpun>
 800734c:	2800      	cmp	r0, #0
 800734e:	d005      	beq.n	800735c <_scanf_float+0x3e8>
 8007350:	9801      	ldr	r0, [sp, #4]
 8007352:	f000 f80d 	bl	8007370 <nanf>
 8007356:	9b00      	ldr	r3, [sp, #0]
 8007358:	6018      	str	r0, [r3, #0]
 800735a:	e7c9      	b.n	80072f0 <_scanf_float+0x37c>
 800735c:	0020      	movs	r0, r4
 800735e:	0029      	movs	r1, r5
 8007360:	f7fa ffd2 	bl	8002308 <__aeabi_d2f>
 8007364:	e7f7      	b.n	8007356 <_scanf_float+0x3e2>
 8007366:	2700      	movs	r7, #0
 8007368:	e650      	b.n	800700c <_scanf_float+0x98>
 800736a:	46c0      	nop			; (mov r8, r8)
 800736c:	0800a3e4 	.word	0x0800a3e4

08007370 <nanf>:
 8007370:	4800      	ldr	r0, [pc, #0]	; (8007374 <nanf+0x4>)
 8007372:	4770      	bx	lr
 8007374:	7fc00000 	.word	0x7fc00000

08007378 <siprintf>:
 8007378:	b40e      	push	{r1, r2, r3}
 800737a:	b500      	push	{lr}
 800737c:	490b      	ldr	r1, [pc, #44]	; (80073ac <siprintf+0x34>)
 800737e:	b09c      	sub	sp, #112	; 0x70
 8007380:	ab1d      	add	r3, sp, #116	; 0x74
 8007382:	9002      	str	r0, [sp, #8]
 8007384:	9006      	str	r0, [sp, #24]
 8007386:	9107      	str	r1, [sp, #28]
 8007388:	9104      	str	r1, [sp, #16]
 800738a:	4809      	ldr	r0, [pc, #36]	; (80073b0 <siprintf+0x38>)
 800738c:	4909      	ldr	r1, [pc, #36]	; (80073b4 <siprintf+0x3c>)
 800738e:	cb04      	ldmia	r3!, {r2}
 8007390:	9105      	str	r1, [sp, #20]
 8007392:	6800      	ldr	r0, [r0, #0]
 8007394:	a902      	add	r1, sp, #8
 8007396:	9301      	str	r3, [sp, #4]
 8007398:	f002 fdd4 	bl	8009f44 <_svfiprintf_r>
 800739c:	2300      	movs	r3, #0
 800739e:	9a02      	ldr	r2, [sp, #8]
 80073a0:	7013      	strb	r3, [r2, #0]
 80073a2:	b01c      	add	sp, #112	; 0x70
 80073a4:	bc08      	pop	{r3}
 80073a6:	b003      	add	sp, #12
 80073a8:	4718      	bx	r3
 80073aa:	46c0      	nop			; (mov r8, r8)
 80073ac:	7fffffff 	.word	0x7fffffff
 80073b0:	2000000c 	.word	0x2000000c
 80073b4:	ffff0208 	.word	0xffff0208

080073b8 <sulp>:
 80073b8:	b570      	push	{r4, r5, r6, lr}
 80073ba:	0016      	movs	r6, r2
 80073bc:	000d      	movs	r5, r1
 80073be:	f002 fb83 	bl	8009ac8 <__ulp>
 80073c2:	2e00      	cmp	r6, #0
 80073c4:	d00d      	beq.n	80073e2 <sulp+0x2a>
 80073c6:	236b      	movs	r3, #107	; 0x6b
 80073c8:	006a      	lsls	r2, r5, #1
 80073ca:	0d52      	lsrs	r2, r2, #21
 80073cc:	1a9b      	subs	r3, r3, r2
 80073ce:	2b00      	cmp	r3, #0
 80073d0:	dd07      	ble.n	80073e2 <sulp+0x2a>
 80073d2:	2400      	movs	r4, #0
 80073d4:	4a03      	ldr	r2, [pc, #12]	; (80073e4 <sulp+0x2c>)
 80073d6:	051b      	lsls	r3, r3, #20
 80073d8:	189d      	adds	r5, r3, r2
 80073da:	002b      	movs	r3, r5
 80073dc:	0022      	movs	r2, r4
 80073de:	f7fa f8c9 	bl	8001574 <__aeabi_dmul>
 80073e2:	bd70      	pop	{r4, r5, r6, pc}
 80073e4:	3ff00000 	.word	0x3ff00000

080073e8 <_strtod_l>:
 80073e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80073ea:	b0a7      	sub	sp, #156	; 0x9c
 80073ec:	9307      	str	r3, [sp, #28]
 80073ee:	2300      	movs	r3, #0
 80073f0:	9004      	str	r0, [sp, #16]
 80073f2:	9807      	ldr	r0, [sp, #28]
 80073f4:	9322      	str	r3, [sp, #136]	; 0x88
 80073f6:	9106      	str	r1, [sp, #24]
 80073f8:	921d      	str	r2, [sp, #116]	; 0x74
 80073fa:	f002 f857 	bl	80094ac <__localeconv_l>
 80073fe:	0005      	movs	r5, r0
 8007400:	6800      	ldr	r0, [r0, #0]
 8007402:	f7f8 fe81 	bl	8000108 <strlen>
 8007406:	2600      	movs	r6, #0
 8007408:	2700      	movs	r7, #0
 800740a:	9b06      	ldr	r3, [sp, #24]
 800740c:	9005      	str	r0, [sp, #20]
 800740e:	9321      	str	r3, [sp, #132]	; 0x84
 8007410:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007412:	781a      	ldrb	r2, [r3, #0]
 8007414:	2a0d      	cmp	r2, #13
 8007416:	d839      	bhi.n	800748c <_strtod_l+0xa4>
 8007418:	2a09      	cmp	r2, #9
 800741a:	d23d      	bcs.n	8007498 <_strtod_l+0xb0>
 800741c:	2a00      	cmp	r2, #0
 800741e:	d044      	beq.n	80074aa <_strtod_l+0xc2>
 8007420:	2300      	movs	r3, #0
 8007422:	9313      	str	r3, [sp, #76]	; 0x4c
 8007424:	2200      	movs	r2, #0
 8007426:	9c21      	ldr	r4, [sp, #132]	; 0x84
 8007428:	920c      	str	r2, [sp, #48]	; 0x30
 800742a:	7823      	ldrb	r3, [r4, #0]
 800742c:	2b30      	cmp	r3, #48	; 0x30
 800742e:	d000      	beq.n	8007432 <_strtod_l+0x4a>
 8007430:	e07e      	b.n	8007530 <_strtod_l+0x148>
 8007432:	7863      	ldrb	r3, [r4, #1]
 8007434:	2b58      	cmp	r3, #88	; 0x58
 8007436:	d002      	beq.n	800743e <_strtod_l+0x56>
 8007438:	2b78      	cmp	r3, #120	; 0x78
 800743a:	d000      	beq.n	800743e <_strtod_l+0x56>
 800743c:	e06e      	b.n	800751c <_strtod_l+0x134>
 800743e:	9b07      	ldr	r3, [sp, #28]
 8007440:	4a96      	ldr	r2, [pc, #600]	; (800769c <_strtod_l+0x2b4>)
 8007442:	9302      	str	r3, [sp, #8]
 8007444:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007446:	a921      	add	r1, sp, #132	; 0x84
 8007448:	9301      	str	r3, [sp, #4]
 800744a:	ab22      	add	r3, sp, #136	; 0x88
 800744c:	9300      	str	r3, [sp, #0]
 800744e:	9804      	ldr	r0, [sp, #16]
 8007450:	ab23      	add	r3, sp, #140	; 0x8c
 8007452:	f001 fd40 	bl	8008ed6 <__gethex>
 8007456:	2507      	movs	r5, #7
 8007458:	9005      	str	r0, [sp, #20]
 800745a:	4005      	ands	r5, r0
 800745c:	d005      	beq.n	800746a <_strtod_l+0x82>
 800745e:	2d06      	cmp	r5, #6
 8007460:	d12f      	bne.n	80074c2 <_strtod_l+0xda>
 8007462:	2300      	movs	r3, #0
 8007464:	3401      	adds	r4, #1
 8007466:	9421      	str	r4, [sp, #132]	; 0x84
 8007468:	9313      	str	r3, [sp, #76]	; 0x4c
 800746a:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 800746c:	2b00      	cmp	r3, #0
 800746e:	d002      	beq.n	8007476 <_strtod_l+0x8e>
 8007470:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 8007472:	9a21      	ldr	r2, [sp, #132]	; 0x84
 8007474:	601a      	str	r2, [r3, #0]
 8007476:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 8007478:	2b00      	cmp	r3, #0
 800747a:	d01d      	beq.n	80074b8 <_strtod_l+0xd0>
 800747c:	2380      	movs	r3, #128	; 0x80
 800747e:	0032      	movs	r2, r6
 8007480:	061b      	lsls	r3, r3, #24
 8007482:	18fb      	adds	r3, r7, r3
 8007484:	0010      	movs	r0, r2
 8007486:	0019      	movs	r1, r3
 8007488:	b027      	add	sp, #156	; 0x9c
 800748a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800748c:	2a2b      	cmp	r2, #43	; 0x2b
 800748e:	d016      	beq.n	80074be <_strtod_l+0xd6>
 8007490:	2a2d      	cmp	r2, #45	; 0x2d
 8007492:	d003      	beq.n	800749c <_strtod_l+0xb4>
 8007494:	2a20      	cmp	r2, #32
 8007496:	d1c3      	bne.n	8007420 <_strtod_l+0x38>
 8007498:	3301      	adds	r3, #1
 800749a:	e7b8      	b.n	800740e <_strtod_l+0x26>
 800749c:	2201      	movs	r2, #1
 800749e:	9213      	str	r2, [sp, #76]	; 0x4c
 80074a0:	1c5a      	adds	r2, r3, #1
 80074a2:	9221      	str	r2, [sp, #132]	; 0x84
 80074a4:	785b      	ldrb	r3, [r3, #1]
 80074a6:	2b00      	cmp	r3, #0
 80074a8:	d1bc      	bne.n	8007424 <_strtod_l+0x3c>
 80074aa:	9b06      	ldr	r3, [sp, #24]
 80074ac:	9321      	str	r3, [sp, #132]	; 0x84
 80074ae:	2300      	movs	r3, #0
 80074b0:	9313      	str	r3, [sp, #76]	; 0x4c
 80074b2:	9b1d      	ldr	r3, [sp, #116]	; 0x74
 80074b4:	2b00      	cmp	r3, #0
 80074b6:	d1db      	bne.n	8007470 <_strtod_l+0x88>
 80074b8:	0032      	movs	r2, r6
 80074ba:	003b      	movs	r3, r7
 80074bc:	e7e2      	b.n	8007484 <_strtod_l+0x9c>
 80074be:	2200      	movs	r2, #0
 80074c0:	e7ed      	b.n	800749e <_strtod_l+0xb6>
 80074c2:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80074c4:	2a00      	cmp	r2, #0
 80074c6:	d007      	beq.n	80074d8 <_strtod_l+0xf0>
 80074c8:	2135      	movs	r1, #53	; 0x35
 80074ca:	a824      	add	r0, sp, #144	; 0x90
 80074cc:	f002 fbe9 	bl	8009ca2 <__copybits>
 80074d0:	9922      	ldr	r1, [sp, #136]	; 0x88
 80074d2:	9804      	ldr	r0, [sp, #16]
 80074d4:	f002 f860 	bl	8009598 <_Bfree>
 80074d8:	1e68      	subs	r0, r5, #1
 80074da:	2804      	cmp	r0, #4
 80074dc:	d806      	bhi.n	80074ec <_strtod_l+0x104>
 80074de:	f7f8 fe1b 	bl	8000118 <__gnu_thumb1_case_uqi>
 80074e2:	030c      	.short	0x030c
 80074e4:	1917      	.short	0x1917
 80074e6:	0c          	.byte	0x0c
 80074e7:	00          	.byte	0x00
 80074e8:	9e24      	ldr	r6, [sp, #144]	; 0x90
 80074ea:	9f25      	ldr	r7, [sp, #148]	; 0x94
 80074ec:	9b05      	ldr	r3, [sp, #20]
 80074ee:	071b      	lsls	r3, r3, #28
 80074f0:	d5bb      	bpl.n	800746a <_strtod_l+0x82>
 80074f2:	2380      	movs	r3, #128	; 0x80
 80074f4:	061b      	lsls	r3, r3, #24
 80074f6:	431f      	orrs	r7, r3
 80074f8:	e7b7      	b.n	800746a <_strtod_l+0x82>
 80074fa:	9b25      	ldr	r3, [sp, #148]	; 0x94
 80074fc:	4a68      	ldr	r2, [pc, #416]	; (80076a0 <_strtod_l+0x2b8>)
 80074fe:	4969      	ldr	r1, [pc, #420]	; (80076a4 <_strtod_l+0x2bc>)
 8007500:	401a      	ands	r2, r3
 8007502:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8007504:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8007506:	185b      	adds	r3, r3, r1
 8007508:	051b      	lsls	r3, r3, #20
 800750a:	431a      	orrs	r2, r3
 800750c:	0017      	movs	r7, r2
 800750e:	e7ed      	b.n	80074ec <_strtod_l+0x104>
 8007510:	4f65      	ldr	r7, [pc, #404]	; (80076a8 <_strtod_l+0x2c0>)
 8007512:	e7eb      	b.n	80074ec <_strtod_l+0x104>
 8007514:	2601      	movs	r6, #1
 8007516:	4f65      	ldr	r7, [pc, #404]	; (80076ac <_strtod_l+0x2c4>)
 8007518:	4276      	negs	r6, r6
 800751a:	e7e7      	b.n	80074ec <_strtod_l+0x104>
 800751c:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800751e:	1c5a      	adds	r2, r3, #1
 8007520:	9221      	str	r2, [sp, #132]	; 0x84
 8007522:	785b      	ldrb	r3, [r3, #1]
 8007524:	2b30      	cmp	r3, #48	; 0x30
 8007526:	d0f9      	beq.n	800751c <_strtod_l+0x134>
 8007528:	2b00      	cmp	r3, #0
 800752a:	d09e      	beq.n	800746a <_strtod_l+0x82>
 800752c:	2301      	movs	r3, #1
 800752e:	930c      	str	r3, [sp, #48]	; 0x30
 8007530:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007532:	220a      	movs	r2, #10
 8007534:	9312      	str	r3, [sp, #72]	; 0x48
 8007536:	2300      	movs	r3, #0
 8007538:	930b      	str	r3, [sp, #44]	; 0x2c
 800753a:	9308      	str	r3, [sp, #32]
 800753c:	930a      	str	r3, [sp, #40]	; 0x28
 800753e:	9821      	ldr	r0, [sp, #132]	; 0x84
 8007540:	7804      	ldrb	r4, [r0, #0]
 8007542:	0023      	movs	r3, r4
 8007544:	3b30      	subs	r3, #48	; 0x30
 8007546:	b2d9      	uxtb	r1, r3
 8007548:	2909      	cmp	r1, #9
 800754a:	d934      	bls.n	80075b6 <_strtod_l+0x1ce>
 800754c:	9a05      	ldr	r2, [sp, #20]
 800754e:	6829      	ldr	r1, [r5, #0]
 8007550:	f002 fe08 	bl	800a164 <strncmp>
 8007554:	2800      	cmp	r0, #0
 8007556:	d040      	beq.n	80075da <_strtod_l+0x1f2>
 8007558:	2000      	movs	r0, #0
 800755a:	0023      	movs	r3, r4
 800755c:	4684      	mov	ip, r0
 800755e:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007560:	9007      	str	r0, [sp, #28]
 8007562:	9205      	str	r2, [sp, #20]
 8007564:	2220      	movs	r2, #32
 8007566:	0019      	movs	r1, r3
 8007568:	4391      	bics	r1, r2
 800756a:	000a      	movs	r2, r1
 800756c:	2100      	movs	r1, #0
 800756e:	2a45      	cmp	r2, #69	; 0x45
 8007570:	d000      	beq.n	8007574 <_strtod_l+0x18c>
 8007572:	e0bf      	b.n	80076f4 <_strtod_l+0x30c>
 8007574:	9b05      	ldr	r3, [sp, #20]
 8007576:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007578:	4303      	orrs	r3, r0
 800757a:	4313      	orrs	r3, r2
 800757c:	428b      	cmp	r3, r1
 800757e:	d094      	beq.n	80074aa <_strtod_l+0xc2>
 8007580:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007582:	9306      	str	r3, [sp, #24]
 8007584:	3301      	adds	r3, #1
 8007586:	9321      	str	r3, [sp, #132]	; 0x84
 8007588:	9b06      	ldr	r3, [sp, #24]
 800758a:	785b      	ldrb	r3, [r3, #1]
 800758c:	2b2b      	cmp	r3, #43	; 0x2b
 800758e:	d100      	bne.n	8007592 <_strtod_l+0x1aa>
 8007590:	e082      	b.n	8007698 <_strtod_l+0x2b0>
 8007592:	000c      	movs	r4, r1
 8007594:	2b2d      	cmp	r3, #45	; 0x2d
 8007596:	d105      	bne.n	80075a4 <_strtod_l+0x1bc>
 8007598:	2401      	movs	r4, #1
 800759a:	9b06      	ldr	r3, [sp, #24]
 800759c:	3302      	adds	r3, #2
 800759e:	9321      	str	r3, [sp, #132]	; 0x84
 80075a0:	9b06      	ldr	r3, [sp, #24]
 80075a2:	789b      	ldrb	r3, [r3, #2]
 80075a4:	001a      	movs	r2, r3
 80075a6:	3a30      	subs	r2, #48	; 0x30
 80075a8:	2a09      	cmp	r2, #9
 80075aa:	d800      	bhi.n	80075ae <_strtod_l+0x1c6>
 80075ac:	e084      	b.n	80076b8 <_strtod_l+0x2d0>
 80075ae:	9a06      	ldr	r2, [sp, #24]
 80075b0:	2100      	movs	r1, #0
 80075b2:	9221      	str	r2, [sp, #132]	; 0x84
 80075b4:	e09e      	b.n	80076f4 <_strtod_l+0x30c>
 80075b6:	990a      	ldr	r1, [sp, #40]	; 0x28
 80075b8:	2908      	cmp	r1, #8
 80075ba:	dc09      	bgt.n	80075d0 <_strtod_l+0x1e8>
 80075bc:	9908      	ldr	r1, [sp, #32]
 80075be:	4351      	muls	r1, r2
 80075c0:	18cb      	adds	r3, r1, r3
 80075c2:	9308      	str	r3, [sp, #32]
 80075c4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80075c6:	3001      	adds	r0, #1
 80075c8:	3301      	adds	r3, #1
 80075ca:	930a      	str	r3, [sp, #40]	; 0x28
 80075cc:	9021      	str	r0, [sp, #132]	; 0x84
 80075ce:	e7b6      	b.n	800753e <_strtod_l+0x156>
 80075d0:	990b      	ldr	r1, [sp, #44]	; 0x2c
 80075d2:	4351      	muls	r1, r2
 80075d4:	18cb      	adds	r3, r1, r3
 80075d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80075d8:	e7f4      	b.n	80075c4 <_strtod_l+0x1dc>
 80075da:	9a21      	ldr	r2, [sp, #132]	; 0x84
 80075dc:	9b05      	ldr	r3, [sp, #20]
 80075de:	4694      	mov	ip, r2
 80075e0:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80075e2:	4463      	add	r3, ip
 80075e4:	9321      	str	r3, [sp, #132]	; 0x84
 80075e6:	781b      	ldrb	r3, [r3, #0]
 80075e8:	2a00      	cmp	r2, #0
 80075ea:	d036      	beq.n	800765a <_strtod_l+0x272>
 80075ec:	4684      	mov	ip, r0
 80075ee:	9205      	str	r2, [sp, #20]
 80075f0:	001a      	movs	r2, r3
 80075f2:	3a30      	subs	r2, #48	; 0x30
 80075f4:	2a09      	cmp	r2, #9
 80075f6:	d912      	bls.n	800761e <_strtod_l+0x236>
 80075f8:	2201      	movs	r2, #1
 80075fa:	9207      	str	r2, [sp, #28]
 80075fc:	e7b2      	b.n	8007564 <_strtod_l+0x17c>
 80075fe:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007600:	3001      	adds	r0, #1
 8007602:	1c5a      	adds	r2, r3, #1
 8007604:	9221      	str	r2, [sp, #132]	; 0x84
 8007606:	785b      	ldrb	r3, [r3, #1]
 8007608:	2b30      	cmp	r3, #48	; 0x30
 800760a:	d0f8      	beq.n	80075fe <_strtod_l+0x216>
 800760c:	001a      	movs	r2, r3
 800760e:	3a31      	subs	r2, #49	; 0x31
 8007610:	2a08      	cmp	r2, #8
 8007612:	d83c      	bhi.n	800768e <_strtod_l+0x2a6>
 8007614:	4684      	mov	ip, r0
 8007616:	2000      	movs	r0, #0
 8007618:	9a21      	ldr	r2, [sp, #132]	; 0x84
 800761a:	9005      	str	r0, [sp, #20]
 800761c:	9212      	str	r2, [sp, #72]	; 0x48
 800761e:	3b30      	subs	r3, #48	; 0x30
 8007620:	1c42      	adds	r2, r0, #1
 8007622:	2b00      	cmp	r3, #0
 8007624:	d013      	beq.n	800764e <_strtod_l+0x266>
 8007626:	210a      	movs	r1, #10
 8007628:	4494      	add	ip, r2
 800762a:	9a05      	ldr	r2, [sp, #20]
 800762c:	1885      	adds	r5, r0, r2
 800762e:	42aa      	cmp	r2, r5
 8007630:	d115      	bne.n	800765e <_strtod_l+0x276>
 8007632:	9905      	ldr	r1, [sp, #20]
 8007634:	9a05      	ldr	r2, [sp, #20]
 8007636:	3101      	adds	r1, #1
 8007638:	1809      	adds	r1, r1, r0
 800763a:	1812      	adds	r2, r2, r0
 800763c:	9105      	str	r1, [sp, #20]
 800763e:	2a08      	cmp	r2, #8
 8007640:	dc1b      	bgt.n	800767a <_strtod_l+0x292>
 8007642:	220a      	movs	r2, #10
 8007644:	9908      	ldr	r1, [sp, #32]
 8007646:	434a      	muls	r2, r1
 8007648:	189b      	adds	r3, r3, r2
 800764a:	2200      	movs	r2, #0
 800764c:	9308      	str	r3, [sp, #32]
 800764e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007650:	0010      	movs	r0, r2
 8007652:	1c59      	adds	r1, r3, #1
 8007654:	9121      	str	r1, [sp, #132]	; 0x84
 8007656:	785b      	ldrb	r3, [r3, #1]
 8007658:	e7ca      	b.n	80075f0 <_strtod_l+0x208>
 800765a:	980a      	ldr	r0, [sp, #40]	; 0x28
 800765c:	e7d4      	b.n	8007608 <_strtod_l+0x220>
 800765e:	1c54      	adds	r4, r2, #1
 8007660:	2a08      	cmp	r2, #8
 8007662:	dc04      	bgt.n	800766e <_strtod_l+0x286>
 8007664:	9a08      	ldr	r2, [sp, #32]
 8007666:	434a      	muls	r2, r1
 8007668:	9208      	str	r2, [sp, #32]
 800766a:	0022      	movs	r2, r4
 800766c:	e7df      	b.n	800762e <_strtod_l+0x246>
 800766e:	2c10      	cmp	r4, #16
 8007670:	dcfb      	bgt.n	800766a <_strtod_l+0x282>
 8007672:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8007674:	434a      	muls	r2, r1
 8007676:	920b      	str	r2, [sp, #44]	; 0x2c
 8007678:	e7f7      	b.n	800766a <_strtod_l+0x282>
 800767a:	9905      	ldr	r1, [sp, #20]
 800767c:	2200      	movs	r2, #0
 800767e:	2910      	cmp	r1, #16
 8007680:	dce5      	bgt.n	800764e <_strtod_l+0x266>
 8007682:	210a      	movs	r1, #10
 8007684:	980b      	ldr	r0, [sp, #44]	; 0x2c
 8007686:	4341      	muls	r1, r0
 8007688:	185b      	adds	r3, r3, r1
 800768a:	930b      	str	r3, [sp, #44]	; 0x2c
 800768c:	e7df      	b.n	800764e <_strtod_l+0x266>
 800768e:	2200      	movs	r2, #0
 8007690:	4694      	mov	ip, r2
 8007692:	9205      	str	r2, [sp, #20]
 8007694:	3201      	adds	r2, #1
 8007696:	e7b0      	b.n	80075fa <_strtod_l+0x212>
 8007698:	000c      	movs	r4, r1
 800769a:	e77e      	b.n	800759a <_strtod_l+0x1b2>
 800769c:	0800a3ec 	.word	0x0800a3ec
 80076a0:	ffefffff 	.word	0xffefffff
 80076a4:	00000433 	.word	0x00000433
 80076a8:	7ff00000 	.word	0x7ff00000
 80076ac:	7fffffff 	.word	0x7fffffff
 80076b0:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80076b2:	1c5a      	adds	r2, r3, #1
 80076b4:	9221      	str	r2, [sp, #132]	; 0x84
 80076b6:	785b      	ldrb	r3, [r3, #1]
 80076b8:	2b30      	cmp	r3, #48	; 0x30
 80076ba:	d0f9      	beq.n	80076b0 <_strtod_l+0x2c8>
 80076bc:	001a      	movs	r2, r3
 80076be:	3a31      	subs	r2, #49	; 0x31
 80076c0:	2100      	movs	r1, #0
 80076c2:	2a08      	cmp	r2, #8
 80076c4:	d816      	bhi.n	80076f4 <_strtod_l+0x30c>
 80076c6:	3b30      	subs	r3, #48	; 0x30
 80076c8:	9d21      	ldr	r5, [sp, #132]	; 0x84
 80076ca:	930e      	str	r3, [sp, #56]	; 0x38
 80076cc:	9b21      	ldr	r3, [sp, #132]	; 0x84
 80076ce:	1c59      	adds	r1, r3, #1
 80076d0:	9121      	str	r1, [sp, #132]	; 0x84
 80076d2:	785b      	ldrb	r3, [r3, #1]
 80076d4:	001a      	movs	r2, r3
 80076d6:	3a30      	subs	r2, #48	; 0x30
 80076d8:	2a09      	cmp	r2, #9
 80076da:	d932      	bls.n	8007742 <_strtod_l+0x35a>
 80076dc:	1b4a      	subs	r2, r1, r5
 80076de:	4dad      	ldr	r5, [pc, #692]	; (8007994 <_strtod_l+0x5ac>)
 80076e0:	0029      	movs	r1, r5
 80076e2:	2a08      	cmp	r2, #8
 80076e4:	dc03      	bgt.n	80076ee <_strtod_l+0x306>
 80076e6:	990e      	ldr	r1, [sp, #56]	; 0x38
 80076e8:	42a9      	cmp	r1, r5
 80076ea:	dd00      	ble.n	80076ee <_strtod_l+0x306>
 80076ec:	0029      	movs	r1, r5
 80076ee:	2c00      	cmp	r4, #0
 80076f0:	d000      	beq.n	80076f4 <_strtod_l+0x30c>
 80076f2:	4249      	negs	r1, r1
 80076f4:	9a05      	ldr	r2, [sp, #20]
 80076f6:	2a00      	cmp	r2, #0
 80076f8:	d149      	bne.n	800778e <_strtod_l+0x3a6>
 80076fa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80076fc:	4310      	orrs	r0, r2
 80076fe:	d000      	beq.n	8007702 <_strtod_l+0x31a>
 8007700:	e6b3      	b.n	800746a <_strtod_l+0x82>
 8007702:	9a07      	ldr	r2, [sp, #28]
 8007704:	2a00      	cmp	r2, #0
 8007706:	d000      	beq.n	800770a <_strtod_l+0x322>
 8007708:	e6cf      	b.n	80074aa <_strtod_l+0xc2>
 800770a:	2b4e      	cmp	r3, #78	; 0x4e
 800770c:	d025      	beq.n	800775a <_strtod_l+0x372>
 800770e:	dc1f      	bgt.n	8007750 <_strtod_l+0x368>
 8007710:	2b49      	cmp	r3, #73	; 0x49
 8007712:	d000      	beq.n	8007716 <_strtod_l+0x32e>
 8007714:	e6c9      	b.n	80074aa <_strtod_l+0xc2>
 8007716:	49a0      	ldr	r1, [pc, #640]	; (8007998 <_strtod_l+0x5b0>)
 8007718:	a821      	add	r0, sp, #132	; 0x84
 800771a:	f001 fe19 	bl	8009350 <__match>
 800771e:	2800      	cmp	r0, #0
 8007720:	d100      	bne.n	8007724 <_strtod_l+0x33c>
 8007722:	e6c2      	b.n	80074aa <_strtod_l+0xc2>
 8007724:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007726:	499d      	ldr	r1, [pc, #628]	; (800799c <_strtod_l+0x5b4>)
 8007728:	3b01      	subs	r3, #1
 800772a:	a821      	add	r0, sp, #132	; 0x84
 800772c:	9321      	str	r3, [sp, #132]	; 0x84
 800772e:	f001 fe0f 	bl	8009350 <__match>
 8007732:	2800      	cmp	r0, #0
 8007734:	d102      	bne.n	800773c <_strtod_l+0x354>
 8007736:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8007738:	3301      	adds	r3, #1
 800773a:	9321      	str	r3, [sp, #132]	; 0x84
 800773c:	4f98      	ldr	r7, [pc, #608]	; (80079a0 <_strtod_l+0x5b8>)
 800773e:	2600      	movs	r6, #0
 8007740:	e693      	b.n	800746a <_strtod_l+0x82>
 8007742:	220a      	movs	r2, #10
 8007744:	990e      	ldr	r1, [sp, #56]	; 0x38
 8007746:	434a      	muls	r2, r1
 8007748:	18d2      	adds	r2, r2, r3
 800774a:	3a30      	subs	r2, #48	; 0x30
 800774c:	920e      	str	r2, [sp, #56]	; 0x38
 800774e:	e7bd      	b.n	80076cc <_strtod_l+0x2e4>
 8007750:	2b69      	cmp	r3, #105	; 0x69
 8007752:	d0e0      	beq.n	8007716 <_strtod_l+0x32e>
 8007754:	2b6e      	cmp	r3, #110	; 0x6e
 8007756:	d000      	beq.n	800775a <_strtod_l+0x372>
 8007758:	e6a7      	b.n	80074aa <_strtod_l+0xc2>
 800775a:	4992      	ldr	r1, [pc, #584]	; (80079a4 <_strtod_l+0x5bc>)
 800775c:	a821      	add	r0, sp, #132	; 0x84
 800775e:	f001 fdf7 	bl	8009350 <__match>
 8007762:	2800      	cmp	r0, #0
 8007764:	d100      	bne.n	8007768 <_strtod_l+0x380>
 8007766:	e6a0      	b.n	80074aa <_strtod_l+0xc2>
 8007768:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800776a:	781b      	ldrb	r3, [r3, #0]
 800776c:	2b28      	cmp	r3, #40	; 0x28
 800776e:	d10c      	bne.n	800778a <_strtod_l+0x3a2>
 8007770:	aa24      	add	r2, sp, #144	; 0x90
 8007772:	498d      	ldr	r1, [pc, #564]	; (80079a8 <_strtod_l+0x5c0>)
 8007774:	a821      	add	r0, sp, #132	; 0x84
 8007776:	f001 fdff 	bl	8009378 <__hexnan>
 800777a:	2805      	cmp	r0, #5
 800777c:	d105      	bne.n	800778a <_strtod_l+0x3a2>
 800777e:	9b25      	ldr	r3, [sp, #148]	; 0x94
 8007780:	4a87      	ldr	r2, [pc, #540]	; (80079a0 <_strtod_l+0x5b8>)
 8007782:	9e24      	ldr	r6, [sp, #144]	; 0x90
 8007784:	431a      	orrs	r2, r3
 8007786:	0017      	movs	r7, r2
 8007788:	e66f      	b.n	800746a <_strtod_l+0x82>
 800778a:	4f88      	ldr	r7, [pc, #544]	; (80079ac <_strtod_l+0x5c4>)
 800778c:	e7d7      	b.n	800773e <_strtod_l+0x356>
 800778e:	4663      	mov	r3, ip
 8007790:	1acb      	subs	r3, r1, r3
 8007792:	9307      	str	r3, [sp, #28]
 8007794:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8007796:	2b00      	cmp	r3, #0
 8007798:	d101      	bne.n	800779e <_strtod_l+0x3b6>
 800779a:	9b05      	ldr	r3, [sp, #20]
 800779c:	930a      	str	r3, [sp, #40]	; 0x28
 800779e:	9c05      	ldr	r4, [sp, #20]
 80077a0:	2c10      	cmp	r4, #16
 80077a2:	dd00      	ble.n	80077a6 <_strtod_l+0x3be>
 80077a4:	2410      	movs	r4, #16
 80077a6:	9808      	ldr	r0, [sp, #32]
 80077a8:	f7fa fd2a 	bl	8002200 <__aeabi_ui2d>
 80077ac:	9b05      	ldr	r3, [sp, #20]
 80077ae:	0006      	movs	r6, r0
 80077b0:	000f      	movs	r7, r1
 80077b2:	2b09      	cmp	r3, #9
 80077b4:	dc15      	bgt.n	80077e2 <_strtod_l+0x3fa>
 80077b6:	9b07      	ldr	r3, [sp, #28]
 80077b8:	2b00      	cmp	r3, #0
 80077ba:	d100      	bne.n	80077be <_strtod_l+0x3d6>
 80077bc:	e655      	b.n	800746a <_strtod_l+0x82>
 80077be:	9b07      	ldr	r3, [sp, #28]
 80077c0:	2b00      	cmp	r3, #0
 80077c2:	dc00      	bgt.n	80077c6 <_strtod_l+0x3de>
 80077c4:	e07d      	b.n	80078c2 <_strtod_l+0x4da>
 80077c6:	2b16      	cmp	r3, #22
 80077c8:	dc62      	bgt.n	8007890 <_strtod_l+0x4a8>
 80077ca:	00dc      	lsls	r4, r3, #3
 80077cc:	4b78      	ldr	r3, [pc, #480]	; (80079b0 <_strtod_l+0x5c8>)
 80077ce:	0032      	movs	r2, r6
 80077d0:	1919      	adds	r1, r3, r4
 80077d2:	003b      	movs	r3, r7
 80077d4:	6808      	ldr	r0, [r1, #0]
 80077d6:	6849      	ldr	r1, [r1, #4]
 80077d8:	f7f9 fecc 	bl	8001574 <__aeabi_dmul>
 80077dc:	0006      	movs	r6, r0
 80077de:	000f      	movs	r7, r1
 80077e0:	e643      	b.n	800746a <_strtod_l+0x82>
 80077e2:	0022      	movs	r2, r4
 80077e4:	4b72      	ldr	r3, [pc, #456]	; (80079b0 <_strtod_l+0x5c8>)
 80077e6:	3a09      	subs	r2, #9
 80077e8:	00d2      	lsls	r2, r2, #3
 80077ea:	189b      	adds	r3, r3, r2
 80077ec:	681a      	ldr	r2, [r3, #0]
 80077ee:	685b      	ldr	r3, [r3, #4]
 80077f0:	f7f9 fec0 	bl	8001574 <__aeabi_dmul>
 80077f4:	0006      	movs	r6, r0
 80077f6:	980b      	ldr	r0, [sp, #44]	; 0x2c
 80077f8:	000f      	movs	r7, r1
 80077fa:	f7fa fd01 	bl	8002200 <__aeabi_ui2d>
 80077fe:	000b      	movs	r3, r1
 8007800:	0002      	movs	r2, r0
 8007802:	0039      	movs	r1, r7
 8007804:	0030      	movs	r0, r6
 8007806:	f7f8 ff8f 	bl	8000728 <__aeabi_dadd>
 800780a:	9b05      	ldr	r3, [sp, #20]
 800780c:	0006      	movs	r6, r0
 800780e:	000f      	movs	r7, r1
 8007810:	2b0f      	cmp	r3, #15
 8007812:	ddd0      	ble.n	80077b6 <_strtod_l+0x3ce>
 8007814:	9b05      	ldr	r3, [sp, #20]
 8007816:	1b1c      	subs	r4, r3, r4
 8007818:	9b07      	ldr	r3, [sp, #28]
 800781a:	18e4      	adds	r4, r4, r3
 800781c:	2c00      	cmp	r4, #0
 800781e:	dc00      	bgt.n	8007822 <_strtod_l+0x43a>
 8007820:	e094      	b.n	800794c <_strtod_l+0x564>
 8007822:	230f      	movs	r3, #15
 8007824:	4023      	ands	r3, r4
 8007826:	d00a      	beq.n	800783e <_strtod_l+0x456>
 8007828:	4961      	ldr	r1, [pc, #388]	; (80079b0 <_strtod_l+0x5c8>)
 800782a:	00db      	lsls	r3, r3, #3
 800782c:	18c9      	adds	r1, r1, r3
 800782e:	0032      	movs	r2, r6
 8007830:	6808      	ldr	r0, [r1, #0]
 8007832:	6849      	ldr	r1, [r1, #4]
 8007834:	003b      	movs	r3, r7
 8007836:	f7f9 fe9d 	bl	8001574 <__aeabi_dmul>
 800783a:	0006      	movs	r6, r0
 800783c:	000f      	movs	r7, r1
 800783e:	230f      	movs	r3, #15
 8007840:	439c      	bics	r4, r3
 8007842:	d06e      	beq.n	8007922 <_strtod_l+0x53a>
 8007844:	3326      	adds	r3, #38	; 0x26
 8007846:	33ff      	adds	r3, #255	; 0xff
 8007848:	429c      	cmp	r4, r3
 800784a:	dd48      	ble.n	80078de <_strtod_l+0x4f6>
 800784c:	2400      	movs	r4, #0
 800784e:	9405      	str	r4, [sp, #20]
 8007850:	940b      	str	r4, [sp, #44]	; 0x2c
 8007852:	940a      	str	r4, [sp, #40]	; 0x28
 8007854:	2322      	movs	r3, #34	; 0x22
 8007856:	2600      	movs	r6, #0
 8007858:	9a04      	ldr	r2, [sp, #16]
 800785a:	4f51      	ldr	r7, [pc, #324]	; (80079a0 <_strtod_l+0x5b8>)
 800785c:	6013      	str	r3, [r2, #0]
 800785e:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007860:	42b3      	cmp	r3, r6
 8007862:	d100      	bne.n	8007866 <_strtod_l+0x47e>
 8007864:	e601      	b.n	800746a <_strtod_l+0x82>
 8007866:	9922      	ldr	r1, [sp, #136]	; 0x88
 8007868:	9804      	ldr	r0, [sp, #16]
 800786a:	f001 fe95 	bl	8009598 <_Bfree>
 800786e:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007870:	9804      	ldr	r0, [sp, #16]
 8007872:	f001 fe91 	bl	8009598 <_Bfree>
 8007876:	9905      	ldr	r1, [sp, #20]
 8007878:	9804      	ldr	r0, [sp, #16]
 800787a:	f001 fe8d 	bl	8009598 <_Bfree>
 800787e:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007880:	9804      	ldr	r0, [sp, #16]
 8007882:	f001 fe89 	bl	8009598 <_Bfree>
 8007886:	0021      	movs	r1, r4
 8007888:	9804      	ldr	r0, [sp, #16]
 800788a:	f001 fe85 	bl	8009598 <_Bfree>
 800788e:	e5ec      	b.n	800746a <_strtod_l+0x82>
 8007890:	2325      	movs	r3, #37	; 0x25
 8007892:	9a05      	ldr	r2, [sp, #20]
 8007894:	1a9b      	subs	r3, r3, r2
 8007896:	9a07      	ldr	r2, [sp, #28]
 8007898:	4293      	cmp	r3, r2
 800789a:	dbbb      	blt.n	8007814 <_strtod_l+0x42c>
 800789c:	230f      	movs	r3, #15
 800789e:	9a05      	ldr	r2, [sp, #20]
 80078a0:	4c43      	ldr	r4, [pc, #268]	; (80079b0 <_strtod_l+0x5c8>)
 80078a2:	1a9d      	subs	r5, r3, r2
 80078a4:	00e9      	lsls	r1, r5, #3
 80078a6:	1861      	adds	r1, r4, r1
 80078a8:	0032      	movs	r2, r6
 80078aa:	6808      	ldr	r0, [r1, #0]
 80078ac:	6849      	ldr	r1, [r1, #4]
 80078ae:	003b      	movs	r3, r7
 80078b0:	f7f9 fe60 	bl	8001574 <__aeabi_dmul>
 80078b4:	9b07      	ldr	r3, [sp, #28]
 80078b6:	1b5e      	subs	r6, r3, r5
 80078b8:	00f6      	lsls	r6, r6, #3
 80078ba:	19a6      	adds	r6, r4, r6
 80078bc:	6832      	ldr	r2, [r6, #0]
 80078be:	6873      	ldr	r3, [r6, #4]
 80078c0:	e78a      	b.n	80077d8 <_strtod_l+0x3f0>
 80078c2:	9b07      	ldr	r3, [sp, #28]
 80078c4:	3316      	adds	r3, #22
 80078c6:	dba5      	blt.n	8007814 <_strtod_l+0x42c>
 80078c8:	9b07      	ldr	r3, [sp, #28]
 80078ca:	0030      	movs	r0, r6
 80078cc:	00da      	lsls	r2, r3, #3
 80078ce:	4b38      	ldr	r3, [pc, #224]	; (80079b0 <_strtod_l+0x5c8>)
 80078d0:	0039      	movs	r1, r7
 80078d2:	1a9b      	subs	r3, r3, r2
 80078d4:	681a      	ldr	r2, [r3, #0]
 80078d6:	685b      	ldr	r3, [r3, #4]
 80078d8:	f7f9 fa42 	bl	8000d60 <__aeabi_ddiv>
 80078dc:	e77e      	b.n	80077dc <_strtod_l+0x3f4>
 80078de:	2300      	movs	r3, #0
 80078e0:	0030      	movs	r0, r6
 80078e2:	0039      	movs	r1, r7
 80078e4:	001d      	movs	r5, r3
 80078e6:	1124      	asrs	r4, r4, #4
 80078e8:	2c01      	cmp	r4, #1
 80078ea:	dc1d      	bgt.n	8007928 <_strtod_l+0x540>
 80078ec:	2b00      	cmp	r3, #0
 80078ee:	d001      	beq.n	80078f4 <_strtod_l+0x50c>
 80078f0:	0006      	movs	r6, r0
 80078f2:	000f      	movs	r7, r1
 80078f4:	4b2f      	ldr	r3, [pc, #188]	; (80079b4 <_strtod_l+0x5cc>)
 80078f6:	00ed      	lsls	r5, r5, #3
 80078f8:	18ff      	adds	r7, r7, r3
 80078fa:	4b2f      	ldr	r3, [pc, #188]	; (80079b8 <_strtod_l+0x5d0>)
 80078fc:	0032      	movs	r2, r6
 80078fe:	195d      	adds	r5, r3, r5
 8007900:	6828      	ldr	r0, [r5, #0]
 8007902:	6869      	ldr	r1, [r5, #4]
 8007904:	003b      	movs	r3, r7
 8007906:	f7f9 fe35 	bl	8001574 <__aeabi_dmul>
 800790a:	4b25      	ldr	r3, [pc, #148]	; (80079a0 <_strtod_l+0x5b8>)
 800790c:	4a2b      	ldr	r2, [pc, #172]	; (80079bc <_strtod_l+0x5d4>)
 800790e:	0006      	movs	r6, r0
 8007910:	400b      	ands	r3, r1
 8007912:	4293      	cmp	r3, r2
 8007914:	d89a      	bhi.n	800784c <_strtod_l+0x464>
 8007916:	4a2a      	ldr	r2, [pc, #168]	; (80079c0 <_strtod_l+0x5d8>)
 8007918:	4293      	cmp	r3, r2
 800791a:	d913      	bls.n	8007944 <_strtod_l+0x55c>
 800791c:	2601      	movs	r6, #1
 800791e:	4f29      	ldr	r7, [pc, #164]	; (80079c4 <_strtod_l+0x5dc>)
 8007920:	4276      	negs	r6, r6
 8007922:	2300      	movs	r3, #0
 8007924:	9306      	str	r3, [sp, #24]
 8007926:	e07b      	b.n	8007a20 <_strtod_l+0x638>
 8007928:	2201      	movs	r2, #1
 800792a:	4214      	tst	r4, r2
 800792c:	d007      	beq.n	800793e <_strtod_l+0x556>
 800792e:	4a22      	ldr	r2, [pc, #136]	; (80079b8 <_strtod_l+0x5d0>)
 8007930:	00eb      	lsls	r3, r5, #3
 8007932:	189b      	adds	r3, r3, r2
 8007934:	681a      	ldr	r2, [r3, #0]
 8007936:	685b      	ldr	r3, [r3, #4]
 8007938:	f7f9 fe1c 	bl	8001574 <__aeabi_dmul>
 800793c:	2301      	movs	r3, #1
 800793e:	3501      	adds	r5, #1
 8007940:	1064      	asrs	r4, r4, #1
 8007942:	e7d1      	b.n	80078e8 <_strtod_l+0x500>
 8007944:	23d4      	movs	r3, #212	; 0xd4
 8007946:	049b      	lsls	r3, r3, #18
 8007948:	18cf      	adds	r7, r1, r3
 800794a:	e7ea      	b.n	8007922 <_strtod_l+0x53a>
 800794c:	2c00      	cmp	r4, #0
 800794e:	d0e8      	beq.n	8007922 <_strtod_l+0x53a>
 8007950:	230f      	movs	r3, #15
 8007952:	4264      	negs	r4, r4
 8007954:	4023      	ands	r3, r4
 8007956:	d00a      	beq.n	800796e <_strtod_l+0x586>
 8007958:	4a15      	ldr	r2, [pc, #84]	; (80079b0 <_strtod_l+0x5c8>)
 800795a:	00db      	lsls	r3, r3, #3
 800795c:	18d3      	adds	r3, r2, r3
 800795e:	0030      	movs	r0, r6
 8007960:	681a      	ldr	r2, [r3, #0]
 8007962:	685b      	ldr	r3, [r3, #4]
 8007964:	0039      	movs	r1, r7
 8007966:	f7f9 f9fb 	bl	8000d60 <__aeabi_ddiv>
 800796a:	0006      	movs	r6, r0
 800796c:	000f      	movs	r7, r1
 800796e:	1124      	asrs	r4, r4, #4
 8007970:	d0d7      	beq.n	8007922 <_strtod_l+0x53a>
 8007972:	2c1f      	cmp	r4, #31
 8007974:	dd28      	ble.n	80079c8 <_strtod_l+0x5e0>
 8007976:	2400      	movs	r4, #0
 8007978:	9405      	str	r4, [sp, #20]
 800797a:	940b      	str	r4, [sp, #44]	; 0x2c
 800797c:	940a      	str	r4, [sp, #40]	; 0x28
 800797e:	2322      	movs	r3, #34	; 0x22
 8007980:	9a04      	ldr	r2, [sp, #16]
 8007982:	2600      	movs	r6, #0
 8007984:	6013      	str	r3, [r2, #0]
 8007986:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007988:	2700      	movs	r7, #0
 800798a:	2b00      	cmp	r3, #0
 800798c:	d000      	beq.n	8007990 <_strtod_l+0x5a8>
 800798e:	e76a      	b.n	8007866 <_strtod_l+0x47e>
 8007990:	e56b      	b.n	800746a <_strtod_l+0x82>
 8007992:	46c0      	nop			; (mov r8, r8)
 8007994:	00004e1f 	.word	0x00004e1f
 8007998:	0800a3b5 	.word	0x0800a3b5
 800799c:	0800a443 	.word	0x0800a443
 80079a0:	7ff00000 	.word	0x7ff00000
 80079a4:	0800a3bd 	.word	0x0800a3bd
 80079a8:	0800a400 	.word	0x0800a400
 80079ac:	fff80000 	.word	0xfff80000
 80079b0:	0800a480 	.word	0x0800a480
 80079b4:	fcb00000 	.word	0xfcb00000
 80079b8:	0800a458 	.word	0x0800a458
 80079bc:	7ca00000 	.word	0x7ca00000
 80079c0:	7c900000 	.word	0x7c900000
 80079c4:	7fefffff 	.word	0x7fefffff
 80079c8:	2310      	movs	r3, #16
 80079ca:	4023      	ands	r3, r4
 80079cc:	9306      	str	r3, [sp, #24]
 80079ce:	d001      	beq.n	80079d4 <_strtod_l+0x5ec>
 80079d0:	236a      	movs	r3, #106	; 0x6a
 80079d2:	9306      	str	r3, [sp, #24]
 80079d4:	2300      	movs	r3, #0
 80079d6:	0030      	movs	r0, r6
 80079d8:	0039      	movs	r1, r7
 80079da:	001d      	movs	r5, r3
 80079dc:	2c00      	cmp	r4, #0
 80079de:	dd00      	ble.n	80079e2 <_strtod_l+0x5fa>
 80079e0:	e10e      	b.n	8007c00 <_strtod_l+0x818>
 80079e2:	2b00      	cmp	r3, #0
 80079e4:	d001      	beq.n	80079ea <_strtod_l+0x602>
 80079e6:	0006      	movs	r6, r0
 80079e8:	000f      	movs	r7, r1
 80079ea:	9b06      	ldr	r3, [sp, #24]
 80079ec:	2b00      	cmp	r3, #0
 80079ee:	d00f      	beq.n	8007a10 <_strtod_l+0x628>
 80079f0:	236b      	movs	r3, #107	; 0x6b
 80079f2:	0079      	lsls	r1, r7, #1
 80079f4:	0d49      	lsrs	r1, r1, #21
 80079f6:	003a      	movs	r2, r7
 80079f8:	1a5b      	subs	r3, r3, r1
 80079fa:	2b00      	cmp	r3, #0
 80079fc:	dd08      	ble.n	8007a10 <_strtod_l+0x628>
 80079fe:	2b1f      	cmp	r3, #31
 8007a00:	dc00      	bgt.n	8007a04 <_strtod_l+0x61c>
 8007a02:	e112      	b.n	8007c2a <_strtod_l+0x842>
 8007a04:	2600      	movs	r6, #0
 8007a06:	2b34      	cmp	r3, #52	; 0x34
 8007a08:	dc00      	bgt.n	8007a0c <_strtod_l+0x624>
 8007a0a:	e107      	b.n	8007c1c <_strtod_l+0x834>
 8007a0c:	27dc      	movs	r7, #220	; 0xdc
 8007a0e:	04bf      	lsls	r7, r7, #18
 8007a10:	2200      	movs	r2, #0
 8007a12:	2300      	movs	r3, #0
 8007a14:	0030      	movs	r0, r6
 8007a16:	0039      	movs	r1, r7
 8007a18:	f7f8 fd0e 	bl	8000438 <__aeabi_dcmpeq>
 8007a1c:	2800      	cmp	r0, #0
 8007a1e:	d1aa      	bne.n	8007976 <_strtod_l+0x58e>
 8007a20:	9b08      	ldr	r3, [sp, #32]
 8007a22:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007a24:	9300      	str	r3, [sp, #0]
 8007a26:	9912      	ldr	r1, [sp, #72]	; 0x48
 8007a28:	9b05      	ldr	r3, [sp, #20]
 8007a2a:	9804      	ldr	r0, [sp, #16]
 8007a2c:	f001 fe0b 	bl	8009646 <__s2b>
 8007a30:	900b      	str	r0, [sp, #44]	; 0x2c
 8007a32:	2800      	cmp	r0, #0
 8007a34:	d100      	bne.n	8007a38 <_strtod_l+0x650>
 8007a36:	e709      	b.n	800784c <_strtod_l+0x464>
 8007a38:	9b07      	ldr	r3, [sp, #28]
 8007a3a:	9a07      	ldr	r2, [sp, #28]
 8007a3c:	17db      	asrs	r3, r3, #31
 8007a3e:	4252      	negs	r2, r2
 8007a40:	4013      	ands	r3, r2
 8007a42:	9315      	str	r3, [sp, #84]	; 0x54
 8007a44:	9b07      	ldr	r3, [sp, #28]
 8007a46:	2400      	movs	r4, #0
 8007a48:	43db      	mvns	r3, r3
 8007a4a:	9a07      	ldr	r2, [sp, #28]
 8007a4c:	17db      	asrs	r3, r3, #31
 8007a4e:	401a      	ands	r2, r3
 8007a50:	921c      	str	r2, [sp, #112]	; 0x70
 8007a52:	9405      	str	r4, [sp, #20]
 8007a54:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007a56:	9804      	ldr	r0, [sp, #16]
 8007a58:	6859      	ldr	r1, [r3, #4]
 8007a5a:	f001 fd65 	bl	8009528 <_Balloc>
 8007a5e:	900a      	str	r0, [sp, #40]	; 0x28
 8007a60:	2800      	cmp	r0, #0
 8007a62:	d100      	bne.n	8007a66 <_strtod_l+0x67e>
 8007a64:	e6f6      	b.n	8007854 <_strtod_l+0x46c>
 8007a66:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8007a68:	990b      	ldr	r1, [sp, #44]	; 0x2c
 8007a6a:	691b      	ldr	r3, [r3, #16]
 8007a6c:	310c      	adds	r1, #12
 8007a6e:	1c9a      	adds	r2, r3, #2
 8007a70:	0092      	lsls	r2, r2, #2
 8007a72:	300c      	adds	r0, #12
 8007a74:	9308      	str	r3, [sp, #32]
 8007a76:	f001 fd4e 	bl	8009516 <memcpy>
 8007a7a:	ab24      	add	r3, sp, #144	; 0x90
 8007a7c:	9301      	str	r3, [sp, #4]
 8007a7e:	ab23      	add	r3, sp, #140	; 0x8c
 8007a80:	9300      	str	r3, [sp, #0]
 8007a82:	0032      	movs	r2, r6
 8007a84:	003b      	movs	r3, r7
 8007a86:	9804      	ldr	r0, [sp, #16]
 8007a88:	960e      	str	r6, [sp, #56]	; 0x38
 8007a8a:	970f      	str	r7, [sp, #60]	; 0x3c
 8007a8c:	f002 f88e 	bl	8009bac <__d2b>
 8007a90:	9022      	str	r0, [sp, #136]	; 0x88
 8007a92:	2800      	cmp	r0, #0
 8007a94:	d100      	bne.n	8007a98 <_strtod_l+0x6b0>
 8007a96:	e6dd      	b.n	8007854 <_strtod_l+0x46c>
 8007a98:	2101      	movs	r1, #1
 8007a9a:	9804      	ldr	r0, [sp, #16]
 8007a9c:	f001 fe5a 	bl	8009754 <__i2b>
 8007aa0:	9005      	str	r0, [sp, #20]
 8007aa2:	2800      	cmp	r0, #0
 8007aa4:	d100      	bne.n	8007aa8 <_strtod_l+0x6c0>
 8007aa6:	e6d5      	b.n	8007854 <_strtod_l+0x46c>
 8007aa8:	9b23      	ldr	r3, [sp, #140]	; 0x8c
 8007aaa:	2b00      	cmp	r3, #0
 8007aac:	da00      	bge.n	8007ab0 <_strtod_l+0x6c8>
 8007aae:	e0c1      	b.n	8007c34 <_strtod_l+0x84c>
 8007ab0:	9a15      	ldr	r2, [sp, #84]	; 0x54
 8007ab2:	189d      	adds	r5, r3, r2
 8007ab4:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8007ab6:	4694      	mov	ip, r2
 8007ab8:	9906      	ldr	r1, [sp, #24]
 8007aba:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8007abc:	1a5b      	subs	r3, r3, r1
 8007abe:	2136      	movs	r1, #54	; 0x36
 8007ac0:	189b      	adds	r3, r3, r2
 8007ac2:	1a8a      	subs	r2, r1, r2
 8007ac4:	49b2      	ldr	r1, [pc, #712]	; (8007d90 <_strtod_l+0x9a8>)
 8007ac6:	3b01      	subs	r3, #1
 8007ac8:	2001      	movs	r0, #1
 8007aca:	428b      	cmp	r3, r1
 8007acc:	db00      	blt.n	8007ad0 <_strtod_l+0x6e8>
 8007ace:	e0bd      	b.n	8007c4c <_strtod_l+0x864>
 8007ad0:	1ac9      	subs	r1, r1, r3
 8007ad2:	1a52      	subs	r2, r2, r1
 8007ad4:	291f      	cmp	r1, #31
 8007ad6:	dd00      	ble.n	8007ada <_strtod_l+0x6f2>
 8007ad8:	e0b1      	b.n	8007c3e <_strtod_l+0x856>
 8007ada:	4088      	lsls	r0, r1
 8007adc:	2300      	movs	r3, #0
 8007ade:	9014      	str	r0, [sp, #80]	; 0x50
 8007ae0:	9310      	str	r3, [sp, #64]	; 0x40
 8007ae2:	18ab      	adds	r3, r5, r2
 8007ae4:	9308      	str	r3, [sp, #32]
 8007ae6:	0013      	movs	r3, r2
 8007ae8:	9a06      	ldr	r2, [sp, #24]
 8007aea:	4463      	add	r3, ip
 8007aec:	18d3      	adds	r3, r2, r3
 8007aee:	9a08      	ldr	r2, [sp, #32]
 8007af0:	930c      	str	r3, [sp, #48]	; 0x30
 8007af2:	002b      	movs	r3, r5
 8007af4:	4295      	cmp	r5, r2
 8007af6:	dd00      	ble.n	8007afa <_strtod_l+0x712>
 8007af8:	0013      	movs	r3, r2
 8007afa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007afc:	4293      	cmp	r3, r2
 8007afe:	dd00      	ble.n	8007b02 <_strtod_l+0x71a>
 8007b00:	0013      	movs	r3, r2
 8007b02:	2b00      	cmp	r3, #0
 8007b04:	dd06      	ble.n	8007b14 <_strtod_l+0x72c>
 8007b06:	9a08      	ldr	r2, [sp, #32]
 8007b08:	1aed      	subs	r5, r5, r3
 8007b0a:	1ad2      	subs	r2, r2, r3
 8007b0c:	9208      	str	r2, [sp, #32]
 8007b0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007b10:	1ad2      	subs	r2, r2, r3
 8007b12:	920c      	str	r2, [sp, #48]	; 0x30
 8007b14:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8007b16:	2b00      	cmp	r3, #0
 8007b18:	d017      	beq.n	8007b4a <_strtod_l+0x762>
 8007b1a:	001a      	movs	r2, r3
 8007b1c:	9905      	ldr	r1, [sp, #20]
 8007b1e:	9804      	ldr	r0, [sp, #16]
 8007b20:	f001 feb0 	bl	8009884 <__pow5mult>
 8007b24:	9005      	str	r0, [sp, #20]
 8007b26:	2800      	cmp	r0, #0
 8007b28:	d100      	bne.n	8007b2c <_strtod_l+0x744>
 8007b2a:	e693      	b.n	8007854 <_strtod_l+0x46c>
 8007b2c:	0001      	movs	r1, r0
 8007b2e:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8007b30:	9804      	ldr	r0, [sp, #16]
 8007b32:	f001 fe18 	bl	8009766 <__multiply>
 8007b36:	9012      	str	r0, [sp, #72]	; 0x48
 8007b38:	2800      	cmp	r0, #0
 8007b3a:	d100      	bne.n	8007b3e <_strtod_l+0x756>
 8007b3c:	e68a      	b.n	8007854 <_strtod_l+0x46c>
 8007b3e:	9922      	ldr	r1, [sp, #136]	; 0x88
 8007b40:	9804      	ldr	r0, [sp, #16]
 8007b42:	f001 fd29 	bl	8009598 <_Bfree>
 8007b46:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007b48:	9322      	str	r3, [sp, #136]	; 0x88
 8007b4a:	9b08      	ldr	r3, [sp, #32]
 8007b4c:	2b00      	cmp	r3, #0
 8007b4e:	dd00      	ble.n	8007b52 <_strtod_l+0x76a>
 8007b50:	e07f      	b.n	8007c52 <_strtod_l+0x86a>
 8007b52:	9b07      	ldr	r3, [sp, #28]
 8007b54:	2b00      	cmp	r3, #0
 8007b56:	dd08      	ble.n	8007b6a <_strtod_l+0x782>
 8007b58:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8007b5a:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007b5c:	9804      	ldr	r0, [sp, #16]
 8007b5e:	f001 fe91 	bl	8009884 <__pow5mult>
 8007b62:	900a      	str	r0, [sp, #40]	; 0x28
 8007b64:	2800      	cmp	r0, #0
 8007b66:	d100      	bne.n	8007b6a <_strtod_l+0x782>
 8007b68:	e674      	b.n	8007854 <_strtod_l+0x46c>
 8007b6a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007b6c:	2b00      	cmp	r3, #0
 8007b6e:	dd08      	ble.n	8007b82 <_strtod_l+0x79a>
 8007b70:	001a      	movs	r2, r3
 8007b72:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007b74:	9804      	ldr	r0, [sp, #16]
 8007b76:	f001 fed7 	bl	8009928 <__lshift>
 8007b7a:	900a      	str	r0, [sp, #40]	; 0x28
 8007b7c:	2800      	cmp	r0, #0
 8007b7e:	d100      	bne.n	8007b82 <_strtod_l+0x79a>
 8007b80:	e668      	b.n	8007854 <_strtod_l+0x46c>
 8007b82:	2d00      	cmp	r5, #0
 8007b84:	dd08      	ble.n	8007b98 <_strtod_l+0x7b0>
 8007b86:	002a      	movs	r2, r5
 8007b88:	9905      	ldr	r1, [sp, #20]
 8007b8a:	9804      	ldr	r0, [sp, #16]
 8007b8c:	f001 fecc 	bl	8009928 <__lshift>
 8007b90:	9005      	str	r0, [sp, #20]
 8007b92:	2800      	cmp	r0, #0
 8007b94:	d100      	bne.n	8007b98 <_strtod_l+0x7b0>
 8007b96:	e65d      	b.n	8007854 <_strtod_l+0x46c>
 8007b98:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8007b9a:	9922      	ldr	r1, [sp, #136]	; 0x88
 8007b9c:	9804      	ldr	r0, [sp, #16]
 8007b9e:	f001 ff2f 	bl	8009a00 <__mdiff>
 8007ba2:	1e04      	subs	r4, r0, #0
 8007ba4:	d100      	bne.n	8007ba8 <_strtod_l+0x7c0>
 8007ba6:	e655      	b.n	8007854 <_strtod_l+0x46c>
 8007ba8:	2500      	movs	r5, #0
 8007baa:	68c3      	ldr	r3, [r0, #12]
 8007bac:	9905      	ldr	r1, [sp, #20]
 8007bae:	60c5      	str	r5, [r0, #12]
 8007bb0:	9312      	str	r3, [sp, #72]	; 0x48
 8007bb2:	f001 ff0b 	bl	80099cc <__mcmp>
 8007bb6:	42a8      	cmp	r0, r5
 8007bb8:	da55      	bge.n	8007c66 <_strtod_l+0x87e>
 8007bba:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007bbc:	42ab      	cmp	r3, r5
 8007bbe:	d11b      	bne.n	8007bf8 <_strtod_l+0x810>
 8007bc0:	42ae      	cmp	r6, r5
 8007bc2:	d119      	bne.n	8007bf8 <_strtod_l+0x810>
 8007bc4:	033b      	lsls	r3, r7, #12
 8007bc6:	42ab      	cmp	r3, r5
 8007bc8:	d116      	bne.n	8007bf8 <_strtod_l+0x810>
 8007bca:	22d6      	movs	r2, #214	; 0xd6
 8007bcc:	4b71      	ldr	r3, [pc, #452]	; (8007d94 <_strtod_l+0x9ac>)
 8007bce:	04d2      	lsls	r2, r2, #19
 8007bd0:	403b      	ands	r3, r7
 8007bd2:	4293      	cmp	r3, r2
 8007bd4:	d910      	bls.n	8007bf8 <_strtod_l+0x810>
 8007bd6:	6963      	ldr	r3, [r4, #20]
 8007bd8:	42ab      	cmp	r3, r5
 8007bda:	d102      	bne.n	8007be2 <_strtod_l+0x7fa>
 8007bdc:	6923      	ldr	r3, [r4, #16]
 8007bde:	2b01      	cmp	r3, #1
 8007be0:	dd0a      	ble.n	8007bf8 <_strtod_l+0x810>
 8007be2:	0021      	movs	r1, r4
 8007be4:	2201      	movs	r2, #1
 8007be6:	9804      	ldr	r0, [sp, #16]
 8007be8:	f001 fe9e 	bl	8009928 <__lshift>
 8007bec:	9905      	ldr	r1, [sp, #20]
 8007bee:	0004      	movs	r4, r0
 8007bf0:	f001 feec 	bl	80099cc <__mcmp>
 8007bf4:	2800      	cmp	r0, #0
 8007bf6:	dc6b      	bgt.n	8007cd0 <_strtod_l+0x8e8>
 8007bf8:	9b06      	ldr	r3, [sp, #24]
 8007bfa:	2b00      	cmp	r3, #0
 8007bfc:	d178      	bne.n	8007cf0 <_strtod_l+0x908>
 8007bfe:	e632      	b.n	8007866 <_strtod_l+0x47e>
 8007c00:	2201      	movs	r2, #1
 8007c02:	4214      	tst	r4, r2
 8007c04:	d007      	beq.n	8007c16 <_strtod_l+0x82e>
 8007c06:	4a64      	ldr	r2, [pc, #400]	; (8007d98 <_strtod_l+0x9b0>)
 8007c08:	00eb      	lsls	r3, r5, #3
 8007c0a:	18d3      	adds	r3, r2, r3
 8007c0c:	681a      	ldr	r2, [r3, #0]
 8007c0e:	685b      	ldr	r3, [r3, #4]
 8007c10:	f7f9 fcb0 	bl	8001574 <__aeabi_dmul>
 8007c14:	2301      	movs	r3, #1
 8007c16:	3501      	adds	r5, #1
 8007c18:	1064      	asrs	r4, r4, #1
 8007c1a:	e6df      	b.n	80079dc <_strtod_l+0x5f4>
 8007c1c:	2101      	movs	r1, #1
 8007c1e:	3b20      	subs	r3, #32
 8007c20:	4249      	negs	r1, r1
 8007c22:	4099      	lsls	r1, r3
 8007c24:	400a      	ands	r2, r1
 8007c26:	0017      	movs	r7, r2
 8007c28:	e6f2      	b.n	8007a10 <_strtod_l+0x628>
 8007c2a:	2201      	movs	r2, #1
 8007c2c:	4252      	negs	r2, r2
 8007c2e:	409a      	lsls	r2, r3
 8007c30:	4016      	ands	r6, r2
 8007c32:	e6ed      	b.n	8007a10 <_strtod_l+0x628>
 8007c34:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8007c36:	9d15      	ldr	r5, [sp, #84]	; 0x54
 8007c38:	1ad2      	subs	r2, r2, r3
 8007c3a:	4694      	mov	ip, r2
 8007c3c:	e73c      	b.n	8007ab8 <_strtod_l+0x6d0>
 8007c3e:	4957      	ldr	r1, [pc, #348]	; (8007d9c <_strtod_l+0x9b4>)
 8007c40:	1acb      	subs	r3, r1, r3
 8007c42:	0001      	movs	r1, r0
 8007c44:	4099      	lsls	r1, r3
 8007c46:	9110      	str	r1, [sp, #64]	; 0x40
 8007c48:	9014      	str	r0, [sp, #80]	; 0x50
 8007c4a:	e74a      	b.n	8007ae2 <_strtod_l+0x6fa>
 8007c4c:	2300      	movs	r3, #0
 8007c4e:	9310      	str	r3, [sp, #64]	; 0x40
 8007c50:	e7fa      	b.n	8007c48 <_strtod_l+0x860>
 8007c52:	9a08      	ldr	r2, [sp, #32]
 8007c54:	9922      	ldr	r1, [sp, #136]	; 0x88
 8007c56:	9804      	ldr	r0, [sp, #16]
 8007c58:	f001 fe66 	bl	8009928 <__lshift>
 8007c5c:	9022      	str	r0, [sp, #136]	; 0x88
 8007c5e:	2800      	cmp	r0, #0
 8007c60:	d000      	beq.n	8007c64 <_strtod_l+0x87c>
 8007c62:	e776      	b.n	8007b52 <_strtod_l+0x76a>
 8007c64:	e5f6      	b.n	8007854 <_strtod_l+0x46c>
 8007c66:	970c      	str	r7, [sp, #48]	; 0x30
 8007c68:	2800      	cmp	r0, #0
 8007c6a:	d000      	beq.n	8007c6e <_strtod_l+0x886>
 8007c6c:	e0a0      	b.n	8007db0 <_strtod_l+0x9c8>
 8007c6e:	9a12      	ldr	r2, [sp, #72]	; 0x48
 8007c70:	033b      	lsls	r3, r7, #12
 8007c72:	0b1b      	lsrs	r3, r3, #12
 8007c74:	2a00      	cmp	r2, #0
 8007c76:	d027      	beq.n	8007cc8 <_strtod_l+0x8e0>
 8007c78:	4a49      	ldr	r2, [pc, #292]	; (8007da0 <_strtod_l+0x9b8>)
 8007c7a:	4293      	cmp	r3, r2
 8007c7c:	d157      	bne.n	8007d2e <_strtod_l+0x946>
 8007c7e:	2201      	movs	r2, #1
 8007c80:	9b06      	ldr	r3, [sp, #24]
 8007c82:	4252      	negs	r2, r2
 8007c84:	0031      	movs	r1, r6
 8007c86:	0010      	movs	r0, r2
 8007c88:	2b00      	cmp	r3, #0
 8007c8a:	d00b      	beq.n	8007ca4 <_strtod_l+0x8bc>
 8007c8c:	25d4      	movs	r5, #212	; 0xd4
 8007c8e:	4b41      	ldr	r3, [pc, #260]	; (8007d94 <_strtod_l+0x9ac>)
 8007c90:	04ed      	lsls	r5, r5, #19
 8007c92:	403b      	ands	r3, r7
 8007c94:	0010      	movs	r0, r2
 8007c96:	42ab      	cmp	r3, r5
 8007c98:	d804      	bhi.n	8007ca4 <_strtod_l+0x8bc>
 8007c9a:	306c      	adds	r0, #108	; 0x6c
 8007c9c:	0d1b      	lsrs	r3, r3, #20
 8007c9e:	1ac3      	subs	r3, r0, r3
 8007ca0:	409a      	lsls	r2, r3
 8007ca2:	0010      	movs	r0, r2
 8007ca4:	4281      	cmp	r1, r0
 8007ca6:	d142      	bne.n	8007d2e <_strtod_l+0x946>
 8007ca8:	4b3e      	ldr	r3, [pc, #248]	; (8007da4 <_strtod_l+0x9bc>)
 8007caa:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007cac:	429a      	cmp	r2, r3
 8007cae:	d102      	bne.n	8007cb6 <_strtod_l+0x8ce>
 8007cb0:	1c4b      	adds	r3, r1, #1
 8007cb2:	d100      	bne.n	8007cb6 <_strtod_l+0x8ce>
 8007cb4:	e5ce      	b.n	8007854 <_strtod_l+0x46c>
 8007cb6:	4b37      	ldr	r3, [pc, #220]	; (8007d94 <_strtod_l+0x9ac>)
 8007cb8:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8007cba:	2600      	movs	r6, #0
 8007cbc:	401a      	ands	r2, r3
 8007cbe:	0013      	movs	r3, r2
 8007cc0:	2280      	movs	r2, #128	; 0x80
 8007cc2:	0352      	lsls	r2, r2, #13
 8007cc4:	189f      	adds	r7, r3, r2
 8007cc6:	e797      	b.n	8007bf8 <_strtod_l+0x810>
 8007cc8:	2b00      	cmp	r3, #0
 8007cca:	d130      	bne.n	8007d2e <_strtod_l+0x946>
 8007ccc:	2e00      	cmp	r6, #0
 8007cce:	d12e      	bne.n	8007d2e <_strtod_l+0x946>
 8007cd0:	9906      	ldr	r1, [sp, #24]
 8007cd2:	003b      	movs	r3, r7
 8007cd4:	4a2f      	ldr	r2, [pc, #188]	; (8007d94 <_strtod_l+0x9ac>)
 8007cd6:	2900      	cmp	r1, #0
 8007cd8:	d020      	beq.n	8007d1c <_strtod_l+0x934>
 8007cda:	0011      	movs	r1, r2
 8007cdc:	20d6      	movs	r0, #214	; 0xd6
 8007cde:	4039      	ands	r1, r7
 8007ce0:	04c0      	lsls	r0, r0, #19
 8007ce2:	4281      	cmp	r1, r0
 8007ce4:	dc1a      	bgt.n	8007d1c <_strtod_l+0x934>
 8007ce6:	23dc      	movs	r3, #220	; 0xdc
 8007ce8:	049b      	lsls	r3, r3, #18
 8007cea:	4299      	cmp	r1, r3
 8007cec:	dc00      	bgt.n	8007cf0 <_strtod_l+0x908>
 8007cee:	e646      	b.n	800797e <_strtod_l+0x596>
 8007cf0:	4b2d      	ldr	r3, [pc, #180]	; (8007da8 <_strtod_l+0x9c0>)
 8007cf2:	0030      	movs	r0, r6
 8007cf4:	931b      	str	r3, [sp, #108]	; 0x6c
 8007cf6:	2300      	movs	r3, #0
 8007cf8:	931a      	str	r3, [sp, #104]	; 0x68
 8007cfa:	9a1a      	ldr	r2, [sp, #104]	; 0x68
 8007cfc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8007cfe:	0039      	movs	r1, r7
 8007d00:	f7f9 fc38 	bl	8001574 <__aeabi_dmul>
 8007d04:	0006      	movs	r6, r0
 8007d06:	000f      	movs	r7, r1
 8007d08:	1e0b      	subs	r3, r1, #0
 8007d0a:	d000      	beq.n	8007d0e <_strtod_l+0x926>
 8007d0c:	e5ab      	b.n	8007866 <_strtod_l+0x47e>
 8007d0e:	2800      	cmp	r0, #0
 8007d10:	d000      	beq.n	8007d14 <_strtod_l+0x92c>
 8007d12:	e5a8      	b.n	8007866 <_strtod_l+0x47e>
 8007d14:	9a04      	ldr	r2, [sp, #16]
 8007d16:	3322      	adds	r3, #34	; 0x22
 8007d18:	6013      	str	r3, [r2, #0]
 8007d1a:	e5a4      	b.n	8007866 <_strtod_l+0x47e>
 8007d1c:	2601      	movs	r6, #1
 8007d1e:	4013      	ands	r3, r2
 8007d20:	4a22      	ldr	r2, [pc, #136]	; (8007dac <_strtod_l+0x9c4>)
 8007d22:	4276      	negs	r6, r6
 8007d24:	189b      	adds	r3, r3, r2
 8007d26:	4a1e      	ldr	r2, [pc, #120]	; (8007da0 <_strtod_l+0x9b8>)
 8007d28:	431a      	orrs	r2, r3
 8007d2a:	0017      	movs	r7, r2
 8007d2c:	e764      	b.n	8007bf8 <_strtod_l+0x810>
 8007d2e:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8007d30:	2b00      	cmp	r3, #0
 8007d32:	d015      	beq.n	8007d60 <_strtod_l+0x978>
 8007d34:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007d36:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8007d38:	4213      	tst	r3, r2
 8007d3a:	d100      	bne.n	8007d3e <_strtod_l+0x956>
 8007d3c:	e75c      	b.n	8007bf8 <_strtod_l+0x810>
 8007d3e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007d40:	9a06      	ldr	r2, [sp, #24]
 8007d42:	0030      	movs	r0, r6
 8007d44:	0039      	movs	r1, r7
 8007d46:	2b00      	cmp	r3, #0
 8007d48:	d00f      	beq.n	8007d6a <_strtod_l+0x982>
 8007d4a:	f7ff fb35 	bl	80073b8 <sulp>
 8007d4e:	0002      	movs	r2, r0
 8007d50:	000b      	movs	r3, r1
 8007d52:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007d54:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007d56:	f7f8 fce7 	bl	8000728 <__aeabi_dadd>
 8007d5a:	0006      	movs	r6, r0
 8007d5c:	000f      	movs	r7, r1
 8007d5e:	e74b      	b.n	8007bf8 <_strtod_l+0x810>
 8007d60:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8007d62:	4233      	tst	r3, r6
 8007d64:	d100      	bne.n	8007d68 <_strtod_l+0x980>
 8007d66:	e747      	b.n	8007bf8 <_strtod_l+0x810>
 8007d68:	e7e9      	b.n	8007d3e <_strtod_l+0x956>
 8007d6a:	f7ff fb25 	bl	80073b8 <sulp>
 8007d6e:	0002      	movs	r2, r0
 8007d70:	000b      	movs	r3, r1
 8007d72:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007d74:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007d76:	f7f9 fe6f 	bl	8001a58 <__aeabi_dsub>
 8007d7a:	2200      	movs	r2, #0
 8007d7c:	2300      	movs	r3, #0
 8007d7e:	0006      	movs	r6, r0
 8007d80:	000f      	movs	r7, r1
 8007d82:	f7f8 fb59 	bl	8000438 <__aeabi_dcmpeq>
 8007d86:	2800      	cmp	r0, #0
 8007d88:	d000      	beq.n	8007d8c <_strtod_l+0x9a4>
 8007d8a:	e5f8      	b.n	800797e <_strtod_l+0x596>
 8007d8c:	e734      	b.n	8007bf8 <_strtod_l+0x810>
 8007d8e:	46c0      	nop			; (mov r8, r8)
 8007d90:	fffffc02 	.word	0xfffffc02
 8007d94:	7ff00000 	.word	0x7ff00000
 8007d98:	0800a418 	.word	0x0800a418
 8007d9c:	fffffbe2 	.word	0xfffffbe2
 8007da0:	000fffff 	.word	0x000fffff
 8007da4:	7fefffff 	.word	0x7fefffff
 8007da8:	39500000 	.word	0x39500000
 8007dac:	fff00000 	.word	0xfff00000
 8007db0:	9905      	ldr	r1, [sp, #20]
 8007db2:	0020      	movs	r0, r4
 8007db4:	f001 ff4e 	bl	8009c54 <__ratio>
 8007db8:	2380      	movs	r3, #128	; 0x80
 8007dba:	2200      	movs	r2, #0
 8007dbc:	05db      	lsls	r3, r3, #23
 8007dbe:	9008      	str	r0, [sp, #32]
 8007dc0:	9109      	str	r1, [sp, #36]	; 0x24
 8007dc2:	f7f8 fb49 	bl	8000458 <__aeabi_dcmple>
 8007dc6:	2800      	cmp	r0, #0
 8007dc8:	d100      	bne.n	8007dcc <_strtod_l+0x9e4>
 8007dca:	e07f      	b.n	8007ecc <_strtod_l+0xae4>
 8007dcc:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007dce:	2b00      	cmp	r3, #0
 8007dd0:	d04b      	beq.n	8007e6a <_strtod_l+0xa82>
 8007dd2:	2200      	movs	r2, #0
 8007dd4:	4b8a      	ldr	r3, [pc, #552]	; (8008000 <_strtod_l+0xc18>)
 8007dd6:	9210      	str	r2, [sp, #64]	; 0x40
 8007dd8:	9311      	str	r3, [sp, #68]	; 0x44
 8007dda:	4b89      	ldr	r3, [pc, #548]	; (8008000 <_strtod_l+0xc18>)
 8007ddc:	9308      	str	r3, [sp, #32]
 8007dde:	4a89      	ldr	r2, [pc, #548]	; (8008004 <_strtod_l+0xc1c>)
 8007de0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007de2:	4013      	ands	r3, r2
 8007de4:	9314      	str	r3, [sp, #80]	; 0x50
 8007de6:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007de8:	4b87      	ldr	r3, [pc, #540]	; (8008008 <_strtod_l+0xc20>)
 8007dea:	429a      	cmp	r2, r3
 8007dec:	d000      	beq.n	8007df0 <_strtod_l+0xa08>
 8007dee:	e0ba      	b.n	8007f66 <_strtod_l+0xb7e>
 8007df0:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007df2:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007df4:	921a      	str	r2, [sp, #104]	; 0x68
 8007df6:	931b      	str	r3, [sp, #108]	; 0x6c
 8007df8:	4a84      	ldr	r2, [pc, #528]	; (800800c <_strtod_l+0xc24>)
 8007dfa:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007dfc:	4694      	mov	ip, r2
 8007dfe:	4463      	add	r3, ip
 8007e00:	001f      	movs	r7, r3
 8007e02:	9a10      	ldr	r2, [sp, #64]	; 0x40
 8007e04:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007e06:	0030      	movs	r0, r6
 8007e08:	0039      	movs	r1, r7
 8007e0a:	920c      	str	r2, [sp, #48]	; 0x30
 8007e0c:	930d      	str	r3, [sp, #52]	; 0x34
 8007e0e:	f001 fe5b 	bl	8009ac8 <__ulp>
 8007e12:	0002      	movs	r2, r0
 8007e14:	000b      	movs	r3, r1
 8007e16:	980c      	ldr	r0, [sp, #48]	; 0x30
 8007e18:	990d      	ldr	r1, [sp, #52]	; 0x34
 8007e1a:	f7f9 fbab 	bl	8001574 <__aeabi_dmul>
 8007e1e:	0032      	movs	r2, r6
 8007e20:	003b      	movs	r3, r7
 8007e22:	f7f8 fc81 	bl	8000728 <__aeabi_dadd>
 8007e26:	4a77      	ldr	r2, [pc, #476]	; (8008004 <_strtod_l+0xc1c>)
 8007e28:	4b79      	ldr	r3, [pc, #484]	; (8008010 <_strtod_l+0xc28>)
 8007e2a:	0006      	movs	r6, r0
 8007e2c:	400a      	ands	r2, r1
 8007e2e:	429a      	cmp	r2, r3
 8007e30:	d964      	bls.n	8007efc <_strtod_l+0xb14>
 8007e32:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007e34:	4a77      	ldr	r2, [pc, #476]	; (8008014 <_strtod_l+0xc2c>)
 8007e36:	4293      	cmp	r3, r2
 8007e38:	d103      	bne.n	8007e42 <_strtod_l+0xa5a>
 8007e3a:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8007e3c:	3301      	adds	r3, #1
 8007e3e:	d100      	bne.n	8007e42 <_strtod_l+0xa5a>
 8007e40:	e508      	b.n	8007854 <_strtod_l+0x46c>
 8007e42:	2601      	movs	r6, #1
 8007e44:	4f73      	ldr	r7, [pc, #460]	; (8008014 <_strtod_l+0xc2c>)
 8007e46:	4276      	negs	r6, r6
 8007e48:	9922      	ldr	r1, [sp, #136]	; 0x88
 8007e4a:	9804      	ldr	r0, [sp, #16]
 8007e4c:	f001 fba4 	bl	8009598 <_Bfree>
 8007e50:	990a      	ldr	r1, [sp, #40]	; 0x28
 8007e52:	9804      	ldr	r0, [sp, #16]
 8007e54:	f001 fba0 	bl	8009598 <_Bfree>
 8007e58:	9905      	ldr	r1, [sp, #20]
 8007e5a:	9804      	ldr	r0, [sp, #16]
 8007e5c:	f001 fb9c 	bl	8009598 <_Bfree>
 8007e60:	0021      	movs	r1, r4
 8007e62:	9804      	ldr	r0, [sp, #16]
 8007e64:	f001 fb98 	bl	8009598 <_Bfree>
 8007e68:	e5f4      	b.n	8007a54 <_strtod_l+0x66c>
 8007e6a:	2e00      	cmp	r6, #0
 8007e6c:	d11e      	bne.n	8007eac <_strtod_l+0xac4>
 8007e6e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007e70:	031b      	lsls	r3, r3, #12
 8007e72:	d121      	bne.n	8007eb8 <_strtod_l+0xad0>
 8007e74:	9808      	ldr	r0, [sp, #32]
 8007e76:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007e78:	2200      	movs	r2, #0
 8007e7a:	4b61      	ldr	r3, [pc, #388]	; (8008000 <_strtod_l+0xc18>)
 8007e7c:	f7f8 fae2 	bl	8000444 <__aeabi_dcmplt>
 8007e80:	2800      	cmp	r0, #0
 8007e82:	d11f      	bne.n	8007ec4 <_strtod_l+0xadc>
 8007e84:	9808      	ldr	r0, [sp, #32]
 8007e86:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007e88:	2200      	movs	r2, #0
 8007e8a:	4b63      	ldr	r3, [pc, #396]	; (8008018 <_strtod_l+0xc30>)
 8007e8c:	f7f9 fb72 	bl	8001574 <__aeabi_dmul>
 8007e90:	0005      	movs	r5, r0
 8007e92:	9108      	str	r1, [sp, #32]
 8007e94:	2280      	movs	r2, #128	; 0x80
 8007e96:	0612      	lsls	r2, r2, #24
 8007e98:	4694      	mov	ip, r2
 8007e9a:	9b08      	ldr	r3, [sp, #32]
 8007e9c:	951e      	str	r5, [sp, #120]	; 0x78
 8007e9e:	4463      	add	r3, ip
 8007ea0:	931f      	str	r3, [sp, #124]	; 0x7c
 8007ea2:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8007ea4:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8007ea6:	9210      	str	r2, [sp, #64]	; 0x40
 8007ea8:	9311      	str	r3, [sp, #68]	; 0x44
 8007eaa:	e798      	b.n	8007dde <_strtod_l+0x9f6>
 8007eac:	2e01      	cmp	r6, #1
 8007eae:	d103      	bne.n	8007eb8 <_strtod_l+0xad0>
 8007eb0:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007eb2:	2b00      	cmp	r3, #0
 8007eb4:	d100      	bne.n	8007eb8 <_strtod_l+0xad0>
 8007eb6:	e562      	b.n	800797e <_strtod_l+0x596>
 8007eb8:	2200      	movs	r2, #0
 8007eba:	4b58      	ldr	r3, [pc, #352]	; (800801c <_strtod_l+0xc34>)
 8007ebc:	2500      	movs	r5, #0
 8007ebe:	9210      	str	r2, [sp, #64]	; 0x40
 8007ec0:	9311      	str	r3, [sp, #68]	; 0x44
 8007ec2:	e78a      	b.n	8007dda <_strtod_l+0x9f2>
 8007ec4:	4b54      	ldr	r3, [pc, #336]	; (8008018 <_strtod_l+0xc30>)
 8007ec6:	9d12      	ldr	r5, [sp, #72]	; 0x48
 8007ec8:	9308      	str	r3, [sp, #32]
 8007eca:	e7e3      	b.n	8007e94 <_strtod_l+0xaac>
 8007ecc:	4b52      	ldr	r3, [pc, #328]	; (8008018 <_strtod_l+0xc30>)
 8007ece:	9808      	ldr	r0, [sp, #32]
 8007ed0:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007ed2:	2200      	movs	r2, #0
 8007ed4:	f7f9 fb4e 	bl	8001574 <__aeabi_dmul>
 8007ed8:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007eda:	0005      	movs	r5, r0
 8007edc:	9108      	str	r1, [sp, #32]
 8007ede:	2b00      	cmp	r3, #0
 8007ee0:	d107      	bne.n	8007ef2 <_strtod_l+0xb0a>
 8007ee2:	2380      	movs	r3, #128	; 0x80
 8007ee4:	061b      	lsls	r3, r3, #24
 8007ee6:	18cb      	adds	r3, r1, r3
 8007ee8:	9016      	str	r0, [sp, #88]	; 0x58
 8007eea:	9317      	str	r3, [sp, #92]	; 0x5c
 8007eec:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8007eee:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8007ef0:	e7d9      	b.n	8007ea6 <_strtod_l+0xabe>
 8007ef2:	0002      	movs	r2, r0
 8007ef4:	9b08      	ldr	r3, [sp, #32]
 8007ef6:	9216      	str	r2, [sp, #88]	; 0x58
 8007ef8:	9317      	str	r3, [sp, #92]	; 0x5c
 8007efa:	e7f7      	b.n	8007eec <_strtod_l+0xb04>
 8007efc:	23d4      	movs	r3, #212	; 0xd4
 8007efe:	049b      	lsls	r3, r3, #18
 8007f00:	18cf      	adds	r7, r1, r3
 8007f02:	9b06      	ldr	r3, [sp, #24]
 8007f04:	2b00      	cmp	r3, #0
 8007f06:	d19f      	bne.n	8007e48 <_strtod_l+0xa60>
 8007f08:	4b3e      	ldr	r3, [pc, #248]	; (8008004 <_strtod_l+0xc1c>)
 8007f0a:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007f0c:	970c      	str	r7, [sp, #48]	; 0x30
 8007f0e:	403b      	ands	r3, r7
 8007f10:	429a      	cmp	r2, r3
 8007f12:	d199      	bne.n	8007e48 <_strtod_l+0xa60>
 8007f14:	9908      	ldr	r1, [sp, #32]
 8007f16:	0028      	movs	r0, r5
 8007f18:	f7fa f902 	bl	8002120 <__aeabi_d2iz>
 8007f1c:	f7fa f936 	bl	800218c <__aeabi_i2d>
 8007f20:	000b      	movs	r3, r1
 8007f22:	0002      	movs	r2, r0
 8007f24:	9908      	ldr	r1, [sp, #32]
 8007f26:	0028      	movs	r0, r5
 8007f28:	f7f9 fd96 	bl	8001a58 <__aeabi_dsub>
 8007f2c:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007f2e:	9008      	str	r0, [sp, #32]
 8007f30:	9109      	str	r1, [sp, #36]	; 0x24
 8007f32:	2b00      	cmp	r3, #0
 8007f34:	d104      	bne.n	8007f40 <_strtod_l+0xb58>
 8007f36:	2e00      	cmp	r6, #0
 8007f38:	d102      	bne.n	8007f40 <_strtod_l+0xb58>
 8007f3a:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8007f3c:	031b      	lsls	r3, r3, #12
 8007f3e:	d058      	beq.n	8007ff2 <_strtod_l+0xc0a>
 8007f40:	9808      	ldr	r0, [sp, #32]
 8007f42:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007f44:	4a36      	ldr	r2, [pc, #216]	; (8008020 <_strtod_l+0xc38>)
 8007f46:	4b37      	ldr	r3, [pc, #220]	; (8008024 <_strtod_l+0xc3c>)
 8007f48:	f7f8 fa7c 	bl	8000444 <__aeabi_dcmplt>
 8007f4c:	2800      	cmp	r0, #0
 8007f4e:	d000      	beq.n	8007f52 <_strtod_l+0xb6a>
 8007f50:	e489      	b.n	8007866 <_strtod_l+0x47e>
 8007f52:	9808      	ldr	r0, [sp, #32]
 8007f54:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007f56:	4a34      	ldr	r2, [pc, #208]	; (8008028 <_strtod_l+0xc40>)
 8007f58:	4b2f      	ldr	r3, [pc, #188]	; (8008018 <_strtod_l+0xc30>)
 8007f5a:	f7f8 fa87 	bl	800046c <__aeabi_dcmpgt>
 8007f5e:	2800      	cmp	r0, #0
 8007f60:	d100      	bne.n	8007f64 <_strtod_l+0xb7c>
 8007f62:	e771      	b.n	8007e48 <_strtod_l+0xa60>
 8007f64:	e47f      	b.n	8007866 <_strtod_l+0x47e>
 8007f66:	9b06      	ldr	r3, [sp, #24]
 8007f68:	2b00      	cmp	r3, #0
 8007f6a:	d02a      	beq.n	8007fc2 <_strtod_l+0xbda>
 8007f6c:	23d4      	movs	r3, #212	; 0xd4
 8007f6e:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007f70:	04db      	lsls	r3, r3, #19
 8007f72:	429a      	cmp	r2, r3
 8007f74:	d825      	bhi.n	8007fc2 <_strtod_l+0xbda>
 8007f76:	4a2d      	ldr	r2, [pc, #180]	; (800802c <_strtod_l+0xc44>)
 8007f78:	4b2d      	ldr	r3, [pc, #180]	; (8008030 <_strtod_l+0xc48>)
 8007f7a:	0028      	movs	r0, r5
 8007f7c:	9908      	ldr	r1, [sp, #32]
 8007f7e:	f7f8 fa6b 	bl	8000458 <__aeabi_dcmple>
 8007f82:	2800      	cmp	r0, #0
 8007f84:	d016      	beq.n	8007fb4 <_strtod_l+0xbcc>
 8007f86:	0028      	movs	r0, r5
 8007f88:	9908      	ldr	r1, [sp, #32]
 8007f8a:	f7f8 faa3 	bl	80004d4 <__aeabi_d2uiz>
 8007f8e:	2800      	cmp	r0, #0
 8007f90:	d100      	bne.n	8007f94 <_strtod_l+0xbac>
 8007f92:	3001      	adds	r0, #1
 8007f94:	f7fa f934 	bl	8002200 <__aeabi_ui2d>
 8007f98:	9b12      	ldr	r3, [sp, #72]	; 0x48
 8007f9a:	0005      	movs	r5, r0
 8007f9c:	9108      	str	r1, [sp, #32]
 8007f9e:	2b00      	cmp	r3, #0
 8007fa0:	d122      	bne.n	8007fe8 <_strtod_l+0xc00>
 8007fa2:	2380      	movs	r3, #128	; 0x80
 8007fa4:	061b      	lsls	r3, r3, #24
 8007fa6:	18cb      	adds	r3, r1, r3
 8007fa8:	9018      	str	r0, [sp, #96]	; 0x60
 8007faa:	9319      	str	r3, [sp, #100]	; 0x64
 8007fac:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8007fae:	9b19      	ldr	r3, [sp, #100]	; 0x64
 8007fb0:	9210      	str	r2, [sp, #64]	; 0x40
 8007fb2:	9311      	str	r3, [sp, #68]	; 0x44
 8007fb4:	22d6      	movs	r2, #214	; 0xd6
 8007fb6:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8007fb8:	04d2      	lsls	r2, r2, #19
 8007fba:	189b      	adds	r3, r3, r2
 8007fbc:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8007fbe:	1a9b      	subs	r3, r3, r2
 8007fc0:	9311      	str	r3, [sp, #68]	; 0x44
 8007fc2:	980e      	ldr	r0, [sp, #56]	; 0x38
 8007fc4:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8007fc6:	9e10      	ldr	r6, [sp, #64]	; 0x40
 8007fc8:	9f11      	ldr	r7, [sp, #68]	; 0x44
 8007fca:	f001 fd7d 	bl	8009ac8 <__ulp>
 8007fce:	0002      	movs	r2, r0
 8007fd0:	000b      	movs	r3, r1
 8007fd2:	0030      	movs	r0, r6
 8007fd4:	0039      	movs	r1, r7
 8007fd6:	f7f9 facd 	bl	8001574 <__aeabi_dmul>
 8007fda:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 8007fdc:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8007fde:	f7f8 fba3 	bl	8000728 <__aeabi_dadd>
 8007fe2:	0006      	movs	r6, r0
 8007fe4:	000f      	movs	r7, r1
 8007fe6:	e78c      	b.n	8007f02 <_strtod_l+0xb1a>
 8007fe8:	0002      	movs	r2, r0
 8007fea:	9b08      	ldr	r3, [sp, #32]
 8007fec:	9218      	str	r2, [sp, #96]	; 0x60
 8007fee:	9319      	str	r3, [sp, #100]	; 0x64
 8007ff0:	e7dc      	b.n	8007fac <_strtod_l+0xbc4>
 8007ff2:	4a0b      	ldr	r2, [pc, #44]	; (8008020 <_strtod_l+0xc38>)
 8007ff4:	4b0f      	ldr	r3, [pc, #60]	; (8008034 <_strtod_l+0xc4c>)
 8007ff6:	9808      	ldr	r0, [sp, #32]
 8007ff8:	9909      	ldr	r1, [sp, #36]	; 0x24
 8007ffa:	f7f8 fa23 	bl	8000444 <__aeabi_dcmplt>
 8007ffe:	e7ae      	b.n	8007f5e <_strtod_l+0xb76>
 8008000:	3ff00000 	.word	0x3ff00000
 8008004:	7ff00000 	.word	0x7ff00000
 8008008:	7fe00000 	.word	0x7fe00000
 800800c:	fcb00000 	.word	0xfcb00000
 8008010:	7c9fffff 	.word	0x7c9fffff
 8008014:	7fefffff 	.word	0x7fefffff
 8008018:	3fe00000 	.word	0x3fe00000
 800801c:	bff00000 	.word	0xbff00000
 8008020:	94a03595 	.word	0x94a03595
 8008024:	3fdfffff 	.word	0x3fdfffff
 8008028:	35afe535 	.word	0x35afe535
 800802c:	ffc00000 	.word	0xffc00000
 8008030:	41dfffff 	.word	0x41dfffff
 8008034:	3fcfffff 	.word	0x3fcfffff

08008038 <_strtod_r>:
 8008038:	4b04      	ldr	r3, [pc, #16]	; (800804c <_strtod_r+0x14>)
 800803a:	b510      	push	{r4, lr}
 800803c:	681b      	ldr	r3, [r3, #0]
 800803e:	6a1b      	ldr	r3, [r3, #32]
 8008040:	2b00      	cmp	r3, #0
 8008042:	d100      	bne.n	8008046 <_strtod_r+0xe>
 8008044:	4b02      	ldr	r3, [pc, #8]	; (8008050 <_strtod_r+0x18>)
 8008046:	f7ff f9cf 	bl	80073e8 <_strtod_l>
 800804a:	bd10      	pop	{r4, pc}
 800804c:	2000000c 	.word	0x2000000c
 8008050:	20000070 	.word	0x20000070

08008054 <_strtol_l.isra.0>:
 8008054:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008056:	001f      	movs	r7, r3
 8008058:	000e      	movs	r6, r1
 800805a:	b087      	sub	sp, #28
 800805c:	9005      	str	r0, [sp, #20]
 800805e:	9101      	str	r1, [sp, #4]
 8008060:	9202      	str	r2, [sp, #8]
 8008062:	980c      	ldr	r0, [sp, #48]	; 0x30
 8008064:	7834      	ldrb	r4, [r6, #0]
 8008066:	f001 fa1e 	bl	80094a6 <__locale_ctype_ptr_l>
 800806a:	2208      	movs	r2, #8
 800806c:	1900      	adds	r0, r0, r4
 800806e:	7843      	ldrb	r3, [r0, #1]
 8008070:	1c75      	adds	r5, r6, #1
 8008072:	4013      	ands	r3, r2
 8008074:	d136      	bne.n	80080e4 <_strtol_l.isra.0+0x90>
 8008076:	2c2d      	cmp	r4, #45	; 0x2d
 8008078:	d136      	bne.n	80080e8 <_strtol_l.isra.0+0x94>
 800807a:	1cb5      	adds	r5, r6, #2
 800807c:	7874      	ldrb	r4, [r6, #1]
 800807e:	2601      	movs	r6, #1
 8008080:	2f00      	cmp	r7, #0
 8008082:	d062      	beq.n	800814a <_strtol_l.isra.0+0xf6>
 8008084:	2f10      	cmp	r7, #16
 8008086:	d109      	bne.n	800809c <_strtol_l.isra.0+0x48>
 8008088:	2c30      	cmp	r4, #48	; 0x30
 800808a:	d107      	bne.n	800809c <_strtol_l.isra.0+0x48>
 800808c:	2220      	movs	r2, #32
 800808e:	782b      	ldrb	r3, [r5, #0]
 8008090:	4393      	bics	r3, r2
 8008092:	2b58      	cmp	r3, #88	; 0x58
 8008094:	d154      	bne.n	8008140 <_strtol_l.isra.0+0xec>
 8008096:	2710      	movs	r7, #16
 8008098:	786c      	ldrb	r4, [r5, #1]
 800809a:	3502      	adds	r5, #2
 800809c:	4b2d      	ldr	r3, [pc, #180]	; (8008154 <_strtol_l.isra.0+0x100>)
 800809e:	0039      	movs	r1, r7
 80080a0:	18f3      	adds	r3, r6, r3
 80080a2:	0018      	movs	r0, r3
 80080a4:	9303      	str	r3, [sp, #12]
 80080a6:	f7f8 f8c7 	bl	8000238 <__aeabi_uidivmod>
 80080aa:	9104      	str	r1, [sp, #16]
 80080ac:	2101      	movs	r1, #1
 80080ae:	2300      	movs	r3, #0
 80080b0:	4249      	negs	r1, r1
 80080b2:	0002      	movs	r2, r0
 80080b4:	468c      	mov	ip, r1
 80080b6:	0018      	movs	r0, r3
 80080b8:	0021      	movs	r1, r4
 80080ba:	3930      	subs	r1, #48	; 0x30
 80080bc:	2909      	cmp	r1, #9
 80080be:	d81a      	bhi.n	80080f6 <_strtol_l.isra.0+0xa2>
 80080c0:	000c      	movs	r4, r1
 80080c2:	42a7      	cmp	r7, r4
 80080c4:	dd23      	ble.n	800810e <_strtol_l.isra.0+0xba>
 80080c6:	1c59      	adds	r1, r3, #1
 80080c8:	d009      	beq.n	80080de <_strtol_l.isra.0+0x8a>
 80080ca:	4663      	mov	r3, ip
 80080cc:	4282      	cmp	r2, r0
 80080ce:	d306      	bcc.n	80080de <_strtol_l.isra.0+0x8a>
 80080d0:	d102      	bne.n	80080d8 <_strtol_l.isra.0+0x84>
 80080d2:	9904      	ldr	r1, [sp, #16]
 80080d4:	42a1      	cmp	r1, r4
 80080d6:	db02      	blt.n	80080de <_strtol_l.isra.0+0x8a>
 80080d8:	2301      	movs	r3, #1
 80080da:	4378      	muls	r0, r7
 80080dc:	1820      	adds	r0, r4, r0
 80080de:	782c      	ldrb	r4, [r5, #0]
 80080e0:	3501      	adds	r5, #1
 80080e2:	e7e9      	b.n	80080b8 <_strtol_l.isra.0+0x64>
 80080e4:	002e      	movs	r6, r5
 80080e6:	e7bc      	b.n	8008062 <_strtol_l.isra.0+0xe>
 80080e8:	2c2b      	cmp	r4, #43	; 0x2b
 80080ea:	d001      	beq.n	80080f0 <_strtol_l.isra.0+0x9c>
 80080ec:	001e      	movs	r6, r3
 80080ee:	e7c7      	b.n	8008080 <_strtol_l.isra.0+0x2c>
 80080f0:	1cb5      	adds	r5, r6, #2
 80080f2:	7874      	ldrb	r4, [r6, #1]
 80080f4:	e7fa      	b.n	80080ec <_strtol_l.isra.0+0x98>
 80080f6:	0021      	movs	r1, r4
 80080f8:	3941      	subs	r1, #65	; 0x41
 80080fa:	2919      	cmp	r1, #25
 80080fc:	d801      	bhi.n	8008102 <_strtol_l.isra.0+0xae>
 80080fe:	3c37      	subs	r4, #55	; 0x37
 8008100:	e7df      	b.n	80080c2 <_strtol_l.isra.0+0x6e>
 8008102:	0021      	movs	r1, r4
 8008104:	3961      	subs	r1, #97	; 0x61
 8008106:	2919      	cmp	r1, #25
 8008108:	d801      	bhi.n	800810e <_strtol_l.isra.0+0xba>
 800810a:	3c57      	subs	r4, #87	; 0x57
 800810c:	e7d9      	b.n	80080c2 <_strtol_l.isra.0+0x6e>
 800810e:	1c5a      	adds	r2, r3, #1
 8008110:	d108      	bne.n	8008124 <_strtol_l.isra.0+0xd0>
 8008112:	9a05      	ldr	r2, [sp, #20]
 8008114:	3323      	adds	r3, #35	; 0x23
 8008116:	6013      	str	r3, [r2, #0]
 8008118:	9b02      	ldr	r3, [sp, #8]
 800811a:	9803      	ldr	r0, [sp, #12]
 800811c:	2b00      	cmp	r3, #0
 800811e:	d109      	bne.n	8008134 <_strtol_l.isra.0+0xe0>
 8008120:	b007      	add	sp, #28
 8008122:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008124:	2e00      	cmp	r6, #0
 8008126:	d000      	beq.n	800812a <_strtol_l.isra.0+0xd6>
 8008128:	4240      	negs	r0, r0
 800812a:	9a02      	ldr	r2, [sp, #8]
 800812c:	2a00      	cmp	r2, #0
 800812e:	d0f7      	beq.n	8008120 <_strtol_l.isra.0+0xcc>
 8008130:	2b00      	cmp	r3, #0
 8008132:	d001      	beq.n	8008138 <_strtol_l.isra.0+0xe4>
 8008134:	1e6b      	subs	r3, r5, #1
 8008136:	9301      	str	r3, [sp, #4]
 8008138:	9b02      	ldr	r3, [sp, #8]
 800813a:	9a01      	ldr	r2, [sp, #4]
 800813c:	601a      	str	r2, [r3, #0]
 800813e:	e7ef      	b.n	8008120 <_strtol_l.isra.0+0xcc>
 8008140:	2430      	movs	r4, #48	; 0x30
 8008142:	2f00      	cmp	r7, #0
 8008144:	d1aa      	bne.n	800809c <_strtol_l.isra.0+0x48>
 8008146:	2708      	movs	r7, #8
 8008148:	e7a8      	b.n	800809c <_strtol_l.isra.0+0x48>
 800814a:	2c30      	cmp	r4, #48	; 0x30
 800814c:	d09e      	beq.n	800808c <_strtol_l.isra.0+0x38>
 800814e:	270a      	movs	r7, #10
 8008150:	e7a4      	b.n	800809c <_strtol_l.isra.0+0x48>
 8008152:	46c0      	nop			; (mov r8, r8)
 8008154:	7fffffff 	.word	0x7fffffff

08008158 <_strtol_r>:
 8008158:	b513      	push	{r0, r1, r4, lr}
 800815a:	4c05      	ldr	r4, [pc, #20]	; (8008170 <_strtol_r+0x18>)
 800815c:	6824      	ldr	r4, [r4, #0]
 800815e:	6a24      	ldr	r4, [r4, #32]
 8008160:	2c00      	cmp	r4, #0
 8008162:	d100      	bne.n	8008166 <_strtol_r+0xe>
 8008164:	4c03      	ldr	r4, [pc, #12]	; (8008174 <_strtol_r+0x1c>)
 8008166:	9400      	str	r4, [sp, #0]
 8008168:	f7ff ff74 	bl	8008054 <_strtol_l.isra.0>
 800816c:	bd16      	pop	{r1, r2, r4, pc}
 800816e:	46c0      	nop			; (mov r8, r8)
 8008170:	2000000c 	.word	0x2000000c
 8008174:	20000070 	.word	0x20000070

08008178 <quorem>:
 8008178:	b5f0      	push	{r4, r5, r6, r7, lr}
 800817a:	6903      	ldr	r3, [r0, #16]
 800817c:	690c      	ldr	r4, [r1, #16]
 800817e:	b089      	sub	sp, #36	; 0x24
 8008180:	0007      	movs	r7, r0
 8008182:	9105      	str	r1, [sp, #20]
 8008184:	2600      	movs	r6, #0
 8008186:	42a3      	cmp	r3, r4
 8008188:	db65      	blt.n	8008256 <quorem+0xde>
 800818a:	000b      	movs	r3, r1
 800818c:	3c01      	subs	r4, #1
 800818e:	3314      	adds	r3, #20
 8008190:	00a5      	lsls	r5, r4, #2
 8008192:	9303      	str	r3, [sp, #12]
 8008194:	195b      	adds	r3, r3, r5
 8008196:	9304      	str	r3, [sp, #16]
 8008198:	0003      	movs	r3, r0
 800819a:	3314      	adds	r3, #20
 800819c:	9302      	str	r3, [sp, #8]
 800819e:	195d      	adds	r5, r3, r5
 80081a0:	9b04      	ldr	r3, [sp, #16]
 80081a2:	6828      	ldr	r0, [r5, #0]
 80081a4:	681b      	ldr	r3, [r3, #0]
 80081a6:	1c59      	adds	r1, r3, #1
 80081a8:	9301      	str	r3, [sp, #4]
 80081aa:	f7f7 ffbf 	bl	800012c <__udivsi3>
 80081ae:	9001      	str	r0, [sp, #4]
 80081b0:	42b0      	cmp	r0, r6
 80081b2:	d029      	beq.n	8008208 <quorem+0x90>
 80081b4:	9b03      	ldr	r3, [sp, #12]
 80081b6:	9802      	ldr	r0, [sp, #8]
 80081b8:	469c      	mov	ip, r3
 80081ba:	9606      	str	r6, [sp, #24]
 80081bc:	4662      	mov	r2, ip
 80081be:	ca08      	ldmia	r2!, {r3}
 80081c0:	4694      	mov	ip, r2
 80081c2:	9a01      	ldr	r2, [sp, #4]
 80081c4:	b299      	uxth	r1, r3
 80081c6:	4351      	muls	r1, r2
 80081c8:	0c1b      	lsrs	r3, r3, #16
 80081ca:	4353      	muls	r3, r2
 80081cc:	1989      	adds	r1, r1, r6
 80081ce:	0c0a      	lsrs	r2, r1, #16
 80081d0:	189b      	adds	r3, r3, r2
 80081d2:	9307      	str	r3, [sp, #28]
 80081d4:	0c1e      	lsrs	r6, r3, #16
 80081d6:	6803      	ldr	r3, [r0, #0]
 80081d8:	b289      	uxth	r1, r1
 80081da:	b29a      	uxth	r2, r3
 80081dc:	9b06      	ldr	r3, [sp, #24]
 80081de:	18d2      	adds	r2, r2, r3
 80081e0:	6803      	ldr	r3, [r0, #0]
 80081e2:	1a52      	subs	r2, r2, r1
 80081e4:	0c19      	lsrs	r1, r3, #16
 80081e6:	466b      	mov	r3, sp
 80081e8:	8b9b      	ldrh	r3, [r3, #28]
 80081ea:	1acb      	subs	r3, r1, r3
 80081ec:	1411      	asrs	r1, r2, #16
 80081ee:	185b      	adds	r3, r3, r1
 80081f0:	1419      	asrs	r1, r3, #16
 80081f2:	b292      	uxth	r2, r2
 80081f4:	041b      	lsls	r3, r3, #16
 80081f6:	431a      	orrs	r2, r3
 80081f8:	9b04      	ldr	r3, [sp, #16]
 80081fa:	9106      	str	r1, [sp, #24]
 80081fc:	c004      	stmia	r0!, {r2}
 80081fe:	4563      	cmp	r3, ip
 8008200:	d2dc      	bcs.n	80081bc <quorem+0x44>
 8008202:	682b      	ldr	r3, [r5, #0]
 8008204:	2b00      	cmp	r3, #0
 8008206:	d02d      	beq.n	8008264 <quorem+0xec>
 8008208:	9905      	ldr	r1, [sp, #20]
 800820a:	0038      	movs	r0, r7
 800820c:	f001 fbde 	bl	80099cc <__mcmp>
 8008210:	2800      	cmp	r0, #0
 8008212:	db1f      	blt.n	8008254 <quorem+0xdc>
 8008214:	2500      	movs	r5, #0
 8008216:	9b01      	ldr	r3, [sp, #4]
 8008218:	9802      	ldr	r0, [sp, #8]
 800821a:	3301      	adds	r3, #1
 800821c:	9903      	ldr	r1, [sp, #12]
 800821e:	9301      	str	r3, [sp, #4]
 8008220:	6802      	ldr	r2, [r0, #0]
 8008222:	c908      	ldmia	r1!, {r3}
 8008224:	b292      	uxth	r2, r2
 8008226:	1955      	adds	r5, r2, r5
 8008228:	b29a      	uxth	r2, r3
 800822a:	1aaa      	subs	r2, r5, r2
 800822c:	6805      	ldr	r5, [r0, #0]
 800822e:	0c1b      	lsrs	r3, r3, #16
 8008230:	0c2d      	lsrs	r5, r5, #16
 8008232:	1aeb      	subs	r3, r5, r3
 8008234:	1415      	asrs	r5, r2, #16
 8008236:	195b      	adds	r3, r3, r5
 8008238:	141d      	asrs	r5, r3, #16
 800823a:	b292      	uxth	r2, r2
 800823c:	041b      	lsls	r3, r3, #16
 800823e:	4313      	orrs	r3, r2
 8008240:	c008      	stmia	r0!, {r3}
 8008242:	9b04      	ldr	r3, [sp, #16]
 8008244:	428b      	cmp	r3, r1
 8008246:	d2eb      	bcs.n	8008220 <quorem+0xa8>
 8008248:	9a02      	ldr	r2, [sp, #8]
 800824a:	00a3      	lsls	r3, r4, #2
 800824c:	18d3      	adds	r3, r2, r3
 800824e:	681a      	ldr	r2, [r3, #0]
 8008250:	2a00      	cmp	r2, #0
 8008252:	d011      	beq.n	8008278 <quorem+0x100>
 8008254:	9e01      	ldr	r6, [sp, #4]
 8008256:	0030      	movs	r0, r6
 8008258:	b009      	add	sp, #36	; 0x24
 800825a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 800825c:	682b      	ldr	r3, [r5, #0]
 800825e:	2b00      	cmp	r3, #0
 8008260:	d104      	bne.n	800826c <quorem+0xf4>
 8008262:	3c01      	subs	r4, #1
 8008264:	9b02      	ldr	r3, [sp, #8]
 8008266:	3d04      	subs	r5, #4
 8008268:	42ab      	cmp	r3, r5
 800826a:	d3f7      	bcc.n	800825c <quorem+0xe4>
 800826c:	613c      	str	r4, [r7, #16]
 800826e:	e7cb      	b.n	8008208 <quorem+0x90>
 8008270:	681a      	ldr	r2, [r3, #0]
 8008272:	2a00      	cmp	r2, #0
 8008274:	d104      	bne.n	8008280 <quorem+0x108>
 8008276:	3c01      	subs	r4, #1
 8008278:	9a02      	ldr	r2, [sp, #8]
 800827a:	3b04      	subs	r3, #4
 800827c:	429a      	cmp	r2, r3
 800827e:	d3f7      	bcc.n	8008270 <quorem+0xf8>
 8008280:	613c      	str	r4, [r7, #16]
 8008282:	e7e7      	b.n	8008254 <quorem+0xdc>

08008284 <_dtoa_r>:
 8008284:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008286:	0016      	movs	r6, r2
 8008288:	001f      	movs	r7, r3
 800828a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800828c:	b09b      	sub	sp, #108	; 0x6c
 800828e:	9002      	str	r0, [sp, #8]
 8008290:	9d23      	ldr	r5, [sp, #140]	; 0x8c
 8008292:	9606      	str	r6, [sp, #24]
 8008294:	9707      	str	r7, [sp, #28]
 8008296:	2c00      	cmp	r4, #0
 8008298:	d108      	bne.n	80082ac <_dtoa_r+0x28>
 800829a:	2010      	movs	r0, #16
 800829c:	f001 f914 	bl	80094c8 <malloc>
 80082a0:	9b02      	ldr	r3, [sp, #8]
 80082a2:	6258      	str	r0, [r3, #36]	; 0x24
 80082a4:	6044      	str	r4, [r0, #4]
 80082a6:	6084      	str	r4, [r0, #8]
 80082a8:	6004      	str	r4, [r0, #0]
 80082aa:	60c4      	str	r4, [r0, #12]
 80082ac:	9b02      	ldr	r3, [sp, #8]
 80082ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80082b0:	6819      	ldr	r1, [r3, #0]
 80082b2:	2900      	cmp	r1, #0
 80082b4:	d00b      	beq.n	80082ce <_dtoa_r+0x4a>
 80082b6:	685a      	ldr	r2, [r3, #4]
 80082b8:	2301      	movs	r3, #1
 80082ba:	4093      	lsls	r3, r2
 80082bc:	604a      	str	r2, [r1, #4]
 80082be:	608b      	str	r3, [r1, #8]
 80082c0:	9802      	ldr	r0, [sp, #8]
 80082c2:	f001 f969 	bl	8009598 <_Bfree>
 80082c6:	2200      	movs	r2, #0
 80082c8:	9b02      	ldr	r3, [sp, #8]
 80082ca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80082cc:	601a      	str	r2, [r3, #0]
 80082ce:	2f00      	cmp	r7, #0
 80082d0:	da20      	bge.n	8008314 <_dtoa_r+0x90>
 80082d2:	2301      	movs	r3, #1
 80082d4:	602b      	str	r3, [r5, #0]
 80082d6:	007b      	lsls	r3, r7, #1
 80082d8:	085b      	lsrs	r3, r3, #1
 80082da:	9307      	str	r3, [sp, #28]
 80082dc:	9c07      	ldr	r4, [sp, #28]
 80082de:	4bb2      	ldr	r3, [pc, #712]	; (80085a8 <_dtoa_r+0x324>)
 80082e0:	0022      	movs	r2, r4
 80082e2:	9317      	str	r3, [sp, #92]	; 0x5c
 80082e4:	401a      	ands	r2, r3
 80082e6:	429a      	cmp	r2, r3
 80082e8:	d117      	bne.n	800831a <_dtoa_r+0x96>
 80082ea:	4bb0      	ldr	r3, [pc, #704]	; (80085ac <_dtoa_r+0x328>)
 80082ec:	9a22      	ldr	r2, [sp, #136]	; 0x88
 80082ee:	6013      	str	r3, [r2, #0]
 80082f0:	9b06      	ldr	r3, [sp, #24]
 80082f2:	2b00      	cmp	r3, #0
 80082f4:	d103      	bne.n	80082fe <_dtoa_r+0x7a>
 80082f6:	0324      	lsls	r4, r4, #12
 80082f8:	d101      	bne.n	80082fe <_dtoa_r+0x7a>
 80082fa:	f000 fd87 	bl	8008e0c <_dtoa_r+0xb88>
 80082fe:	4bac      	ldr	r3, [pc, #688]	; (80085b0 <_dtoa_r+0x32c>)
 8008300:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008302:	9308      	str	r3, [sp, #32]
 8008304:	2a00      	cmp	r2, #0
 8008306:	d002      	beq.n	800830e <_dtoa_r+0x8a>
 8008308:	4baa      	ldr	r3, [pc, #680]	; (80085b4 <_dtoa_r+0x330>)
 800830a:	9a24      	ldr	r2, [sp, #144]	; 0x90
 800830c:	6013      	str	r3, [r2, #0]
 800830e:	9808      	ldr	r0, [sp, #32]
 8008310:	b01b      	add	sp, #108	; 0x6c
 8008312:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008314:	2300      	movs	r3, #0
 8008316:	602b      	str	r3, [r5, #0]
 8008318:	e7e0      	b.n	80082dc <_dtoa_r+0x58>
 800831a:	9e06      	ldr	r6, [sp, #24]
 800831c:	9f07      	ldr	r7, [sp, #28]
 800831e:	2200      	movs	r2, #0
 8008320:	2300      	movs	r3, #0
 8008322:	0030      	movs	r0, r6
 8008324:	0039      	movs	r1, r7
 8008326:	f7f8 f887 	bl	8000438 <__aeabi_dcmpeq>
 800832a:	1e05      	subs	r5, r0, #0
 800832c:	d00b      	beq.n	8008346 <_dtoa_r+0xc2>
 800832e:	2301      	movs	r3, #1
 8008330:	9a22      	ldr	r2, [sp, #136]	; 0x88
 8008332:	6013      	str	r3, [r2, #0]
 8008334:	4ba0      	ldr	r3, [pc, #640]	; (80085b8 <_dtoa_r+0x334>)
 8008336:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008338:	9308      	str	r3, [sp, #32]
 800833a:	2a00      	cmp	r2, #0
 800833c:	d0e7      	beq.n	800830e <_dtoa_r+0x8a>
 800833e:	4a9f      	ldr	r2, [pc, #636]	; (80085bc <_dtoa_r+0x338>)
 8008340:	9924      	ldr	r1, [sp, #144]	; 0x90
 8008342:	600a      	str	r2, [r1, #0]
 8008344:	e7e3      	b.n	800830e <_dtoa_r+0x8a>
 8008346:	ab18      	add	r3, sp, #96	; 0x60
 8008348:	9301      	str	r3, [sp, #4]
 800834a:	ab19      	add	r3, sp, #100	; 0x64
 800834c:	9300      	str	r3, [sp, #0]
 800834e:	0032      	movs	r2, r6
 8008350:	003b      	movs	r3, r7
 8008352:	9802      	ldr	r0, [sp, #8]
 8008354:	f001 fc2a 	bl	8009bac <__d2b>
 8008358:	0063      	lsls	r3, r4, #1
 800835a:	9003      	str	r0, [sp, #12]
 800835c:	0d5b      	lsrs	r3, r3, #21
 800835e:	d074      	beq.n	800844a <_dtoa_r+0x1c6>
 8008360:	033a      	lsls	r2, r7, #12
 8008362:	4c97      	ldr	r4, [pc, #604]	; (80085c0 <_dtoa_r+0x33c>)
 8008364:	0b12      	lsrs	r2, r2, #12
 8008366:	4314      	orrs	r4, r2
 8008368:	0021      	movs	r1, r4
 800836a:	4a96      	ldr	r2, [pc, #600]	; (80085c4 <_dtoa_r+0x340>)
 800836c:	0030      	movs	r0, r6
 800836e:	9516      	str	r5, [sp, #88]	; 0x58
 8008370:	189e      	adds	r6, r3, r2
 8008372:	2200      	movs	r2, #0
 8008374:	4b94      	ldr	r3, [pc, #592]	; (80085c8 <_dtoa_r+0x344>)
 8008376:	f7f9 fb6f 	bl	8001a58 <__aeabi_dsub>
 800837a:	4a94      	ldr	r2, [pc, #592]	; (80085cc <_dtoa_r+0x348>)
 800837c:	4b94      	ldr	r3, [pc, #592]	; (80085d0 <_dtoa_r+0x34c>)
 800837e:	f7f9 f8f9 	bl	8001574 <__aeabi_dmul>
 8008382:	4a94      	ldr	r2, [pc, #592]	; (80085d4 <_dtoa_r+0x350>)
 8008384:	4b94      	ldr	r3, [pc, #592]	; (80085d8 <_dtoa_r+0x354>)
 8008386:	f7f8 f9cf 	bl	8000728 <__aeabi_dadd>
 800838a:	0004      	movs	r4, r0
 800838c:	0030      	movs	r0, r6
 800838e:	000d      	movs	r5, r1
 8008390:	f7f9 fefc 	bl	800218c <__aeabi_i2d>
 8008394:	4a91      	ldr	r2, [pc, #580]	; (80085dc <_dtoa_r+0x358>)
 8008396:	4b92      	ldr	r3, [pc, #584]	; (80085e0 <_dtoa_r+0x35c>)
 8008398:	f7f9 f8ec 	bl	8001574 <__aeabi_dmul>
 800839c:	0002      	movs	r2, r0
 800839e:	000b      	movs	r3, r1
 80083a0:	0020      	movs	r0, r4
 80083a2:	0029      	movs	r1, r5
 80083a4:	f7f8 f9c0 	bl	8000728 <__aeabi_dadd>
 80083a8:	0004      	movs	r4, r0
 80083aa:	000d      	movs	r5, r1
 80083ac:	f7f9 feb8 	bl	8002120 <__aeabi_d2iz>
 80083b0:	2200      	movs	r2, #0
 80083b2:	0007      	movs	r7, r0
 80083b4:	2300      	movs	r3, #0
 80083b6:	0020      	movs	r0, r4
 80083b8:	0029      	movs	r1, r5
 80083ba:	f7f8 f843 	bl	8000444 <__aeabi_dcmplt>
 80083be:	2800      	cmp	r0, #0
 80083c0:	d009      	beq.n	80083d6 <_dtoa_r+0x152>
 80083c2:	0038      	movs	r0, r7
 80083c4:	f7f9 fee2 	bl	800218c <__aeabi_i2d>
 80083c8:	002b      	movs	r3, r5
 80083ca:	0022      	movs	r2, r4
 80083cc:	f7f8 f834 	bl	8000438 <__aeabi_dcmpeq>
 80083d0:	4243      	negs	r3, r0
 80083d2:	4158      	adcs	r0, r3
 80083d4:	1a3f      	subs	r7, r7, r0
 80083d6:	2301      	movs	r3, #1
 80083d8:	9314      	str	r3, [sp, #80]	; 0x50
 80083da:	2f16      	cmp	r7, #22
 80083dc:	d80d      	bhi.n	80083fa <_dtoa_r+0x176>
 80083de:	4981      	ldr	r1, [pc, #516]	; (80085e4 <_dtoa_r+0x360>)
 80083e0:	00fb      	lsls	r3, r7, #3
 80083e2:	18c9      	adds	r1, r1, r3
 80083e4:	6808      	ldr	r0, [r1, #0]
 80083e6:	6849      	ldr	r1, [r1, #4]
 80083e8:	9a06      	ldr	r2, [sp, #24]
 80083ea:	9b07      	ldr	r3, [sp, #28]
 80083ec:	f7f8 f83e 	bl	800046c <__aeabi_dcmpgt>
 80083f0:	2800      	cmp	r0, #0
 80083f2:	d046      	beq.n	8008482 <_dtoa_r+0x1fe>
 80083f4:	2300      	movs	r3, #0
 80083f6:	3f01      	subs	r7, #1
 80083f8:	9314      	str	r3, [sp, #80]	; 0x50
 80083fa:	9b18      	ldr	r3, [sp, #96]	; 0x60
 80083fc:	1b9e      	subs	r6, r3, r6
 80083fe:	2300      	movs	r3, #0
 8008400:	930a      	str	r3, [sp, #40]	; 0x28
 8008402:	0033      	movs	r3, r6
 8008404:	3b01      	subs	r3, #1
 8008406:	930b      	str	r3, [sp, #44]	; 0x2c
 8008408:	d504      	bpl.n	8008414 <_dtoa_r+0x190>
 800840a:	2301      	movs	r3, #1
 800840c:	1b9b      	subs	r3, r3, r6
 800840e:	930a      	str	r3, [sp, #40]	; 0x28
 8008410:	2300      	movs	r3, #0
 8008412:	930b      	str	r3, [sp, #44]	; 0x2c
 8008414:	2f00      	cmp	r7, #0
 8008416:	db36      	blt.n	8008486 <_dtoa_r+0x202>
 8008418:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 800841a:	9711      	str	r7, [sp, #68]	; 0x44
 800841c:	19db      	adds	r3, r3, r7
 800841e:	930b      	str	r3, [sp, #44]	; 0x2c
 8008420:	2300      	movs	r3, #0
 8008422:	9304      	str	r3, [sp, #16]
 8008424:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008426:	2401      	movs	r4, #1
 8008428:	2b09      	cmp	r3, #9
 800842a:	d900      	bls.n	800842e <_dtoa_r+0x1aa>
 800842c:	e084      	b.n	8008538 <_dtoa_r+0x2b4>
 800842e:	2b05      	cmp	r3, #5
 8008430:	dd02      	ble.n	8008438 <_dtoa_r+0x1b4>
 8008432:	2400      	movs	r4, #0
 8008434:	3b04      	subs	r3, #4
 8008436:	9320      	str	r3, [sp, #128]	; 0x80
 8008438:	9b20      	ldr	r3, [sp, #128]	; 0x80
 800843a:	1e98      	subs	r0, r3, #2
 800843c:	2803      	cmp	r0, #3
 800843e:	d900      	bls.n	8008442 <_dtoa_r+0x1be>
 8008440:	e084      	b.n	800854c <_dtoa_r+0x2c8>
 8008442:	f7f7 fe69 	bl	8000118 <__gnu_thumb1_case_uqi>
 8008446:	7775      	.short	0x7775
 8008448:	6a28      	.short	0x6a28
 800844a:	9b18      	ldr	r3, [sp, #96]	; 0x60
 800844c:	9a19      	ldr	r2, [sp, #100]	; 0x64
 800844e:	189e      	adds	r6, r3, r2
 8008450:	4b65      	ldr	r3, [pc, #404]	; (80085e8 <_dtoa_r+0x364>)
 8008452:	18f2      	adds	r2, r6, r3
 8008454:	2a20      	cmp	r2, #32
 8008456:	dd0f      	ble.n	8008478 <_dtoa_r+0x1f4>
 8008458:	2340      	movs	r3, #64	; 0x40
 800845a:	1a9b      	subs	r3, r3, r2
 800845c:	409c      	lsls	r4, r3
 800845e:	4b63      	ldr	r3, [pc, #396]	; (80085ec <_dtoa_r+0x368>)
 8008460:	9806      	ldr	r0, [sp, #24]
 8008462:	18f3      	adds	r3, r6, r3
 8008464:	40d8      	lsrs	r0, r3
 8008466:	4320      	orrs	r0, r4
 8008468:	f7f9 feca 	bl	8002200 <__aeabi_ui2d>
 800846c:	2301      	movs	r3, #1
 800846e:	4c60      	ldr	r4, [pc, #384]	; (80085f0 <_dtoa_r+0x36c>)
 8008470:	3e01      	subs	r6, #1
 8008472:	1909      	adds	r1, r1, r4
 8008474:	9316      	str	r3, [sp, #88]	; 0x58
 8008476:	e77c      	b.n	8008372 <_dtoa_r+0xee>
 8008478:	2320      	movs	r3, #32
 800847a:	9806      	ldr	r0, [sp, #24]
 800847c:	1a9b      	subs	r3, r3, r2
 800847e:	4098      	lsls	r0, r3
 8008480:	e7f2      	b.n	8008468 <_dtoa_r+0x1e4>
 8008482:	9014      	str	r0, [sp, #80]	; 0x50
 8008484:	e7b9      	b.n	80083fa <_dtoa_r+0x176>
 8008486:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008488:	1bdb      	subs	r3, r3, r7
 800848a:	930a      	str	r3, [sp, #40]	; 0x28
 800848c:	427b      	negs	r3, r7
 800848e:	9304      	str	r3, [sp, #16]
 8008490:	2300      	movs	r3, #0
 8008492:	9311      	str	r3, [sp, #68]	; 0x44
 8008494:	e7c6      	b.n	8008424 <_dtoa_r+0x1a0>
 8008496:	2301      	movs	r3, #1
 8008498:	930d      	str	r3, [sp, #52]	; 0x34
 800849a:	9b21      	ldr	r3, [sp, #132]	; 0x84
 800849c:	2b00      	cmp	r3, #0
 800849e:	dd59      	ble.n	8008554 <_dtoa_r+0x2d0>
 80084a0:	930c      	str	r3, [sp, #48]	; 0x30
 80084a2:	9309      	str	r3, [sp, #36]	; 0x24
 80084a4:	9a02      	ldr	r2, [sp, #8]
 80084a6:	6a55      	ldr	r5, [r2, #36]	; 0x24
 80084a8:	2200      	movs	r2, #0
 80084aa:	606a      	str	r2, [r5, #4]
 80084ac:	3204      	adds	r2, #4
 80084ae:	0010      	movs	r0, r2
 80084b0:	3014      	adds	r0, #20
 80084b2:	6869      	ldr	r1, [r5, #4]
 80084b4:	4298      	cmp	r0, r3
 80084b6:	d952      	bls.n	800855e <_dtoa_r+0x2da>
 80084b8:	9802      	ldr	r0, [sp, #8]
 80084ba:	f001 f835 	bl	8009528 <_Balloc>
 80084be:	9b02      	ldr	r3, [sp, #8]
 80084c0:	6028      	str	r0, [r5, #0]
 80084c2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80084c4:	681b      	ldr	r3, [r3, #0]
 80084c6:	9308      	str	r3, [sp, #32]
 80084c8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80084ca:	2b0e      	cmp	r3, #14
 80084cc:	d900      	bls.n	80084d0 <_dtoa_r+0x24c>
 80084ce:	e10a      	b.n	80086e6 <_dtoa_r+0x462>
 80084d0:	2c00      	cmp	r4, #0
 80084d2:	d100      	bne.n	80084d6 <_dtoa_r+0x252>
 80084d4:	e107      	b.n	80086e6 <_dtoa_r+0x462>
 80084d6:	9b06      	ldr	r3, [sp, #24]
 80084d8:	9c07      	ldr	r4, [sp, #28]
 80084da:	9312      	str	r3, [sp, #72]	; 0x48
 80084dc:	9413      	str	r4, [sp, #76]	; 0x4c
 80084de:	2f00      	cmp	r7, #0
 80084e0:	dc00      	bgt.n	80084e4 <_dtoa_r+0x260>
 80084e2:	e089      	b.n	80085f8 <_dtoa_r+0x374>
 80084e4:	210f      	movs	r1, #15
 80084e6:	003a      	movs	r2, r7
 80084e8:	4b3e      	ldr	r3, [pc, #248]	; (80085e4 <_dtoa_r+0x360>)
 80084ea:	400a      	ands	r2, r1
 80084ec:	00d2      	lsls	r2, r2, #3
 80084ee:	189b      	adds	r3, r3, r2
 80084f0:	681d      	ldr	r5, [r3, #0]
 80084f2:	685e      	ldr	r6, [r3, #4]
 80084f4:	2302      	movs	r3, #2
 80084f6:	113c      	asrs	r4, r7, #4
 80084f8:	930e      	str	r3, [sp, #56]	; 0x38
 80084fa:	06e3      	lsls	r3, r4, #27
 80084fc:	d50b      	bpl.n	8008516 <_dtoa_r+0x292>
 80084fe:	4b3d      	ldr	r3, [pc, #244]	; (80085f4 <_dtoa_r+0x370>)
 8008500:	400c      	ands	r4, r1
 8008502:	6a1a      	ldr	r2, [r3, #32]
 8008504:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008506:	9812      	ldr	r0, [sp, #72]	; 0x48
 8008508:	9913      	ldr	r1, [sp, #76]	; 0x4c
 800850a:	f7f8 fc29 	bl	8000d60 <__aeabi_ddiv>
 800850e:	2303      	movs	r3, #3
 8008510:	9006      	str	r0, [sp, #24]
 8008512:	9107      	str	r1, [sp, #28]
 8008514:	930e      	str	r3, [sp, #56]	; 0x38
 8008516:	2300      	movs	r3, #0
 8008518:	e03a      	b.n	8008590 <_dtoa_r+0x30c>
 800851a:	2301      	movs	r3, #1
 800851c:	930d      	str	r3, [sp, #52]	; 0x34
 800851e:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008520:	18fb      	adds	r3, r7, r3
 8008522:	930c      	str	r3, [sp, #48]	; 0x30
 8008524:	3301      	adds	r3, #1
 8008526:	9309      	str	r3, [sp, #36]	; 0x24
 8008528:	2b00      	cmp	r3, #0
 800852a:	dcbb      	bgt.n	80084a4 <_dtoa_r+0x220>
 800852c:	2301      	movs	r3, #1
 800852e:	e7b9      	b.n	80084a4 <_dtoa_r+0x220>
 8008530:	2300      	movs	r3, #0
 8008532:	e7b1      	b.n	8008498 <_dtoa_r+0x214>
 8008534:	2300      	movs	r3, #0
 8008536:	e7f1      	b.n	800851c <_dtoa_r+0x298>
 8008538:	2300      	movs	r3, #0
 800853a:	940d      	str	r4, [sp, #52]	; 0x34
 800853c:	9320      	str	r3, [sp, #128]	; 0x80
 800853e:	3b01      	subs	r3, #1
 8008540:	2200      	movs	r2, #0
 8008542:	930c      	str	r3, [sp, #48]	; 0x30
 8008544:	9309      	str	r3, [sp, #36]	; 0x24
 8008546:	3313      	adds	r3, #19
 8008548:	9221      	str	r2, [sp, #132]	; 0x84
 800854a:	e7ab      	b.n	80084a4 <_dtoa_r+0x220>
 800854c:	2301      	movs	r3, #1
 800854e:	930d      	str	r3, [sp, #52]	; 0x34
 8008550:	3b02      	subs	r3, #2
 8008552:	e7f5      	b.n	8008540 <_dtoa_r+0x2bc>
 8008554:	2301      	movs	r3, #1
 8008556:	930c      	str	r3, [sp, #48]	; 0x30
 8008558:	9309      	str	r3, [sp, #36]	; 0x24
 800855a:	001a      	movs	r2, r3
 800855c:	e7f4      	b.n	8008548 <_dtoa_r+0x2c4>
 800855e:	3101      	adds	r1, #1
 8008560:	6069      	str	r1, [r5, #4]
 8008562:	0052      	lsls	r2, r2, #1
 8008564:	e7a3      	b.n	80084ae <_dtoa_r+0x22a>
 8008566:	2301      	movs	r3, #1
 8008568:	421c      	tst	r4, r3
 800856a:	d00e      	beq.n	800858a <_dtoa_r+0x306>
 800856c:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800856e:	4a21      	ldr	r2, [pc, #132]	; (80085f4 <_dtoa_r+0x370>)
 8008570:	3301      	adds	r3, #1
 8008572:	930e      	str	r3, [sp, #56]	; 0x38
 8008574:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008576:	0028      	movs	r0, r5
 8008578:	00db      	lsls	r3, r3, #3
 800857a:	189b      	adds	r3, r3, r2
 800857c:	0031      	movs	r1, r6
 800857e:	681a      	ldr	r2, [r3, #0]
 8008580:	685b      	ldr	r3, [r3, #4]
 8008582:	f7f8 fff7 	bl	8001574 <__aeabi_dmul>
 8008586:	0005      	movs	r5, r0
 8008588:	000e      	movs	r6, r1
 800858a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800858c:	1064      	asrs	r4, r4, #1
 800858e:	3301      	adds	r3, #1
 8008590:	9310      	str	r3, [sp, #64]	; 0x40
 8008592:	2c00      	cmp	r4, #0
 8008594:	d1e7      	bne.n	8008566 <_dtoa_r+0x2e2>
 8008596:	9806      	ldr	r0, [sp, #24]
 8008598:	9907      	ldr	r1, [sp, #28]
 800859a:	002a      	movs	r2, r5
 800859c:	0033      	movs	r3, r6
 800859e:	f7f8 fbdf 	bl	8000d60 <__aeabi_ddiv>
 80085a2:	9006      	str	r0, [sp, #24]
 80085a4:	9107      	str	r1, [sp, #28]
 80085a6:	e042      	b.n	800862e <_dtoa_r+0x3aa>
 80085a8:	7ff00000 	.word	0x7ff00000
 80085ac:	0000270f 	.word	0x0000270f
 80085b0:	0800a449 	.word	0x0800a449
 80085b4:	0800a44c 	.word	0x0800a44c
 80085b8:	0800a3c0 	.word	0x0800a3c0
 80085bc:	0800a3c1 	.word	0x0800a3c1
 80085c0:	3ff00000 	.word	0x3ff00000
 80085c4:	fffffc01 	.word	0xfffffc01
 80085c8:	3ff80000 	.word	0x3ff80000
 80085cc:	636f4361 	.word	0x636f4361
 80085d0:	3fd287a7 	.word	0x3fd287a7
 80085d4:	8b60c8b3 	.word	0x8b60c8b3
 80085d8:	3fc68a28 	.word	0x3fc68a28
 80085dc:	509f79fb 	.word	0x509f79fb
 80085e0:	3fd34413 	.word	0x3fd34413
 80085e4:	0800a480 	.word	0x0800a480
 80085e8:	00000432 	.word	0x00000432
 80085ec:	00000412 	.word	0x00000412
 80085f0:	fe100000 	.word	0xfe100000
 80085f4:	0800a458 	.word	0x0800a458
 80085f8:	2302      	movs	r3, #2
 80085fa:	930e      	str	r3, [sp, #56]	; 0x38
 80085fc:	2f00      	cmp	r7, #0
 80085fe:	d016      	beq.n	800862e <_dtoa_r+0x3aa>
 8008600:	9812      	ldr	r0, [sp, #72]	; 0x48
 8008602:	9913      	ldr	r1, [sp, #76]	; 0x4c
 8008604:	427c      	negs	r4, r7
 8008606:	330d      	adds	r3, #13
 8008608:	4023      	ands	r3, r4
 800860a:	4ace      	ldr	r2, [pc, #824]	; (8008944 <_dtoa_r+0x6c0>)
 800860c:	00db      	lsls	r3, r3, #3
 800860e:	18d3      	adds	r3, r2, r3
 8008610:	681a      	ldr	r2, [r3, #0]
 8008612:	685b      	ldr	r3, [r3, #4]
 8008614:	f7f8 ffae 	bl	8001574 <__aeabi_dmul>
 8008618:	2300      	movs	r3, #0
 800861a:	2601      	movs	r6, #1
 800861c:	001d      	movs	r5, r3
 800861e:	9006      	str	r0, [sp, #24]
 8008620:	9107      	str	r1, [sp, #28]
 8008622:	1124      	asrs	r4, r4, #4
 8008624:	2c00      	cmp	r4, #0
 8008626:	d000      	beq.n	800862a <_dtoa_r+0x3a6>
 8008628:	e08c      	b.n	8008744 <_dtoa_r+0x4c0>
 800862a:	2b00      	cmp	r3, #0
 800862c:	d1b9      	bne.n	80085a2 <_dtoa_r+0x31e>
 800862e:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008630:	2b00      	cmp	r3, #0
 8008632:	d100      	bne.n	8008636 <_dtoa_r+0x3b2>
 8008634:	e096      	b.n	8008764 <_dtoa_r+0x4e0>
 8008636:	9c06      	ldr	r4, [sp, #24]
 8008638:	9d07      	ldr	r5, [sp, #28]
 800863a:	2200      	movs	r2, #0
 800863c:	4bc2      	ldr	r3, [pc, #776]	; (8008948 <_dtoa_r+0x6c4>)
 800863e:	0020      	movs	r0, r4
 8008640:	0029      	movs	r1, r5
 8008642:	f7f7 feff 	bl	8000444 <__aeabi_dcmplt>
 8008646:	2800      	cmp	r0, #0
 8008648:	d100      	bne.n	800864c <_dtoa_r+0x3c8>
 800864a:	e08b      	b.n	8008764 <_dtoa_r+0x4e0>
 800864c:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800864e:	2b00      	cmp	r3, #0
 8008650:	d100      	bne.n	8008654 <_dtoa_r+0x3d0>
 8008652:	e087      	b.n	8008764 <_dtoa_r+0x4e0>
 8008654:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008656:	2b00      	cmp	r3, #0
 8008658:	dd41      	ble.n	80086de <_dtoa_r+0x45a>
 800865a:	4bbc      	ldr	r3, [pc, #752]	; (800894c <_dtoa_r+0x6c8>)
 800865c:	2200      	movs	r2, #0
 800865e:	0020      	movs	r0, r4
 8008660:	0029      	movs	r1, r5
 8008662:	f7f8 ff87 	bl	8001574 <__aeabi_dmul>
 8008666:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8008668:	9006      	str	r0, [sp, #24]
 800866a:	9107      	str	r1, [sp, #28]
 800866c:	3301      	adds	r3, #1
 800866e:	930e      	str	r3, [sp, #56]	; 0x38
 8008670:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008672:	1e7e      	subs	r6, r7, #1
 8008674:	980e      	ldr	r0, [sp, #56]	; 0x38
 8008676:	9310      	str	r3, [sp, #64]	; 0x40
 8008678:	f7f9 fd88 	bl	800218c <__aeabi_i2d>
 800867c:	9a06      	ldr	r2, [sp, #24]
 800867e:	9b07      	ldr	r3, [sp, #28]
 8008680:	f7f8 ff78 	bl	8001574 <__aeabi_dmul>
 8008684:	2200      	movs	r2, #0
 8008686:	4bb2      	ldr	r3, [pc, #712]	; (8008950 <_dtoa_r+0x6cc>)
 8008688:	f7f8 f84e 	bl	8000728 <__aeabi_dadd>
 800868c:	4ab1      	ldr	r2, [pc, #708]	; (8008954 <_dtoa_r+0x6d0>)
 800868e:	900e      	str	r0, [sp, #56]	; 0x38
 8008690:	910f      	str	r1, [sp, #60]	; 0x3c
 8008692:	9c0e      	ldr	r4, [sp, #56]	; 0x38
 8008694:	9d0f      	ldr	r5, [sp, #60]	; 0x3c
 8008696:	4694      	mov	ip, r2
 8008698:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 800869a:	4463      	add	r3, ip
 800869c:	9315      	str	r3, [sp, #84]	; 0x54
 800869e:	001d      	movs	r5, r3
 80086a0:	9b10      	ldr	r3, [sp, #64]	; 0x40
 80086a2:	2b00      	cmp	r3, #0
 80086a4:	d161      	bne.n	800876a <_dtoa_r+0x4e6>
 80086a6:	9806      	ldr	r0, [sp, #24]
 80086a8:	9907      	ldr	r1, [sp, #28]
 80086aa:	2200      	movs	r2, #0
 80086ac:	4baa      	ldr	r3, [pc, #680]	; (8008958 <_dtoa_r+0x6d4>)
 80086ae:	f7f9 f9d3 	bl	8001a58 <__aeabi_dsub>
 80086b2:	0022      	movs	r2, r4
 80086b4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80086b6:	9006      	str	r0, [sp, #24]
 80086b8:	9107      	str	r1, [sp, #28]
 80086ba:	f7f7 fed7 	bl	800046c <__aeabi_dcmpgt>
 80086be:	2800      	cmp	r0, #0
 80086c0:	d000      	beq.n	80086c4 <_dtoa_r+0x440>
 80086c2:	e2a8      	b.n	8008c16 <_dtoa_r+0x992>
 80086c4:	48a5      	ldr	r0, [pc, #660]	; (800895c <_dtoa_r+0x6d8>)
 80086c6:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80086c8:	4684      	mov	ip, r0
 80086ca:	4461      	add	r1, ip
 80086cc:	000b      	movs	r3, r1
 80086ce:	9806      	ldr	r0, [sp, #24]
 80086d0:	9907      	ldr	r1, [sp, #28]
 80086d2:	0022      	movs	r2, r4
 80086d4:	f7f7 feb6 	bl	8000444 <__aeabi_dcmplt>
 80086d8:	2800      	cmp	r0, #0
 80086da:	d000      	beq.n	80086de <_dtoa_r+0x45a>
 80086dc:	e295      	b.n	8008c0a <_dtoa_r+0x986>
 80086de:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80086e0:	9c13      	ldr	r4, [sp, #76]	; 0x4c
 80086e2:	9306      	str	r3, [sp, #24]
 80086e4:	9407      	str	r4, [sp, #28]
 80086e6:	9b19      	ldr	r3, [sp, #100]	; 0x64
 80086e8:	2b00      	cmp	r3, #0
 80086ea:	da00      	bge.n	80086ee <_dtoa_r+0x46a>
 80086ec:	e15c      	b.n	80089a8 <_dtoa_r+0x724>
 80086ee:	2f0e      	cmp	r7, #14
 80086f0:	dd00      	ble.n	80086f4 <_dtoa_r+0x470>
 80086f2:	e159      	b.n	80089a8 <_dtoa_r+0x724>
 80086f4:	4b93      	ldr	r3, [pc, #588]	; (8008944 <_dtoa_r+0x6c0>)
 80086f6:	00fa      	lsls	r2, r7, #3
 80086f8:	189b      	adds	r3, r3, r2
 80086fa:	685c      	ldr	r4, [r3, #4]
 80086fc:	681b      	ldr	r3, [r3, #0]
 80086fe:	9304      	str	r3, [sp, #16]
 8008700:	9405      	str	r4, [sp, #20]
 8008702:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008704:	2b00      	cmp	r3, #0
 8008706:	db00      	blt.n	800870a <_dtoa_r+0x486>
 8008708:	e0d8      	b.n	80088bc <_dtoa_r+0x638>
 800870a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800870c:	2b00      	cmp	r3, #0
 800870e:	dd00      	ble.n	8008712 <_dtoa_r+0x48e>
 8008710:	e0d4      	b.n	80088bc <_dtoa_r+0x638>
 8008712:	d000      	beq.n	8008716 <_dtoa_r+0x492>
 8008714:	e27d      	b.n	8008c12 <_dtoa_r+0x98e>
 8008716:	9804      	ldr	r0, [sp, #16]
 8008718:	9905      	ldr	r1, [sp, #20]
 800871a:	2200      	movs	r2, #0
 800871c:	4b8e      	ldr	r3, [pc, #568]	; (8008958 <_dtoa_r+0x6d4>)
 800871e:	f7f8 ff29 	bl	8001574 <__aeabi_dmul>
 8008722:	9a06      	ldr	r2, [sp, #24]
 8008724:	9b07      	ldr	r3, [sp, #28]
 8008726:	f7f7 feab 	bl	8000480 <__aeabi_dcmpge>
 800872a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 800872c:	9304      	str	r3, [sp, #16]
 800872e:	001e      	movs	r6, r3
 8008730:	2800      	cmp	r0, #0
 8008732:	d000      	beq.n	8008736 <_dtoa_r+0x4b2>
 8008734:	e24f      	b.n	8008bd6 <_dtoa_r+0x952>
 8008736:	9b08      	ldr	r3, [sp, #32]
 8008738:	9a08      	ldr	r2, [sp, #32]
 800873a:	1c5d      	adds	r5, r3, #1
 800873c:	2331      	movs	r3, #49	; 0x31
 800873e:	3701      	adds	r7, #1
 8008740:	7013      	strb	r3, [r2, #0]
 8008742:	e24b      	b.n	8008bdc <_dtoa_r+0x958>
 8008744:	4234      	tst	r4, r6
 8008746:	d00a      	beq.n	800875e <_dtoa_r+0x4da>
 8008748:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 800874a:	4a85      	ldr	r2, [pc, #532]	; (8008960 <_dtoa_r+0x6dc>)
 800874c:	3301      	adds	r3, #1
 800874e:	930e      	str	r3, [sp, #56]	; 0x38
 8008750:	00eb      	lsls	r3, r5, #3
 8008752:	189b      	adds	r3, r3, r2
 8008754:	681a      	ldr	r2, [r3, #0]
 8008756:	685b      	ldr	r3, [r3, #4]
 8008758:	f7f8 ff0c 	bl	8001574 <__aeabi_dmul>
 800875c:	0033      	movs	r3, r6
 800875e:	1064      	asrs	r4, r4, #1
 8008760:	3501      	adds	r5, #1
 8008762:	e75f      	b.n	8008624 <_dtoa_r+0x3a0>
 8008764:	003e      	movs	r6, r7
 8008766:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008768:	e784      	b.n	8008674 <_dtoa_r+0x3f0>
 800876a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800876c:	990d      	ldr	r1, [sp, #52]	; 0x34
 800876e:	1e5a      	subs	r2, r3, #1
 8008770:	4b74      	ldr	r3, [pc, #464]	; (8008944 <_dtoa_r+0x6c0>)
 8008772:	00d2      	lsls	r2, r2, #3
 8008774:	189b      	adds	r3, r3, r2
 8008776:	681a      	ldr	r2, [r3, #0]
 8008778:	685b      	ldr	r3, [r3, #4]
 800877a:	2900      	cmp	r1, #0
 800877c:	d049      	beq.n	8008812 <_dtoa_r+0x58e>
 800877e:	2000      	movs	r0, #0
 8008780:	4978      	ldr	r1, [pc, #480]	; (8008964 <_dtoa_r+0x6e0>)
 8008782:	f7f8 faed 	bl	8000d60 <__aeabi_ddiv>
 8008786:	002b      	movs	r3, r5
 8008788:	0022      	movs	r2, r4
 800878a:	f7f9 f965 	bl	8001a58 <__aeabi_dsub>
 800878e:	9b08      	ldr	r3, [sp, #32]
 8008790:	900e      	str	r0, [sp, #56]	; 0x38
 8008792:	910f      	str	r1, [sp, #60]	; 0x3c
 8008794:	9315      	str	r3, [sp, #84]	; 0x54
 8008796:	9806      	ldr	r0, [sp, #24]
 8008798:	9907      	ldr	r1, [sp, #28]
 800879a:	f7f9 fcc1 	bl	8002120 <__aeabi_d2iz>
 800879e:	0004      	movs	r4, r0
 80087a0:	f7f9 fcf4 	bl	800218c <__aeabi_i2d>
 80087a4:	0002      	movs	r2, r0
 80087a6:	000b      	movs	r3, r1
 80087a8:	9806      	ldr	r0, [sp, #24]
 80087aa:	9907      	ldr	r1, [sp, #28]
 80087ac:	f7f9 f954 	bl	8001a58 <__aeabi_dsub>
 80087b0:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80087b2:	3430      	adds	r4, #48	; 0x30
 80087b4:	1c5d      	adds	r5, r3, #1
 80087b6:	701c      	strb	r4, [r3, #0]
 80087b8:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80087ba:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80087bc:	9006      	str	r0, [sp, #24]
 80087be:	9107      	str	r1, [sp, #28]
 80087c0:	f7f7 fe40 	bl	8000444 <__aeabi_dcmplt>
 80087c4:	2800      	cmp	r0, #0
 80087c6:	d16c      	bne.n	80088a2 <_dtoa_r+0x61e>
 80087c8:	9a06      	ldr	r2, [sp, #24]
 80087ca:	9b07      	ldr	r3, [sp, #28]
 80087cc:	2000      	movs	r0, #0
 80087ce:	495e      	ldr	r1, [pc, #376]	; (8008948 <_dtoa_r+0x6c4>)
 80087d0:	f7f9 f942 	bl	8001a58 <__aeabi_dsub>
 80087d4:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 80087d6:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 80087d8:	f7f7 fe34 	bl	8000444 <__aeabi_dcmplt>
 80087dc:	2800      	cmp	r0, #0
 80087de:	d000      	beq.n	80087e2 <_dtoa_r+0x55e>
 80087e0:	e0c3      	b.n	800896a <_dtoa_r+0x6e6>
 80087e2:	9b08      	ldr	r3, [sp, #32]
 80087e4:	9a10      	ldr	r2, [sp, #64]	; 0x40
 80087e6:	1aeb      	subs	r3, r5, r3
 80087e8:	429a      	cmp	r2, r3
 80087ea:	dc00      	bgt.n	80087ee <_dtoa_r+0x56a>
 80087ec:	e777      	b.n	80086de <_dtoa_r+0x45a>
 80087ee:	980e      	ldr	r0, [sp, #56]	; 0x38
 80087f0:	990f      	ldr	r1, [sp, #60]	; 0x3c
 80087f2:	2200      	movs	r2, #0
 80087f4:	4b55      	ldr	r3, [pc, #340]	; (800894c <_dtoa_r+0x6c8>)
 80087f6:	f7f8 febd 	bl	8001574 <__aeabi_dmul>
 80087fa:	2200      	movs	r2, #0
 80087fc:	900e      	str	r0, [sp, #56]	; 0x38
 80087fe:	910f      	str	r1, [sp, #60]	; 0x3c
 8008800:	9806      	ldr	r0, [sp, #24]
 8008802:	9907      	ldr	r1, [sp, #28]
 8008804:	4b51      	ldr	r3, [pc, #324]	; (800894c <_dtoa_r+0x6c8>)
 8008806:	f7f8 feb5 	bl	8001574 <__aeabi_dmul>
 800880a:	9515      	str	r5, [sp, #84]	; 0x54
 800880c:	9006      	str	r0, [sp, #24]
 800880e:	9107      	str	r1, [sp, #28]
 8008810:	e7c1      	b.n	8008796 <_dtoa_r+0x512>
 8008812:	0020      	movs	r0, r4
 8008814:	0029      	movs	r1, r5
 8008816:	f7f8 fead 	bl	8001574 <__aeabi_dmul>
 800881a:	9c08      	ldr	r4, [sp, #32]
 800881c:	9a10      	ldr	r2, [sp, #64]	; 0x40
 800881e:	0023      	movs	r3, r4
 8008820:	4694      	mov	ip, r2
 8008822:	900e      	str	r0, [sp, #56]	; 0x38
 8008824:	910f      	str	r1, [sp, #60]	; 0x3c
 8008826:	4463      	add	r3, ip
 8008828:	9315      	str	r3, [sp, #84]	; 0x54
 800882a:	9806      	ldr	r0, [sp, #24]
 800882c:	9907      	ldr	r1, [sp, #28]
 800882e:	f7f9 fc77 	bl	8002120 <__aeabi_d2iz>
 8008832:	0005      	movs	r5, r0
 8008834:	f7f9 fcaa 	bl	800218c <__aeabi_i2d>
 8008838:	000b      	movs	r3, r1
 800883a:	0002      	movs	r2, r0
 800883c:	9806      	ldr	r0, [sp, #24]
 800883e:	9907      	ldr	r1, [sp, #28]
 8008840:	f7f9 f90a 	bl	8001a58 <__aeabi_dsub>
 8008844:	3530      	adds	r5, #48	; 0x30
 8008846:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8008848:	7025      	strb	r5, [r4, #0]
 800884a:	3401      	adds	r4, #1
 800884c:	9006      	str	r0, [sp, #24]
 800884e:	9107      	str	r1, [sp, #28]
 8008850:	42a3      	cmp	r3, r4
 8008852:	d12a      	bne.n	80088aa <_dtoa_r+0x626>
 8008854:	980e      	ldr	r0, [sp, #56]	; 0x38
 8008856:	990f      	ldr	r1, [sp, #60]	; 0x3c
 8008858:	9a08      	ldr	r2, [sp, #32]
 800885a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 800885c:	4694      	mov	ip, r2
 800885e:	4463      	add	r3, ip
 8008860:	2200      	movs	r2, #0
 8008862:	001d      	movs	r5, r3
 8008864:	4b3f      	ldr	r3, [pc, #252]	; (8008964 <_dtoa_r+0x6e0>)
 8008866:	f7f7 ff5f 	bl	8000728 <__aeabi_dadd>
 800886a:	0002      	movs	r2, r0
 800886c:	000b      	movs	r3, r1
 800886e:	9806      	ldr	r0, [sp, #24]
 8008870:	9907      	ldr	r1, [sp, #28]
 8008872:	f7f7 fdfb 	bl	800046c <__aeabi_dcmpgt>
 8008876:	2800      	cmp	r0, #0
 8008878:	d000      	beq.n	800887c <_dtoa_r+0x5f8>
 800887a:	e076      	b.n	800896a <_dtoa_r+0x6e6>
 800887c:	9a0e      	ldr	r2, [sp, #56]	; 0x38
 800887e:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8008880:	2000      	movs	r0, #0
 8008882:	4938      	ldr	r1, [pc, #224]	; (8008964 <_dtoa_r+0x6e0>)
 8008884:	f7f9 f8e8 	bl	8001a58 <__aeabi_dsub>
 8008888:	0002      	movs	r2, r0
 800888a:	000b      	movs	r3, r1
 800888c:	9806      	ldr	r0, [sp, #24]
 800888e:	9907      	ldr	r1, [sp, #28]
 8008890:	f7f7 fdd8 	bl	8000444 <__aeabi_dcmplt>
 8008894:	2800      	cmp	r0, #0
 8008896:	d100      	bne.n	800889a <_dtoa_r+0x616>
 8008898:	e721      	b.n	80086de <_dtoa_r+0x45a>
 800889a:	1e6b      	subs	r3, r5, #1
 800889c:	781a      	ldrb	r2, [r3, #0]
 800889e:	2a30      	cmp	r2, #48	; 0x30
 80088a0:	d001      	beq.n	80088a6 <_dtoa_r+0x622>
 80088a2:	0037      	movs	r7, r6
 80088a4:	e03f      	b.n	8008926 <_dtoa_r+0x6a2>
 80088a6:	001d      	movs	r5, r3
 80088a8:	e7f7      	b.n	800889a <_dtoa_r+0x616>
 80088aa:	9806      	ldr	r0, [sp, #24]
 80088ac:	9907      	ldr	r1, [sp, #28]
 80088ae:	2200      	movs	r2, #0
 80088b0:	4b26      	ldr	r3, [pc, #152]	; (800894c <_dtoa_r+0x6c8>)
 80088b2:	f7f8 fe5f 	bl	8001574 <__aeabi_dmul>
 80088b6:	9006      	str	r0, [sp, #24]
 80088b8:	9107      	str	r1, [sp, #28]
 80088ba:	e7b6      	b.n	800882a <_dtoa_r+0x5a6>
 80088bc:	9e08      	ldr	r6, [sp, #32]
 80088be:	9a04      	ldr	r2, [sp, #16]
 80088c0:	9b05      	ldr	r3, [sp, #20]
 80088c2:	9806      	ldr	r0, [sp, #24]
 80088c4:	9907      	ldr	r1, [sp, #28]
 80088c6:	f7f8 fa4b 	bl	8000d60 <__aeabi_ddiv>
 80088ca:	f7f9 fc29 	bl	8002120 <__aeabi_d2iz>
 80088ce:	0004      	movs	r4, r0
 80088d0:	f7f9 fc5c 	bl	800218c <__aeabi_i2d>
 80088d4:	9a04      	ldr	r2, [sp, #16]
 80088d6:	9b05      	ldr	r3, [sp, #20]
 80088d8:	f7f8 fe4c 	bl	8001574 <__aeabi_dmul>
 80088dc:	0002      	movs	r2, r0
 80088de:	000b      	movs	r3, r1
 80088e0:	9806      	ldr	r0, [sp, #24]
 80088e2:	9907      	ldr	r1, [sp, #28]
 80088e4:	f7f9 f8b8 	bl	8001a58 <__aeabi_dsub>
 80088e8:	0023      	movs	r3, r4
 80088ea:	3330      	adds	r3, #48	; 0x30
 80088ec:	7033      	strb	r3, [r6, #0]
 80088ee:	9a09      	ldr	r2, [sp, #36]	; 0x24
 80088f0:	9b08      	ldr	r3, [sp, #32]
 80088f2:	1c75      	adds	r5, r6, #1
 80088f4:	1aeb      	subs	r3, r5, r3
 80088f6:	429a      	cmp	r2, r3
 80088f8:	d148      	bne.n	800898c <_dtoa_r+0x708>
 80088fa:	0002      	movs	r2, r0
 80088fc:	000b      	movs	r3, r1
 80088fe:	f7f7 ff13 	bl	8000728 <__aeabi_dadd>
 8008902:	9a04      	ldr	r2, [sp, #16]
 8008904:	9b05      	ldr	r3, [sp, #20]
 8008906:	9006      	str	r0, [sp, #24]
 8008908:	9107      	str	r1, [sp, #28]
 800890a:	f7f7 fdaf 	bl	800046c <__aeabi_dcmpgt>
 800890e:	2800      	cmp	r0, #0
 8008910:	d12a      	bne.n	8008968 <_dtoa_r+0x6e4>
 8008912:	9a04      	ldr	r2, [sp, #16]
 8008914:	9b05      	ldr	r3, [sp, #20]
 8008916:	9806      	ldr	r0, [sp, #24]
 8008918:	9907      	ldr	r1, [sp, #28]
 800891a:	f7f7 fd8d 	bl	8000438 <__aeabi_dcmpeq>
 800891e:	2800      	cmp	r0, #0
 8008920:	d001      	beq.n	8008926 <_dtoa_r+0x6a2>
 8008922:	07e3      	lsls	r3, r4, #31
 8008924:	d420      	bmi.n	8008968 <_dtoa_r+0x6e4>
 8008926:	9903      	ldr	r1, [sp, #12]
 8008928:	9802      	ldr	r0, [sp, #8]
 800892a:	f000 fe35 	bl	8009598 <_Bfree>
 800892e:	2300      	movs	r3, #0
 8008930:	702b      	strb	r3, [r5, #0]
 8008932:	9b22      	ldr	r3, [sp, #136]	; 0x88
 8008934:	3701      	adds	r7, #1
 8008936:	601f      	str	r7, [r3, #0]
 8008938:	9b24      	ldr	r3, [sp, #144]	; 0x90
 800893a:	2b00      	cmp	r3, #0
 800893c:	d100      	bne.n	8008940 <_dtoa_r+0x6bc>
 800893e:	e4e6      	b.n	800830e <_dtoa_r+0x8a>
 8008940:	601d      	str	r5, [r3, #0]
 8008942:	e4e4      	b.n	800830e <_dtoa_r+0x8a>
 8008944:	0800a480 	.word	0x0800a480
 8008948:	3ff00000 	.word	0x3ff00000
 800894c:	40240000 	.word	0x40240000
 8008950:	401c0000 	.word	0x401c0000
 8008954:	fcc00000 	.word	0xfcc00000
 8008958:	40140000 	.word	0x40140000
 800895c:	7cc00000 	.word	0x7cc00000
 8008960:	0800a458 	.word	0x0800a458
 8008964:	3fe00000 	.word	0x3fe00000
 8008968:	003e      	movs	r6, r7
 800896a:	1e6b      	subs	r3, r5, #1
 800896c:	781a      	ldrb	r2, [r3, #0]
 800896e:	2a39      	cmp	r2, #57	; 0x39
 8008970:	d106      	bne.n	8008980 <_dtoa_r+0x6fc>
 8008972:	9a08      	ldr	r2, [sp, #32]
 8008974:	429a      	cmp	r2, r3
 8008976:	d107      	bne.n	8008988 <_dtoa_r+0x704>
 8008978:	2330      	movs	r3, #48	; 0x30
 800897a:	7013      	strb	r3, [r2, #0]
 800897c:	0013      	movs	r3, r2
 800897e:	3601      	adds	r6, #1
 8008980:	781a      	ldrb	r2, [r3, #0]
 8008982:	3201      	adds	r2, #1
 8008984:	701a      	strb	r2, [r3, #0]
 8008986:	e78c      	b.n	80088a2 <_dtoa_r+0x61e>
 8008988:	001d      	movs	r5, r3
 800898a:	e7ee      	b.n	800896a <_dtoa_r+0x6e6>
 800898c:	2200      	movs	r2, #0
 800898e:	4ba4      	ldr	r3, [pc, #656]	; (8008c20 <_dtoa_r+0x99c>)
 8008990:	f7f8 fdf0 	bl	8001574 <__aeabi_dmul>
 8008994:	2200      	movs	r2, #0
 8008996:	2300      	movs	r3, #0
 8008998:	9006      	str	r0, [sp, #24]
 800899a:	9107      	str	r1, [sp, #28]
 800899c:	002e      	movs	r6, r5
 800899e:	f7f7 fd4b 	bl	8000438 <__aeabi_dcmpeq>
 80089a2:	2800      	cmp	r0, #0
 80089a4:	d08b      	beq.n	80088be <_dtoa_r+0x63a>
 80089a6:	e7be      	b.n	8008926 <_dtoa_r+0x6a2>
 80089a8:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80089aa:	2a00      	cmp	r2, #0
 80089ac:	d100      	bne.n	80089b0 <_dtoa_r+0x72c>
 80089ae:	e0da      	b.n	8008b66 <_dtoa_r+0x8e2>
 80089b0:	9a20      	ldr	r2, [sp, #128]	; 0x80
 80089b2:	2a01      	cmp	r2, #1
 80089b4:	dd00      	ble.n	80089b8 <_dtoa_r+0x734>
 80089b6:	e0bd      	b.n	8008b34 <_dtoa_r+0x8b0>
 80089b8:	9a16      	ldr	r2, [sp, #88]	; 0x58
 80089ba:	2a00      	cmp	r2, #0
 80089bc:	d100      	bne.n	80089c0 <_dtoa_r+0x73c>
 80089be:	e0b5      	b.n	8008b2c <_dtoa_r+0x8a8>
 80089c0:	4a98      	ldr	r2, [pc, #608]	; (8008c24 <_dtoa_r+0x9a0>)
 80089c2:	189b      	adds	r3, r3, r2
 80089c4:	9d04      	ldr	r5, [sp, #16]
 80089c6:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 80089c8:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80089ca:	2101      	movs	r1, #1
 80089cc:	18d2      	adds	r2, r2, r3
 80089ce:	920a      	str	r2, [sp, #40]	; 0x28
 80089d0:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80089d2:	9802      	ldr	r0, [sp, #8]
 80089d4:	18d3      	adds	r3, r2, r3
 80089d6:	930b      	str	r3, [sp, #44]	; 0x2c
 80089d8:	f000 febc 	bl	8009754 <__i2b>
 80089dc:	0006      	movs	r6, r0
 80089de:	2c00      	cmp	r4, #0
 80089e0:	dd0e      	ble.n	8008a00 <_dtoa_r+0x77c>
 80089e2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 80089e4:	2b00      	cmp	r3, #0
 80089e6:	dd0b      	ble.n	8008a00 <_dtoa_r+0x77c>
 80089e8:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80089ea:	0023      	movs	r3, r4
 80089ec:	4294      	cmp	r4, r2
 80089ee:	dd00      	ble.n	80089f2 <_dtoa_r+0x76e>
 80089f0:	0013      	movs	r3, r2
 80089f2:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 80089f4:	1ae4      	subs	r4, r4, r3
 80089f6:	1ad2      	subs	r2, r2, r3
 80089f8:	920a      	str	r2, [sp, #40]	; 0x28
 80089fa:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80089fc:	1ad3      	subs	r3, r2, r3
 80089fe:	930b      	str	r3, [sp, #44]	; 0x2c
 8008a00:	9b04      	ldr	r3, [sp, #16]
 8008a02:	2b00      	cmp	r3, #0
 8008a04:	d01f      	beq.n	8008a46 <_dtoa_r+0x7c2>
 8008a06:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008a08:	2b00      	cmp	r3, #0
 8008a0a:	d100      	bne.n	8008a0e <_dtoa_r+0x78a>
 8008a0c:	e0af      	b.n	8008b6e <_dtoa_r+0x8ea>
 8008a0e:	2d00      	cmp	r5, #0
 8008a10:	d011      	beq.n	8008a36 <_dtoa_r+0x7b2>
 8008a12:	0031      	movs	r1, r6
 8008a14:	002a      	movs	r2, r5
 8008a16:	9802      	ldr	r0, [sp, #8]
 8008a18:	f000 ff34 	bl	8009884 <__pow5mult>
 8008a1c:	9a03      	ldr	r2, [sp, #12]
 8008a1e:	0001      	movs	r1, r0
 8008a20:	0006      	movs	r6, r0
 8008a22:	9802      	ldr	r0, [sp, #8]
 8008a24:	f000 fe9f 	bl	8009766 <__multiply>
 8008a28:	9903      	ldr	r1, [sp, #12]
 8008a2a:	9010      	str	r0, [sp, #64]	; 0x40
 8008a2c:	9802      	ldr	r0, [sp, #8]
 8008a2e:	f000 fdb3 	bl	8009598 <_Bfree>
 8008a32:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008a34:	9303      	str	r3, [sp, #12]
 8008a36:	9b04      	ldr	r3, [sp, #16]
 8008a38:	1b5a      	subs	r2, r3, r5
 8008a3a:	d004      	beq.n	8008a46 <_dtoa_r+0x7c2>
 8008a3c:	9903      	ldr	r1, [sp, #12]
 8008a3e:	9802      	ldr	r0, [sp, #8]
 8008a40:	f000 ff20 	bl	8009884 <__pow5mult>
 8008a44:	9003      	str	r0, [sp, #12]
 8008a46:	2101      	movs	r1, #1
 8008a48:	9802      	ldr	r0, [sp, #8]
 8008a4a:	f000 fe83 	bl	8009754 <__i2b>
 8008a4e:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008a50:	9004      	str	r0, [sp, #16]
 8008a52:	2b00      	cmp	r3, #0
 8008a54:	d100      	bne.n	8008a58 <_dtoa_r+0x7d4>
 8008a56:	e1e3      	b.n	8008e20 <_dtoa_r+0xb9c>
 8008a58:	001a      	movs	r2, r3
 8008a5a:	0001      	movs	r1, r0
 8008a5c:	9802      	ldr	r0, [sp, #8]
 8008a5e:	f000 ff11 	bl	8009884 <__pow5mult>
 8008a62:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008a64:	9004      	str	r0, [sp, #16]
 8008a66:	2b01      	cmp	r3, #1
 8008a68:	dd00      	ble.n	8008a6c <_dtoa_r+0x7e8>
 8008a6a:	e082      	b.n	8008b72 <_dtoa_r+0x8ee>
 8008a6c:	2500      	movs	r5, #0
 8008a6e:	9b06      	ldr	r3, [sp, #24]
 8008a70:	42ab      	cmp	r3, r5
 8008a72:	d10e      	bne.n	8008a92 <_dtoa_r+0x80e>
 8008a74:	9b07      	ldr	r3, [sp, #28]
 8008a76:	031b      	lsls	r3, r3, #12
 8008a78:	42ab      	cmp	r3, r5
 8008a7a:	d10a      	bne.n	8008a92 <_dtoa_r+0x80e>
 8008a7c:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8008a7e:	9a07      	ldr	r2, [sp, #28]
 8008a80:	4213      	tst	r3, r2
 8008a82:	d006      	beq.n	8008a92 <_dtoa_r+0x80e>
 8008a84:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008a86:	3501      	adds	r5, #1
 8008a88:	3301      	adds	r3, #1
 8008a8a:	930a      	str	r3, [sp, #40]	; 0x28
 8008a8c:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008a8e:	3301      	adds	r3, #1
 8008a90:	930b      	str	r3, [sp, #44]	; 0x2c
 8008a92:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008a94:	2001      	movs	r0, #1
 8008a96:	2b00      	cmp	r3, #0
 8008a98:	d16c      	bne.n	8008b74 <_dtoa_r+0x8f0>
 8008a9a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008a9c:	1818      	adds	r0, r3, r0
 8008a9e:	231f      	movs	r3, #31
 8008aa0:	4018      	ands	r0, r3
 8008aa2:	d07e      	beq.n	8008ba2 <_dtoa_r+0x91e>
 8008aa4:	3301      	adds	r3, #1
 8008aa6:	1a1b      	subs	r3, r3, r0
 8008aa8:	2b04      	cmp	r3, #4
 8008aaa:	dd70      	ble.n	8008b8e <_dtoa_r+0x90a>
 8008aac:	231c      	movs	r3, #28
 8008aae:	1a18      	subs	r0, r3, r0
 8008ab0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008ab2:	1824      	adds	r4, r4, r0
 8008ab4:	181b      	adds	r3, r3, r0
 8008ab6:	930a      	str	r3, [sp, #40]	; 0x28
 8008ab8:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008aba:	181b      	adds	r3, r3, r0
 8008abc:	930b      	str	r3, [sp, #44]	; 0x2c
 8008abe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008ac0:	2b00      	cmp	r3, #0
 8008ac2:	dd05      	ble.n	8008ad0 <_dtoa_r+0x84c>
 8008ac4:	001a      	movs	r2, r3
 8008ac6:	9903      	ldr	r1, [sp, #12]
 8008ac8:	9802      	ldr	r0, [sp, #8]
 8008aca:	f000 ff2d 	bl	8009928 <__lshift>
 8008ace:	9003      	str	r0, [sp, #12]
 8008ad0:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008ad2:	2b00      	cmp	r3, #0
 8008ad4:	dd05      	ble.n	8008ae2 <_dtoa_r+0x85e>
 8008ad6:	001a      	movs	r2, r3
 8008ad8:	9904      	ldr	r1, [sp, #16]
 8008ada:	9802      	ldr	r0, [sp, #8]
 8008adc:	f000 ff24 	bl	8009928 <__lshift>
 8008ae0:	9004      	str	r0, [sp, #16]
 8008ae2:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8008ae4:	2b00      	cmp	r3, #0
 8008ae6:	d05e      	beq.n	8008ba6 <_dtoa_r+0x922>
 8008ae8:	9904      	ldr	r1, [sp, #16]
 8008aea:	9803      	ldr	r0, [sp, #12]
 8008aec:	f000 ff6e 	bl	80099cc <__mcmp>
 8008af0:	2800      	cmp	r0, #0
 8008af2:	da58      	bge.n	8008ba6 <_dtoa_r+0x922>
 8008af4:	2300      	movs	r3, #0
 8008af6:	220a      	movs	r2, #10
 8008af8:	9903      	ldr	r1, [sp, #12]
 8008afa:	9802      	ldr	r0, [sp, #8]
 8008afc:	f000 fd65 	bl	80095ca <__multadd>
 8008b00:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008b02:	3f01      	subs	r7, #1
 8008b04:	9003      	str	r0, [sp, #12]
 8008b06:	2b00      	cmp	r3, #0
 8008b08:	d100      	bne.n	8008b0c <_dtoa_r+0x888>
 8008b0a:	e190      	b.n	8008e2e <_dtoa_r+0xbaa>
 8008b0c:	2300      	movs	r3, #0
 8008b0e:	0031      	movs	r1, r6
 8008b10:	220a      	movs	r2, #10
 8008b12:	9802      	ldr	r0, [sp, #8]
 8008b14:	f000 fd59 	bl	80095ca <__multadd>
 8008b18:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008b1a:	0006      	movs	r6, r0
 8008b1c:	2b00      	cmp	r3, #0
 8008b1e:	dd00      	ble.n	8008b22 <_dtoa_r+0x89e>
 8008b20:	e088      	b.n	8008c34 <_dtoa_r+0x9b0>
 8008b22:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008b24:	2b02      	cmp	r3, #2
 8008b26:	dc00      	bgt.n	8008b2a <_dtoa_r+0x8a6>
 8008b28:	e084      	b.n	8008c34 <_dtoa_r+0x9b0>
 8008b2a:	e044      	b.n	8008bb6 <_dtoa_r+0x932>
 8008b2c:	2336      	movs	r3, #54	; 0x36
 8008b2e:	9a18      	ldr	r2, [sp, #96]	; 0x60
 8008b30:	1a9b      	subs	r3, r3, r2
 8008b32:	e747      	b.n	80089c4 <_dtoa_r+0x740>
 8008b34:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008b36:	1e5d      	subs	r5, r3, #1
 8008b38:	9b04      	ldr	r3, [sp, #16]
 8008b3a:	42ab      	cmp	r3, r5
 8008b3c:	db08      	blt.n	8008b50 <_dtoa_r+0x8cc>
 8008b3e:	1b5d      	subs	r5, r3, r5
 8008b40:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008b42:	2b00      	cmp	r3, #0
 8008b44:	da0c      	bge.n	8008b60 <_dtoa_r+0x8dc>
 8008b46:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008b48:	9a09      	ldr	r2, [sp, #36]	; 0x24
 8008b4a:	1a9c      	subs	r4, r3, r2
 8008b4c:	2300      	movs	r3, #0
 8008b4e:	e73b      	b.n	80089c8 <_dtoa_r+0x744>
 8008b50:	9b04      	ldr	r3, [sp, #16]
 8008b52:	9504      	str	r5, [sp, #16]
 8008b54:	1aea      	subs	r2, r5, r3
 8008b56:	9b11      	ldr	r3, [sp, #68]	; 0x44
 8008b58:	2500      	movs	r5, #0
 8008b5a:	189b      	adds	r3, r3, r2
 8008b5c:	9311      	str	r3, [sp, #68]	; 0x44
 8008b5e:	e7ef      	b.n	8008b40 <_dtoa_r+0x8bc>
 8008b60:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008b62:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008b64:	e730      	b.n	80089c8 <_dtoa_r+0x744>
 8008b66:	9d04      	ldr	r5, [sp, #16]
 8008b68:	9c0a      	ldr	r4, [sp, #40]	; 0x28
 8008b6a:	9e0d      	ldr	r6, [sp, #52]	; 0x34
 8008b6c:	e737      	b.n	80089de <_dtoa_r+0x75a>
 8008b6e:	9a04      	ldr	r2, [sp, #16]
 8008b70:	e764      	b.n	8008a3c <_dtoa_r+0x7b8>
 8008b72:	2500      	movs	r5, #0
 8008b74:	9b04      	ldr	r3, [sp, #16]
 8008b76:	9a04      	ldr	r2, [sp, #16]
 8008b78:	691b      	ldr	r3, [r3, #16]
 8008b7a:	9310      	str	r3, [sp, #64]	; 0x40
 8008b7c:	3303      	adds	r3, #3
 8008b7e:	009b      	lsls	r3, r3, #2
 8008b80:	18d3      	adds	r3, r2, r3
 8008b82:	6858      	ldr	r0, [r3, #4]
 8008b84:	f000 fd9d 	bl	80096c2 <__hi0bits>
 8008b88:	2320      	movs	r3, #32
 8008b8a:	1a18      	subs	r0, r3, r0
 8008b8c:	e785      	b.n	8008a9a <_dtoa_r+0x816>
 8008b8e:	2b04      	cmp	r3, #4
 8008b90:	d095      	beq.n	8008abe <_dtoa_r+0x83a>
 8008b92:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008b94:	331c      	adds	r3, #28
 8008b96:	18d2      	adds	r2, r2, r3
 8008b98:	920a      	str	r2, [sp, #40]	; 0x28
 8008b9a:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 8008b9c:	18e4      	adds	r4, r4, r3
 8008b9e:	18d3      	adds	r3, r2, r3
 8008ba0:	e78c      	b.n	8008abc <_dtoa_r+0x838>
 8008ba2:	0003      	movs	r3, r0
 8008ba4:	e7f5      	b.n	8008b92 <_dtoa_r+0x90e>
 8008ba6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008ba8:	2b00      	cmp	r3, #0
 8008baa:	dc3d      	bgt.n	8008c28 <_dtoa_r+0x9a4>
 8008bac:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008bae:	2b02      	cmp	r3, #2
 8008bb0:	dd3a      	ble.n	8008c28 <_dtoa_r+0x9a4>
 8008bb2:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008bb4:	930c      	str	r3, [sp, #48]	; 0x30
 8008bb6:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008bb8:	2b00      	cmp	r3, #0
 8008bba:	d10c      	bne.n	8008bd6 <_dtoa_r+0x952>
 8008bbc:	9904      	ldr	r1, [sp, #16]
 8008bbe:	2205      	movs	r2, #5
 8008bc0:	9802      	ldr	r0, [sp, #8]
 8008bc2:	f000 fd02 	bl	80095ca <__multadd>
 8008bc6:	9004      	str	r0, [sp, #16]
 8008bc8:	0001      	movs	r1, r0
 8008bca:	9803      	ldr	r0, [sp, #12]
 8008bcc:	f000 fefe 	bl	80099cc <__mcmp>
 8008bd0:	2800      	cmp	r0, #0
 8008bd2:	dd00      	ble.n	8008bd6 <_dtoa_r+0x952>
 8008bd4:	e5af      	b.n	8008736 <_dtoa_r+0x4b2>
 8008bd6:	9b21      	ldr	r3, [sp, #132]	; 0x84
 8008bd8:	9d08      	ldr	r5, [sp, #32]
 8008bda:	43df      	mvns	r7, r3
 8008bdc:	2300      	movs	r3, #0
 8008bde:	9309      	str	r3, [sp, #36]	; 0x24
 8008be0:	9904      	ldr	r1, [sp, #16]
 8008be2:	9802      	ldr	r0, [sp, #8]
 8008be4:	f000 fcd8 	bl	8009598 <_Bfree>
 8008be8:	2e00      	cmp	r6, #0
 8008bea:	d100      	bne.n	8008bee <_dtoa_r+0x96a>
 8008bec:	e69b      	b.n	8008926 <_dtoa_r+0x6a2>
 8008bee:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008bf0:	2b00      	cmp	r3, #0
 8008bf2:	d005      	beq.n	8008c00 <_dtoa_r+0x97c>
 8008bf4:	42b3      	cmp	r3, r6
 8008bf6:	d003      	beq.n	8008c00 <_dtoa_r+0x97c>
 8008bf8:	0019      	movs	r1, r3
 8008bfa:	9802      	ldr	r0, [sp, #8]
 8008bfc:	f000 fccc 	bl	8009598 <_Bfree>
 8008c00:	0031      	movs	r1, r6
 8008c02:	9802      	ldr	r0, [sp, #8]
 8008c04:	f000 fcc8 	bl	8009598 <_Bfree>
 8008c08:	e68d      	b.n	8008926 <_dtoa_r+0x6a2>
 8008c0a:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008c0c:	9304      	str	r3, [sp, #16]
 8008c0e:	001e      	movs	r6, r3
 8008c10:	e7e1      	b.n	8008bd6 <_dtoa_r+0x952>
 8008c12:	2300      	movs	r3, #0
 8008c14:	e7fa      	b.n	8008c0c <_dtoa_r+0x988>
 8008c16:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008c18:	0037      	movs	r7, r6
 8008c1a:	9304      	str	r3, [sp, #16]
 8008c1c:	001e      	movs	r6, r3
 8008c1e:	e58a      	b.n	8008736 <_dtoa_r+0x4b2>
 8008c20:	40240000 	.word	0x40240000
 8008c24:	00000433 	.word	0x00000433
 8008c28:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8008c2a:	2b00      	cmp	r3, #0
 8008c2c:	d100      	bne.n	8008c30 <_dtoa_r+0x9ac>
 8008c2e:	e0b2      	b.n	8008d96 <_dtoa_r+0xb12>
 8008c30:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008c32:	930c      	str	r3, [sp, #48]	; 0x30
 8008c34:	2c00      	cmp	r4, #0
 8008c36:	dd05      	ble.n	8008c44 <_dtoa_r+0x9c0>
 8008c38:	0031      	movs	r1, r6
 8008c3a:	0022      	movs	r2, r4
 8008c3c:	9802      	ldr	r0, [sp, #8]
 8008c3e:	f000 fe73 	bl	8009928 <__lshift>
 8008c42:	0006      	movs	r6, r0
 8008c44:	0030      	movs	r0, r6
 8008c46:	2d00      	cmp	r5, #0
 8008c48:	d011      	beq.n	8008c6e <_dtoa_r+0x9ea>
 8008c4a:	6871      	ldr	r1, [r6, #4]
 8008c4c:	9802      	ldr	r0, [sp, #8]
 8008c4e:	f000 fc6b 	bl	8009528 <_Balloc>
 8008c52:	0031      	movs	r1, r6
 8008c54:	0004      	movs	r4, r0
 8008c56:	6933      	ldr	r3, [r6, #16]
 8008c58:	310c      	adds	r1, #12
 8008c5a:	1c9a      	adds	r2, r3, #2
 8008c5c:	0092      	lsls	r2, r2, #2
 8008c5e:	300c      	adds	r0, #12
 8008c60:	f000 fc59 	bl	8009516 <memcpy>
 8008c64:	2201      	movs	r2, #1
 8008c66:	0021      	movs	r1, r4
 8008c68:	9802      	ldr	r0, [sp, #8]
 8008c6a:	f000 fe5d 	bl	8009928 <__lshift>
 8008c6e:	9609      	str	r6, [sp, #36]	; 0x24
 8008c70:	0006      	movs	r6, r0
 8008c72:	9b08      	ldr	r3, [sp, #32]
 8008c74:	930a      	str	r3, [sp, #40]	; 0x28
 8008c76:	9904      	ldr	r1, [sp, #16]
 8008c78:	9803      	ldr	r0, [sp, #12]
 8008c7a:	f7ff fa7d 	bl	8008178 <quorem>
 8008c7e:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008c80:	900d      	str	r0, [sp, #52]	; 0x34
 8008c82:	0004      	movs	r4, r0
 8008c84:	9803      	ldr	r0, [sp, #12]
 8008c86:	f000 fea1 	bl	80099cc <__mcmp>
 8008c8a:	0032      	movs	r2, r6
 8008c8c:	9010      	str	r0, [sp, #64]	; 0x40
 8008c8e:	9904      	ldr	r1, [sp, #16]
 8008c90:	9802      	ldr	r0, [sp, #8]
 8008c92:	f000 feb5 	bl	8009a00 <__mdiff>
 8008c96:	2301      	movs	r3, #1
 8008c98:	930b      	str	r3, [sp, #44]	; 0x2c
 8008c9a:	68c3      	ldr	r3, [r0, #12]
 8008c9c:	3430      	adds	r4, #48	; 0x30
 8008c9e:	0005      	movs	r5, r0
 8008ca0:	2b00      	cmp	r3, #0
 8008ca2:	d104      	bne.n	8008cae <_dtoa_r+0xa2a>
 8008ca4:	0001      	movs	r1, r0
 8008ca6:	9803      	ldr	r0, [sp, #12]
 8008ca8:	f000 fe90 	bl	80099cc <__mcmp>
 8008cac:	900b      	str	r0, [sp, #44]	; 0x2c
 8008cae:	0029      	movs	r1, r5
 8008cb0:	9802      	ldr	r0, [sp, #8]
 8008cb2:	f000 fc71 	bl	8009598 <_Bfree>
 8008cb6:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008cb8:	9a20      	ldr	r2, [sp, #128]	; 0x80
 8008cba:	4313      	orrs	r3, r2
 8008cbc:	d10e      	bne.n	8008cdc <_dtoa_r+0xa58>
 8008cbe:	9a06      	ldr	r2, [sp, #24]
 8008cc0:	3301      	adds	r3, #1
 8008cc2:	4213      	tst	r3, r2
 8008cc4:	d10a      	bne.n	8008cdc <_dtoa_r+0xa58>
 8008cc6:	2c39      	cmp	r4, #57	; 0x39
 8008cc8:	d026      	beq.n	8008d18 <_dtoa_r+0xa94>
 8008cca:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008ccc:	2b00      	cmp	r3, #0
 8008cce:	dd01      	ble.n	8008cd4 <_dtoa_r+0xa50>
 8008cd0:	9c0d      	ldr	r4, [sp, #52]	; 0x34
 8008cd2:	3431      	adds	r4, #49	; 0x31
 8008cd4:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008cd6:	1c5d      	adds	r5, r3, #1
 8008cd8:	701c      	strb	r4, [r3, #0]
 8008cda:	e781      	b.n	8008be0 <_dtoa_r+0x95c>
 8008cdc:	9b10      	ldr	r3, [sp, #64]	; 0x40
 8008cde:	2b00      	cmp	r3, #0
 8008ce0:	db07      	blt.n	8008cf2 <_dtoa_r+0xa6e>
 8008ce2:	001d      	movs	r5, r3
 8008ce4:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008ce6:	431d      	orrs	r5, r3
 8008ce8:	d122      	bne.n	8008d30 <_dtoa_r+0xaac>
 8008cea:	2301      	movs	r3, #1
 8008cec:	9a06      	ldr	r2, [sp, #24]
 8008cee:	4213      	tst	r3, r2
 8008cf0:	d11e      	bne.n	8008d30 <_dtoa_r+0xaac>
 8008cf2:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008cf4:	2b00      	cmp	r3, #0
 8008cf6:	dded      	ble.n	8008cd4 <_dtoa_r+0xa50>
 8008cf8:	9903      	ldr	r1, [sp, #12]
 8008cfa:	2201      	movs	r2, #1
 8008cfc:	9802      	ldr	r0, [sp, #8]
 8008cfe:	f000 fe13 	bl	8009928 <__lshift>
 8008d02:	9904      	ldr	r1, [sp, #16]
 8008d04:	9003      	str	r0, [sp, #12]
 8008d06:	f000 fe61 	bl	80099cc <__mcmp>
 8008d0a:	2800      	cmp	r0, #0
 8008d0c:	dc02      	bgt.n	8008d14 <_dtoa_r+0xa90>
 8008d0e:	d1e1      	bne.n	8008cd4 <_dtoa_r+0xa50>
 8008d10:	07e3      	lsls	r3, r4, #31
 8008d12:	d5df      	bpl.n	8008cd4 <_dtoa_r+0xa50>
 8008d14:	2c39      	cmp	r4, #57	; 0x39
 8008d16:	d1db      	bne.n	8008cd0 <_dtoa_r+0xa4c>
 8008d18:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008d1a:	9a0a      	ldr	r2, [sp, #40]	; 0x28
 8008d1c:	1c5d      	adds	r5, r3, #1
 8008d1e:	2339      	movs	r3, #57	; 0x39
 8008d20:	7013      	strb	r3, [r2, #0]
 8008d22:	1e6b      	subs	r3, r5, #1
 8008d24:	781a      	ldrb	r2, [r3, #0]
 8008d26:	2a39      	cmp	r2, #57	; 0x39
 8008d28:	d067      	beq.n	8008dfa <_dtoa_r+0xb76>
 8008d2a:	3201      	adds	r2, #1
 8008d2c:	701a      	strb	r2, [r3, #0]
 8008d2e:	e757      	b.n	8008be0 <_dtoa_r+0x95c>
 8008d30:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008d32:	1c5d      	adds	r5, r3, #1
 8008d34:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8008d36:	2b00      	cmp	r3, #0
 8008d38:	dd04      	ble.n	8008d44 <_dtoa_r+0xac0>
 8008d3a:	2c39      	cmp	r4, #57	; 0x39
 8008d3c:	d0ec      	beq.n	8008d18 <_dtoa_r+0xa94>
 8008d3e:	3401      	adds	r4, #1
 8008d40:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008d42:	e7c9      	b.n	8008cd8 <_dtoa_r+0xa54>
 8008d44:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8008d46:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008d48:	701c      	strb	r4, [r3, #0]
 8008d4a:	9b08      	ldr	r3, [sp, #32]
 8008d4c:	1aeb      	subs	r3, r5, r3
 8008d4e:	4293      	cmp	r3, r2
 8008d50:	d03e      	beq.n	8008dd0 <_dtoa_r+0xb4c>
 8008d52:	2300      	movs	r3, #0
 8008d54:	220a      	movs	r2, #10
 8008d56:	9903      	ldr	r1, [sp, #12]
 8008d58:	9802      	ldr	r0, [sp, #8]
 8008d5a:	f000 fc36 	bl	80095ca <__multadd>
 8008d5e:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008d60:	9003      	str	r0, [sp, #12]
 8008d62:	42b3      	cmp	r3, r6
 8008d64:	d109      	bne.n	8008d7a <_dtoa_r+0xaf6>
 8008d66:	2300      	movs	r3, #0
 8008d68:	220a      	movs	r2, #10
 8008d6a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008d6c:	9802      	ldr	r0, [sp, #8]
 8008d6e:	f000 fc2c 	bl	80095ca <__multadd>
 8008d72:	9009      	str	r0, [sp, #36]	; 0x24
 8008d74:	0006      	movs	r6, r0
 8008d76:	950a      	str	r5, [sp, #40]	; 0x28
 8008d78:	e77d      	b.n	8008c76 <_dtoa_r+0x9f2>
 8008d7a:	9909      	ldr	r1, [sp, #36]	; 0x24
 8008d7c:	2300      	movs	r3, #0
 8008d7e:	220a      	movs	r2, #10
 8008d80:	9802      	ldr	r0, [sp, #8]
 8008d82:	f000 fc22 	bl	80095ca <__multadd>
 8008d86:	2300      	movs	r3, #0
 8008d88:	9009      	str	r0, [sp, #36]	; 0x24
 8008d8a:	220a      	movs	r2, #10
 8008d8c:	0031      	movs	r1, r6
 8008d8e:	9802      	ldr	r0, [sp, #8]
 8008d90:	f000 fc1b 	bl	80095ca <__multadd>
 8008d94:	e7ee      	b.n	8008d74 <_dtoa_r+0xaf0>
 8008d96:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008d98:	930c      	str	r3, [sp, #48]	; 0x30
 8008d9a:	9b08      	ldr	r3, [sp, #32]
 8008d9c:	9306      	str	r3, [sp, #24]
 8008d9e:	9904      	ldr	r1, [sp, #16]
 8008da0:	9803      	ldr	r0, [sp, #12]
 8008da2:	f7ff f9e9 	bl	8008178 <quorem>
 8008da6:	9b06      	ldr	r3, [sp, #24]
 8008da8:	3030      	adds	r0, #48	; 0x30
 8008daa:	1c5d      	adds	r5, r3, #1
 8008dac:	7018      	strb	r0, [r3, #0]
 8008dae:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8008db0:	9b08      	ldr	r3, [sp, #32]
 8008db2:	0004      	movs	r4, r0
 8008db4:	1aeb      	subs	r3, r5, r3
 8008db6:	429a      	cmp	r2, r3
 8008db8:	dd08      	ble.n	8008dcc <_dtoa_r+0xb48>
 8008dba:	2300      	movs	r3, #0
 8008dbc:	220a      	movs	r2, #10
 8008dbe:	9903      	ldr	r1, [sp, #12]
 8008dc0:	9802      	ldr	r0, [sp, #8]
 8008dc2:	f000 fc02 	bl	80095ca <__multadd>
 8008dc6:	9506      	str	r5, [sp, #24]
 8008dc8:	9003      	str	r0, [sp, #12]
 8008dca:	e7e8      	b.n	8008d9e <_dtoa_r+0xb1a>
 8008dcc:	2300      	movs	r3, #0
 8008dce:	9309      	str	r3, [sp, #36]	; 0x24
 8008dd0:	9903      	ldr	r1, [sp, #12]
 8008dd2:	2201      	movs	r2, #1
 8008dd4:	9802      	ldr	r0, [sp, #8]
 8008dd6:	f000 fda7 	bl	8009928 <__lshift>
 8008dda:	9904      	ldr	r1, [sp, #16]
 8008ddc:	9003      	str	r0, [sp, #12]
 8008dde:	f000 fdf5 	bl	80099cc <__mcmp>
 8008de2:	2800      	cmp	r0, #0
 8008de4:	dc9d      	bgt.n	8008d22 <_dtoa_r+0xa9e>
 8008de6:	d101      	bne.n	8008dec <_dtoa_r+0xb68>
 8008de8:	07e3      	lsls	r3, r4, #31
 8008dea:	d49a      	bmi.n	8008d22 <_dtoa_r+0xa9e>
 8008dec:	1e6b      	subs	r3, r5, #1
 8008dee:	781a      	ldrb	r2, [r3, #0]
 8008df0:	2a30      	cmp	r2, #48	; 0x30
 8008df2:	d000      	beq.n	8008df6 <_dtoa_r+0xb72>
 8008df4:	e6f4      	b.n	8008be0 <_dtoa_r+0x95c>
 8008df6:	001d      	movs	r5, r3
 8008df8:	e7f8      	b.n	8008dec <_dtoa_r+0xb68>
 8008dfa:	9a08      	ldr	r2, [sp, #32]
 8008dfc:	429a      	cmp	r2, r3
 8008dfe:	d103      	bne.n	8008e08 <_dtoa_r+0xb84>
 8008e00:	2331      	movs	r3, #49	; 0x31
 8008e02:	3701      	adds	r7, #1
 8008e04:	7013      	strb	r3, [r2, #0]
 8008e06:	e6eb      	b.n	8008be0 <_dtoa_r+0x95c>
 8008e08:	001d      	movs	r5, r3
 8008e0a:	e78a      	b.n	8008d22 <_dtoa_r+0xa9e>
 8008e0c:	4b0b      	ldr	r3, [pc, #44]	; (8008e3c <_dtoa_r+0xbb8>)
 8008e0e:	9a24      	ldr	r2, [sp, #144]	; 0x90
 8008e10:	9308      	str	r3, [sp, #32]
 8008e12:	4b0b      	ldr	r3, [pc, #44]	; (8008e40 <_dtoa_r+0xbbc>)
 8008e14:	2a00      	cmp	r2, #0
 8008e16:	d001      	beq.n	8008e1c <_dtoa_r+0xb98>
 8008e18:	f7ff fa77 	bl	800830a <_dtoa_r+0x86>
 8008e1c:	f7ff fa77 	bl	800830e <_dtoa_r+0x8a>
 8008e20:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008e22:	2b01      	cmp	r3, #1
 8008e24:	dc00      	bgt.n	8008e28 <_dtoa_r+0xba4>
 8008e26:	e621      	b.n	8008a6c <_dtoa_r+0x7e8>
 8008e28:	9d11      	ldr	r5, [sp, #68]	; 0x44
 8008e2a:	2001      	movs	r0, #1
 8008e2c:	e635      	b.n	8008a9a <_dtoa_r+0x816>
 8008e2e:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8008e30:	2b00      	cmp	r3, #0
 8008e32:	dcb2      	bgt.n	8008d9a <_dtoa_r+0xb16>
 8008e34:	9b20      	ldr	r3, [sp, #128]	; 0x80
 8008e36:	2b02      	cmp	r3, #2
 8008e38:	ddaf      	ble.n	8008d9a <_dtoa_r+0xb16>
 8008e3a:	e6bc      	b.n	8008bb6 <_dtoa_r+0x932>
 8008e3c:	0800a440 	.word	0x0800a440
 8008e40:	0800a448 	.word	0x0800a448

08008e44 <rshift>:
 8008e44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008e46:	0004      	movs	r4, r0
 8008e48:	6905      	ldr	r5, [r0, #16]
 8008e4a:	3414      	adds	r4, #20
 8008e4c:	114b      	asrs	r3, r1, #5
 8008e4e:	0026      	movs	r6, r4
 8008e50:	429d      	cmp	r5, r3
 8008e52:	dd14      	ble.n	8008e7e <rshift+0x3a>
 8008e54:	221f      	movs	r2, #31
 8008e56:	00ad      	lsls	r5, r5, #2
 8008e58:	009b      	lsls	r3, r3, #2
 8008e5a:	4011      	ands	r1, r2
 8008e5c:	1965      	adds	r5, r4, r5
 8008e5e:	18e3      	adds	r3, r4, r3
 8008e60:	0022      	movs	r2, r4
 8008e62:	2900      	cmp	r1, #0
 8008e64:	d01e      	beq.n	8008ea4 <rshift+0x60>
 8008e66:	cb04      	ldmia	r3!, {r2}
 8008e68:	2720      	movs	r7, #32
 8008e6a:	40ca      	lsrs	r2, r1
 8008e6c:	46a4      	mov	ip, r4
 8008e6e:	1a7f      	subs	r7, r7, r1
 8008e70:	4666      	mov	r6, ip
 8008e72:	429d      	cmp	r5, r3
 8008e74:	d80b      	bhi.n	8008e8e <rshift+0x4a>
 8008e76:	6032      	str	r2, [r6, #0]
 8008e78:	2a00      	cmp	r2, #0
 8008e7a:	d000      	beq.n	8008e7e <rshift+0x3a>
 8008e7c:	3604      	adds	r6, #4
 8008e7e:	1b33      	subs	r3, r6, r4
 8008e80:	109b      	asrs	r3, r3, #2
 8008e82:	6103      	str	r3, [r0, #16]
 8008e84:	42a6      	cmp	r6, r4
 8008e86:	d101      	bne.n	8008e8c <rshift+0x48>
 8008e88:	2300      	movs	r3, #0
 8008e8a:	6143      	str	r3, [r0, #20]
 8008e8c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8008e8e:	681e      	ldr	r6, [r3, #0]
 8008e90:	40be      	lsls	r6, r7
 8008e92:	4332      	orrs	r2, r6
 8008e94:	4666      	mov	r6, ip
 8008e96:	c604      	stmia	r6!, {r2}
 8008e98:	cb04      	ldmia	r3!, {r2}
 8008e9a:	46b4      	mov	ip, r6
 8008e9c:	40ca      	lsrs	r2, r1
 8008e9e:	e7e7      	b.n	8008e70 <rshift+0x2c>
 8008ea0:	cb02      	ldmia	r3!, {r1}
 8008ea2:	c202      	stmia	r2!, {r1}
 8008ea4:	0016      	movs	r6, r2
 8008ea6:	429d      	cmp	r5, r3
 8008ea8:	d8fa      	bhi.n	8008ea0 <rshift+0x5c>
 8008eaa:	e7e8      	b.n	8008e7e <rshift+0x3a>

08008eac <__hexdig_fun>:
 8008eac:	0003      	movs	r3, r0
 8008eae:	3b30      	subs	r3, #48	; 0x30
 8008eb0:	2b09      	cmp	r3, #9
 8008eb2:	d803      	bhi.n	8008ebc <__hexdig_fun+0x10>
 8008eb4:	3820      	subs	r0, #32
 8008eb6:	b2c3      	uxtb	r3, r0
 8008eb8:	0018      	movs	r0, r3
 8008eba:	4770      	bx	lr
 8008ebc:	0003      	movs	r3, r0
 8008ebe:	3b61      	subs	r3, #97	; 0x61
 8008ec0:	2b05      	cmp	r3, #5
 8008ec2:	d801      	bhi.n	8008ec8 <__hexdig_fun+0x1c>
 8008ec4:	3847      	subs	r0, #71	; 0x47
 8008ec6:	e7f6      	b.n	8008eb6 <__hexdig_fun+0xa>
 8008ec8:	0002      	movs	r2, r0
 8008eca:	3a41      	subs	r2, #65	; 0x41
 8008ecc:	2300      	movs	r3, #0
 8008ece:	2a05      	cmp	r2, #5
 8008ed0:	d8f2      	bhi.n	8008eb8 <__hexdig_fun+0xc>
 8008ed2:	3827      	subs	r0, #39	; 0x27
 8008ed4:	e7ef      	b.n	8008eb6 <__hexdig_fun+0xa>

08008ed6 <__gethex>:
 8008ed6:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008ed8:	b08d      	sub	sp, #52	; 0x34
 8008eda:	9005      	str	r0, [sp, #20]
 8008edc:	9814      	ldr	r0, [sp, #80]	; 0x50
 8008ede:	9109      	str	r1, [sp, #36]	; 0x24
 8008ee0:	9202      	str	r2, [sp, #8]
 8008ee2:	930a      	str	r3, [sp, #40]	; 0x28
 8008ee4:	f000 fae2 	bl	80094ac <__localeconv_l>
 8008ee8:	6803      	ldr	r3, [r0, #0]
 8008eea:	0018      	movs	r0, r3
 8008eec:	9307      	str	r3, [sp, #28]
 8008eee:	f7f7 f90b 	bl	8000108 <strlen>
 8008ef2:	2202      	movs	r2, #2
 8008ef4:	9b07      	ldr	r3, [sp, #28]
 8008ef6:	4252      	negs	r2, r2
 8008ef8:	181b      	adds	r3, r3, r0
 8008efa:	3b01      	subs	r3, #1
 8008efc:	781b      	ldrb	r3, [r3, #0]
 8008efe:	9004      	str	r0, [sp, #16]
 8008f00:	930b      	str	r3, [sp, #44]	; 0x2c
 8008f02:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008f04:	6819      	ldr	r1, [r3, #0]
 8008f06:	1c8b      	adds	r3, r1, #2
 8008f08:	1a52      	subs	r2, r2, r1
 8008f0a:	18d1      	adds	r1, r2, r3
 8008f0c:	9301      	str	r3, [sp, #4]
 8008f0e:	9108      	str	r1, [sp, #32]
 8008f10:	9901      	ldr	r1, [sp, #4]
 8008f12:	3301      	adds	r3, #1
 8008f14:	7808      	ldrb	r0, [r1, #0]
 8008f16:	2830      	cmp	r0, #48	; 0x30
 8008f18:	d0f7      	beq.n	8008f0a <__gethex+0x34>
 8008f1a:	f7ff ffc7 	bl	8008eac <__hexdig_fun>
 8008f1e:	1e07      	subs	r7, r0, #0
 8008f20:	d000      	beq.n	8008f24 <__gethex+0x4e>
 8008f22:	e06f      	b.n	8009004 <__gethex+0x12e>
 8008f24:	9a04      	ldr	r2, [sp, #16]
 8008f26:	9907      	ldr	r1, [sp, #28]
 8008f28:	9801      	ldr	r0, [sp, #4]
 8008f2a:	f001 f91b 	bl	800a164 <strncmp>
 8008f2e:	2800      	cmp	r0, #0
 8008f30:	d000      	beq.n	8008f34 <__gethex+0x5e>
 8008f32:	e06d      	b.n	8009010 <__gethex+0x13a>
 8008f34:	9b01      	ldr	r3, [sp, #4]
 8008f36:	9a04      	ldr	r2, [sp, #16]
 8008f38:	189c      	adds	r4, r3, r2
 8008f3a:	7820      	ldrb	r0, [r4, #0]
 8008f3c:	f7ff ffb6 	bl	8008eac <__hexdig_fun>
 8008f40:	2800      	cmp	r0, #0
 8008f42:	d069      	beq.n	8009018 <__gethex+0x142>
 8008f44:	9401      	str	r4, [sp, #4]
 8008f46:	9b01      	ldr	r3, [sp, #4]
 8008f48:	7818      	ldrb	r0, [r3, #0]
 8008f4a:	2830      	cmp	r0, #48	; 0x30
 8008f4c:	d009      	beq.n	8008f62 <__gethex+0x8c>
 8008f4e:	f7ff ffad 	bl	8008eac <__hexdig_fun>
 8008f52:	4243      	negs	r3, r0
 8008f54:	4143      	adcs	r3, r0
 8008f56:	9303      	str	r3, [sp, #12]
 8008f58:	2301      	movs	r3, #1
 8008f5a:	0026      	movs	r6, r4
 8008f5c:	9308      	str	r3, [sp, #32]
 8008f5e:	9c01      	ldr	r4, [sp, #4]
 8008f60:	e004      	b.n	8008f6c <__gethex+0x96>
 8008f62:	9b01      	ldr	r3, [sp, #4]
 8008f64:	3301      	adds	r3, #1
 8008f66:	9301      	str	r3, [sp, #4]
 8008f68:	e7ed      	b.n	8008f46 <__gethex+0x70>
 8008f6a:	3401      	adds	r4, #1
 8008f6c:	7820      	ldrb	r0, [r4, #0]
 8008f6e:	f7ff ff9d 	bl	8008eac <__hexdig_fun>
 8008f72:	2800      	cmp	r0, #0
 8008f74:	d1f9      	bne.n	8008f6a <__gethex+0x94>
 8008f76:	9a04      	ldr	r2, [sp, #16]
 8008f78:	9907      	ldr	r1, [sp, #28]
 8008f7a:	0020      	movs	r0, r4
 8008f7c:	f001 f8f2 	bl	800a164 <strncmp>
 8008f80:	2800      	cmp	r0, #0
 8008f82:	d109      	bne.n	8008f98 <__gethex+0xc2>
 8008f84:	2e00      	cmp	r6, #0
 8008f86:	d10a      	bne.n	8008f9e <__gethex+0xc8>
 8008f88:	9b04      	ldr	r3, [sp, #16]
 8008f8a:	18e4      	adds	r4, r4, r3
 8008f8c:	0026      	movs	r6, r4
 8008f8e:	7820      	ldrb	r0, [r4, #0]
 8008f90:	f7ff ff8c 	bl	8008eac <__hexdig_fun>
 8008f94:	2800      	cmp	r0, #0
 8008f96:	d139      	bne.n	800900c <__gethex+0x136>
 8008f98:	2700      	movs	r7, #0
 8008f9a:	42be      	cmp	r6, r7
 8008f9c:	d001      	beq.n	8008fa2 <__gethex+0xcc>
 8008f9e:	1b37      	subs	r7, r6, r4
 8008fa0:	00bf      	lsls	r7, r7, #2
 8008fa2:	7823      	ldrb	r3, [r4, #0]
 8008fa4:	2b50      	cmp	r3, #80	; 0x50
 8008fa6:	d001      	beq.n	8008fac <__gethex+0xd6>
 8008fa8:	2b70      	cmp	r3, #112	; 0x70
 8008faa:	d142      	bne.n	8009032 <__gethex+0x15c>
 8008fac:	7863      	ldrb	r3, [r4, #1]
 8008fae:	2b2b      	cmp	r3, #43	; 0x2b
 8008fb0:	d034      	beq.n	800901c <__gethex+0x146>
 8008fb2:	2b2d      	cmp	r3, #45	; 0x2d
 8008fb4:	d036      	beq.n	8009024 <__gethex+0x14e>
 8008fb6:	2300      	movs	r3, #0
 8008fb8:	1c66      	adds	r6, r4, #1
 8008fba:	9306      	str	r3, [sp, #24]
 8008fbc:	7830      	ldrb	r0, [r6, #0]
 8008fbe:	f7ff ff75 	bl	8008eac <__hexdig_fun>
 8008fc2:	1e43      	subs	r3, r0, #1
 8008fc4:	b2db      	uxtb	r3, r3
 8008fc6:	2b18      	cmp	r3, #24
 8008fc8:	d833      	bhi.n	8009032 <__gethex+0x15c>
 8008fca:	3810      	subs	r0, #16
 8008fcc:	0005      	movs	r5, r0
 8008fce:	3601      	adds	r6, #1
 8008fd0:	7830      	ldrb	r0, [r6, #0]
 8008fd2:	f7ff ff6b 	bl	8008eac <__hexdig_fun>
 8008fd6:	1e43      	subs	r3, r0, #1
 8008fd8:	b2db      	uxtb	r3, r3
 8008fda:	2b18      	cmp	r3, #24
 8008fdc:	d924      	bls.n	8009028 <__gethex+0x152>
 8008fde:	9b06      	ldr	r3, [sp, #24]
 8008fe0:	2b00      	cmp	r3, #0
 8008fe2:	d000      	beq.n	8008fe6 <__gethex+0x110>
 8008fe4:	426d      	negs	r5, r5
 8008fe6:	197f      	adds	r7, r7, r5
 8008fe8:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8008fea:	601e      	str	r6, [r3, #0]
 8008fec:	9b03      	ldr	r3, [sp, #12]
 8008fee:	2b00      	cmp	r3, #0
 8008ff0:	d021      	beq.n	8009036 <__gethex+0x160>
 8008ff2:	9b08      	ldr	r3, [sp, #32]
 8008ff4:	2606      	movs	r6, #6
 8008ff6:	425a      	negs	r2, r3
 8008ff8:	4153      	adcs	r3, r2
 8008ffa:	425b      	negs	r3, r3
 8008ffc:	401e      	ands	r6, r3
 8008ffe:	0030      	movs	r0, r6
 8009000:	b00d      	add	sp, #52	; 0x34
 8009002:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009004:	2300      	movs	r3, #0
 8009006:	9303      	str	r3, [sp, #12]
 8009008:	001e      	movs	r6, r3
 800900a:	e7a8      	b.n	8008f5e <__gethex+0x88>
 800900c:	3401      	adds	r4, #1
 800900e:	e7be      	b.n	8008f8e <__gethex+0xb8>
 8009010:	9c01      	ldr	r4, [sp, #4]
 8009012:	2301      	movs	r3, #1
 8009014:	9303      	str	r3, [sp, #12]
 8009016:	e7c4      	b.n	8008fa2 <__gethex+0xcc>
 8009018:	0007      	movs	r7, r0
 800901a:	e7fa      	b.n	8009012 <__gethex+0x13c>
 800901c:	2300      	movs	r3, #0
 800901e:	9306      	str	r3, [sp, #24]
 8009020:	1ca6      	adds	r6, r4, #2
 8009022:	e7cb      	b.n	8008fbc <__gethex+0xe6>
 8009024:	2301      	movs	r3, #1
 8009026:	e7fa      	b.n	800901e <__gethex+0x148>
 8009028:	230a      	movs	r3, #10
 800902a:	435d      	muls	r5, r3
 800902c:	182d      	adds	r5, r5, r0
 800902e:	3d10      	subs	r5, #16
 8009030:	e7cd      	b.n	8008fce <__gethex+0xf8>
 8009032:	0026      	movs	r6, r4
 8009034:	e7d8      	b.n	8008fe8 <__gethex+0x112>
 8009036:	9b01      	ldr	r3, [sp, #4]
 8009038:	9903      	ldr	r1, [sp, #12]
 800903a:	1ae3      	subs	r3, r4, r3
 800903c:	3b01      	subs	r3, #1
 800903e:	2b07      	cmp	r3, #7
 8009040:	dc47      	bgt.n	80090d2 <__gethex+0x1fc>
 8009042:	9805      	ldr	r0, [sp, #20]
 8009044:	f000 fa70 	bl	8009528 <_Balloc>
 8009048:	0003      	movs	r3, r0
 800904a:	3314      	adds	r3, #20
 800904c:	9303      	str	r3, [sp, #12]
 800904e:	9308      	str	r3, [sp, #32]
 8009050:	2300      	movs	r3, #0
 8009052:	0005      	movs	r5, r0
 8009054:	001e      	movs	r6, r3
 8009056:	9306      	str	r3, [sp, #24]
 8009058:	9b01      	ldr	r3, [sp, #4]
 800905a:	42a3      	cmp	r3, r4
 800905c:	d33c      	bcc.n	80090d8 <__gethex+0x202>
 800905e:	9c08      	ldr	r4, [sp, #32]
 8009060:	9b03      	ldr	r3, [sp, #12]
 8009062:	c440      	stmia	r4!, {r6}
 8009064:	1ae4      	subs	r4, r4, r3
 8009066:	10a4      	asrs	r4, r4, #2
 8009068:	612c      	str	r4, [r5, #16]
 800906a:	0030      	movs	r0, r6
 800906c:	f000 fb29 	bl	80096c2 <__hi0bits>
 8009070:	9b02      	ldr	r3, [sp, #8]
 8009072:	0164      	lsls	r4, r4, #5
 8009074:	681b      	ldr	r3, [r3, #0]
 8009076:	1a26      	subs	r6, r4, r0
 8009078:	9301      	str	r3, [sp, #4]
 800907a:	429e      	cmp	r6, r3
 800907c:	dd5f      	ble.n	800913e <__gethex+0x268>
 800907e:	1af6      	subs	r6, r6, r3
 8009080:	0031      	movs	r1, r6
 8009082:	0028      	movs	r0, r5
 8009084:	f000 fe23 	bl	8009cce <__any_on>
 8009088:	1e04      	subs	r4, r0, #0
 800908a:	d00f      	beq.n	80090ac <__gethex+0x1d6>
 800908c:	2401      	movs	r4, #1
 800908e:	211f      	movs	r1, #31
 8009090:	0020      	movs	r0, r4
 8009092:	1e73      	subs	r3, r6, #1
 8009094:	4019      	ands	r1, r3
 8009096:	4088      	lsls	r0, r1
 8009098:	0001      	movs	r1, r0
 800909a:	115a      	asrs	r2, r3, #5
 800909c:	9803      	ldr	r0, [sp, #12]
 800909e:	0092      	lsls	r2, r2, #2
 80090a0:	5812      	ldr	r2, [r2, r0]
 80090a2:	420a      	tst	r2, r1
 80090a4:	d002      	beq.n	80090ac <__gethex+0x1d6>
 80090a6:	42a3      	cmp	r3, r4
 80090a8:	dc41      	bgt.n	800912e <__gethex+0x258>
 80090aa:	2402      	movs	r4, #2
 80090ac:	0031      	movs	r1, r6
 80090ae:	0028      	movs	r0, r5
 80090b0:	f7ff fec8 	bl	8008e44 <rshift>
 80090b4:	19bf      	adds	r7, r7, r6
 80090b6:	9b02      	ldr	r3, [sp, #8]
 80090b8:	689b      	ldr	r3, [r3, #8]
 80090ba:	9304      	str	r3, [sp, #16]
 80090bc:	42bb      	cmp	r3, r7
 80090be:	da4e      	bge.n	800915e <__gethex+0x288>
 80090c0:	0029      	movs	r1, r5
 80090c2:	9805      	ldr	r0, [sp, #20]
 80090c4:	f000 fa68 	bl	8009598 <_Bfree>
 80090c8:	2300      	movs	r3, #0
 80090ca:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80090cc:	26a3      	movs	r6, #163	; 0xa3
 80090ce:	6013      	str	r3, [r2, #0]
 80090d0:	e795      	b.n	8008ffe <__gethex+0x128>
 80090d2:	3101      	adds	r1, #1
 80090d4:	105b      	asrs	r3, r3, #1
 80090d6:	e7b2      	b.n	800903e <__gethex+0x168>
 80090d8:	1e63      	subs	r3, r4, #1
 80090da:	9309      	str	r3, [sp, #36]	; 0x24
 80090dc:	9a0b      	ldr	r2, [sp, #44]	; 0x2c
 80090de:	781b      	ldrb	r3, [r3, #0]
 80090e0:	4293      	cmp	r3, r2
 80090e2:	d015      	beq.n	8009110 <__gethex+0x23a>
 80090e4:	9b06      	ldr	r3, [sp, #24]
 80090e6:	2b20      	cmp	r3, #32
 80090e8:	d105      	bne.n	80090f6 <__gethex+0x220>
 80090ea:	9b08      	ldr	r3, [sp, #32]
 80090ec:	601e      	str	r6, [r3, #0]
 80090ee:	2600      	movs	r6, #0
 80090f0:	3304      	adds	r3, #4
 80090f2:	9308      	str	r3, [sp, #32]
 80090f4:	9606      	str	r6, [sp, #24]
 80090f6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80090f8:	7818      	ldrb	r0, [r3, #0]
 80090fa:	f7ff fed7 	bl	8008eac <__hexdig_fun>
 80090fe:	230f      	movs	r3, #15
 8009100:	4018      	ands	r0, r3
 8009102:	9b06      	ldr	r3, [sp, #24]
 8009104:	9c09      	ldr	r4, [sp, #36]	; 0x24
 8009106:	4098      	lsls	r0, r3
 8009108:	3304      	adds	r3, #4
 800910a:	4306      	orrs	r6, r0
 800910c:	9306      	str	r3, [sp, #24]
 800910e:	e7a3      	b.n	8009058 <__gethex+0x182>
 8009110:	2301      	movs	r3, #1
 8009112:	9a04      	ldr	r2, [sp, #16]
 8009114:	1a9c      	subs	r4, r3, r2
 8009116:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009118:	191c      	adds	r4, r3, r4
 800911a:	9b01      	ldr	r3, [sp, #4]
 800911c:	429c      	cmp	r4, r3
 800911e:	d3e1      	bcc.n	80090e4 <__gethex+0x20e>
 8009120:	9907      	ldr	r1, [sp, #28]
 8009122:	0020      	movs	r0, r4
 8009124:	f001 f81e 	bl	800a164 <strncmp>
 8009128:	2800      	cmp	r0, #0
 800912a:	d1db      	bne.n	80090e4 <__gethex+0x20e>
 800912c:	e794      	b.n	8009058 <__gethex+0x182>
 800912e:	1eb1      	subs	r1, r6, #2
 8009130:	0028      	movs	r0, r5
 8009132:	f000 fdcc 	bl	8009cce <__any_on>
 8009136:	2800      	cmp	r0, #0
 8009138:	d0b7      	beq.n	80090aa <__gethex+0x1d4>
 800913a:	2403      	movs	r4, #3
 800913c:	e7b6      	b.n	80090ac <__gethex+0x1d6>
 800913e:	9b01      	ldr	r3, [sp, #4]
 8009140:	2400      	movs	r4, #0
 8009142:	429e      	cmp	r6, r3
 8009144:	dab7      	bge.n	80090b6 <__gethex+0x1e0>
 8009146:	1b9e      	subs	r6, r3, r6
 8009148:	0029      	movs	r1, r5
 800914a:	0032      	movs	r2, r6
 800914c:	9805      	ldr	r0, [sp, #20]
 800914e:	f000 fbeb 	bl	8009928 <__lshift>
 8009152:	0003      	movs	r3, r0
 8009154:	3314      	adds	r3, #20
 8009156:	0005      	movs	r5, r0
 8009158:	1bbf      	subs	r7, r7, r6
 800915a:	9303      	str	r3, [sp, #12]
 800915c:	e7ab      	b.n	80090b6 <__gethex+0x1e0>
 800915e:	9b02      	ldr	r3, [sp, #8]
 8009160:	685e      	ldr	r6, [r3, #4]
 8009162:	42be      	cmp	r6, r7
 8009164:	dd6b      	ble.n	800923e <__gethex+0x368>
 8009166:	9b01      	ldr	r3, [sp, #4]
 8009168:	1bf6      	subs	r6, r6, r7
 800916a:	42b3      	cmp	r3, r6
 800916c:	dc32      	bgt.n	80091d4 <__gethex+0x2fe>
 800916e:	9b02      	ldr	r3, [sp, #8]
 8009170:	68db      	ldr	r3, [r3, #12]
 8009172:	2b02      	cmp	r3, #2
 8009174:	d026      	beq.n	80091c4 <__gethex+0x2ee>
 8009176:	2b03      	cmp	r3, #3
 8009178:	d028      	beq.n	80091cc <__gethex+0x2f6>
 800917a:	2b01      	cmp	r3, #1
 800917c:	d119      	bne.n	80091b2 <__gethex+0x2dc>
 800917e:	9b01      	ldr	r3, [sp, #4]
 8009180:	42b3      	cmp	r3, r6
 8009182:	d116      	bne.n	80091b2 <__gethex+0x2dc>
 8009184:	2b01      	cmp	r3, #1
 8009186:	dc0d      	bgt.n	80091a4 <__gethex+0x2ce>
 8009188:	9b02      	ldr	r3, [sp, #8]
 800918a:	2662      	movs	r6, #98	; 0x62
 800918c:	685b      	ldr	r3, [r3, #4]
 800918e:	9301      	str	r3, [sp, #4]
 8009190:	9a01      	ldr	r2, [sp, #4]
 8009192:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8009194:	601a      	str	r2, [r3, #0]
 8009196:	2301      	movs	r3, #1
 8009198:	9a03      	ldr	r2, [sp, #12]
 800919a:	612b      	str	r3, [r5, #16]
 800919c:	6013      	str	r3, [r2, #0]
 800919e:	9b12      	ldr	r3, [sp, #72]	; 0x48
 80091a0:	601d      	str	r5, [r3, #0]
 80091a2:	e72c      	b.n	8008ffe <__gethex+0x128>
 80091a4:	9901      	ldr	r1, [sp, #4]
 80091a6:	0028      	movs	r0, r5
 80091a8:	3901      	subs	r1, #1
 80091aa:	f000 fd90 	bl	8009cce <__any_on>
 80091ae:	2800      	cmp	r0, #0
 80091b0:	d1ea      	bne.n	8009188 <__gethex+0x2b2>
 80091b2:	0029      	movs	r1, r5
 80091b4:	9805      	ldr	r0, [sp, #20]
 80091b6:	f000 f9ef 	bl	8009598 <_Bfree>
 80091ba:	2300      	movs	r3, #0
 80091bc:	9a12      	ldr	r2, [sp, #72]	; 0x48
 80091be:	2650      	movs	r6, #80	; 0x50
 80091c0:	6013      	str	r3, [r2, #0]
 80091c2:	e71c      	b.n	8008ffe <__gethex+0x128>
 80091c4:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80091c6:	2b00      	cmp	r3, #0
 80091c8:	d0de      	beq.n	8009188 <__gethex+0x2b2>
 80091ca:	e7f2      	b.n	80091b2 <__gethex+0x2dc>
 80091cc:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 80091ce:	2b00      	cmp	r3, #0
 80091d0:	d1da      	bne.n	8009188 <__gethex+0x2b2>
 80091d2:	e7ee      	b.n	80091b2 <__gethex+0x2dc>
 80091d4:	1e77      	subs	r7, r6, #1
 80091d6:	2c00      	cmp	r4, #0
 80091d8:	d12f      	bne.n	800923a <__gethex+0x364>
 80091da:	2f00      	cmp	r7, #0
 80091dc:	d004      	beq.n	80091e8 <__gethex+0x312>
 80091de:	0039      	movs	r1, r7
 80091e0:	0028      	movs	r0, r5
 80091e2:	f000 fd74 	bl	8009cce <__any_on>
 80091e6:	0004      	movs	r4, r0
 80091e8:	231f      	movs	r3, #31
 80091ea:	117a      	asrs	r2, r7, #5
 80091ec:	401f      	ands	r7, r3
 80091ee:	3b1e      	subs	r3, #30
 80091f0:	40bb      	lsls	r3, r7
 80091f2:	9903      	ldr	r1, [sp, #12]
 80091f4:	0092      	lsls	r2, r2, #2
 80091f6:	5852      	ldr	r2, [r2, r1]
 80091f8:	421a      	tst	r2, r3
 80091fa:	d001      	beq.n	8009200 <__gethex+0x32a>
 80091fc:	2302      	movs	r3, #2
 80091fe:	431c      	orrs	r4, r3
 8009200:	9b01      	ldr	r3, [sp, #4]
 8009202:	0031      	movs	r1, r6
 8009204:	1b9b      	subs	r3, r3, r6
 8009206:	2602      	movs	r6, #2
 8009208:	0028      	movs	r0, r5
 800920a:	9301      	str	r3, [sp, #4]
 800920c:	f7ff fe1a 	bl	8008e44 <rshift>
 8009210:	9b02      	ldr	r3, [sp, #8]
 8009212:	685f      	ldr	r7, [r3, #4]
 8009214:	2c00      	cmp	r4, #0
 8009216:	d040      	beq.n	800929a <__gethex+0x3c4>
 8009218:	9b02      	ldr	r3, [sp, #8]
 800921a:	68db      	ldr	r3, [r3, #12]
 800921c:	2b02      	cmp	r3, #2
 800921e:	d010      	beq.n	8009242 <__gethex+0x36c>
 8009220:	2b03      	cmp	r3, #3
 8009222:	d012      	beq.n	800924a <__gethex+0x374>
 8009224:	2b01      	cmp	r3, #1
 8009226:	d106      	bne.n	8009236 <__gethex+0x360>
 8009228:	07a2      	lsls	r2, r4, #30
 800922a:	d504      	bpl.n	8009236 <__gethex+0x360>
 800922c:	9a03      	ldr	r2, [sp, #12]
 800922e:	6812      	ldr	r2, [r2, #0]
 8009230:	4314      	orrs	r4, r2
 8009232:	421c      	tst	r4, r3
 8009234:	d10c      	bne.n	8009250 <__gethex+0x37a>
 8009236:	2310      	movs	r3, #16
 8009238:	e02e      	b.n	8009298 <__gethex+0x3c2>
 800923a:	2401      	movs	r4, #1
 800923c:	e7d4      	b.n	80091e8 <__gethex+0x312>
 800923e:	2601      	movs	r6, #1
 8009240:	e7e8      	b.n	8009214 <__gethex+0x33e>
 8009242:	2301      	movs	r3, #1
 8009244:	9a13      	ldr	r2, [sp, #76]	; 0x4c
 8009246:	1a9b      	subs	r3, r3, r2
 8009248:	9313      	str	r3, [sp, #76]	; 0x4c
 800924a:	9b13      	ldr	r3, [sp, #76]	; 0x4c
 800924c:	2b00      	cmp	r3, #0
 800924e:	d0f2      	beq.n	8009236 <__gethex+0x360>
 8009250:	692c      	ldr	r4, [r5, #16]
 8009252:	00a3      	lsls	r3, r4, #2
 8009254:	9304      	str	r3, [sp, #16]
 8009256:	002b      	movs	r3, r5
 8009258:	00a2      	lsls	r2, r4, #2
 800925a:	3314      	adds	r3, #20
 800925c:	1899      	adds	r1, r3, r2
 800925e:	2200      	movs	r2, #0
 8009260:	4694      	mov	ip, r2
 8009262:	681a      	ldr	r2, [r3, #0]
 8009264:	1c50      	adds	r0, r2, #1
 8009266:	d01d      	beq.n	80092a4 <__gethex+0x3ce>
 8009268:	3201      	adds	r2, #1
 800926a:	601a      	str	r2, [r3, #0]
 800926c:	002b      	movs	r3, r5
 800926e:	3314      	adds	r3, #20
 8009270:	2e02      	cmp	r6, #2
 8009272:	d13a      	bne.n	80092ea <__gethex+0x414>
 8009274:	9a02      	ldr	r2, [sp, #8]
 8009276:	9901      	ldr	r1, [sp, #4]
 8009278:	6812      	ldr	r2, [r2, #0]
 800927a:	3a01      	subs	r2, #1
 800927c:	428a      	cmp	r2, r1
 800927e:	d10a      	bne.n	8009296 <__gethex+0x3c0>
 8009280:	114a      	asrs	r2, r1, #5
 8009282:	211f      	movs	r1, #31
 8009284:	9801      	ldr	r0, [sp, #4]
 8009286:	0092      	lsls	r2, r2, #2
 8009288:	4001      	ands	r1, r0
 800928a:	2001      	movs	r0, #1
 800928c:	0004      	movs	r4, r0
 800928e:	408c      	lsls	r4, r1
 8009290:	58d3      	ldr	r3, [r2, r3]
 8009292:	4223      	tst	r3, r4
 8009294:	d148      	bne.n	8009328 <__gethex+0x452>
 8009296:	2320      	movs	r3, #32
 8009298:	431e      	orrs	r6, r3
 800929a:	9b12      	ldr	r3, [sp, #72]	; 0x48
 800929c:	601d      	str	r5, [r3, #0]
 800929e:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 80092a0:	601f      	str	r7, [r3, #0]
 80092a2:	e6ac      	b.n	8008ffe <__gethex+0x128>
 80092a4:	4662      	mov	r2, ip
 80092a6:	c304      	stmia	r3!, {r2}
 80092a8:	4299      	cmp	r1, r3
 80092aa:	d8da      	bhi.n	8009262 <__gethex+0x38c>
 80092ac:	68ab      	ldr	r3, [r5, #8]
 80092ae:	429c      	cmp	r4, r3
 80092b0:	db12      	blt.n	80092d8 <__gethex+0x402>
 80092b2:	686b      	ldr	r3, [r5, #4]
 80092b4:	9805      	ldr	r0, [sp, #20]
 80092b6:	1c59      	adds	r1, r3, #1
 80092b8:	f000 f936 	bl	8009528 <_Balloc>
 80092bc:	0029      	movs	r1, r5
 80092be:	692b      	ldr	r3, [r5, #16]
 80092c0:	9003      	str	r0, [sp, #12]
 80092c2:	1c9a      	adds	r2, r3, #2
 80092c4:	0092      	lsls	r2, r2, #2
 80092c6:	310c      	adds	r1, #12
 80092c8:	300c      	adds	r0, #12
 80092ca:	f000 f924 	bl	8009516 <memcpy>
 80092ce:	0029      	movs	r1, r5
 80092d0:	9805      	ldr	r0, [sp, #20]
 80092d2:	f000 f961 	bl	8009598 <_Bfree>
 80092d6:	9d03      	ldr	r5, [sp, #12]
 80092d8:	692b      	ldr	r3, [r5, #16]
 80092da:	1c5a      	adds	r2, r3, #1
 80092dc:	612a      	str	r2, [r5, #16]
 80092de:	2201      	movs	r2, #1
 80092e0:	3304      	adds	r3, #4
 80092e2:	009b      	lsls	r3, r3, #2
 80092e4:	18eb      	adds	r3, r5, r3
 80092e6:	605a      	str	r2, [r3, #4]
 80092e8:	e7c0      	b.n	800926c <__gethex+0x396>
 80092ea:	692a      	ldr	r2, [r5, #16]
 80092ec:	42a2      	cmp	r2, r4
 80092ee:	dd0a      	ble.n	8009306 <__gethex+0x430>
 80092f0:	2101      	movs	r1, #1
 80092f2:	0028      	movs	r0, r5
 80092f4:	f7ff fda6 	bl	8008e44 <rshift>
 80092f8:	9b02      	ldr	r3, [sp, #8]
 80092fa:	3701      	adds	r7, #1
 80092fc:	689b      	ldr	r3, [r3, #8]
 80092fe:	2601      	movs	r6, #1
 8009300:	42bb      	cmp	r3, r7
 8009302:	dac8      	bge.n	8009296 <__gethex+0x3c0>
 8009304:	e6dc      	b.n	80090c0 <__gethex+0x1ea>
 8009306:	241f      	movs	r4, #31
 8009308:	9a01      	ldr	r2, [sp, #4]
 800930a:	2601      	movs	r6, #1
 800930c:	4022      	ands	r2, r4
 800930e:	1e14      	subs	r4, r2, #0
 8009310:	d0c1      	beq.n	8009296 <__gethex+0x3c0>
 8009312:	9a04      	ldr	r2, [sp, #16]
 8009314:	189b      	adds	r3, r3, r2
 8009316:	3b04      	subs	r3, #4
 8009318:	6818      	ldr	r0, [r3, #0]
 800931a:	f000 f9d2 	bl	80096c2 <__hi0bits>
 800931e:	2120      	movs	r1, #32
 8009320:	1b0c      	subs	r4, r1, r4
 8009322:	42a0      	cmp	r0, r4
 8009324:	dbe4      	blt.n	80092f0 <__gethex+0x41a>
 8009326:	e7b6      	b.n	8009296 <__gethex+0x3c0>
 8009328:	0006      	movs	r6, r0
 800932a:	e7b4      	b.n	8009296 <__gethex+0x3c0>

0800932c <L_shift>:
 800932c:	2308      	movs	r3, #8
 800932e:	b570      	push	{r4, r5, r6, lr}
 8009330:	2520      	movs	r5, #32
 8009332:	1a9a      	subs	r2, r3, r2
 8009334:	0092      	lsls	r2, r2, #2
 8009336:	1aad      	subs	r5, r5, r2
 8009338:	6843      	ldr	r3, [r0, #4]
 800933a:	6806      	ldr	r6, [r0, #0]
 800933c:	001c      	movs	r4, r3
 800933e:	40ac      	lsls	r4, r5
 8009340:	40d3      	lsrs	r3, r2
 8009342:	4334      	orrs	r4, r6
 8009344:	6004      	str	r4, [r0, #0]
 8009346:	6043      	str	r3, [r0, #4]
 8009348:	3004      	adds	r0, #4
 800934a:	4288      	cmp	r0, r1
 800934c:	d3f4      	bcc.n	8009338 <L_shift+0xc>
 800934e:	bd70      	pop	{r4, r5, r6, pc}

08009350 <__match>:
 8009350:	b530      	push	{r4, r5, lr}
 8009352:	6803      	ldr	r3, [r0, #0]
 8009354:	780c      	ldrb	r4, [r1, #0]
 8009356:	3301      	adds	r3, #1
 8009358:	2c00      	cmp	r4, #0
 800935a:	d102      	bne.n	8009362 <__match+0x12>
 800935c:	6003      	str	r3, [r0, #0]
 800935e:	2001      	movs	r0, #1
 8009360:	bd30      	pop	{r4, r5, pc}
 8009362:	781a      	ldrb	r2, [r3, #0]
 8009364:	0015      	movs	r5, r2
 8009366:	3d41      	subs	r5, #65	; 0x41
 8009368:	2d19      	cmp	r5, #25
 800936a:	d800      	bhi.n	800936e <__match+0x1e>
 800936c:	3220      	adds	r2, #32
 800936e:	3101      	adds	r1, #1
 8009370:	42a2      	cmp	r2, r4
 8009372:	d0ef      	beq.n	8009354 <__match+0x4>
 8009374:	2000      	movs	r0, #0
 8009376:	e7f3      	b.n	8009360 <__match+0x10>

08009378 <__hexnan>:
 8009378:	b5f0      	push	{r4, r5, r6, r7, lr}
 800937a:	b08b      	sub	sp, #44	; 0x2c
 800937c:	9201      	str	r2, [sp, #4]
 800937e:	680a      	ldr	r2, [r1, #0]
 8009380:	9901      	ldr	r1, [sp, #4]
 8009382:	1153      	asrs	r3, r2, #5
 8009384:	009b      	lsls	r3, r3, #2
 8009386:	18cb      	adds	r3, r1, r3
 8009388:	9304      	str	r3, [sp, #16]
 800938a:	231f      	movs	r3, #31
 800938c:	401a      	ands	r2, r3
 800938e:	9008      	str	r0, [sp, #32]
 8009390:	9206      	str	r2, [sp, #24]
 8009392:	d002      	beq.n	800939a <__hexnan+0x22>
 8009394:	9b04      	ldr	r3, [sp, #16]
 8009396:	3304      	adds	r3, #4
 8009398:	9304      	str	r3, [sp, #16]
 800939a:	9b04      	ldr	r3, [sp, #16]
 800939c:	2500      	movs	r5, #0
 800939e:	1f1e      	subs	r6, r3, #4
 80093a0:	0037      	movs	r7, r6
 80093a2:	0034      	movs	r4, r6
 80093a4:	9b08      	ldr	r3, [sp, #32]
 80093a6:	6035      	str	r5, [r6, #0]
 80093a8:	681b      	ldr	r3, [r3, #0]
 80093aa:	9507      	str	r5, [sp, #28]
 80093ac:	9305      	str	r3, [sp, #20]
 80093ae:	9502      	str	r5, [sp, #8]
 80093b0:	9b05      	ldr	r3, [sp, #20]
 80093b2:	3301      	adds	r3, #1
 80093b4:	9309      	str	r3, [sp, #36]	; 0x24
 80093b6:	9b05      	ldr	r3, [sp, #20]
 80093b8:	785b      	ldrb	r3, [r3, #1]
 80093ba:	9303      	str	r3, [sp, #12]
 80093bc:	2b00      	cmp	r3, #0
 80093be:	d028      	beq.n	8009412 <__hexnan+0x9a>
 80093c0:	9803      	ldr	r0, [sp, #12]
 80093c2:	f7ff fd73 	bl	8008eac <__hexdig_fun>
 80093c6:	2800      	cmp	r0, #0
 80093c8:	d145      	bne.n	8009456 <__hexnan+0xde>
 80093ca:	9b03      	ldr	r3, [sp, #12]
 80093cc:	2b20      	cmp	r3, #32
 80093ce:	d819      	bhi.n	8009404 <__hexnan+0x8c>
 80093d0:	9b02      	ldr	r3, [sp, #8]
 80093d2:	9a07      	ldr	r2, [sp, #28]
 80093d4:	4293      	cmp	r3, r2
 80093d6:	dd12      	ble.n	80093fe <__hexnan+0x86>
 80093d8:	42bc      	cmp	r4, r7
 80093da:	d206      	bcs.n	80093ea <__hexnan+0x72>
 80093dc:	2d07      	cmp	r5, #7
 80093de:	dc04      	bgt.n	80093ea <__hexnan+0x72>
 80093e0:	002a      	movs	r2, r5
 80093e2:	0039      	movs	r1, r7
 80093e4:	0020      	movs	r0, r4
 80093e6:	f7ff ffa1 	bl	800932c <L_shift>
 80093ea:	9b01      	ldr	r3, [sp, #4]
 80093ec:	2508      	movs	r5, #8
 80093ee:	429c      	cmp	r4, r3
 80093f0:	d905      	bls.n	80093fe <__hexnan+0x86>
 80093f2:	1f27      	subs	r7, r4, #4
 80093f4:	2500      	movs	r5, #0
 80093f6:	003c      	movs	r4, r7
 80093f8:	9b02      	ldr	r3, [sp, #8]
 80093fa:	603d      	str	r5, [r7, #0]
 80093fc:	9307      	str	r3, [sp, #28]
 80093fe:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009400:	9305      	str	r3, [sp, #20]
 8009402:	e7d5      	b.n	80093b0 <__hexnan+0x38>
 8009404:	9b03      	ldr	r3, [sp, #12]
 8009406:	2b29      	cmp	r3, #41	; 0x29
 8009408:	d14a      	bne.n	80094a0 <__hexnan+0x128>
 800940a:	9b05      	ldr	r3, [sp, #20]
 800940c:	9a08      	ldr	r2, [sp, #32]
 800940e:	3302      	adds	r3, #2
 8009410:	6013      	str	r3, [r2, #0]
 8009412:	9b02      	ldr	r3, [sp, #8]
 8009414:	2b00      	cmp	r3, #0
 8009416:	d043      	beq.n	80094a0 <__hexnan+0x128>
 8009418:	42bc      	cmp	r4, r7
 800941a:	d206      	bcs.n	800942a <__hexnan+0xb2>
 800941c:	2d07      	cmp	r5, #7
 800941e:	dc04      	bgt.n	800942a <__hexnan+0xb2>
 8009420:	002a      	movs	r2, r5
 8009422:	0039      	movs	r1, r7
 8009424:	0020      	movs	r0, r4
 8009426:	f7ff ff81 	bl	800932c <L_shift>
 800942a:	9b01      	ldr	r3, [sp, #4]
 800942c:	429c      	cmp	r4, r3
 800942e:	d926      	bls.n	800947e <__hexnan+0x106>
 8009430:	cc04      	ldmia	r4!, {r2}
 8009432:	601a      	str	r2, [r3, #0]
 8009434:	3304      	adds	r3, #4
 8009436:	42a6      	cmp	r6, r4
 8009438:	d2fa      	bcs.n	8009430 <__hexnan+0xb8>
 800943a:	2200      	movs	r2, #0
 800943c:	c304      	stmia	r3!, {r2}
 800943e:	429e      	cmp	r6, r3
 8009440:	d2fc      	bcs.n	800943c <__hexnan+0xc4>
 8009442:	6833      	ldr	r3, [r6, #0]
 8009444:	2b00      	cmp	r3, #0
 8009446:	d104      	bne.n	8009452 <__hexnan+0xda>
 8009448:	9b01      	ldr	r3, [sp, #4]
 800944a:	429e      	cmp	r6, r3
 800944c:	d126      	bne.n	800949c <__hexnan+0x124>
 800944e:	2301      	movs	r3, #1
 8009450:	6033      	str	r3, [r6, #0]
 8009452:	2005      	movs	r0, #5
 8009454:	e025      	b.n	80094a2 <__hexnan+0x12a>
 8009456:	9b02      	ldr	r3, [sp, #8]
 8009458:	3501      	adds	r5, #1
 800945a:	3301      	adds	r3, #1
 800945c:	9302      	str	r3, [sp, #8]
 800945e:	2d08      	cmp	r5, #8
 8009460:	dd06      	ble.n	8009470 <__hexnan+0xf8>
 8009462:	9b01      	ldr	r3, [sp, #4]
 8009464:	429c      	cmp	r4, r3
 8009466:	d9ca      	bls.n	80093fe <__hexnan+0x86>
 8009468:	2300      	movs	r3, #0
 800946a:	2501      	movs	r5, #1
 800946c:	3c04      	subs	r4, #4
 800946e:	6023      	str	r3, [r4, #0]
 8009470:	220f      	movs	r2, #15
 8009472:	6823      	ldr	r3, [r4, #0]
 8009474:	4010      	ands	r0, r2
 8009476:	011b      	lsls	r3, r3, #4
 8009478:	4318      	orrs	r0, r3
 800947a:	6020      	str	r0, [r4, #0]
 800947c:	e7bf      	b.n	80093fe <__hexnan+0x86>
 800947e:	9b06      	ldr	r3, [sp, #24]
 8009480:	2b00      	cmp	r3, #0
 8009482:	d0de      	beq.n	8009442 <__hexnan+0xca>
 8009484:	2120      	movs	r1, #32
 8009486:	9a06      	ldr	r2, [sp, #24]
 8009488:	9b04      	ldr	r3, [sp, #16]
 800948a:	1a89      	subs	r1, r1, r2
 800948c:	2201      	movs	r2, #1
 800948e:	4252      	negs	r2, r2
 8009490:	40ca      	lsrs	r2, r1
 8009492:	3b04      	subs	r3, #4
 8009494:	6819      	ldr	r1, [r3, #0]
 8009496:	400a      	ands	r2, r1
 8009498:	601a      	str	r2, [r3, #0]
 800949a:	e7d2      	b.n	8009442 <__hexnan+0xca>
 800949c:	3e04      	subs	r6, #4
 800949e:	e7d0      	b.n	8009442 <__hexnan+0xca>
 80094a0:	2004      	movs	r0, #4
 80094a2:	b00b      	add	sp, #44	; 0x2c
 80094a4:	bdf0      	pop	{r4, r5, r6, r7, pc}

080094a6 <__locale_ctype_ptr_l>:
 80094a6:	30ec      	adds	r0, #236	; 0xec
 80094a8:	6800      	ldr	r0, [r0, #0]
 80094aa:	4770      	bx	lr

080094ac <__localeconv_l>:
 80094ac:	30f0      	adds	r0, #240	; 0xf0
 80094ae:	4770      	bx	lr

080094b0 <_localeconv_r>:
 80094b0:	4b03      	ldr	r3, [pc, #12]	; (80094c0 <_localeconv_r+0x10>)
 80094b2:	681b      	ldr	r3, [r3, #0]
 80094b4:	6a18      	ldr	r0, [r3, #32]
 80094b6:	2800      	cmp	r0, #0
 80094b8:	d100      	bne.n	80094bc <_localeconv_r+0xc>
 80094ba:	4802      	ldr	r0, [pc, #8]	; (80094c4 <_localeconv_r+0x14>)
 80094bc:	30f0      	adds	r0, #240	; 0xf0
 80094be:	4770      	bx	lr
 80094c0:	2000000c 	.word	0x2000000c
 80094c4:	20000070 	.word	0x20000070

080094c8 <malloc>:
 80094c8:	b510      	push	{r4, lr}
 80094ca:	4b03      	ldr	r3, [pc, #12]	; (80094d8 <malloc+0x10>)
 80094cc:	0001      	movs	r1, r0
 80094ce:	6818      	ldr	r0, [r3, #0]
 80094d0:	f000 fc78 	bl	8009dc4 <_malloc_r>
 80094d4:	bd10      	pop	{r4, pc}
 80094d6:	46c0      	nop			; (mov r8, r8)
 80094d8:	2000000c 	.word	0x2000000c

080094dc <__ascii_mbtowc>:
 80094dc:	b082      	sub	sp, #8
 80094de:	2900      	cmp	r1, #0
 80094e0:	d100      	bne.n	80094e4 <__ascii_mbtowc+0x8>
 80094e2:	a901      	add	r1, sp, #4
 80094e4:	1e10      	subs	r0, r2, #0
 80094e6:	d006      	beq.n	80094f6 <__ascii_mbtowc+0x1a>
 80094e8:	2b00      	cmp	r3, #0
 80094ea:	d006      	beq.n	80094fa <__ascii_mbtowc+0x1e>
 80094ec:	7813      	ldrb	r3, [r2, #0]
 80094ee:	600b      	str	r3, [r1, #0]
 80094f0:	7810      	ldrb	r0, [r2, #0]
 80094f2:	1e43      	subs	r3, r0, #1
 80094f4:	4198      	sbcs	r0, r3
 80094f6:	b002      	add	sp, #8
 80094f8:	4770      	bx	lr
 80094fa:	2002      	movs	r0, #2
 80094fc:	4240      	negs	r0, r0
 80094fe:	e7fa      	b.n	80094f6 <__ascii_mbtowc+0x1a>

08009500 <memchr>:
 8009500:	b2c9      	uxtb	r1, r1
 8009502:	1882      	adds	r2, r0, r2
 8009504:	4290      	cmp	r0, r2
 8009506:	d101      	bne.n	800950c <memchr+0xc>
 8009508:	2000      	movs	r0, #0
 800950a:	4770      	bx	lr
 800950c:	7803      	ldrb	r3, [r0, #0]
 800950e:	428b      	cmp	r3, r1
 8009510:	d0fb      	beq.n	800950a <memchr+0xa>
 8009512:	3001      	adds	r0, #1
 8009514:	e7f6      	b.n	8009504 <memchr+0x4>

08009516 <memcpy>:
 8009516:	2300      	movs	r3, #0
 8009518:	b510      	push	{r4, lr}
 800951a:	429a      	cmp	r2, r3
 800951c:	d100      	bne.n	8009520 <memcpy+0xa>
 800951e:	bd10      	pop	{r4, pc}
 8009520:	5ccc      	ldrb	r4, [r1, r3]
 8009522:	54c4      	strb	r4, [r0, r3]
 8009524:	3301      	adds	r3, #1
 8009526:	e7f8      	b.n	800951a <memcpy+0x4>

08009528 <_Balloc>:
 8009528:	b570      	push	{r4, r5, r6, lr}
 800952a:	6a46      	ldr	r6, [r0, #36]	; 0x24
 800952c:	0004      	movs	r4, r0
 800952e:	000d      	movs	r5, r1
 8009530:	2e00      	cmp	r6, #0
 8009532:	d107      	bne.n	8009544 <_Balloc+0x1c>
 8009534:	2010      	movs	r0, #16
 8009536:	f7ff ffc7 	bl	80094c8 <malloc>
 800953a:	6260      	str	r0, [r4, #36]	; 0x24
 800953c:	6046      	str	r6, [r0, #4]
 800953e:	6086      	str	r6, [r0, #8]
 8009540:	6006      	str	r6, [r0, #0]
 8009542:	60c6      	str	r6, [r0, #12]
 8009544:	6a66      	ldr	r6, [r4, #36]	; 0x24
 8009546:	68f3      	ldr	r3, [r6, #12]
 8009548:	2b00      	cmp	r3, #0
 800954a:	d013      	beq.n	8009574 <_Balloc+0x4c>
 800954c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 800954e:	00aa      	lsls	r2, r5, #2
 8009550:	68db      	ldr	r3, [r3, #12]
 8009552:	189b      	adds	r3, r3, r2
 8009554:	6818      	ldr	r0, [r3, #0]
 8009556:	2800      	cmp	r0, #0
 8009558:	d118      	bne.n	800958c <_Balloc+0x64>
 800955a:	2101      	movs	r1, #1
 800955c:	000e      	movs	r6, r1
 800955e:	40ae      	lsls	r6, r5
 8009560:	1d72      	adds	r2, r6, #5
 8009562:	0092      	lsls	r2, r2, #2
 8009564:	0020      	movs	r0, r4
 8009566:	f000 fbd4 	bl	8009d12 <_calloc_r>
 800956a:	2800      	cmp	r0, #0
 800956c:	d00c      	beq.n	8009588 <_Balloc+0x60>
 800956e:	6045      	str	r5, [r0, #4]
 8009570:	6086      	str	r6, [r0, #8]
 8009572:	e00d      	b.n	8009590 <_Balloc+0x68>
 8009574:	2221      	movs	r2, #33	; 0x21
 8009576:	2104      	movs	r1, #4
 8009578:	0020      	movs	r0, r4
 800957a:	f000 fbca 	bl	8009d12 <_calloc_r>
 800957e:	6a63      	ldr	r3, [r4, #36]	; 0x24
 8009580:	60f0      	str	r0, [r6, #12]
 8009582:	68db      	ldr	r3, [r3, #12]
 8009584:	2b00      	cmp	r3, #0
 8009586:	d1e1      	bne.n	800954c <_Balloc+0x24>
 8009588:	2000      	movs	r0, #0
 800958a:	bd70      	pop	{r4, r5, r6, pc}
 800958c:	6802      	ldr	r2, [r0, #0]
 800958e:	601a      	str	r2, [r3, #0]
 8009590:	2300      	movs	r3, #0
 8009592:	6103      	str	r3, [r0, #16]
 8009594:	60c3      	str	r3, [r0, #12]
 8009596:	e7f8      	b.n	800958a <_Balloc+0x62>

08009598 <_Bfree>:
 8009598:	b570      	push	{r4, r5, r6, lr}
 800959a:	6a44      	ldr	r4, [r0, #36]	; 0x24
 800959c:	0006      	movs	r6, r0
 800959e:	000d      	movs	r5, r1
 80095a0:	2c00      	cmp	r4, #0
 80095a2:	d107      	bne.n	80095b4 <_Bfree+0x1c>
 80095a4:	2010      	movs	r0, #16
 80095a6:	f7ff ff8f 	bl	80094c8 <malloc>
 80095aa:	6270      	str	r0, [r6, #36]	; 0x24
 80095ac:	6044      	str	r4, [r0, #4]
 80095ae:	6084      	str	r4, [r0, #8]
 80095b0:	6004      	str	r4, [r0, #0]
 80095b2:	60c4      	str	r4, [r0, #12]
 80095b4:	2d00      	cmp	r5, #0
 80095b6:	d007      	beq.n	80095c8 <_Bfree+0x30>
 80095b8:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80095ba:	686a      	ldr	r2, [r5, #4]
 80095bc:	68db      	ldr	r3, [r3, #12]
 80095be:	0092      	lsls	r2, r2, #2
 80095c0:	189b      	adds	r3, r3, r2
 80095c2:	681a      	ldr	r2, [r3, #0]
 80095c4:	602a      	str	r2, [r5, #0]
 80095c6:	601d      	str	r5, [r3, #0]
 80095c8:	bd70      	pop	{r4, r5, r6, pc}

080095ca <__multadd>:
 80095ca:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80095cc:	001e      	movs	r6, r3
 80095ce:	2314      	movs	r3, #20
 80095d0:	469c      	mov	ip, r3
 80095d2:	0007      	movs	r7, r0
 80095d4:	000c      	movs	r4, r1
 80095d6:	2000      	movs	r0, #0
 80095d8:	690d      	ldr	r5, [r1, #16]
 80095da:	448c      	add	ip, r1
 80095dc:	4663      	mov	r3, ip
 80095de:	681b      	ldr	r3, [r3, #0]
 80095e0:	3001      	adds	r0, #1
 80095e2:	b299      	uxth	r1, r3
 80095e4:	4663      	mov	r3, ip
 80095e6:	681b      	ldr	r3, [r3, #0]
 80095e8:	4351      	muls	r1, r2
 80095ea:	0c1b      	lsrs	r3, r3, #16
 80095ec:	4353      	muls	r3, r2
 80095ee:	1989      	adds	r1, r1, r6
 80095f0:	0c0e      	lsrs	r6, r1, #16
 80095f2:	199b      	adds	r3, r3, r6
 80095f4:	b289      	uxth	r1, r1
 80095f6:	0c1e      	lsrs	r6, r3, #16
 80095f8:	041b      	lsls	r3, r3, #16
 80095fa:	185b      	adds	r3, r3, r1
 80095fc:	4661      	mov	r1, ip
 80095fe:	c108      	stmia	r1!, {r3}
 8009600:	468c      	mov	ip, r1
 8009602:	4285      	cmp	r5, r0
 8009604:	dcea      	bgt.n	80095dc <__multadd+0x12>
 8009606:	2e00      	cmp	r6, #0
 8009608:	d01b      	beq.n	8009642 <__multadd+0x78>
 800960a:	68a3      	ldr	r3, [r4, #8]
 800960c:	42ab      	cmp	r3, r5
 800960e:	dc12      	bgt.n	8009636 <__multadd+0x6c>
 8009610:	6863      	ldr	r3, [r4, #4]
 8009612:	0038      	movs	r0, r7
 8009614:	1c59      	adds	r1, r3, #1
 8009616:	f7ff ff87 	bl	8009528 <_Balloc>
 800961a:	0021      	movs	r1, r4
 800961c:	6923      	ldr	r3, [r4, #16]
 800961e:	9001      	str	r0, [sp, #4]
 8009620:	1c9a      	adds	r2, r3, #2
 8009622:	0092      	lsls	r2, r2, #2
 8009624:	310c      	adds	r1, #12
 8009626:	300c      	adds	r0, #12
 8009628:	f7ff ff75 	bl	8009516 <memcpy>
 800962c:	0021      	movs	r1, r4
 800962e:	0038      	movs	r0, r7
 8009630:	f7ff ffb2 	bl	8009598 <_Bfree>
 8009634:	9c01      	ldr	r4, [sp, #4]
 8009636:	1d2b      	adds	r3, r5, #4
 8009638:	009b      	lsls	r3, r3, #2
 800963a:	18e3      	adds	r3, r4, r3
 800963c:	3501      	adds	r5, #1
 800963e:	605e      	str	r6, [r3, #4]
 8009640:	6125      	str	r5, [r4, #16]
 8009642:	0020      	movs	r0, r4
 8009644:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}

08009646 <__s2b>:
 8009646:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009648:	0006      	movs	r6, r0
 800964a:	0018      	movs	r0, r3
 800964c:	000c      	movs	r4, r1
 800964e:	3008      	adds	r0, #8
 8009650:	2109      	movs	r1, #9
 8009652:	9301      	str	r3, [sp, #4]
 8009654:	0015      	movs	r5, r2
 8009656:	f7f6 fdf3 	bl	8000240 <__divsi3>
 800965a:	2301      	movs	r3, #1
 800965c:	2100      	movs	r1, #0
 800965e:	4283      	cmp	r3, r0
 8009660:	db1f      	blt.n	80096a2 <__s2b+0x5c>
 8009662:	0030      	movs	r0, r6
 8009664:	f7ff ff60 	bl	8009528 <_Balloc>
 8009668:	9b08      	ldr	r3, [sp, #32]
 800966a:	6143      	str	r3, [r0, #20]
 800966c:	2301      	movs	r3, #1
 800966e:	6103      	str	r3, [r0, #16]
 8009670:	2d09      	cmp	r5, #9
 8009672:	dd19      	ble.n	80096a8 <__s2b+0x62>
 8009674:	0023      	movs	r3, r4
 8009676:	3309      	adds	r3, #9
 8009678:	001f      	movs	r7, r3
 800967a:	9300      	str	r3, [sp, #0]
 800967c:	1964      	adds	r4, r4, r5
 800967e:	783b      	ldrb	r3, [r7, #0]
 8009680:	0001      	movs	r1, r0
 8009682:	3b30      	subs	r3, #48	; 0x30
 8009684:	220a      	movs	r2, #10
 8009686:	0030      	movs	r0, r6
 8009688:	3701      	adds	r7, #1
 800968a:	f7ff ff9e 	bl	80095ca <__multadd>
 800968e:	42a7      	cmp	r7, r4
 8009690:	d1f5      	bne.n	800967e <__s2b+0x38>
 8009692:	9b00      	ldr	r3, [sp, #0]
 8009694:	195c      	adds	r4, r3, r5
 8009696:	3c08      	subs	r4, #8
 8009698:	002f      	movs	r7, r5
 800969a:	9b01      	ldr	r3, [sp, #4]
 800969c:	429f      	cmp	r7, r3
 800969e:	db06      	blt.n	80096ae <__s2b+0x68>
 80096a0:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 80096a2:	005b      	lsls	r3, r3, #1
 80096a4:	3101      	adds	r1, #1
 80096a6:	e7da      	b.n	800965e <__s2b+0x18>
 80096a8:	340a      	adds	r4, #10
 80096aa:	2509      	movs	r5, #9
 80096ac:	e7f4      	b.n	8009698 <__s2b+0x52>
 80096ae:	1b63      	subs	r3, r4, r5
 80096b0:	5ddb      	ldrb	r3, [r3, r7]
 80096b2:	0001      	movs	r1, r0
 80096b4:	3b30      	subs	r3, #48	; 0x30
 80096b6:	220a      	movs	r2, #10
 80096b8:	0030      	movs	r0, r6
 80096ba:	f7ff ff86 	bl	80095ca <__multadd>
 80096be:	3701      	adds	r7, #1
 80096c0:	e7eb      	b.n	800969a <__s2b+0x54>

080096c2 <__hi0bits>:
 80096c2:	0003      	movs	r3, r0
 80096c4:	0c02      	lsrs	r2, r0, #16
 80096c6:	2000      	movs	r0, #0
 80096c8:	4282      	cmp	r2, r0
 80096ca:	d101      	bne.n	80096d0 <__hi0bits+0xe>
 80096cc:	041b      	lsls	r3, r3, #16
 80096ce:	3010      	adds	r0, #16
 80096d0:	0e1a      	lsrs	r2, r3, #24
 80096d2:	d101      	bne.n	80096d8 <__hi0bits+0x16>
 80096d4:	3008      	adds	r0, #8
 80096d6:	021b      	lsls	r3, r3, #8
 80096d8:	0f1a      	lsrs	r2, r3, #28
 80096da:	d101      	bne.n	80096e0 <__hi0bits+0x1e>
 80096dc:	3004      	adds	r0, #4
 80096de:	011b      	lsls	r3, r3, #4
 80096e0:	0f9a      	lsrs	r2, r3, #30
 80096e2:	d101      	bne.n	80096e8 <__hi0bits+0x26>
 80096e4:	3002      	adds	r0, #2
 80096e6:	009b      	lsls	r3, r3, #2
 80096e8:	2b00      	cmp	r3, #0
 80096ea:	db03      	blt.n	80096f4 <__hi0bits+0x32>
 80096ec:	3001      	adds	r0, #1
 80096ee:	005b      	lsls	r3, r3, #1
 80096f0:	d400      	bmi.n	80096f4 <__hi0bits+0x32>
 80096f2:	2020      	movs	r0, #32
 80096f4:	4770      	bx	lr

080096f6 <__lo0bits>:
 80096f6:	2207      	movs	r2, #7
 80096f8:	6803      	ldr	r3, [r0, #0]
 80096fa:	b510      	push	{r4, lr}
 80096fc:	0001      	movs	r1, r0
 80096fe:	401a      	ands	r2, r3
 8009700:	d00d      	beq.n	800971e <__lo0bits+0x28>
 8009702:	2401      	movs	r4, #1
 8009704:	2000      	movs	r0, #0
 8009706:	4223      	tst	r3, r4
 8009708:	d105      	bne.n	8009716 <__lo0bits+0x20>
 800970a:	3002      	adds	r0, #2
 800970c:	4203      	tst	r3, r0
 800970e:	d003      	beq.n	8009718 <__lo0bits+0x22>
 8009710:	40e3      	lsrs	r3, r4
 8009712:	0020      	movs	r0, r4
 8009714:	600b      	str	r3, [r1, #0]
 8009716:	bd10      	pop	{r4, pc}
 8009718:	089b      	lsrs	r3, r3, #2
 800971a:	600b      	str	r3, [r1, #0]
 800971c:	e7fb      	b.n	8009716 <__lo0bits+0x20>
 800971e:	b29c      	uxth	r4, r3
 8009720:	0010      	movs	r0, r2
 8009722:	2c00      	cmp	r4, #0
 8009724:	d101      	bne.n	800972a <__lo0bits+0x34>
 8009726:	2010      	movs	r0, #16
 8009728:	0c1b      	lsrs	r3, r3, #16
 800972a:	b2da      	uxtb	r2, r3
 800972c:	2a00      	cmp	r2, #0
 800972e:	d101      	bne.n	8009734 <__lo0bits+0x3e>
 8009730:	3008      	adds	r0, #8
 8009732:	0a1b      	lsrs	r3, r3, #8
 8009734:	071a      	lsls	r2, r3, #28
 8009736:	d101      	bne.n	800973c <__lo0bits+0x46>
 8009738:	3004      	adds	r0, #4
 800973a:	091b      	lsrs	r3, r3, #4
 800973c:	079a      	lsls	r2, r3, #30
 800973e:	d101      	bne.n	8009744 <__lo0bits+0x4e>
 8009740:	3002      	adds	r0, #2
 8009742:	089b      	lsrs	r3, r3, #2
 8009744:	07da      	lsls	r2, r3, #31
 8009746:	d4e8      	bmi.n	800971a <__lo0bits+0x24>
 8009748:	085b      	lsrs	r3, r3, #1
 800974a:	d001      	beq.n	8009750 <__lo0bits+0x5a>
 800974c:	3001      	adds	r0, #1
 800974e:	e7e4      	b.n	800971a <__lo0bits+0x24>
 8009750:	2020      	movs	r0, #32
 8009752:	e7e0      	b.n	8009716 <__lo0bits+0x20>

08009754 <__i2b>:
 8009754:	b510      	push	{r4, lr}
 8009756:	000c      	movs	r4, r1
 8009758:	2101      	movs	r1, #1
 800975a:	f7ff fee5 	bl	8009528 <_Balloc>
 800975e:	2301      	movs	r3, #1
 8009760:	6144      	str	r4, [r0, #20]
 8009762:	6103      	str	r3, [r0, #16]
 8009764:	bd10      	pop	{r4, pc}

08009766 <__multiply>:
 8009766:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009768:	690b      	ldr	r3, [r1, #16]
 800976a:	0014      	movs	r4, r2
 800976c:	6912      	ldr	r2, [r2, #16]
 800976e:	b089      	sub	sp, #36	; 0x24
 8009770:	000d      	movs	r5, r1
 8009772:	4293      	cmp	r3, r2
 8009774:	da01      	bge.n	800977a <__multiply+0x14>
 8009776:	0025      	movs	r5, r4
 8009778:	000c      	movs	r4, r1
 800977a:	692f      	ldr	r7, [r5, #16]
 800977c:	6926      	ldr	r6, [r4, #16]
 800977e:	6869      	ldr	r1, [r5, #4]
 8009780:	19bb      	adds	r3, r7, r6
 8009782:	9302      	str	r3, [sp, #8]
 8009784:	68ab      	ldr	r3, [r5, #8]
 8009786:	19ba      	adds	r2, r7, r6
 8009788:	4293      	cmp	r3, r2
 800978a:	da00      	bge.n	800978e <__multiply+0x28>
 800978c:	3101      	adds	r1, #1
 800978e:	f7ff fecb 	bl	8009528 <_Balloc>
 8009792:	0002      	movs	r2, r0
 8009794:	19bb      	adds	r3, r7, r6
 8009796:	3214      	adds	r2, #20
 8009798:	009b      	lsls	r3, r3, #2
 800979a:	18d3      	adds	r3, r2, r3
 800979c:	469c      	mov	ip, r3
 800979e:	2100      	movs	r1, #0
 80097a0:	0013      	movs	r3, r2
 80097a2:	9004      	str	r0, [sp, #16]
 80097a4:	4563      	cmp	r3, ip
 80097a6:	d31d      	bcc.n	80097e4 <__multiply+0x7e>
 80097a8:	3514      	adds	r5, #20
 80097aa:	00bf      	lsls	r7, r7, #2
 80097ac:	19eb      	adds	r3, r5, r7
 80097ae:	3414      	adds	r4, #20
 80097b0:	00b6      	lsls	r6, r6, #2
 80097b2:	9305      	str	r3, [sp, #20]
 80097b4:	19a3      	adds	r3, r4, r6
 80097b6:	9503      	str	r5, [sp, #12]
 80097b8:	9401      	str	r4, [sp, #4]
 80097ba:	9307      	str	r3, [sp, #28]
 80097bc:	9b07      	ldr	r3, [sp, #28]
 80097be:	9901      	ldr	r1, [sp, #4]
 80097c0:	4299      	cmp	r1, r3
 80097c2:	d311      	bcc.n	80097e8 <__multiply+0x82>
 80097c4:	9b02      	ldr	r3, [sp, #8]
 80097c6:	2b00      	cmp	r3, #0
 80097c8:	dd06      	ble.n	80097d8 <__multiply+0x72>
 80097ca:	2304      	movs	r3, #4
 80097cc:	425b      	negs	r3, r3
 80097ce:	449c      	add	ip, r3
 80097d0:	4663      	mov	r3, ip
 80097d2:	681b      	ldr	r3, [r3, #0]
 80097d4:	2b00      	cmp	r3, #0
 80097d6:	d051      	beq.n	800987c <__multiply+0x116>
 80097d8:	9b04      	ldr	r3, [sp, #16]
 80097da:	9a02      	ldr	r2, [sp, #8]
 80097dc:	0018      	movs	r0, r3
 80097de:	611a      	str	r2, [r3, #16]
 80097e0:	b009      	add	sp, #36	; 0x24
 80097e2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80097e4:	c302      	stmia	r3!, {r1}
 80097e6:	e7dd      	b.n	80097a4 <__multiply+0x3e>
 80097e8:	9b01      	ldr	r3, [sp, #4]
 80097ea:	681b      	ldr	r3, [r3, #0]
 80097ec:	b298      	uxth	r0, r3
 80097ee:	2800      	cmp	r0, #0
 80097f0:	d01c      	beq.n	800982c <__multiply+0xc6>
 80097f2:	0015      	movs	r5, r2
 80097f4:	2600      	movs	r6, #0
 80097f6:	9f03      	ldr	r7, [sp, #12]
 80097f8:	cf02      	ldmia	r7!, {r1}
 80097fa:	682c      	ldr	r4, [r5, #0]
 80097fc:	b28b      	uxth	r3, r1
 80097fe:	4343      	muls	r3, r0
 8009800:	0c09      	lsrs	r1, r1, #16
 8009802:	4341      	muls	r1, r0
 8009804:	b2a4      	uxth	r4, r4
 8009806:	191b      	adds	r3, r3, r4
 8009808:	199b      	adds	r3, r3, r6
 800980a:	000e      	movs	r6, r1
 800980c:	6829      	ldr	r1, [r5, #0]
 800980e:	9506      	str	r5, [sp, #24]
 8009810:	0c09      	lsrs	r1, r1, #16
 8009812:	1871      	adds	r1, r6, r1
 8009814:	0c1e      	lsrs	r6, r3, #16
 8009816:	1989      	adds	r1, r1, r6
 8009818:	0c0e      	lsrs	r6, r1, #16
 800981a:	b29b      	uxth	r3, r3
 800981c:	0409      	lsls	r1, r1, #16
 800981e:	430b      	orrs	r3, r1
 8009820:	c508      	stmia	r5!, {r3}
 8009822:	9b05      	ldr	r3, [sp, #20]
 8009824:	42bb      	cmp	r3, r7
 8009826:	d8e7      	bhi.n	80097f8 <__multiply+0x92>
 8009828:	9b06      	ldr	r3, [sp, #24]
 800982a:	605e      	str	r6, [r3, #4]
 800982c:	9b01      	ldr	r3, [sp, #4]
 800982e:	681b      	ldr	r3, [r3, #0]
 8009830:	0c1d      	lsrs	r5, r3, #16
 8009832:	d01e      	beq.n	8009872 <__multiply+0x10c>
 8009834:	0010      	movs	r0, r2
 8009836:	2700      	movs	r7, #0
 8009838:	6813      	ldr	r3, [r2, #0]
 800983a:	9e03      	ldr	r6, [sp, #12]
 800983c:	6831      	ldr	r1, [r6, #0]
 800983e:	6804      	ldr	r4, [r0, #0]
 8009840:	b289      	uxth	r1, r1
 8009842:	4369      	muls	r1, r5
 8009844:	0c24      	lsrs	r4, r4, #16
 8009846:	1909      	adds	r1, r1, r4
 8009848:	19c9      	adds	r1, r1, r7
 800984a:	040f      	lsls	r7, r1, #16
 800984c:	b29b      	uxth	r3, r3
 800984e:	433b      	orrs	r3, r7
 8009850:	6003      	str	r3, [r0, #0]
 8009852:	ce80      	ldmia	r6!, {r7}
 8009854:	6843      	ldr	r3, [r0, #4]
 8009856:	0c3f      	lsrs	r7, r7, #16
 8009858:	436f      	muls	r7, r5
 800985a:	b29b      	uxth	r3, r3
 800985c:	18fb      	adds	r3, r7, r3
 800985e:	0c09      	lsrs	r1, r1, #16
 8009860:	185b      	adds	r3, r3, r1
 8009862:	9905      	ldr	r1, [sp, #20]
 8009864:	9006      	str	r0, [sp, #24]
 8009866:	0c1f      	lsrs	r7, r3, #16
 8009868:	3004      	adds	r0, #4
 800986a:	42b1      	cmp	r1, r6
 800986c:	d8e6      	bhi.n	800983c <__multiply+0xd6>
 800986e:	9906      	ldr	r1, [sp, #24]
 8009870:	604b      	str	r3, [r1, #4]
 8009872:	9b01      	ldr	r3, [sp, #4]
 8009874:	3204      	adds	r2, #4
 8009876:	3304      	adds	r3, #4
 8009878:	9301      	str	r3, [sp, #4]
 800987a:	e79f      	b.n	80097bc <__multiply+0x56>
 800987c:	9b02      	ldr	r3, [sp, #8]
 800987e:	3b01      	subs	r3, #1
 8009880:	9302      	str	r3, [sp, #8]
 8009882:	e79f      	b.n	80097c4 <__multiply+0x5e>

08009884 <__pow5mult>:
 8009884:	2303      	movs	r3, #3
 8009886:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009888:	4013      	ands	r3, r2
 800988a:	0005      	movs	r5, r0
 800988c:	000e      	movs	r6, r1
 800988e:	0014      	movs	r4, r2
 8009890:	2b00      	cmp	r3, #0
 8009892:	d008      	beq.n	80098a6 <__pow5mult+0x22>
 8009894:	4922      	ldr	r1, [pc, #136]	; (8009920 <__pow5mult+0x9c>)
 8009896:	3b01      	subs	r3, #1
 8009898:	009a      	lsls	r2, r3, #2
 800989a:	5852      	ldr	r2, [r2, r1]
 800989c:	2300      	movs	r3, #0
 800989e:	0031      	movs	r1, r6
 80098a0:	f7ff fe93 	bl	80095ca <__multadd>
 80098a4:	0006      	movs	r6, r0
 80098a6:	10a3      	asrs	r3, r4, #2
 80098a8:	9301      	str	r3, [sp, #4]
 80098aa:	d036      	beq.n	800991a <__pow5mult+0x96>
 80098ac:	6a6c      	ldr	r4, [r5, #36]	; 0x24
 80098ae:	2c00      	cmp	r4, #0
 80098b0:	d107      	bne.n	80098c2 <__pow5mult+0x3e>
 80098b2:	2010      	movs	r0, #16
 80098b4:	f7ff fe08 	bl	80094c8 <malloc>
 80098b8:	6268      	str	r0, [r5, #36]	; 0x24
 80098ba:	6044      	str	r4, [r0, #4]
 80098bc:	6084      	str	r4, [r0, #8]
 80098be:	6004      	str	r4, [r0, #0]
 80098c0:	60c4      	str	r4, [r0, #12]
 80098c2:	6a6f      	ldr	r7, [r5, #36]	; 0x24
 80098c4:	68bc      	ldr	r4, [r7, #8]
 80098c6:	2c00      	cmp	r4, #0
 80098c8:	d107      	bne.n	80098da <__pow5mult+0x56>
 80098ca:	4916      	ldr	r1, [pc, #88]	; (8009924 <__pow5mult+0xa0>)
 80098cc:	0028      	movs	r0, r5
 80098ce:	f7ff ff41 	bl	8009754 <__i2b>
 80098d2:	2300      	movs	r3, #0
 80098d4:	0004      	movs	r4, r0
 80098d6:	60b8      	str	r0, [r7, #8]
 80098d8:	6003      	str	r3, [r0, #0]
 80098da:	2201      	movs	r2, #1
 80098dc:	9b01      	ldr	r3, [sp, #4]
 80098de:	4213      	tst	r3, r2
 80098e0:	d00a      	beq.n	80098f8 <__pow5mult+0x74>
 80098e2:	0031      	movs	r1, r6
 80098e4:	0022      	movs	r2, r4
 80098e6:	0028      	movs	r0, r5
 80098e8:	f7ff ff3d 	bl	8009766 <__multiply>
 80098ec:	0007      	movs	r7, r0
 80098ee:	0031      	movs	r1, r6
 80098f0:	0028      	movs	r0, r5
 80098f2:	f7ff fe51 	bl	8009598 <_Bfree>
 80098f6:	003e      	movs	r6, r7
 80098f8:	9b01      	ldr	r3, [sp, #4]
 80098fa:	105b      	asrs	r3, r3, #1
 80098fc:	9301      	str	r3, [sp, #4]
 80098fe:	d00c      	beq.n	800991a <__pow5mult+0x96>
 8009900:	6820      	ldr	r0, [r4, #0]
 8009902:	2800      	cmp	r0, #0
 8009904:	d107      	bne.n	8009916 <__pow5mult+0x92>
 8009906:	0022      	movs	r2, r4
 8009908:	0021      	movs	r1, r4
 800990a:	0028      	movs	r0, r5
 800990c:	f7ff ff2b 	bl	8009766 <__multiply>
 8009910:	2300      	movs	r3, #0
 8009912:	6020      	str	r0, [r4, #0]
 8009914:	6003      	str	r3, [r0, #0]
 8009916:	0004      	movs	r4, r0
 8009918:	e7df      	b.n	80098da <__pow5mult+0x56>
 800991a:	0030      	movs	r0, r6
 800991c:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 800991e:	46c0      	nop			; (mov r8, r8)
 8009920:	0800a548 	.word	0x0800a548
 8009924:	00000271 	.word	0x00000271

08009928 <__lshift>:
 8009928:	b5f0      	push	{r4, r5, r6, r7, lr}
 800992a:	000d      	movs	r5, r1
 800992c:	0017      	movs	r7, r2
 800992e:	692b      	ldr	r3, [r5, #16]
 8009930:	1154      	asrs	r4, r2, #5
 8009932:	b085      	sub	sp, #20
 8009934:	18e3      	adds	r3, r4, r3
 8009936:	9301      	str	r3, [sp, #4]
 8009938:	3301      	adds	r3, #1
 800993a:	9300      	str	r3, [sp, #0]
 800993c:	6849      	ldr	r1, [r1, #4]
 800993e:	68ab      	ldr	r3, [r5, #8]
 8009940:	9002      	str	r0, [sp, #8]
 8009942:	9a00      	ldr	r2, [sp, #0]
 8009944:	4293      	cmp	r3, r2
 8009946:	db35      	blt.n	80099b4 <__lshift+0x8c>
 8009948:	9802      	ldr	r0, [sp, #8]
 800994a:	f7ff fded 	bl	8009528 <_Balloc>
 800994e:	2300      	movs	r3, #0
 8009950:	0002      	movs	r2, r0
 8009952:	0006      	movs	r6, r0
 8009954:	0019      	movs	r1, r3
 8009956:	3214      	adds	r2, #20
 8009958:	42a3      	cmp	r3, r4
 800995a:	db2e      	blt.n	80099ba <__lshift+0x92>
 800995c:	43e3      	mvns	r3, r4
 800995e:	17db      	asrs	r3, r3, #31
 8009960:	401c      	ands	r4, r3
 8009962:	002b      	movs	r3, r5
 8009964:	00a4      	lsls	r4, r4, #2
 8009966:	1914      	adds	r4, r2, r4
 8009968:	692a      	ldr	r2, [r5, #16]
 800996a:	3314      	adds	r3, #20
 800996c:	0092      	lsls	r2, r2, #2
 800996e:	189a      	adds	r2, r3, r2
 8009970:	4694      	mov	ip, r2
 8009972:	221f      	movs	r2, #31
 8009974:	4017      	ands	r7, r2
 8009976:	d024      	beq.n	80099c2 <__lshift+0x9a>
 8009978:	3201      	adds	r2, #1
 800997a:	1bd2      	subs	r2, r2, r7
 800997c:	9203      	str	r2, [sp, #12]
 800997e:	2200      	movs	r2, #0
 8009980:	6819      	ldr	r1, [r3, #0]
 8009982:	0020      	movs	r0, r4
 8009984:	40b9      	lsls	r1, r7
 8009986:	430a      	orrs	r2, r1
 8009988:	c404      	stmia	r4!, {r2}
 800998a:	cb04      	ldmia	r3!, {r2}
 800998c:	9903      	ldr	r1, [sp, #12]
 800998e:	40ca      	lsrs	r2, r1
 8009990:	459c      	cmp	ip, r3
 8009992:	d8f5      	bhi.n	8009980 <__lshift+0x58>
 8009994:	6042      	str	r2, [r0, #4]
 8009996:	2a00      	cmp	r2, #0
 8009998:	d002      	beq.n	80099a0 <__lshift+0x78>
 800999a:	9b01      	ldr	r3, [sp, #4]
 800999c:	3302      	adds	r3, #2
 800999e:	9300      	str	r3, [sp, #0]
 80099a0:	9b00      	ldr	r3, [sp, #0]
 80099a2:	9802      	ldr	r0, [sp, #8]
 80099a4:	3b01      	subs	r3, #1
 80099a6:	6133      	str	r3, [r6, #16]
 80099a8:	0029      	movs	r1, r5
 80099aa:	f7ff fdf5 	bl	8009598 <_Bfree>
 80099ae:	0030      	movs	r0, r6
 80099b0:	b005      	add	sp, #20
 80099b2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80099b4:	3101      	adds	r1, #1
 80099b6:	005b      	lsls	r3, r3, #1
 80099b8:	e7c3      	b.n	8009942 <__lshift+0x1a>
 80099ba:	0098      	lsls	r0, r3, #2
 80099bc:	5011      	str	r1, [r2, r0]
 80099be:	3301      	adds	r3, #1
 80099c0:	e7ca      	b.n	8009958 <__lshift+0x30>
 80099c2:	cb04      	ldmia	r3!, {r2}
 80099c4:	c404      	stmia	r4!, {r2}
 80099c6:	459c      	cmp	ip, r3
 80099c8:	d8fb      	bhi.n	80099c2 <__lshift+0x9a>
 80099ca:	e7e9      	b.n	80099a0 <__lshift+0x78>

080099cc <__mcmp>:
 80099cc:	690a      	ldr	r2, [r1, #16]
 80099ce:	6903      	ldr	r3, [r0, #16]
 80099d0:	b530      	push	{r4, r5, lr}
 80099d2:	1a9b      	subs	r3, r3, r2
 80099d4:	d10d      	bne.n	80099f2 <__mcmp+0x26>
 80099d6:	0092      	lsls	r2, r2, #2
 80099d8:	3014      	adds	r0, #20
 80099da:	3114      	adds	r1, #20
 80099dc:	1884      	adds	r4, r0, r2
 80099de:	1889      	adds	r1, r1, r2
 80099e0:	3c04      	subs	r4, #4
 80099e2:	3904      	subs	r1, #4
 80099e4:	6825      	ldr	r5, [r4, #0]
 80099e6:	680a      	ldr	r2, [r1, #0]
 80099e8:	4295      	cmp	r5, r2
 80099ea:	d004      	beq.n	80099f6 <__mcmp+0x2a>
 80099ec:	2301      	movs	r3, #1
 80099ee:	4295      	cmp	r5, r2
 80099f0:	d304      	bcc.n	80099fc <__mcmp+0x30>
 80099f2:	0018      	movs	r0, r3
 80099f4:	bd30      	pop	{r4, r5, pc}
 80099f6:	42a0      	cmp	r0, r4
 80099f8:	d3f2      	bcc.n	80099e0 <__mcmp+0x14>
 80099fa:	e7fa      	b.n	80099f2 <__mcmp+0x26>
 80099fc:	425b      	negs	r3, r3
 80099fe:	e7f8      	b.n	80099f2 <__mcmp+0x26>

08009a00 <__mdiff>:
 8009a00:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009a02:	000d      	movs	r5, r1
 8009a04:	b085      	sub	sp, #20
 8009a06:	0007      	movs	r7, r0
 8009a08:	0011      	movs	r1, r2
 8009a0a:	0028      	movs	r0, r5
 8009a0c:	0014      	movs	r4, r2
 8009a0e:	f7ff ffdd 	bl	80099cc <__mcmp>
 8009a12:	1e06      	subs	r6, r0, #0
 8009a14:	d108      	bne.n	8009a28 <__mdiff+0x28>
 8009a16:	0001      	movs	r1, r0
 8009a18:	0038      	movs	r0, r7
 8009a1a:	f7ff fd85 	bl	8009528 <_Balloc>
 8009a1e:	2301      	movs	r3, #1
 8009a20:	6146      	str	r6, [r0, #20]
 8009a22:	6103      	str	r3, [r0, #16]
 8009a24:	b005      	add	sp, #20
 8009a26:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009a28:	2301      	movs	r3, #1
 8009a2a:	9301      	str	r3, [sp, #4]
 8009a2c:	2800      	cmp	r0, #0
 8009a2e:	db04      	blt.n	8009a3a <__mdiff+0x3a>
 8009a30:	0023      	movs	r3, r4
 8009a32:	002c      	movs	r4, r5
 8009a34:	001d      	movs	r5, r3
 8009a36:	2300      	movs	r3, #0
 8009a38:	9301      	str	r3, [sp, #4]
 8009a3a:	6861      	ldr	r1, [r4, #4]
 8009a3c:	0038      	movs	r0, r7
 8009a3e:	f7ff fd73 	bl	8009528 <_Balloc>
 8009a42:	002f      	movs	r7, r5
 8009a44:	2200      	movs	r2, #0
 8009a46:	9b01      	ldr	r3, [sp, #4]
 8009a48:	6926      	ldr	r6, [r4, #16]
 8009a4a:	60c3      	str	r3, [r0, #12]
 8009a4c:	3414      	adds	r4, #20
 8009a4e:	00b3      	lsls	r3, r6, #2
 8009a50:	18e3      	adds	r3, r4, r3
 8009a52:	9302      	str	r3, [sp, #8]
 8009a54:	692b      	ldr	r3, [r5, #16]
 8009a56:	3714      	adds	r7, #20
 8009a58:	009b      	lsls	r3, r3, #2
 8009a5a:	18fb      	adds	r3, r7, r3
 8009a5c:	9303      	str	r3, [sp, #12]
 8009a5e:	0003      	movs	r3, r0
 8009a60:	4694      	mov	ip, r2
 8009a62:	3314      	adds	r3, #20
 8009a64:	cc20      	ldmia	r4!, {r5}
 8009a66:	cf04      	ldmia	r7!, {r2}
 8009a68:	9201      	str	r2, [sp, #4]
 8009a6a:	b2aa      	uxth	r2, r5
 8009a6c:	4494      	add	ip, r2
 8009a6e:	466a      	mov	r2, sp
 8009a70:	4661      	mov	r1, ip
 8009a72:	8892      	ldrh	r2, [r2, #4]
 8009a74:	0c2d      	lsrs	r5, r5, #16
 8009a76:	1a8a      	subs	r2, r1, r2
 8009a78:	9901      	ldr	r1, [sp, #4]
 8009a7a:	0c09      	lsrs	r1, r1, #16
 8009a7c:	1a69      	subs	r1, r5, r1
 8009a7e:	1415      	asrs	r5, r2, #16
 8009a80:	1949      	adds	r1, r1, r5
 8009a82:	140d      	asrs	r5, r1, #16
 8009a84:	b292      	uxth	r2, r2
 8009a86:	0409      	lsls	r1, r1, #16
 8009a88:	430a      	orrs	r2, r1
 8009a8a:	601a      	str	r2, [r3, #0]
 8009a8c:	9a03      	ldr	r2, [sp, #12]
 8009a8e:	46ac      	mov	ip, r5
 8009a90:	3304      	adds	r3, #4
 8009a92:	42ba      	cmp	r2, r7
 8009a94:	d8e6      	bhi.n	8009a64 <__mdiff+0x64>
 8009a96:	9902      	ldr	r1, [sp, #8]
 8009a98:	001a      	movs	r2, r3
 8009a9a:	428c      	cmp	r4, r1
 8009a9c:	d305      	bcc.n	8009aaa <__mdiff+0xaa>
 8009a9e:	3a04      	subs	r2, #4
 8009aa0:	6813      	ldr	r3, [r2, #0]
 8009aa2:	2b00      	cmp	r3, #0
 8009aa4:	d00e      	beq.n	8009ac4 <__mdiff+0xc4>
 8009aa6:	6106      	str	r6, [r0, #16]
 8009aa8:	e7bc      	b.n	8009a24 <__mdiff+0x24>
 8009aaa:	cc04      	ldmia	r4!, {r2}
 8009aac:	b291      	uxth	r1, r2
 8009aae:	4461      	add	r1, ip
 8009ab0:	140d      	asrs	r5, r1, #16
 8009ab2:	0c12      	lsrs	r2, r2, #16
 8009ab4:	1952      	adds	r2, r2, r5
 8009ab6:	1415      	asrs	r5, r2, #16
 8009ab8:	b289      	uxth	r1, r1
 8009aba:	0412      	lsls	r2, r2, #16
 8009abc:	430a      	orrs	r2, r1
 8009abe:	46ac      	mov	ip, r5
 8009ac0:	c304      	stmia	r3!, {r2}
 8009ac2:	e7e8      	b.n	8009a96 <__mdiff+0x96>
 8009ac4:	3e01      	subs	r6, #1
 8009ac6:	e7ea      	b.n	8009a9e <__mdiff+0x9e>

08009ac8 <__ulp>:
 8009ac8:	000b      	movs	r3, r1
 8009aca:	4910      	ldr	r1, [pc, #64]	; (8009b0c <__ulp+0x44>)
 8009acc:	b510      	push	{r4, lr}
 8009ace:	4019      	ands	r1, r3
 8009ad0:	4b0f      	ldr	r3, [pc, #60]	; (8009b10 <__ulp+0x48>)
 8009ad2:	18c9      	adds	r1, r1, r3
 8009ad4:	2900      	cmp	r1, #0
 8009ad6:	dd04      	ble.n	8009ae2 <__ulp+0x1a>
 8009ad8:	2200      	movs	r2, #0
 8009ada:	000b      	movs	r3, r1
 8009adc:	0010      	movs	r0, r2
 8009ade:	0019      	movs	r1, r3
 8009ae0:	bd10      	pop	{r4, pc}
 8009ae2:	4249      	negs	r1, r1
 8009ae4:	1509      	asrs	r1, r1, #20
 8009ae6:	2200      	movs	r2, #0
 8009ae8:	2300      	movs	r3, #0
 8009aea:	2913      	cmp	r1, #19
 8009aec:	dc04      	bgt.n	8009af8 <__ulp+0x30>
 8009aee:	2080      	movs	r0, #128	; 0x80
 8009af0:	0300      	lsls	r0, r0, #12
 8009af2:	4108      	asrs	r0, r1
 8009af4:	0003      	movs	r3, r0
 8009af6:	e7f1      	b.n	8009adc <__ulp+0x14>
 8009af8:	3914      	subs	r1, #20
 8009afa:	2001      	movs	r0, #1
 8009afc:	291e      	cmp	r1, #30
 8009afe:	dc02      	bgt.n	8009b06 <__ulp+0x3e>
 8009b00:	241f      	movs	r4, #31
 8009b02:	1a61      	subs	r1, r4, r1
 8009b04:	4088      	lsls	r0, r1
 8009b06:	0002      	movs	r2, r0
 8009b08:	e7e8      	b.n	8009adc <__ulp+0x14>
 8009b0a:	46c0      	nop			; (mov r8, r8)
 8009b0c:	7ff00000 	.word	0x7ff00000
 8009b10:	fcc00000 	.word	0xfcc00000

08009b14 <__b2d>:
 8009b14:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009b16:	0006      	movs	r6, r0
 8009b18:	6903      	ldr	r3, [r0, #16]
 8009b1a:	3614      	adds	r6, #20
 8009b1c:	009b      	lsls	r3, r3, #2
 8009b1e:	18f3      	adds	r3, r6, r3
 8009b20:	1f1d      	subs	r5, r3, #4
 8009b22:	682c      	ldr	r4, [r5, #0]
 8009b24:	000f      	movs	r7, r1
 8009b26:	0020      	movs	r0, r4
 8009b28:	9301      	str	r3, [sp, #4]
 8009b2a:	f7ff fdca 	bl	80096c2 <__hi0bits>
 8009b2e:	2320      	movs	r3, #32
 8009b30:	1a1b      	subs	r3, r3, r0
 8009b32:	603b      	str	r3, [r7, #0]
 8009b34:	491c      	ldr	r1, [pc, #112]	; (8009ba8 <__b2d+0x94>)
 8009b36:	280a      	cmp	r0, #10
 8009b38:	dc16      	bgt.n	8009b68 <__b2d+0x54>
 8009b3a:	230b      	movs	r3, #11
 8009b3c:	0027      	movs	r7, r4
 8009b3e:	1a1b      	subs	r3, r3, r0
 8009b40:	40df      	lsrs	r7, r3
 8009b42:	4339      	orrs	r1, r7
 8009b44:	469c      	mov	ip, r3
 8009b46:	000b      	movs	r3, r1
 8009b48:	2100      	movs	r1, #0
 8009b4a:	42ae      	cmp	r6, r5
 8009b4c:	d202      	bcs.n	8009b54 <__b2d+0x40>
 8009b4e:	9901      	ldr	r1, [sp, #4]
 8009b50:	3908      	subs	r1, #8
 8009b52:	6809      	ldr	r1, [r1, #0]
 8009b54:	3015      	adds	r0, #21
 8009b56:	4084      	lsls	r4, r0
 8009b58:	4660      	mov	r0, ip
 8009b5a:	40c1      	lsrs	r1, r0
 8009b5c:	430c      	orrs	r4, r1
 8009b5e:	0022      	movs	r2, r4
 8009b60:	0010      	movs	r0, r2
 8009b62:	0019      	movs	r1, r3
 8009b64:	b003      	add	sp, #12
 8009b66:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009b68:	2700      	movs	r7, #0
 8009b6a:	42ae      	cmp	r6, r5
 8009b6c:	d202      	bcs.n	8009b74 <__b2d+0x60>
 8009b6e:	9d01      	ldr	r5, [sp, #4]
 8009b70:	3d08      	subs	r5, #8
 8009b72:	682f      	ldr	r7, [r5, #0]
 8009b74:	380b      	subs	r0, #11
 8009b76:	4684      	mov	ip, r0
 8009b78:	1e03      	subs	r3, r0, #0
 8009b7a:	d012      	beq.n	8009ba2 <__b2d+0x8e>
 8009b7c:	409c      	lsls	r4, r3
 8009b7e:	2020      	movs	r0, #32
 8009b80:	4321      	orrs	r1, r4
 8009b82:	003c      	movs	r4, r7
 8009b84:	1ac0      	subs	r0, r0, r3
 8009b86:	40c4      	lsrs	r4, r0
 8009b88:	4321      	orrs	r1, r4
 8009b8a:	000b      	movs	r3, r1
 8009b8c:	2100      	movs	r1, #0
 8009b8e:	42b5      	cmp	r5, r6
 8009b90:	d901      	bls.n	8009b96 <__b2d+0x82>
 8009b92:	3d04      	subs	r5, #4
 8009b94:	6829      	ldr	r1, [r5, #0]
 8009b96:	4664      	mov	r4, ip
 8009b98:	40c1      	lsrs	r1, r0
 8009b9a:	40a7      	lsls	r7, r4
 8009b9c:	430f      	orrs	r7, r1
 8009b9e:	003a      	movs	r2, r7
 8009ba0:	e7de      	b.n	8009b60 <__b2d+0x4c>
 8009ba2:	4321      	orrs	r1, r4
 8009ba4:	000b      	movs	r3, r1
 8009ba6:	e7fa      	b.n	8009b9e <__b2d+0x8a>
 8009ba8:	3ff00000 	.word	0x3ff00000

08009bac <__d2b>:
 8009bac:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8009bae:	001d      	movs	r5, r3
 8009bb0:	2101      	movs	r1, #1
 8009bb2:	0014      	movs	r4, r2
 8009bb4:	9f08      	ldr	r7, [sp, #32]
 8009bb6:	f7ff fcb7 	bl	8009528 <_Balloc>
 8009bba:	032b      	lsls	r3, r5, #12
 8009bbc:	006d      	lsls	r5, r5, #1
 8009bbe:	0006      	movs	r6, r0
 8009bc0:	0b1b      	lsrs	r3, r3, #12
 8009bc2:	0d6d      	lsrs	r5, r5, #21
 8009bc4:	d124      	bne.n	8009c10 <__d2b+0x64>
 8009bc6:	9301      	str	r3, [sp, #4]
 8009bc8:	2c00      	cmp	r4, #0
 8009bca:	d027      	beq.n	8009c1c <__d2b+0x70>
 8009bcc:	4668      	mov	r0, sp
 8009bce:	9400      	str	r4, [sp, #0]
 8009bd0:	f7ff fd91 	bl	80096f6 <__lo0bits>
 8009bd4:	9c00      	ldr	r4, [sp, #0]
 8009bd6:	2800      	cmp	r0, #0
 8009bd8:	d01e      	beq.n	8009c18 <__d2b+0x6c>
 8009bda:	9b01      	ldr	r3, [sp, #4]
 8009bdc:	2120      	movs	r1, #32
 8009bde:	001a      	movs	r2, r3
 8009be0:	1a09      	subs	r1, r1, r0
 8009be2:	408a      	lsls	r2, r1
 8009be4:	40c3      	lsrs	r3, r0
 8009be6:	4322      	orrs	r2, r4
 8009be8:	6172      	str	r2, [r6, #20]
 8009bea:	9301      	str	r3, [sp, #4]
 8009bec:	9c01      	ldr	r4, [sp, #4]
 8009bee:	61b4      	str	r4, [r6, #24]
 8009bf0:	1e63      	subs	r3, r4, #1
 8009bf2:	419c      	sbcs	r4, r3
 8009bf4:	3401      	adds	r4, #1
 8009bf6:	6134      	str	r4, [r6, #16]
 8009bf8:	2d00      	cmp	r5, #0
 8009bfa:	d018      	beq.n	8009c2e <__d2b+0x82>
 8009bfc:	4b12      	ldr	r3, [pc, #72]	; (8009c48 <__d2b+0x9c>)
 8009bfe:	18ed      	adds	r5, r5, r3
 8009c00:	2335      	movs	r3, #53	; 0x35
 8009c02:	182d      	adds	r5, r5, r0
 8009c04:	603d      	str	r5, [r7, #0]
 8009c06:	1a18      	subs	r0, r3, r0
 8009c08:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8009c0a:	6018      	str	r0, [r3, #0]
 8009c0c:	0030      	movs	r0, r6
 8009c0e:	bdfe      	pop	{r1, r2, r3, r4, r5, r6, r7, pc}
 8009c10:	2280      	movs	r2, #128	; 0x80
 8009c12:	0352      	lsls	r2, r2, #13
 8009c14:	4313      	orrs	r3, r2
 8009c16:	e7d6      	b.n	8009bc6 <__d2b+0x1a>
 8009c18:	6174      	str	r4, [r6, #20]
 8009c1a:	e7e7      	b.n	8009bec <__d2b+0x40>
 8009c1c:	a801      	add	r0, sp, #4
 8009c1e:	f7ff fd6a 	bl	80096f6 <__lo0bits>
 8009c22:	2401      	movs	r4, #1
 8009c24:	9b01      	ldr	r3, [sp, #4]
 8009c26:	6134      	str	r4, [r6, #16]
 8009c28:	6173      	str	r3, [r6, #20]
 8009c2a:	3020      	adds	r0, #32
 8009c2c:	e7e4      	b.n	8009bf8 <__d2b+0x4c>
 8009c2e:	4b07      	ldr	r3, [pc, #28]	; (8009c4c <__d2b+0xa0>)
 8009c30:	18c0      	adds	r0, r0, r3
 8009c32:	4b07      	ldr	r3, [pc, #28]	; (8009c50 <__d2b+0xa4>)
 8009c34:	6038      	str	r0, [r7, #0]
 8009c36:	18e3      	adds	r3, r4, r3
 8009c38:	009b      	lsls	r3, r3, #2
 8009c3a:	18f3      	adds	r3, r6, r3
 8009c3c:	6958      	ldr	r0, [r3, #20]
 8009c3e:	f7ff fd40 	bl	80096c2 <__hi0bits>
 8009c42:	0164      	lsls	r4, r4, #5
 8009c44:	1a20      	subs	r0, r4, r0
 8009c46:	e7df      	b.n	8009c08 <__d2b+0x5c>
 8009c48:	fffffbcd 	.word	0xfffffbcd
 8009c4c:	fffffbce 	.word	0xfffffbce
 8009c50:	3fffffff 	.word	0x3fffffff

08009c54 <__ratio>:
 8009c54:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009c56:	b085      	sub	sp, #20
 8009c58:	000f      	movs	r7, r1
 8009c5a:	a902      	add	r1, sp, #8
 8009c5c:	0006      	movs	r6, r0
 8009c5e:	f7ff ff59 	bl	8009b14 <__b2d>
 8009c62:	0004      	movs	r4, r0
 8009c64:	000d      	movs	r5, r1
 8009c66:	0038      	movs	r0, r7
 8009c68:	a903      	add	r1, sp, #12
 8009c6a:	9400      	str	r4, [sp, #0]
 8009c6c:	9501      	str	r5, [sp, #4]
 8009c6e:	f7ff ff51 	bl	8009b14 <__b2d>
 8009c72:	6936      	ldr	r6, [r6, #16]
 8009c74:	693f      	ldr	r7, [r7, #16]
 8009c76:	0002      	movs	r2, r0
 8009c78:	1bf7      	subs	r7, r6, r7
 8009c7a:	017e      	lsls	r6, r7, #5
 8009c7c:	46b4      	mov	ip, r6
 8009c7e:	9f03      	ldr	r7, [sp, #12]
 8009c80:	9e02      	ldr	r6, [sp, #8]
 8009c82:	000b      	movs	r3, r1
 8009c84:	1bf6      	subs	r6, r6, r7
 8009c86:	4466      	add	r6, ip
 8009c88:	0537      	lsls	r7, r6, #20
 8009c8a:	2e00      	cmp	r6, #0
 8009c8c:	dd07      	ble.n	8009c9e <__ratio+0x4a>
 8009c8e:	1979      	adds	r1, r7, r5
 8009c90:	9101      	str	r1, [sp, #4]
 8009c92:	9800      	ldr	r0, [sp, #0]
 8009c94:	9901      	ldr	r1, [sp, #4]
 8009c96:	f7f7 f863 	bl	8000d60 <__aeabi_ddiv>
 8009c9a:	b005      	add	sp, #20
 8009c9c:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009c9e:	1bcb      	subs	r3, r1, r7
 8009ca0:	e7f7      	b.n	8009c92 <__ratio+0x3e>

08009ca2 <__copybits>:
 8009ca2:	0013      	movs	r3, r2
 8009ca4:	3901      	subs	r1, #1
 8009ca6:	b510      	push	{r4, lr}
 8009ca8:	1149      	asrs	r1, r1, #5
 8009caa:	6912      	ldr	r2, [r2, #16]
 8009cac:	3101      	adds	r1, #1
 8009cae:	0089      	lsls	r1, r1, #2
 8009cb0:	3314      	adds	r3, #20
 8009cb2:	0092      	lsls	r2, r2, #2
 8009cb4:	1841      	adds	r1, r0, r1
 8009cb6:	189a      	adds	r2, r3, r2
 8009cb8:	429a      	cmp	r2, r3
 8009cba:	d803      	bhi.n	8009cc4 <__copybits+0x22>
 8009cbc:	2300      	movs	r3, #0
 8009cbe:	4281      	cmp	r1, r0
 8009cc0:	d803      	bhi.n	8009cca <__copybits+0x28>
 8009cc2:	bd10      	pop	{r4, pc}
 8009cc4:	cb10      	ldmia	r3!, {r4}
 8009cc6:	c010      	stmia	r0!, {r4}
 8009cc8:	e7f6      	b.n	8009cb8 <__copybits+0x16>
 8009cca:	c008      	stmia	r0!, {r3}
 8009ccc:	e7f7      	b.n	8009cbe <__copybits+0x1c>

08009cce <__any_on>:
 8009cce:	0002      	movs	r2, r0
 8009cd0:	6900      	ldr	r0, [r0, #16]
 8009cd2:	b510      	push	{r4, lr}
 8009cd4:	3214      	adds	r2, #20
 8009cd6:	114b      	asrs	r3, r1, #5
 8009cd8:	4298      	cmp	r0, r3
 8009cda:	db12      	blt.n	8009d02 <__any_on+0x34>
 8009cdc:	dd0b      	ble.n	8009cf6 <__any_on+0x28>
 8009cde:	201f      	movs	r0, #31
 8009ce0:	4001      	ands	r1, r0
 8009ce2:	d008      	beq.n	8009cf6 <__any_on+0x28>
 8009ce4:	0098      	lsls	r0, r3, #2
 8009ce6:	5884      	ldr	r4, [r0, r2]
 8009ce8:	0020      	movs	r0, r4
 8009cea:	40c8      	lsrs	r0, r1
 8009cec:	4088      	lsls	r0, r1
 8009cee:	0001      	movs	r1, r0
 8009cf0:	2001      	movs	r0, #1
 8009cf2:	428c      	cmp	r4, r1
 8009cf4:	d104      	bne.n	8009d00 <__any_on+0x32>
 8009cf6:	009b      	lsls	r3, r3, #2
 8009cf8:	18d3      	adds	r3, r2, r3
 8009cfa:	4293      	cmp	r3, r2
 8009cfc:	d803      	bhi.n	8009d06 <__any_on+0x38>
 8009cfe:	2000      	movs	r0, #0
 8009d00:	bd10      	pop	{r4, pc}
 8009d02:	0003      	movs	r3, r0
 8009d04:	e7f7      	b.n	8009cf6 <__any_on+0x28>
 8009d06:	3b04      	subs	r3, #4
 8009d08:	6819      	ldr	r1, [r3, #0]
 8009d0a:	2900      	cmp	r1, #0
 8009d0c:	d0f5      	beq.n	8009cfa <__any_on+0x2c>
 8009d0e:	2001      	movs	r0, #1
 8009d10:	e7f6      	b.n	8009d00 <__any_on+0x32>

08009d12 <_calloc_r>:
 8009d12:	434a      	muls	r2, r1
 8009d14:	b570      	push	{r4, r5, r6, lr}
 8009d16:	0011      	movs	r1, r2
 8009d18:	0014      	movs	r4, r2
 8009d1a:	f000 f853 	bl	8009dc4 <_malloc_r>
 8009d1e:	1e05      	subs	r5, r0, #0
 8009d20:	d003      	beq.n	8009d2a <_calloc_r+0x18>
 8009d22:	0022      	movs	r2, r4
 8009d24:	2100      	movs	r1, #0
 8009d26:	f7fc fcbf 	bl	80066a8 <memset>
 8009d2a:	0028      	movs	r0, r5
 8009d2c:	bd70      	pop	{r4, r5, r6, pc}
	...

08009d30 <_free_r>:
 8009d30:	b570      	push	{r4, r5, r6, lr}
 8009d32:	0005      	movs	r5, r0
 8009d34:	2900      	cmp	r1, #0
 8009d36:	d010      	beq.n	8009d5a <_free_r+0x2a>
 8009d38:	1f0c      	subs	r4, r1, #4
 8009d3a:	6823      	ldr	r3, [r4, #0]
 8009d3c:	2b00      	cmp	r3, #0
 8009d3e:	da00      	bge.n	8009d42 <_free_r+0x12>
 8009d40:	18e4      	adds	r4, r4, r3
 8009d42:	0028      	movs	r0, r5
 8009d44:	f000 fa3e 	bl	800a1c4 <__malloc_lock>
 8009d48:	4a1d      	ldr	r2, [pc, #116]	; (8009dc0 <_free_r+0x90>)
 8009d4a:	6813      	ldr	r3, [r2, #0]
 8009d4c:	2b00      	cmp	r3, #0
 8009d4e:	d105      	bne.n	8009d5c <_free_r+0x2c>
 8009d50:	6063      	str	r3, [r4, #4]
 8009d52:	6014      	str	r4, [r2, #0]
 8009d54:	0028      	movs	r0, r5
 8009d56:	f000 fa36 	bl	800a1c6 <__malloc_unlock>
 8009d5a:	bd70      	pop	{r4, r5, r6, pc}
 8009d5c:	42a3      	cmp	r3, r4
 8009d5e:	d909      	bls.n	8009d74 <_free_r+0x44>
 8009d60:	6821      	ldr	r1, [r4, #0]
 8009d62:	1860      	adds	r0, r4, r1
 8009d64:	4283      	cmp	r3, r0
 8009d66:	d1f3      	bne.n	8009d50 <_free_r+0x20>
 8009d68:	6818      	ldr	r0, [r3, #0]
 8009d6a:	685b      	ldr	r3, [r3, #4]
 8009d6c:	1841      	adds	r1, r0, r1
 8009d6e:	6021      	str	r1, [r4, #0]
 8009d70:	e7ee      	b.n	8009d50 <_free_r+0x20>
 8009d72:	0013      	movs	r3, r2
 8009d74:	685a      	ldr	r2, [r3, #4]
 8009d76:	2a00      	cmp	r2, #0
 8009d78:	d001      	beq.n	8009d7e <_free_r+0x4e>
 8009d7a:	42a2      	cmp	r2, r4
 8009d7c:	d9f9      	bls.n	8009d72 <_free_r+0x42>
 8009d7e:	6819      	ldr	r1, [r3, #0]
 8009d80:	1858      	adds	r0, r3, r1
 8009d82:	42a0      	cmp	r0, r4
 8009d84:	d10b      	bne.n	8009d9e <_free_r+0x6e>
 8009d86:	6820      	ldr	r0, [r4, #0]
 8009d88:	1809      	adds	r1, r1, r0
 8009d8a:	1858      	adds	r0, r3, r1
 8009d8c:	6019      	str	r1, [r3, #0]
 8009d8e:	4282      	cmp	r2, r0
 8009d90:	d1e0      	bne.n	8009d54 <_free_r+0x24>
 8009d92:	6810      	ldr	r0, [r2, #0]
 8009d94:	6852      	ldr	r2, [r2, #4]
 8009d96:	1841      	adds	r1, r0, r1
 8009d98:	6019      	str	r1, [r3, #0]
 8009d9a:	605a      	str	r2, [r3, #4]
 8009d9c:	e7da      	b.n	8009d54 <_free_r+0x24>
 8009d9e:	42a0      	cmp	r0, r4
 8009da0:	d902      	bls.n	8009da8 <_free_r+0x78>
 8009da2:	230c      	movs	r3, #12
 8009da4:	602b      	str	r3, [r5, #0]
 8009da6:	e7d5      	b.n	8009d54 <_free_r+0x24>
 8009da8:	6821      	ldr	r1, [r4, #0]
 8009daa:	1860      	adds	r0, r4, r1
 8009dac:	4282      	cmp	r2, r0
 8009dae:	d103      	bne.n	8009db8 <_free_r+0x88>
 8009db0:	6810      	ldr	r0, [r2, #0]
 8009db2:	6852      	ldr	r2, [r2, #4]
 8009db4:	1841      	adds	r1, r0, r1
 8009db6:	6021      	str	r1, [r4, #0]
 8009db8:	6062      	str	r2, [r4, #4]
 8009dba:	605c      	str	r4, [r3, #4]
 8009dbc:	e7ca      	b.n	8009d54 <_free_r+0x24>
 8009dbe:	46c0      	nop			; (mov r8, r8)
 8009dc0:	20000310 	.word	0x20000310

08009dc4 <_malloc_r>:
 8009dc4:	2303      	movs	r3, #3
 8009dc6:	b570      	push	{r4, r5, r6, lr}
 8009dc8:	1ccd      	adds	r5, r1, #3
 8009dca:	439d      	bics	r5, r3
 8009dcc:	3508      	adds	r5, #8
 8009dce:	0006      	movs	r6, r0
 8009dd0:	2d0c      	cmp	r5, #12
 8009dd2:	d21e      	bcs.n	8009e12 <_malloc_r+0x4e>
 8009dd4:	250c      	movs	r5, #12
 8009dd6:	42a9      	cmp	r1, r5
 8009dd8:	d81d      	bhi.n	8009e16 <_malloc_r+0x52>
 8009dda:	0030      	movs	r0, r6
 8009ddc:	f000 f9f2 	bl	800a1c4 <__malloc_lock>
 8009de0:	4a25      	ldr	r2, [pc, #148]	; (8009e78 <_malloc_r+0xb4>)
 8009de2:	6814      	ldr	r4, [r2, #0]
 8009de4:	0021      	movs	r1, r4
 8009de6:	2900      	cmp	r1, #0
 8009de8:	d119      	bne.n	8009e1e <_malloc_r+0x5a>
 8009dea:	4c24      	ldr	r4, [pc, #144]	; (8009e7c <_malloc_r+0xb8>)
 8009dec:	6823      	ldr	r3, [r4, #0]
 8009dee:	2b00      	cmp	r3, #0
 8009df0:	d103      	bne.n	8009dfa <_malloc_r+0x36>
 8009df2:	0030      	movs	r0, r6
 8009df4:	f000 f9a4 	bl	800a140 <_sbrk_r>
 8009df8:	6020      	str	r0, [r4, #0]
 8009dfa:	0029      	movs	r1, r5
 8009dfc:	0030      	movs	r0, r6
 8009dfe:	f000 f99f 	bl	800a140 <_sbrk_r>
 8009e02:	1c43      	adds	r3, r0, #1
 8009e04:	d12b      	bne.n	8009e5e <_malloc_r+0x9a>
 8009e06:	230c      	movs	r3, #12
 8009e08:	0030      	movs	r0, r6
 8009e0a:	6033      	str	r3, [r6, #0]
 8009e0c:	f000 f9db 	bl	800a1c6 <__malloc_unlock>
 8009e10:	e003      	b.n	8009e1a <_malloc_r+0x56>
 8009e12:	2d00      	cmp	r5, #0
 8009e14:	dadf      	bge.n	8009dd6 <_malloc_r+0x12>
 8009e16:	230c      	movs	r3, #12
 8009e18:	6033      	str	r3, [r6, #0]
 8009e1a:	2000      	movs	r0, #0
 8009e1c:	bd70      	pop	{r4, r5, r6, pc}
 8009e1e:	680b      	ldr	r3, [r1, #0]
 8009e20:	1b5b      	subs	r3, r3, r5
 8009e22:	d419      	bmi.n	8009e58 <_malloc_r+0x94>
 8009e24:	2b0b      	cmp	r3, #11
 8009e26:	d903      	bls.n	8009e30 <_malloc_r+0x6c>
 8009e28:	600b      	str	r3, [r1, #0]
 8009e2a:	18cc      	adds	r4, r1, r3
 8009e2c:	6025      	str	r5, [r4, #0]
 8009e2e:	e003      	b.n	8009e38 <_malloc_r+0x74>
 8009e30:	684b      	ldr	r3, [r1, #4]
 8009e32:	428c      	cmp	r4, r1
 8009e34:	d10d      	bne.n	8009e52 <_malloc_r+0x8e>
 8009e36:	6013      	str	r3, [r2, #0]
 8009e38:	0030      	movs	r0, r6
 8009e3a:	f000 f9c4 	bl	800a1c6 <__malloc_unlock>
 8009e3e:	0020      	movs	r0, r4
 8009e40:	2207      	movs	r2, #7
 8009e42:	300b      	adds	r0, #11
 8009e44:	1d23      	adds	r3, r4, #4
 8009e46:	4390      	bics	r0, r2
 8009e48:	1ac3      	subs	r3, r0, r3
 8009e4a:	d0e7      	beq.n	8009e1c <_malloc_r+0x58>
 8009e4c:	425a      	negs	r2, r3
 8009e4e:	50e2      	str	r2, [r4, r3]
 8009e50:	e7e4      	b.n	8009e1c <_malloc_r+0x58>
 8009e52:	6063      	str	r3, [r4, #4]
 8009e54:	000c      	movs	r4, r1
 8009e56:	e7ef      	b.n	8009e38 <_malloc_r+0x74>
 8009e58:	000c      	movs	r4, r1
 8009e5a:	6849      	ldr	r1, [r1, #4]
 8009e5c:	e7c3      	b.n	8009de6 <_malloc_r+0x22>
 8009e5e:	2303      	movs	r3, #3
 8009e60:	1cc4      	adds	r4, r0, #3
 8009e62:	439c      	bics	r4, r3
 8009e64:	42a0      	cmp	r0, r4
 8009e66:	d0e1      	beq.n	8009e2c <_malloc_r+0x68>
 8009e68:	1a21      	subs	r1, r4, r0
 8009e6a:	0030      	movs	r0, r6
 8009e6c:	f000 f968 	bl	800a140 <_sbrk_r>
 8009e70:	1c43      	adds	r3, r0, #1
 8009e72:	d1db      	bne.n	8009e2c <_malloc_r+0x68>
 8009e74:	e7c7      	b.n	8009e06 <_malloc_r+0x42>
 8009e76:	46c0      	nop			; (mov r8, r8)
 8009e78:	20000310 	.word	0x20000310
 8009e7c:	20000314 	.word	0x20000314

08009e80 <__ssputs_r>:
 8009e80:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009e82:	688e      	ldr	r6, [r1, #8]
 8009e84:	b085      	sub	sp, #20
 8009e86:	0007      	movs	r7, r0
 8009e88:	000c      	movs	r4, r1
 8009e8a:	9203      	str	r2, [sp, #12]
 8009e8c:	9301      	str	r3, [sp, #4]
 8009e8e:	429e      	cmp	r6, r3
 8009e90:	d83c      	bhi.n	8009f0c <__ssputs_r+0x8c>
 8009e92:	2390      	movs	r3, #144	; 0x90
 8009e94:	898a      	ldrh	r2, [r1, #12]
 8009e96:	00db      	lsls	r3, r3, #3
 8009e98:	421a      	tst	r2, r3
 8009e9a:	d034      	beq.n	8009f06 <__ssputs_r+0x86>
 8009e9c:	2503      	movs	r5, #3
 8009e9e:	6909      	ldr	r1, [r1, #16]
 8009ea0:	6823      	ldr	r3, [r4, #0]
 8009ea2:	1a5b      	subs	r3, r3, r1
 8009ea4:	9302      	str	r3, [sp, #8]
 8009ea6:	6963      	ldr	r3, [r4, #20]
 8009ea8:	9802      	ldr	r0, [sp, #8]
 8009eaa:	435d      	muls	r5, r3
 8009eac:	0feb      	lsrs	r3, r5, #31
 8009eae:	195d      	adds	r5, r3, r5
 8009eb0:	9b01      	ldr	r3, [sp, #4]
 8009eb2:	106d      	asrs	r5, r5, #1
 8009eb4:	3301      	adds	r3, #1
 8009eb6:	181b      	adds	r3, r3, r0
 8009eb8:	42ab      	cmp	r3, r5
 8009eba:	d900      	bls.n	8009ebe <__ssputs_r+0x3e>
 8009ebc:	001d      	movs	r5, r3
 8009ebe:	0553      	lsls	r3, r2, #21
 8009ec0:	d532      	bpl.n	8009f28 <__ssputs_r+0xa8>
 8009ec2:	0029      	movs	r1, r5
 8009ec4:	0038      	movs	r0, r7
 8009ec6:	f7ff ff7d 	bl	8009dc4 <_malloc_r>
 8009eca:	1e06      	subs	r6, r0, #0
 8009ecc:	d109      	bne.n	8009ee2 <__ssputs_r+0x62>
 8009ece:	230c      	movs	r3, #12
 8009ed0:	603b      	str	r3, [r7, #0]
 8009ed2:	2340      	movs	r3, #64	; 0x40
 8009ed4:	2001      	movs	r0, #1
 8009ed6:	89a2      	ldrh	r2, [r4, #12]
 8009ed8:	4240      	negs	r0, r0
 8009eda:	4313      	orrs	r3, r2
 8009edc:	81a3      	strh	r3, [r4, #12]
 8009ede:	b005      	add	sp, #20
 8009ee0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009ee2:	9a02      	ldr	r2, [sp, #8]
 8009ee4:	6921      	ldr	r1, [r4, #16]
 8009ee6:	f7ff fb16 	bl	8009516 <memcpy>
 8009eea:	89a3      	ldrh	r3, [r4, #12]
 8009eec:	4a14      	ldr	r2, [pc, #80]	; (8009f40 <__ssputs_r+0xc0>)
 8009eee:	401a      	ands	r2, r3
 8009ef0:	2380      	movs	r3, #128	; 0x80
 8009ef2:	4313      	orrs	r3, r2
 8009ef4:	81a3      	strh	r3, [r4, #12]
 8009ef6:	9b02      	ldr	r3, [sp, #8]
 8009ef8:	6126      	str	r6, [r4, #16]
 8009efa:	18f6      	adds	r6, r6, r3
 8009efc:	6026      	str	r6, [r4, #0]
 8009efe:	6165      	str	r5, [r4, #20]
 8009f00:	9e01      	ldr	r6, [sp, #4]
 8009f02:	1aed      	subs	r5, r5, r3
 8009f04:	60a5      	str	r5, [r4, #8]
 8009f06:	9b01      	ldr	r3, [sp, #4]
 8009f08:	429e      	cmp	r6, r3
 8009f0a:	d900      	bls.n	8009f0e <__ssputs_r+0x8e>
 8009f0c:	9e01      	ldr	r6, [sp, #4]
 8009f0e:	0032      	movs	r2, r6
 8009f10:	9903      	ldr	r1, [sp, #12]
 8009f12:	6820      	ldr	r0, [r4, #0]
 8009f14:	f000 f943 	bl	800a19e <memmove>
 8009f18:	68a3      	ldr	r3, [r4, #8]
 8009f1a:	2000      	movs	r0, #0
 8009f1c:	1b9b      	subs	r3, r3, r6
 8009f1e:	60a3      	str	r3, [r4, #8]
 8009f20:	6823      	ldr	r3, [r4, #0]
 8009f22:	199e      	adds	r6, r3, r6
 8009f24:	6026      	str	r6, [r4, #0]
 8009f26:	e7da      	b.n	8009ede <__ssputs_r+0x5e>
 8009f28:	002a      	movs	r2, r5
 8009f2a:	0038      	movs	r0, r7
 8009f2c:	f000 f94c 	bl	800a1c8 <_realloc_r>
 8009f30:	1e06      	subs	r6, r0, #0
 8009f32:	d1e0      	bne.n	8009ef6 <__ssputs_r+0x76>
 8009f34:	6921      	ldr	r1, [r4, #16]
 8009f36:	0038      	movs	r0, r7
 8009f38:	f7ff fefa 	bl	8009d30 <_free_r>
 8009f3c:	e7c7      	b.n	8009ece <__ssputs_r+0x4e>
 8009f3e:	46c0      	nop			; (mov r8, r8)
 8009f40:	fffffb7f 	.word	0xfffffb7f

08009f44 <_svfiprintf_r>:
 8009f44:	b5f0      	push	{r4, r5, r6, r7, lr}
 8009f46:	b0a1      	sub	sp, #132	; 0x84
 8009f48:	9003      	str	r0, [sp, #12]
 8009f4a:	001d      	movs	r5, r3
 8009f4c:	898b      	ldrh	r3, [r1, #12]
 8009f4e:	000f      	movs	r7, r1
 8009f50:	0016      	movs	r6, r2
 8009f52:	061b      	lsls	r3, r3, #24
 8009f54:	d511      	bpl.n	8009f7a <_svfiprintf_r+0x36>
 8009f56:	690b      	ldr	r3, [r1, #16]
 8009f58:	2b00      	cmp	r3, #0
 8009f5a:	d10e      	bne.n	8009f7a <_svfiprintf_r+0x36>
 8009f5c:	2140      	movs	r1, #64	; 0x40
 8009f5e:	f7ff ff31 	bl	8009dc4 <_malloc_r>
 8009f62:	6038      	str	r0, [r7, #0]
 8009f64:	6138      	str	r0, [r7, #16]
 8009f66:	2800      	cmp	r0, #0
 8009f68:	d105      	bne.n	8009f76 <_svfiprintf_r+0x32>
 8009f6a:	230c      	movs	r3, #12
 8009f6c:	9a03      	ldr	r2, [sp, #12]
 8009f6e:	3801      	subs	r0, #1
 8009f70:	6013      	str	r3, [r2, #0]
 8009f72:	b021      	add	sp, #132	; 0x84
 8009f74:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8009f76:	2340      	movs	r3, #64	; 0x40
 8009f78:	617b      	str	r3, [r7, #20]
 8009f7a:	2300      	movs	r3, #0
 8009f7c:	ac08      	add	r4, sp, #32
 8009f7e:	6163      	str	r3, [r4, #20]
 8009f80:	3320      	adds	r3, #32
 8009f82:	7663      	strb	r3, [r4, #25]
 8009f84:	3310      	adds	r3, #16
 8009f86:	76a3      	strb	r3, [r4, #26]
 8009f88:	9507      	str	r5, [sp, #28]
 8009f8a:	0035      	movs	r5, r6
 8009f8c:	782b      	ldrb	r3, [r5, #0]
 8009f8e:	2b00      	cmp	r3, #0
 8009f90:	d001      	beq.n	8009f96 <_svfiprintf_r+0x52>
 8009f92:	2b25      	cmp	r3, #37	; 0x25
 8009f94:	d146      	bne.n	800a024 <_svfiprintf_r+0xe0>
 8009f96:	1bab      	subs	r3, r5, r6
 8009f98:	9305      	str	r3, [sp, #20]
 8009f9a:	d00c      	beq.n	8009fb6 <_svfiprintf_r+0x72>
 8009f9c:	0032      	movs	r2, r6
 8009f9e:	0039      	movs	r1, r7
 8009fa0:	9803      	ldr	r0, [sp, #12]
 8009fa2:	f7ff ff6d 	bl	8009e80 <__ssputs_r>
 8009fa6:	1c43      	adds	r3, r0, #1
 8009fa8:	d100      	bne.n	8009fac <_svfiprintf_r+0x68>
 8009faa:	e0ae      	b.n	800a10a <_svfiprintf_r+0x1c6>
 8009fac:	6962      	ldr	r2, [r4, #20]
 8009fae:	9b05      	ldr	r3, [sp, #20]
 8009fb0:	4694      	mov	ip, r2
 8009fb2:	4463      	add	r3, ip
 8009fb4:	6163      	str	r3, [r4, #20]
 8009fb6:	782b      	ldrb	r3, [r5, #0]
 8009fb8:	2b00      	cmp	r3, #0
 8009fba:	d100      	bne.n	8009fbe <_svfiprintf_r+0x7a>
 8009fbc:	e0a5      	b.n	800a10a <_svfiprintf_r+0x1c6>
 8009fbe:	2201      	movs	r2, #1
 8009fc0:	2300      	movs	r3, #0
 8009fc2:	4252      	negs	r2, r2
 8009fc4:	6062      	str	r2, [r4, #4]
 8009fc6:	a904      	add	r1, sp, #16
 8009fc8:	3254      	adds	r2, #84	; 0x54
 8009fca:	1852      	adds	r2, r2, r1
 8009fcc:	1c6e      	adds	r6, r5, #1
 8009fce:	6023      	str	r3, [r4, #0]
 8009fd0:	60e3      	str	r3, [r4, #12]
 8009fd2:	60a3      	str	r3, [r4, #8]
 8009fd4:	7013      	strb	r3, [r2, #0]
 8009fd6:	65a3      	str	r3, [r4, #88]	; 0x58
 8009fd8:	7831      	ldrb	r1, [r6, #0]
 8009fda:	2205      	movs	r2, #5
 8009fdc:	4853      	ldr	r0, [pc, #332]	; (800a12c <_svfiprintf_r+0x1e8>)
 8009fde:	f7ff fa8f 	bl	8009500 <memchr>
 8009fe2:	1c75      	adds	r5, r6, #1
 8009fe4:	2800      	cmp	r0, #0
 8009fe6:	d11f      	bne.n	800a028 <_svfiprintf_r+0xe4>
 8009fe8:	6822      	ldr	r2, [r4, #0]
 8009fea:	06d3      	lsls	r3, r2, #27
 8009fec:	d504      	bpl.n	8009ff8 <_svfiprintf_r+0xb4>
 8009fee:	2353      	movs	r3, #83	; 0x53
 8009ff0:	a904      	add	r1, sp, #16
 8009ff2:	185b      	adds	r3, r3, r1
 8009ff4:	2120      	movs	r1, #32
 8009ff6:	7019      	strb	r1, [r3, #0]
 8009ff8:	0713      	lsls	r3, r2, #28
 8009ffa:	d504      	bpl.n	800a006 <_svfiprintf_r+0xc2>
 8009ffc:	2353      	movs	r3, #83	; 0x53
 8009ffe:	a904      	add	r1, sp, #16
 800a000:	185b      	adds	r3, r3, r1
 800a002:	212b      	movs	r1, #43	; 0x2b
 800a004:	7019      	strb	r1, [r3, #0]
 800a006:	7833      	ldrb	r3, [r6, #0]
 800a008:	2b2a      	cmp	r3, #42	; 0x2a
 800a00a:	d016      	beq.n	800a03a <_svfiprintf_r+0xf6>
 800a00c:	0035      	movs	r5, r6
 800a00e:	2100      	movs	r1, #0
 800a010:	200a      	movs	r0, #10
 800a012:	68e3      	ldr	r3, [r4, #12]
 800a014:	782a      	ldrb	r2, [r5, #0]
 800a016:	1c6e      	adds	r6, r5, #1
 800a018:	3a30      	subs	r2, #48	; 0x30
 800a01a:	2a09      	cmp	r2, #9
 800a01c:	d94e      	bls.n	800a0bc <_svfiprintf_r+0x178>
 800a01e:	2900      	cmp	r1, #0
 800a020:	d018      	beq.n	800a054 <_svfiprintf_r+0x110>
 800a022:	e010      	b.n	800a046 <_svfiprintf_r+0x102>
 800a024:	3501      	adds	r5, #1
 800a026:	e7b1      	b.n	8009f8c <_svfiprintf_r+0x48>
 800a028:	4b40      	ldr	r3, [pc, #256]	; (800a12c <_svfiprintf_r+0x1e8>)
 800a02a:	6822      	ldr	r2, [r4, #0]
 800a02c:	1ac0      	subs	r0, r0, r3
 800a02e:	2301      	movs	r3, #1
 800a030:	4083      	lsls	r3, r0
 800a032:	4313      	orrs	r3, r2
 800a034:	6023      	str	r3, [r4, #0]
 800a036:	002e      	movs	r6, r5
 800a038:	e7ce      	b.n	8009fd8 <_svfiprintf_r+0x94>
 800a03a:	9b07      	ldr	r3, [sp, #28]
 800a03c:	1d19      	adds	r1, r3, #4
 800a03e:	681b      	ldr	r3, [r3, #0]
 800a040:	9107      	str	r1, [sp, #28]
 800a042:	2b00      	cmp	r3, #0
 800a044:	db01      	blt.n	800a04a <_svfiprintf_r+0x106>
 800a046:	930b      	str	r3, [sp, #44]	; 0x2c
 800a048:	e004      	b.n	800a054 <_svfiprintf_r+0x110>
 800a04a:	425b      	negs	r3, r3
 800a04c:	60e3      	str	r3, [r4, #12]
 800a04e:	2302      	movs	r3, #2
 800a050:	4313      	orrs	r3, r2
 800a052:	6023      	str	r3, [r4, #0]
 800a054:	782b      	ldrb	r3, [r5, #0]
 800a056:	2b2e      	cmp	r3, #46	; 0x2e
 800a058:	d10a      	bne.n	800a070 <_svfiprintf_r+0x12c>
 800a05a:	786b      	ldrb	r3, [r5, #1]
 800a05c:	2b2a      	cmp	r3, #42	; 0x2a
 800a05e:	d135      	bne.n	800a0cc <_svfiprintf_r+0x188>
 800a060:	9b07      	ldr	r3, [sp, #28]
 800a062:	3502      	adds	r5, #2
 800a064:	1d1a      	adds	r2, r3, #4
 800a066:	681b      	ldr	r3, [r3, #0]
 800a068:	9207      	str	r2, [sp, #28]
 800a06a:	2b00      	cmp	r3, #0
 800a06c:	db2b      	blt.n	800a0c6 <_svfiprintf_r+0x182>
 800a06e:	9309      	str	r3, [sp, #36]	; 0x24
 800a070:	4e2f      	ldr	r6, [pc, #188]	; (800a130 <_svfiprintf_r+0x1ec>)
 800a072:	7829      	ldrb	r1, [r5, #0]
 800a074:	2203      	movs	r2, #3
 800a076:	0030      	movs	r0, r6
 800a078:	f7ff fa42 	bl	8009500 <memchr>
 800a07c:	2800      	cmp	r0, #0
 800a07e:	d006      	beq.n	800a08e <_svfiprintf_r+0x14a>
 800a080:	2340      	movs	r3, #64	; 0x40
 800a082:	1b80      	subs	r0, r0, r6
 800a084:	4083      	lsls	r3, r0
 800a086:	6822      	ldr	r2, [r4, #0]
 800a088:	3501      	adds	r5, #1
 800a08a:	4313      	orrs	r3, r2
 800a08c:	6023      	str	r3, [r4, #0]
 800a08e:	7829      	ldrb	r1, [r5, #0]
 800a090:	2206      	movs	r2, #6
 800a092:	4828      	ldr	r0, [pc, #160]	; (800a134 <_svfiprintf_r+0x1f0>)
 800a094:	1c6e      	adds	r6, r5, #1
 800a096:	7621      	strb	r1, [r4, #24]
 800a098:	f7ff fa32 	bl	8009500 <memchr>
 800a09c:	2800      	cmp	r0, #0
 800a09e:	d03c      	beq.n	800a11a <_svfiprintf_r+0x1d6>
 800a0a0:	4b25      	ldr	r3, [pc, #148]	; (800a138 <_svfiprintf_r+0x1f4>)
 800a0a2:	2b00      	cmp	r3, #0
 800a0a4:	d125      	bne.n	800a0f2 <_svfiprintf_r+0x1ae>
 800a0a6:	2207      	movs	r2, #7
 800a0a8:	9b07      	ldr	r3, [sp, #28]
 800a0aa:	3307      	adds	r3, #7
 800a0ac:	4393      	bics	r3, r2
 800a0ae:	3308      	adds	r3, #8
 800a0b0:	9307      	str	r3, [sp, #28]
 800a0b2:	6963      	ldr	r3, [r4, #20]
 800a0b4:	9a04      	ldr	r2, [sp, #16]
 800a0b6:	189b      	adds	r3, r3, r2
 800a0b8:	6163      	str	r3, [r4, #20]
 800a0ba:	e766      	b.n	8009f8a <_svfiprintf_r+0x46>
 800a0bc:	4343      	muls	r3, r0
 800a0be:	2101      	movs	r1, #1
 800a0c0:	189b      	adds	r3, r3, r2
 800a0c2:	0035      	movs	r5, r6
 800a0c4:	e7a6      	b.n	800a014 <_svfiprintf_r+0xd0>
 800a0c6:	2301      	movs	r3, #1
 800a0c8:	425b      	negs	r3, r3
 800a0ca:	e7d0      	b.n	800a06e <_svfiprintf_r+0x12a>
 800a0cc:	2300      	movs	r3, #0
 800a0ce:	200a      	movs	r0, #10
 800a0d0:	001a      	movs	r2, r3
 800a0d2:	3501      	adds	r5, #1
 800a0d4:	6063      	str	r3, [r4, #4]
 800a0d6:	7829      	ldrb	r1, [r5, #0]
 800a0d8:	1c6e      	adds	r6, r5, #1
 800a0da:	3930      	subs	r1, #48	; 0x30
 800a0dc:	2909      	cmp	r1, #9
 800a0de:	d903      	bls.n	800a0e8 <_svfiprintf_r+0x1a4>
 800a0e0:	2b00      	cmp	r3, #0
 800a0e2:	d0c5      	beq.n	800a070 <_svfiprintf_r+0x12c>
 800a0e4:	9209      	str	r2, [sp, #36]	; 0x24
 800a0e6:	e7c3      	b.n	800a070 <_svfiprintf_r+0x12c>
 800a0e8:	4342      	muls	r2, r0
 800a0ea:	2301      	movs	r3, #1
 800a0ec:	1852      	adds	r2, r2, r1
 800a0ee:	0035      	movs	r5, r6
 800a0f0:	e7f1      	b.n	800a0d6 <_svfiprintf_r+0x192>
 800a0f2:	ab07      	add	r3, sp, #28
 800a0f4:	9300      	str	r3, [sp, #0]
 800a0f6:	003a      	movs	r2, r7
 800a0f8:	4b10      	ldr	r3, [pc, #64]	; (800a13c <_svfiprintf_r+0x1f8>)
 800a0fa:	0021      	movs	r1, r4
 800a0fc:	9803      	ldr	r0, [sp, #12]
 800a0fe:	f7fc fb77 	bl	80067f0 <_printf_float>
 800a102:	9004      	str	r0, [sp, #16]
 800a104:	9b04      	ldr	r3, [sp, #16]
 800a106:	3301      	adds	r3, #1
 800a108:	d1d3      	bne.n	800a0b2 <_svfiprintf_r+0x16e>
 800a10a:	89bb      	ldrh	r3, [r7, #12]
 800a10c:	980d      	ldr	r0, [sp, #52]	; 0x34
 800a10e:	065b      	lsls	r3, r3, #25
 800a110:	d400      	bmi.n	800a114 <_svfiprintf_r+0x1d0>
 800a112:	e72e      	b.n	8009f72 <_svfiprintf_r+0x2e>
 800a114:	2001      	movs	r0, #1
 800a116:	4240      	negs	r0, r0
 800a118:	e72b      	b.n	8009f72 <_svfiprintf_r+0x2e>
 800a11a:	ab07      	add	r3, sp, #28
 800a11c:	9300      	str	r3, [sp, #0]
 800a11e:	003a      	movs	r2, r7
 800a120:	4b06      	ldr	r3, [pc, #24]	; (800a13c <_svfiprintf_r+0x1f8>)
 800a122:	0021      	movs	r1, r4
 800a124:	9803      	ldr	r0, [sp, #12]
 800a126:	f7fc fe1d 	bl	8006d64 <_printf_i>
 800a12a:	e7ea      	b.n	800a102 <_svfiprintf_r+0x1be>
 800a12c:	0800a554 	.word	0x0800a554
 800a130:	0800a55a 	.word	0x0800a55a
 800a134:	0800a55e 	.word	0x0800a55e
 800a138:	080067f1 	.word	0x080067f1
 800a13c:	08009e81 	.word	0x08009e81

0800a140 <_sbrk_r>:
 800a140:	2300      	movs	r3, #0
 800a142:	b570      	push	{r4, r5, r6, lr}
 800a144:	4c06      	ldr	r4, [pc, #24]	; (800a160 <_sbrk_r+0x20>)
 800a146:	0005      	movs	r5, r0
 800a148:	0008      	movs	r0, r1
 800a14a:	6023      	str	r3, [r4, #0]
 800a14c:	f7f8 ffc8 	bl	80030e0 <_sbrk>
 800a150:	1c43      	adds	r3, r0, #1
 800a152:	d103      	bne.n	800a15c <_sbrk_r+0x1c>
 800a154:	6823      	ldr	r3, [r4, #0]
 800a156:	2b00      	cmp	r3, #0
 800a158:	d000      	beq.n	800a15c <_sbrk_r+0x1c>
 800a15a:	602b      	str	r3, [r5, #0]
 800a15c:	bd70      	pop	{r4, r5, r6, pc}
 800a15e:	46c0      	nop			; (mov r8, r8)
 800a160:	2000031c 	.word	0x2000031c

0800a164 <strncmp>:
 800a164:	2300      	movs	r3, #0
 800a166:	b530      	push	{r4, r5, lr}
 800a168:	429a      	cmp	r2, r3
 800a16a:	d00a      	beq.n	800a182 <strncmp+0x1e>
 800a16c:	3a01      	subs	r2, #1
 800a16e:	5cc4      	ldrb	r4, [r0, r3]
 800a170:	5ccd      	ldrb	r5, [r1, r3]
 800a172:	42ac      	cmp	r4, r5
 800a174:	d104      	bne.n	800a180 <strncmp+0x1c>
 800a176:	4293      	cmp	r3, r2
 800a178:	d002      	beq.n	800a180 <strncmp+0x1c>
 800a17a:	3301      	adds	r3, #1
 800a17c:	2c00      	cmp	r4, #0
 800a17e:	d1f6      	bne.n	800a16e <strncmp+0xa>
 800a180:	1b63      	subs	r3, r4, r5
 800a182:	0018      	movs	r0, r3
 800a184:	bd30      	pop	{r4, r5, pc}

0800a186 <__ascii_wctomb>:
 800a186:	1e0b      	subs	r3, r1, #0
 800a188:	d004      	beq.n	800a194 <__ascii_wctomb+0xe>
 800a18a:	2aff      	cmp	r2, #255	; 0xff
 800a18c:	d904      	bls.n	800a198 <__ascii_wctomb+0x12>
 800a18e:	238a      	movs	r3, #138	; 0x8a
 800a190:	6003      	str	r3, [r0, #0]
 800a192:	3b8b      	subs	r3, #139	; 0x8b
 800a194:	0018      	movs	r0, r3
 800a196:	4770      	bx	lr
 800a198:	700a      	strb	r2, [r1, #0]
 800a19a:	2301      	movs	r3, #1
 800a19c:	e7fa      	b.n	800a194 <__ascii_wctomb+0xe>

0800a19e <memmove>:
 800a19e:	b510      	push	{r4, lr}
 800a1a0:	4288      	cmp	r0, r1
 800a1a2:	d902      	bls.n	800a1aa <memmove+0xc>
 800a1a4:	188b      	adds	r3, r1, r2
 800a1a6:	4298      	cmp	r0, r3
 800a1a8:	d303      	bcc.n	800a1b2 <memmove+0x14>
 800a1aa:	2300      	movs	r3, #0
 800a1ac:	e007      	b.n	800a1be <memmove+0x20>
 800a1ae:	5c8b      	ldrb	r3, [r1, r2]
 800a1b0:	5483      	strb	r3, [r0, r2]
 800a1b2:	3a01      	subs	r2, #1
 800a1b4:	d2fb      	bcs.n	800a1ae <memmove+0x10>
 800a1b6:	bd10      	pop	{r4, pc}
 800a1b8:	5ccc      	ldrb	r4, [r1, r3]
 800a1ba:	54c4      	strb	r4, [r0, r3]
 800a1bc:	3301      	adds	r3, #1
 800a1be:	429a      	cmp	r2, r3
 800a1c0:	d1fa      	bne.n	800a1b8 <memmove+0x1a>
 800a1c2:	e7f8      	b.n	800a1b6 <memmove+0x18>

0800a1c4 <__malloc_lock>:
 800a1c4:	4770      	bx	lr

0800a1c6 <__malloc_unlock>:
 800a1c6:	4770      	bx	lr

0800a1c8 <_realloc_r>:
 800a1c8:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a1ca:	0007      	movs	r7, r0
 800a1cc:	000d      	movs	r5, r1
 800a1ce:	0016      	movs	r6, r2
 800a1d0:	2900      	cmp	r1, #0
 800a1d2:	d105      	bne.n	800a1e0 <_realloc_r+0x18>
 800a1d4:	0011      	movs	r1, r2
 800a1d6:	f7ff fdf5 	bl	8009dc4 <_malloc_r>
 800a1da:	0004      	movs	r4, r0
 800a1dc:	0020      	movs	r0, r4
 800a1de:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 800a1e0:	2a00      	cmp	r2, #0
 800a1e2:	d103      	bne.n	800a1ec <_realloc_r+0x24>
 800a1e4:	f7ff fda4 	bl	8009d30 <_free_r>
 800a1e8:	0034      	movs	r4, r6
 800a1ea:	e7f7      	b.n	800a1dc <_realloc_r+0x14>
 800a1ec:	f000 f812 	bl	800a214 <_malloc_usable_size_r>
 800a1f0:	002c      	movs	r4, r5
 800a1f2:	42b0      	cmp	r0, r6
 800a1f4:	d2f2      	bcs.n	800a1dc <_realloc_r+0x14>
 800a1f6:	0031      	movs	r1, r6
 800a1f8:	0038      	movs	r0, r7
 800a1fa:	f7ff fde3 	bl	8009dc4 <_malloc_r>
 800a1fe:	1e04      	subs	r4, r0, #0
 800a200:	d0ec      	beq.n	800a1dc <_realloc_r+0x14>
 800a202:	0029      	movs	r1, r5
 800a204:	0032      	movs	r2, r6
 800a206:	f7ff f986 	bl	8009516 <memcpy>
 800a20a:	0029      	movs	r1, r5
 800a20c:	0038      	movs	r0, r7
 800a20e:	f7ff fd8f 	bl	8009d30 <_free_r>
 800a212:	e7e3      	b.n	800a1dc <_realloc_r+0x14>

0800a214 <_malloc_usable_size_r>:
 800a214:	1f0b      	subs	r3, r1, #4
 800a216:	681b      	ldr	r3, [r3, #0]
 800a218:	1f18      	subs	r0, r3, #4
 800a21a:	2b00      	cmp	r3, #0
 800a21c:	da01      	bge.n	800a222 <_malloc_usable_size_r+0xe>
 800a21e:	580b      	ldr	r3, [r1, r0]
 800a220:	18c0      	adds	r0, r0, r3
 800a222:	4770      	bx	lr

0800a224 <_init>:
 800a224:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a226:	46c0      	nop			; (mov r8, r8)
 800a228:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a22a:	bc08      	pop	{r3}
 800a22c:	469e      	mov	lr, r3
 800a22e:	4770      	bx	lr

0800a230 <_fini>:
 800a230:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800a232:	46c0      	nop			; (mov r8, r8)
 800a234:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800a236:	bc08      	pop	{r3}
 800a238:	469e      	mov	lr, r3
 800a23a:	4770      	bx	lr
